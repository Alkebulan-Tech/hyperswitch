apiVersion: v1
binaryData:
  .DS_Store: 
data:
  .deepsource.toml: |
    version = 1

    [[analyzers]]
    name = "docker"
    enabled = true

    [[analyzers]]
    name = "test-coverage"
    enabled = false

    [[analyzers]]
    name = "rust"
    enabled = true

    [analyzers.meta]
    msrv = "1.76.0"
  .dockerignore: |
    # Created by https://www.toptal.com/developers/gitignore/api/rust,visualstudiocode,clion,dotenv,direnv,linux,macos,windows
    # Edit at https://www.toptal.com/developers/gitignore?templates=rust,visualstudiocode,clion,dotenv,direnv,linux,macos,windows

    ### CLion ###
    # Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider
    # Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

    # User-specific stuff
    .idea/**/workspace.xml
    .idea/**/tasks.xml
    .idea/**/usage.statistics.xml
    .idea/**/dictionaries
    .idea/**/shelf

    # AWS User-specific
    .idea/**/aws.xml

    # Generated files
    .idea/**/contentModel.xml

    # Sensitive or high-churn files
    .idea/**/dataSources/
    .idea/**/dataSources.ids
    .idea/**/dataSources.local.xml
    .idea/**/sqlDataSources.xml
    .idea/**/dynamic.xml
    .idea/**/uiDesigner.xml
    .idea/**/dbnavigator.xml

    # Gradle
    .idea/**/gradle.xml
    .idea/**/libraries

    # Gradle and Maven with auto-import
    # When using Gradle or Maven with auto-import, you should exclude module files,
    # since they will be recreated, and may cause churn.  Uncomment if using
    # auto-import.
    # .idea/artifacts
    # .idea/compiler.xml
    # .idea/jarRepositories.xml
    # .idea/modules.xml
    # .idea/*.iml
    # .idea/modules
    # *.iml
    # *.ipr

    # CMake
    cmake-build-*/

    # Mongo Explorer plugin
    .idea/**/mongoSettings.xml

    # File-based project format
    *.iws

    # IntelliJ
    out/

    # mpeltonen/sbt-idea plugin
    .idea_modules/

    # JIRA plugin
    atlassian-ide-plugin.xml

    # Cursive Clojure plugin
    .idea/replstate.xml

    # SonarLint plugin
    .idea/sonarlint/

    # Crashlytics plugin (for Android Studio and IntelliJ)
    com_crashlytics_export_strings.xml
    crashlytics.properties
    crashlytics-build.properties
    fabric.properties

    # Editor-based Rest Client
    .idea/httpRequests

    # Android studio 3.1+ serialized cache file
    .idea/caches/build_file_checksums.ser

    ### CLion Patch ###
    # Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721

    # *.iml
    # modules.xml
    # .idea/misc.xml
    # *.ipr

    # Sonarlint plugin
    # https://plugins.jetbrains.com/plugin/7973-sonarlint
    .idea/**/sonarlint/

    # SonarQube Plugin
    # https://plugins.jetbrains.com/plugin/7238-sonarqube-community-plugin
    .idea/**/sonarIssues.xml

    # Markdown Navigator plugin
    # https://plugins.jetbrains.com/plugin/7896-markdown-navigator-enhanced
    .idea/**/markdown-navigator.xml
    .idea/**/markdown-navigator-enh.xml
    .idea/**/markdown-navigator/

    # Cache file creation bug
    # See https://youtrack.jetbrains.com/issue/JBR-2257
    .idea/$CACHE_FILE$

    # CodeStream plugin
    # https://plugins.jetbrains.com/plugin/12206-codestream
    .idea/codestream.xml

    # Azure Toolkit for IntelliJ plugin
    # https://plugins.jetbrains.com/plugin/8053-azure-toolkit-for-intellij
    .idea/**/azureSettings.xml

    ### direnv ###
    .direnv
    .envrc

    ### dotenv ###
    .env

    ### Linux ###
    *~

    # temporary files which can be created if a process still has a handle open of a deleted file
    .fuse_hidden*

    # KDE directory preferences
    .directory

    # Linux trash folder which might appear on any partition or disk
    .Trash-*

    # .nfs files are created when an open file is removed but is still being accessed
    .nfs*

    ### macOS ###
    # General
    .DS_Store
    .AppleDouble
    .LSOverride

    # Icon must end with two \r
    Icon


    # Thumbnails
    ._*

    # Files that might appear in the root of a volume
    .DocumentRevisions-V100
    .fseventsd
    .Spotlight-V100
    .TemporaryItems
    .Trashes
    .VolumeIcon.icns
    .com.apple.timemachine.donotpresent

    # Directories potentially created on remote AFP share
    .AppleDB
    .AppleDesktop
    Network Trash Folder
    Temporary Items
    .apdisk

    ### macOS Patch ###
    # iCloud generated files
    *.icloud

    ### Rust ###
    # Generated by Cargo
    # will have compiled files and executables
    debug/
    target/

    # Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
    # More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
    !Cargo.lock

    # These are backup files generated by rustfmt
    **/*.rs.bk

    # MSVC Windows builds of rustc generate these, which store debugging information
    *.pdb

    ### VisualStudioCode ###
    .vscode/*
    !.vscode/settings.json
    !.vscode/tasks.json
    !.vscode/launch.json
    !.vscode/extensions.json
    !.vscode/*.code-snippets

    # Local History for Visual Studio Code
    .history/

    # Built Visual Studio Code Extensions
    *.vsix

    ### VisualStudioCode Patch ###
    # Ignore all local history of files
    .history
    .ionide

    # Support for Project snippet scope
    .vscode/*.code-snippets

    # Ignore code-workspaces
    *.code-workspace

    ### Windows ###
    # Windows thumbnail cache files
    Thumbs.db
    Thumbs.db:encryptable
    ehthumbs.db
    ehthumbs_vista.db

    # Dump file
    *.stackdump

    # Folder config file
    [Dd]esktop.ini

    # Recycle Bin used on file shares
    $RECYCLE.BIN/

    # Windows Installer files
    *.cab
    *.msi
    *.msix
    *.msm
    *.msp

    # Windows shortcuts
    *.lnk

    # End of https://www.toptal.com/developers/gitignore/api/rust,visualstudiocode,clion,dotenv,direnv,linux,macos,windows

    # hyperswitch Project specific excludes
    # code coverage report
    *.profraw
    html/
    coverage.json
    # other
    logs/
    **/tmp
    **/*.log
    **/*.log.*
    monitoring/*.tmp/
    config/sandbox.toml
    config/production.toml
    !loadtest/.env
    loadtest/*.tmp/

    # Nix output
    result*

    .idea/

    # node_modules
    node_modules/
  .gitattributes: |
    * text=auto
  .gitignore: |-
    # Created by https://www.toptal.com/developers/gitignore/api/rust,visualstudiocode,clion,dotenv,direnv,linux,macos,windows
    # Edit at https://www.toptal.com/developers/gitignore?templates=rust,visualstudiocode,clion,dotenv,direnv,linux,macos,windows

    ### CLion ###
    # Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider
    # Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

    # User-specific stuff
    .idea/**/workspace.xml
    .idea/**/tasks.xml
    .idea/**/usage.statistics.xml
    .idea/**/dictionaries
    .idea/**/shelf

    # AWS User-specific
    .idea/**/aws.xml

    # Generated files
    .idea/**/contentModel.xml

    # Sensitive or high-churn files
    .idea/**/dataSources/
    .idea/**/dataSources.ids
    .idea/**/dataSources.local.xml
    .idea/**/sqlDataSources.xml
    .idea/**/dynamic.xml
    .idea/**/uiDesigner.xml
    .idea/**/dbnavigator.xml

    # Gradle
    .idea/**/gradle.xml
    .idea/**/libraries

    # Gradle and Maven with auto-import
    # When using Gradle or Maven with auto-import, you should exclude module files,
    # since they will be recreated, and may cause churn.  Uncomment if using
    # auto-import.
    # .idea/artifacts
    # .idea/compiler.xml
    # .idea/jarRepositories.xml
    # .idea/modules.xml
    # .idea/*.iml
    # .idea/modules
    # *.iml
    # *.ipr

    # CMake
    cmake-build-*/

    # Mongo Explorer plugin
    .idea/**/mongoSettings.xml

    # File-based project format
    *.iws

    # IntelliJ
    out/

    # mpeltonen/sbt-idea plugin
    .idea_modules/

    # JIRA plugin
    atlassian-ide-plugin.xml

    # Cursive Clojure plugin
    .idea/replstate.xml

    # SonarLint plugin
    .idea/sonarlint/

    # Crashlytics plugin (for Android Studio and IntelliJ)
    com_crashlytics_export_strings.xml
    crashlytics.properties
    crashlytics-build.properties
    fabric.properties

    # Editor-based Rest Client
    .idea/httpRequests

    # Android studio 3.1+ serialized cache file
    .idea/caches/build_file_checksums.ser

    ### CLion Patch ###
    # Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721

    # *.iml
    # modules.xml
    # .idea/misc.xml
    # *.ipr

    # Sonarlint plugin
    # https://plugins.jetbrains.com/plugin/7973-sonarlint
    .idea/**/sonarlint/

    # SonarQube Plugin
    # https://plugins.jetbrains.com/plugin/7238-sonarqube-community-plugin
    .idea/**/sonarIssues.xml

    # Markdown Navigator plugin
    # https://plugins.jetbrains.com/plugin/7896-markdown-navigator-enhanced
    .idea/**/markdown-navigator.xml
    .idea/**/markdown-navigator-enh.xml
    .idea/**/markdown-navigator/

    # Cache file creation bug
    # See https://youtrack.jetbrains.com/issue/JBR-2257
    .idea/$CACHE_FILE$

    # CodeStream plugin
    # https://plugins.jetbrains.com/plugin/12206-codestream
    .idea/codestream.xml

    # Azure Toolkit for IntelliJ plugin
    # https://plugins.jetbrains.com/plugin/8053-azure-toolkit-for-intellij
    .idea/**/azureSettings.xml

    ### direnv ###
    .direnv
    .envrc

    ### dotenv ###
    .env

    ### Linux ###
    *~

    # temporary files which can be created if a process still has a handle open of a deleted file
    .fuse_hidden*

    # KDE directory preferences
    .directory

    # Linux trash folder which might appear on any partition or disk
    .Trash-*

    # .nfs files are created when an open file is removed but is still being accessed
    .nfs*

    ### macOS ###
    # General
    .DS_Store
    .AppleDouble
    .LSOverride

    # Icon must end with two \r
    Icon


    # Thumbnails
    ._*

    # Files that might appear in the root of a volume
    .DocumentRevisions-V100
    .fseventsd
    .Spotlight-V100
    .TemporaryItems
    .Trashes
    .VolumeIcon.icns
    .com.apple.timemachine.donotpresent

    # Directories potentially created on remote AFP share
    .AppleDB
    .AppleDesktop
    Network Trash Folder
    Temporary Items
    .apdisk

    ### macOS Patch ###
    # iCloud generated files
    *.icloud

    ### Rust ###
    # Generated by Cargo
    # will have compiled files and executables
    debug/
    target/

    # Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
    # More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
    !Cargo.lock

    # These are backup files generated by rustfmt
    **/*.rs.bk

    # MSVC Windows builds of rustc generate these, which store debugging information
    *.pdb

    ### VisualStudioCode ###
    .vscode/*
    !.vscode/settings.json
    !.vscode/tasks.json
    !.vscode/launch.json
    !.vscode/extensions.json
    !.vscode/*.code-snippets

    # Local History for Visual Studio Code
    .history/

    # Built Visual Studio Code Extensions
    *.vsix

    ### VisualStudioCode Patch ###
    # Ignore all local history of files
    .history
    .ionide

    # Support for Project snippet scope
    .vscode/*.code-snippets

    # Ignore code-workspaces
    *.code-workspace

    ### Windows ###
    # Windows thumbnail cache files
    Thumbs.db
    Thumbs.db:encryptable
    ehthumbs.db
    ehthumbs_vista.db

    # Dump file
    *.stackdump

    # Folder config file
    [Dd]esktop.ini

    # Recycle Bin used on file shares
    $RECYCLE.BIN/

    # Windows Installer files
    *.cab
    *.msi
    *.msix
    *.msm
    *.msp

    # Windows shortcuts
    *.lnk

    # End of https://www.toptal.com/developers/gitignore/api/rust,visualstudiocode,clion,dotenv,direnv,linux,macos,windows

    # hyperswitch Project specific excludes
    # code coverage report
    *.profraw
    html/
    coverage.json
    # other
    logs/
    **/tmp
    **/*.log
    **/*.log.*
    monitoring/*.tmp/
    config/sandbox.toml
    config/production.toml
    !loadtest/.env
    loadtest/*.tmp/

    # Nix output
    result*

    .idea/

    # node_modules
    node_modules/

    # cypress credentials
    creds.json
  .rustfmt.toml: |
    unstable_features = true

    group_imports = "StdExternalCrate" # Unstable
    imports_granularity = "Crate" # Unstable
  .typos.toml: |
    [default]
    check-filename = true

    [default.extend-identifiers]
    ABD = "ABD"  # Aberdeenshire, UK ISO 3166-2 code
    ACTIVITE = "ACTIVITE" # French translation of activity
    AER = "AER" # An alias to Api Error Response
    ANG = "ANG" # Netherlands Antillean guilder currency code
    BA = "BA"  # Bosnia and Herzegovina country code
    bottm = "bottm" # name of a css class for nexinets ui test
    CAF = "CAF"  # Central African Republic country code
    FO = "FO"  # Faroe Islands (the) country code
    flate2 = "flate2"
    hd = "hd" # animation data parameter
    HypoNoeLbFurNiederosterreichUWien = "HypoNoeLbFurNiederosterreichUWien"
    hypo_noe_lb_fur_niederosterreich_u_wien = "hypo_noe_lb_fur_niederosterreich_u_wien"
    IOT = "IOT" # British Indian Ocean Territory country code
    klick = "klick" # Swedish word for clicks
    LSO = "LSO" # Lesotho country code
    NAM = "NAM"  # Namibia country code
    ND = "ND"  # North Dakota state code
    optin = "optin" # Boku preflow name
    optin_id = "optin_id" # Boku's id for optin flow
    passord = "passord" # name of a css class for adyen ui test
    payment_vas = "payment_vas"
    PaymentVas = "PaymentVas"
    PN = "PN" # Pitcairn country code
    RegioBank = "RegioBank"
    RO = "RO"  # Romania country code
    skip_ws = "skip_ws" # skip white space
    SOM = "SOM"  # Somalia country code
    SUR = "SUR"  # Single South American currency code
    THA = "THA"  # Thailand country code
    TTO = "TTO" # Trinidad and Tobago country code
    WS = "WS" # Samoa country code
    ws = "ws" # Web socket
    ws2ipdef = "ws2ipdef" # WinSock Extension
    ws2tcpip = "ws2tcpip" # WinSock Extension
    ZAR = "ZAR"  # South African Rand currency code
    JOD = "JOD" # Jordan currency code
    UE_000 = "UE_000" #default unified error code


    [default.extend-words]
    aci = "aci" # Name of a connector
    afe = "afe" # Commit id
    ba = "ba" # ignore minor commit conversions
    daa = "daa" # Commit id
    deriver = "deriver"
    ede = "ede" # ignore minor commit conversions
    encrypter = "encrypter" # Used by the `ring` crate
    guid = "guid" # globally unique identifier
    Hashi = "Hashi" # HashiCorp
    iin = "iin" # Card iin
    kms = "kms" # Key management service
    nin = "nin" # National identification number, a field used by PayU connector
    requestor = "requestor" #Used in external 3ds flows
    substituters = "substituters" # Present in `flake.nix`
    unsuccess = "unsuccess" # Used in cryptopay request

    [files]
    extend-exclude = [
        "config/redis.conf", # `typos` also checked "AKE" in the file, which is present as a quoted string
        "openapi/open_api_spec.yaml", # no longer updated
        "crates/router/src/utils/user/blocker_emails.txt", # this file contains various email domains
        "CHANGELOG.md", # This file contains all the commits
        "crates/router/locales/*.yml", # locales
        "crates/router/src/core/payment_link/locale.js", # this file contains conversion of static strings in various languages
    ]
  CHANGELOG.md: |
    # Changelog

    All notable changes to HyperSwitch will be documented here.

    - - -

    ## 2024.08.22.0

    ### Features

    - **business_profile:** Introduce business profile v2 update endpoint ([#5641](https://github.com/juspay/hyperswitch/pull/5641)) ([`beb4fb0`](https://github.com/juspay/hyperswitch/commit/beb4fb050fb70e948d03f6c51e40bb906ae155ef))
    - **core:** Add localization support for unified error messages ([#5624](https://github.com/juspay/hyperswitch/pull/5624)) ([`1f0ee3c`](https://github.com/juspay/hyperswitch/commit/1f0ee3cae0764367d59ca36e3f379e244e613813))
    - **payments:** Add support for aggregates in payments ([#5654](https://github.com/juspay/hyperswitch/pull/5654)) ([`9f3b2fb`](https://github.com/juspay/hyperswitch/commit/9f3b2fba3eee4dc4d0f029afbca6d8fa3859c0e0))
    - Use admin_api_key auth along with merchant_id for connector list, retrieve and update apis ([#5613](https://github.com/juspay/hyperswitch/pull/5613)) ([`b60ced0`](https://github.com/juspay/hyperswitch/commit/b60ced02ffba21624a9491a63fcde1c04cfa0b06))

    ### Bug Fixes

    - **core:** [Payouts] remove fetching profile_id for mca creation ([#5656](https://github.com/juspay/hyperswitch/pull/5656)) ([`1e64ed7`](https://github.com/juspay/hyperswitch/commit/1e64ed79bc656df684ee0ed8d0c4a0ecd219eb75))
    - **router:** Fix merchant_connector_account retrieve and delete v2 routes ([#5653](https://github.com/juspay/hyperswitch/pull/5653)) ([`7234119`](https://github.com/juspay/hyperswitch/commit/723411905a81c44302cb9bf5ec58d3495ecc2864))

    ### Miscellaneous Tasks

    - Generate openapi specs for organization endpoint for v1 and v2 ([#5648](https://github.com/juspay/hyperswitch/pull/5648)) ([`1d08c7b`](https://github.com/juspay/hyperswitch/commit/1d08c7b932f2c039db71d8492b0be966df9702d9))

    **Full Changelog:** [`2024.08.21.0...2024.08.22.0`](https://github.com/juspay/hyperswitch/compare/2024.08.21.0...2024.08.22.0)

    - - -

    ## 2024.08.21.0

    ### Features

    - **business_profile_v2:** Business profile v2 create and retrieve endpoint ([#5606](https://github.com/juspay/hyperswitch/pull/5606)) ([`6e7b38a`](https://github.com/juspay/hyperswitch/commit/6e7b38a622d1399260f9a144e07a58bc6a7a6655))
    - **core:** [Payouts] add merchant_connector_id to payout_attempt and show in response ([#5214](https://github.com/juspay/hyperswitch/pull/5214)) ([`4cc389a`](https://github.com/juspay/hyperswitch/commit/4cc389aa7061304ba517e3ec612d1f793ab35e67))
    - **users:** Role info api with parent tags ([#5536](https://github.com/juspay/hyperswitch/pull/5536)) ([`eb7678f`](https://github.com/juspay/hyperswitch/commit/eb7678f756c32a9ec71df8e18ccacb61114e9fab))

    ### Bug Fixes

    - **api-reference:** Fix api paths for `merchant_connector_account` in api-reference-v2 ([#5645](https://github.com/juspay/hyperswitch/pull/5645)) ([`ac7d8c5`](https://github.com/juspay/hyperswitch/commit/ac7d8c572ce34cb120c9123fd2748ba86049b6f1))

    ### Refactors

    - **core:** Make p24 billing_details optional ([#5638](https://github.com/juspay/hyperswitch/pull/5638)) ([`4651147`](https://github.com/juspay/hyperswitch/commit/465114796349c219336aa8016e72356013871c96))

    **Full Changelog:** [`2024.08.15.0...2024.08.21.0`](https://github.com/juspay/hyperswitch/compare/2024.08.15.0...2024.08.21.0)

    - - -

    ## 2024.08.15.0

    ### Features

    - **connector:** [Paybox] add paybox connector ([#5575](https://github.com/juspay/hyperswitch/pull/5575)) ([`e4f4fba`](https://github.com/juspay/hyperswitch/commit/e4f4fbafe643b25078ebab6d054c6fa41a081f1a))
    - **customer_v2:** Customer v2 refactor customer v2 update endpoint ([#5490](https://github.com/juspay/hyperswitch/pull/5490)) ([`17703fe`](https://github.com/juspay/hyperswitch/commit/17703fe2cbd693cf4f417c061df3c42c63ebc745))
    - **payout_link:** Return total_count in filtered payouts list API response ([#5538](https://github.com/juspay/hyperswitch/pull/5538)) ([`34f648e`](https://github.com/juspay/hyperswitch/commit/34f648e29ba91601c9d78dc95ab405dc8d6ba97e))
    - **users:** Add support for profile user delete ([#5541](https://github.com/juspay/hyperswitch/pull/5541)) ([`19a9180`](https://github.com/juspay/hyperswitch/commit/19a9180925cf1a73aac74b5dfe5b68ba658718be))

    ### Bug Fixes

    - **cypress:**
      - Fix naming convention in iatapay ideal ([#5618](https://github.com/juspay/hyperswitch/pull/5618)) ([`fe19127`](https://github.com/juspay/hyperswitch/commit/fe19127135ef0ffb702b64bb3d04ea8015109f6e))
      - Fix hooks in cypress for 3ds ([#5617](https://github.com/juspay/hyperswitch/pull/5617)) ([`d43648b`](https://github.com/juspay/hyperswitch/commit/d43648b9f5f87ce2e46e9e2dc49327c8a6af0f7d))
    - **opensearch:** Sorted the global search results in descending order ([#5623](https://github.com/juspay/hyperswitch/pull/5623)) ([`27096e7`](https://github.com/juspay/hyperswitch/commit/27096e71e451c7b30d2ec0be8aea68f226984fe4))
    - **payout:** Use mca_connector_id from ConnectorData to fetch mca_account ([#5620](https://github.com/juspay/hyperswitch/pull/5620)) ([`92a07cf`](https://github.com/juspay/hyperswitch/commit/92a07cf5e4fcce6bf83f1802e07b1dd0b9cf67e2))
    - **pm_auth:** Fixed deserialize logic in pm_auth core ([#5615](https://github.com/juspay/hyperswitch/pull/5615)) ([`f66b09f`](https://github.com/juspay/hyperswitch/commit/f66b09fed50bb89cd512d01af22a51107a0c9869))
    - **router:** Allow payments update for requires_payment_method and requires_confirmation intent status only ([#5616](https://github.com/juspay/hyperswitch/pull/5616)) ([`805540a`](https://github.com/juspay/hyperswitch/commit/805540a1d02ec6ce61e21c66349dbb0fb3403e69))

    ### Refactors

    - **connector:**
      - Added amount conversion framework for Ebanx ([#5452](https://github.com/juspay/hyperswitch/pull/5452)) ([`67d580c`](https://github.com/juspay/hyperswitch/commit/67d580c0ebcfc070ad6ff5cab4079ca447541ee4))
      - Added amount conversion framework for multisafepay ([#4982](https://github.com/juspay/hyperswitch/pull/4982)) ([`556dd10`](https://github.com/juspay/hyperswitch/commit/556dd103dbdf46bb84b247547dd7cca3d2eec91c))
      - Add amount conversion framework to Globepay ([#5470](https://github.com/juspay/hyperswitch/pull/5470)) ([`66cc0a3`](https://github.com/juspay/hyperswitch/commit/66cc0a3b395d95bce56c63c4a561b7b42122d28e))
      - Add amount conversion framework to Forte ([#5461](https://github.com/juspay/hyperswitch/pull/5461)) ([`2249010`](https://github.com/juspay/hyperswitch/commit/2249010ceb9fc03249d8feb428f2209b2d2ee9f4))
    - **redis:** Add redis commands required for success rate based routing ([#5610](https://github.com/juspay/hyperswitch/pull/5610)) ([`340714c`](https://github.com/juspay/hyperswitch/commit/340714ce1b8359bb908ec3873c88822a2c0054f0))
    - **router:**
      - Add api_version and make profile_id mandatory in mca v2 ([#5602](https://github.com/juspay/hyperswitch/pull/5602)) ([`56791c2`](https://github.com/juspay/hyperswitch/commit/56791c27437f5df331447c617c7b2b8041775e86))
      - Use the saved billing details in the recurring payments ([#5631](https://github.com/juspay/hyperswitch/pull/5631)) ([`5fa7b14`](https://github.com/juspay/hyperswitch/commit/5fa7b147aa81832dcda767efa5c02f2e82131f73))
    - **webhook_events:** Allow listing unique webhook events based on profile ID ([#5598](https://github.com/juspay/hyperswitch/pull/5598)) ([`8bcda2c`](https://github.com/juspay/hyperswitch/commit/8bcda2cea480083179bd071e8ff466103e61efc1))

    ### Miscellaneous Tasks

    - Wasm changes required for plaid ([#5633](https://github.com/juspay/hyperswitch/pull/5633)) ([`8fa51b7`](https://github.com/juspay/hyperswitch/commit/8fa51b7b1cdf4347dc5778859597aa9ed1691790))

    **Full Changelog:** [`2024.08.14.0...2024.08.15.0`](https://github.com/juspay/hyperswitch/compare/2024.08.14.0...2024.08.15.0)

    - - -

    ## 2024.08.14.0

    ### Features

    - **connector:** Create Taxjar connector ([#5597](https://github.com/juspay/hyperswitch/pull/5597)) ([`0ab0aa1`](https://github.com/juspay/hyperswitch/commit/0ab0aa1a94fe98719d51ff89d27935a30cb33721))

    ### Bug Fixes

    - **router:** Return missing required field error when a domain is missing during apple pay session call ([#5596](https://github.com/juspay/hyperswitch/pull/5596)) ([`751ba15`](https://github.com/juspay/hyperswitch/commit/751ba15482f6e4aed403ff947eea01b75093087e))

    ### Refactors

    - **connector:** Add amount conversion framework for ACI ([#5456](https://github.com/juspay/hyperswitch/pull/5456)) ([`93aa522`](https://github.com/juspay/hyperswitch/commit/93aa522929fc8538894bd4bc934cb17a793d2e24))
    - **routing:** Refactor fallback routing apis for v2 ([#5592](https://github.com/juspay/hyperswitch/pull/5592)) ([`051086f`](https://github.com/juspay/hyperswitch/commit/051086f7b657600efe2d6a41023572610ef41ccb))

    ### Documentation

    - **README:** Add social media links ([#5600](https://github.com/juspay/hyperswitch/pull/5600)) ([`e757605`](https://github.com/juspay/hyperswitch/commit/e757605fdc287685c573d0c1c461cea556e5a5ce))

    ### Miscellaneous Tasks

    - Run pml independently ([#5604](https://github.com/juspay/hyperswitch/pull/5604)) ([`f5b2eec`](https://github.com/juspay/hyperswitch/commit/f5b2eec015bce088ed666960228769b40d76b2c0))

    **Full Changelog:** [`2024.08.13.0...2024.08.14.0`](https://github.com/juspay/hyperswitch/compare/2024.08.13.0...2024.08.14.0)

    - - -

    ## 2024.08.13.0

    ### Features

    - **analytics:** Populate status_code, initial_attempt_id & delivery_attempt on clickhouse for outgoing webhook events ([#5383](https://github.com/juspay/hyperswitch/pull/5383)) ([`f9c29b0`](https://github.com/juspay/hyperswitch/commit/f9c29b084b68563c10f07599e0d789a105958592))
    - **connector:**
      - [WELLSFARGO_PAYOUT] PR template code ([#5567](https://github.com/juspay/hyperswitch/pull/5567)) ([`6a5b493`](https://github.com/juspay/hyperswitch/commit/6a5b49397adc402f7ce50543c817df3f11ca46ea))
      - [FISERVEMEA] Add template code ([#5583](https://github.com/juspay/hyperswitch/pull/5583)) ([`74fcc91`](https://github.com/juspay/hyperswitch/commit/74fcc910e9f0b4487f5958f1872e71436fe8f40e))
    - **cypress:** Generate test reports ([#5563](https://github.com/juspay/hyperswitch/pull/5563)) ([`116f31c`](https://github.com/juspay/hyperswitch/commit/116f31cf9b79104d0e5b38ce774555a9ae2f4b88))
    - **payout_link:** Add localisation support for payout link's templates ([#5552](https://github.com/juspay/hyperswitch/pull/5552)) ([`b0346e0`](https://github.com/juspay/hyperswitch/commit/b0346e08f45c6739da22f370b657a41cf2a9cd67))
    - Change admin api key auth to merchant api key auth in few connectors flow ([#5572](https://github.com/juspay/hyperswitch/pull/5572)) ([`7a23e66`](https://github.com/juspay/hyperswitch/commit/7a23e663c283333aaa4e45550e2a36f223ad5e3e))

    ### Bug Fixes

    - **frm:** Restrict enabled mca for frm connectors ([#5499](https://github.com/juspay/hyperswitch/pull/5499)) ([`7718800`](https://github.com/juspay/hyperswitch/commit/7718800e1fc434a553a211b24bd48d2cddc06d1f))
    - **payment_link:** Remove dynamic section if no fields are present ([#5579](https://github.com/juspay/hyperswitch/pull/5579)) ([`78d9906`](https://github.com/juspay/hyperswitch/commit/78d9906ebbedd9069a15b88f49b9348b663cbee8))

    ### Refactors

    - **core:** Adapt the usage of routing_algorithm_id in routing and payments core for v2 ([#5533](https://github.com/juspay/hyperswitch/pull/5533)) ([`61de3e0`](https://github.com/juspay/hyperswitch/commit/61de3e025a21cc691852add8298573d5dd95388c))
    - **openapi_v2:** Add merchant account v2 openapi ([#5588](https://github.com/juspay/hyperswitch/pull/5588)) ([`c8943eb`](https://github.com/juspay/hyperswitch/commit/c8943eb289664093f2a4d515bfacd804f86cd20a))

    ### Build System / Dependencies

    - Bump MSRV to 1.76.0 ([#5586](https://github.com/juspay/hyperswitch/pull/5586)) ([`59b36a0`](https://github.com/juspay/hyperswitch/commit/59b36a054cfdd30daf810ba514dd4f495e36734a))

    **Full Changelog:** [`2024.08.12.0...2024.08.13.0`](https://github.com/juspay/hyperswitch/compare/2024.08.12.0...2024.08.13.0)

    - - -

    ## 2024.08.12.0

    ### Features

    - **Connector:** Plaid connector configs ([#5545](https://github.com/juspay/hyperswitch/pull/5545)) ([`885428b`](https://github.com/juspay/hyperswitch/commit/885428bd1eee9fa2aad18eef1a1419702ebade75))
    - **core:** Use profile_id passed from auth layer within core functions ([#5553](https://github.com/juspay/hyperswitch/pull/5553)) ([`9fa631d`](https://github.com/juspay/hyperswitch/commit/9fa631d2b9df9a2ba429e197b8785885edd97798))
    - **events:** Add profile_id in payment_intents events and clickhouse ([#5573](https://github.com/juspay/hyperswitch/pull/5573)) ([`76b1460`](https://github.com/juspay/hyperswitch/commit/76b14601c843e328d168559840d8e22f78e59d3f))

    ### Bug Fixes

    - **connector:** [Bambora Apac] failure on missing capture method and billing address requirement in mandates ([#5539](https://github.com/juspay/hyperswitch/pull/5539)) ([`3183a86`](https://github.com/juspay/hyperswitch/commit/3183a86ecde7192dcb3d4dd83105853344b04d61))
    - **docker:** Currency enum fix for docker config ([#5577](https://github.com/juspay/hyperswitch/pull/5577)) ([`920243e`](https://github.com/juspay/hyperswitch/commit/920243e1d41fd103cf4f20495e966dfd86a29d0f))
    - **payment_methods:** List cards on the basis of profiles ([#5584](https://github.com/juspay/hyperswitch/pull/5584)) ([`68574b2`](https://github.com/juspay/hyperswitch/commit/68574b28cd16c8f14f7a2fc9cb83836a509e174c))
    - Cache on multitenancy ([#5561](https://github.com/juspay/hyperswitch/pull/5561)) ([`74632ae`](https://github.com/juspay/hyperswitch/commit/74632aebea28b9f1b67c258eec995f7c0f4c99d0))

    ### Refactors

    - **connector:** Connector template generation ([#5568](https://github.com/juspay/hyperswitch/pull/5568)) ([`8fdcabd`](https://github.com/juspay/hyperswitch/commit/8fdcabda3f2278f867d0e3acacbd02bae4951781))
    - **core:** Use hyperswitch_domain_models within the Payments Core instead of api_models ([#5511](https://github.com/juspay/hyperswitch/pull/5511)) ([`f81416e`](https://github.com/juspay/hyperswitch/commit/f81416e4df6fa430fd7f6eb910b55464cd72f3f0))
    - **merchant_account_v2:** Remove routing algorithms from merchant account and add version column ([#5527](https://github.com/juspay/hyperswitch/pull/5527)) ([`f1196be`](https://github.com/juspay/hyperswitch/commit/f1196be9055699421d5ec1148a4f0646da4b8fc7))
    - **openapi:** Add openapi support for generating v2 api-reference ([#5580](https://github.com/juspay/hyperswitch/pull/5580)) ([`92d76a3`](https://github.com/juspay/hyperswitch/commit/92d76a361a8babaa3433ead589f83268cb3d722f))
    - **payouts:** OpenAPI schemas and mintlify docs ([#5284](https://github.com/juspay/hyperswitch/pull/5284)) ([`942e63d`](https://github.com/juspay/hyperswitch/commit/942e63d9cd607913d4ef7d5a01493a1615a783c1))

    **Full Changelog:** [`2024.08.09.0...2024.08.12.0`](https://github.com/juspay/hyperswitch/compare/2024.08.09.0...2024.08.12.0)

    - - -

    ## 2024.08.09.0

    ### Features

    - **core:** [Payment Link] add dynamic merchant fields ([#5512](https://github.com/juspay/hyperswitch/pull/5512)) ([`03f0ea1`](https://github.com/juspay/hyperswitch/commit/03f0ea1582c76f1ed9dc4ff2215e80d659e5591a))
    - Payment processor token for recurring payments ([#5508](https://github.com/juspay/hyperswitch/pull/5508)) ([`0cbbc92`](https://github.com/juspay/hyperswitch/commit/0cbbc92a4319cb51864f443462545ab6e1ec75b6))

    ### Refactors

    - Use business profile domain models instead of diesel models ([#5566](https://github.com/juspay/hyperswitch/pull/5566)) ([`e56ad0d`](https://github.com/juspay/hyperswitch/commit/e56ad0d6884c6505d73df048e73d6210db3aae46))

    **Full Changelog:** [`2024.08.08.0...2024.08.09.0`](https://github.com/juspay/hyperswitch/compare/2024.08.08.0...2024.08.09.0)

    - - -

    ## 2024.08.08.0

    ### Bug Fixes

    - **core:** Update pm_status accordingly for the respective attempt status ([#5557](https://github.com/juspay/hyperswitch/pull/5557)) ([`9d44eae`](https://github.com/juspay/hyperswitch/commit/9d44eaeb92bc110e2ce7e5d6fd69e175a6e25492))
    - **opensearch:** Added @timestamp field for opensearch localhost ([#5556](https://github.com/juspay/hyperswitch/pull/5556)) ([`7324722`](https://github.com/juspay/hyperswitch/commit/732472204d835ef0ceb60bfec89f872c7098621e))

    ### Refactors

    - **connector:** Added amount conversion framework for Gpayments ([#4978](https://github.com/juspay/hyperswitch/pull/4978)) ([`aa036ce`](https://github.com/juspay/hyperswitch/commit/aa036ce84d1ecef7665dd1f8832e569d50a2d7cd))
    - **cypress:** Make `connector_label` configurable in cypress ([#5547](https://github.com/juspay/hyperswitch/pull/5547)) ([`8881e97`](https://github.com/juspay/hyperswitch/commit/8881e9774e59c956cb24995f55a9c8a92c20e24f))

    **Full Changelog:** [`2024.08.07.1...2024.08.08.0`](https://github.com/juspay/hyperswitch/compare/2024.08.07.1...2024.08.08.0)

    - - -

    ## 2024.08.07.1

    ### Features

    - **core:** Add support for payment links localization ([#5530](https://github.com/juspay/hyperswitch/pull/5530)) ([`3604b4f`](https://github.com/juspay/hyperswitch/commit/3604b4ffac569aac5f776f563dc11544577e8467))
    - **customer_v2:** Add customer create v2 endpoint ([#5444](https://github.com/juspay/hyperswitch/pull/5444)) ([`52cada0`](https://github.com/juspay/hyperswitch/commit/52cada015ef5f65128e4032da9cb3a07953fa8aa))
    - **cypress:**
      - Add configs for not overriding screenshots ([#5524](https://github.com/juspay/hyperswitch/pull/5524)) ([`52154cb`](https://github.com/juspay/hyperswitch/commit/52154cbbe2fa83d2a51943934a86963d37c7ce1c))
      - Add mandates and refunds variation cases ([#5513](https://github.com/juspay/hyperswitch/pull/5513)) ([`29c5f8a`](https://github.com/juspay/hyperswitch/commit/29c5f8a7570513bd0a23e5d0a90d6c2f78c63f6f))
      - Add core flow tests ([#5546](https://github.com/juspay/hyperswitch/pull/5546)) ([`7e545e3`](https://github.com/juspay/hyperswitch/commit/7e545e36ebdcfe46a1fcb29687af542e34d00e93))
    - Add a wrapper for encryption and decryption ([#5502](https://github.com/juspay/hyperswitch/pull/5502)) ([`f51b6c9`](https://github.com/juspay/hyperswitch/commit/f51b6c91a726cc7be8607b4b9b921d348d3fc5a3))

    ### Bug Fixes

    - **filter_mca:** Update helper function for filtering MCAs for payments ([#5529](https://github.com/juspay/hyperswitch/pull/5529)) ([`1715cf0`](https://github.com/juspay/hyperswitch/commit/1715cf0ed4c67e87fe3ddf9090174fc70d6c9e8c))

    ### Refactors

    - **business_profile:** Use concrete types for JSON fields ([#5531](https://github.com/juspay/hyperswitch/pull/5531)) ([`a8ba21c`](https://github.com/juspay/hyperswitch/commit/a8ba21c1d1f51bc362b3412a31160d5c73364492))
    - **connector:**
      - Added amount conversion framework for Boku ([#5459](https://github.com/juspay/hyperswitch/pull/5459)) ([`69a9c14`](https://github.com/juspay/hyperswitch/commit/69a9c144bd3be4b90f34025d97d1b610a21b666d))
      - Added amount conversion framework for Mifinity ([#5460](https://github.com/juspay/hyperswitch/pull/5460)) ([`c6a9607`](https://github.com/juspay/hyperswitch/commit/c6a960766d3e68b7d5e3ddf10c2306fa3e9c4786))
    - **router:** Refactor `merchant_connector_account` retrieve and delete v2 apis ([#5528](https://github.com/juspay/hyperswitch/pull/5528)) ([`253f1be`](https://github.com/juspay/hyperswitch/commit/253f1be3e18934de58b7a1876e406c22ae042557))

    **Full Changelog:** [`2024.08.07.0...2024.08.07.1`](https://github.com/juspay/hyperswitch/compare/2024.08.07.0...2024.08.07.1)

    - - -

    ## 2024.08.07.0

    ### Features

    - **connector:**
      - Remove Braintree SDK Flow support ([#5264](https://github.com/juspay/hyperswitch/pull/5264)) ([`61a0cb3`](https://github.com/juspay/hyperswitch/commit/61a0cb3e1eeacd1a900e3b06bbde494dfc274b35))
      - [WELLSFARGO] Implement Payment Flows ([#5463](https://github.com/juspay/hyperswitch/pull/5463)) ([`a082759`](https://github.com/juspay/hyperswitch/commit/a0827596cb243f4187735e8559dd9a759bb51405))
      - Added configs for Plaid ([#5479](https://github.com/juspay/hyperswitch/pull/5479)) ([`18e328d`](https://github.com/juspay/hyperswitch/commit/18e328d3825847f41184fbda58ee390eeaa54381))
    - **core:** Pass `profile_id` to core from auth layer ([#5532](https://github.com/juspay/hyperswitch/pull/5532)) ([`95e9c85`](https://github.com/juspay/hyperswitch/commit/95e9c8523544bad4a034e61f62f6a321a8990963))

    ### Bug Fixes

    - [CYBERSOURCE] Update status handling for AuthorizedPendingReview ([#5534](https://github.com/juspay/hyperswitch/pull/5534)) ([`2f3a463`](https://github.com/juspay/hyperswitch/commit/2f3a463253c1704218a1bed06b1bec192a3e02b9))

    ### Refactors

    - **core:** Refactor customer payment method list for v2 ([#4856](https://github.com/juspay/hyperswitch/pull/4856)) ([`8302272`](https://github.com/juspay/hyperswitch/commit/8302272460eee5ddfd56a89f280d0d18a04701f1))
    - **merchant_account_v2:** Recreate id and remove deprecated fields from merchant account ([#5493](https://github.com/juspay/hyperswitch/pull/5493)) ([`49892b2`](https://github.com/juspay/hyperswitch/commit/49892b261ef9bd0a54b8e4568d40463fca26862b))

    **Full Changelog:** [`2024.08.06.0...2024.08.07.0`](https://github.com/juspay/hyperswitch/compare/2024.08.06.0...2024.08.07.0)

    - - -

    ## 2024.08.06.0

    ### Features

    - **core:** Accept profile_id in merchant_account, connectors and customers core functions ([#5505](https://github.com/juspay/hyperswitch/pull/5505)) ([`a3e01bb`](https://github.com/juspay/hyperswitch/commit/a3e01bb4ae5893f639f3846ccb73adcca6b25ee0))
    - **router:** Add accept language header middleware ([#5500](https://github.com/juspay/hyperswitch/pull/5500)) ([`ec5f9de`](https://github.com/juspay/hyperswitch/commit/ec5f9de0cbfecd584cc200e26b13a37aebe97f16))

    ### Bug Fixes

    - **connector:** Fixed status mapping for Plaid ([#5525](https://github.com/juspay/hyperswitch/pull/5525)) ([`4364630`](https://github.com/juspay/hyperswitch/commit/4364630d6ffbce43bef0947a0150ce255a43751a))

    ### Refactors

    - **auth:** Pass `profile_id` from the auth to core functions ([#5520](https://github.com/juspay/hyperswitch/pull/5520)) ([`53b5551`](https://github.com/juspay/hyperswitch/commit/53b5551df7e7a04bb26532591180608542c33c3a))
    - **cypress:** Pass `connector_type` externally ([#5522](https://github.com/juspay/hyperswitch/pull/5522)) ([`7743255`](https://github.com/juspay/hyperswitch/commit/7743255cd8618ea290e714f2268c07bac4cfa88d))
    - **router:** Refactor merchant_connector update v2 flow ([#5484](https://github.com/juspay/hyperswitch/pull/5484)) ([`9e358e4`](https://github.com/juspay/hyperswitch/commit/9e358e4f7bac86fbf433bbb727e41e4a9acf29ea))
    - **routing:** Refactor api v2 routes for deactivating and retrieving the routing config ([#5478](https://github.com/juspay/hyperswitch/pull/5478)) ([`3fea00c`](https://github.com/juspay/hyperswitch/commit/3fea00c43ee597c9b786da6636e245cb848cdb97))

    **Full Changelog:** [`2024.08.05.0...2024.08.06.0`](https://github.com/juspay/hyperswitch/compare/2024.08.05.0...2024.08.06.0)

    - - -

    ## 2024.08.05.0

    ### Bug Fixes

    - **pm_auth:** Added mca status check in pml ([#5421](https://github.com/juspay/hyperswitch/pull/5421)) ([`e9bd345`](https://github.com/juspay/hyperswitch/commit/e9bd345464f28133aeaab638c33b77f31dd1fcb5))
    - **router:** [Iatapay] make error status and error message optional ([#5382](https://github.com/juspay/hyperswitch/pull/5382)) ([`37e34e3`](https://github.com/juspay/hyperswitch/commit/37e34e3bfde9281b3a69b0769c901a887dcf400f))

    ### Refactors

    - **payment_methods:** List the Payment Methods for Merchant , based on the connector type ([#4909](https://github.com/juspay/hyperswitch/pull/4909)) ([`f3677f2`](https://github.com/juspay/hyperswitch/commit/f3677f268ca18879bc8a9e4c7ab8c96011eb56c3))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`1737d74`](https://github.com/juspay/hyperswitch/commit/1737d74183a77910ea764c8cf2cdb148ba77ab74))

    **Full Changelog:** [`2024.08.02.0...2024.08.05.0`](https://github.com/juspay/hyperswitch/compare/2024.08.02.0...2024.08.05.0)

    - - -

    ## 2024.08.02.0

    ### Features

    - **auth:**
      - Add support for partial-auth, by facilitating injection of authentication parameters in headers ([#4802](https://github.com/juspay/hyperswitch/pull/4802)) ([`1d4c87a`](https://github.com/juspay/hyperswitch/commit/1d4c87a9e37ab1fc05754208ba4fbbcf15ad895a))
      - Add `profile_id` in `AuthenticationData` ([#5492](https://github.com/juspay/hyperswitch/pull/5492)) ([`b4eb601`](https://github.com/juspay/hyperswitch/commit/b4eb6016a4e696acf155732592a6571363c24e64))
    - **business_profile:** Introduce domain models for business profile v1 and v2 APIs ([#5497](https://github.com/juspay/hyperswitch/pull/5497)) ([`537630f`](https://github.com/juspay/hyperswitch/commit/537630f00482939d4c0b49c643dee3763fe0e046))
    - **connector:** [Paybox] add connector template code ([#5485](https://github.com/juspay/hyperswitch/pull/5485)) ([`5e1eb4a`](https://github.com/juspay/hyperswitch/commit/5e1eb4af863265c94299189de983e02a255e7e62))
    - **core:** Accept business profile in core functions for payments, refund, payout and disputes ([#5498](https://github.com/juspay/hyperswitch/pull/5498)) ([`fb32b61`](https://github.com/juspay/hyperswitch/commit/fb32b61edfa2b4190a5717850aeca6b3b0d7db54))
    - **cypress:** Add corner cases ([#5481](https://github.com/juspay/hyperswitch/pull/5481)) ([`c0f4577`](https://github.com/juspay/hyperswitch/commit/c0f45771b0b4d7d60918ae03aca9f14162ff3218))
    - **opensearch:** Updated status filter field name to match index and added time-range based search ([#5468](https://github.com/juspay/hyperswitch/pull/5468)) ([`625f5ae`](https://github.com/juspay/hyperswitch/commit/625f5ae289ca93a1a6d469d6a0f71d7492f22bc5))

    ### Bug Fixes

    - **open_payment_links:** Send displaySavedPaymentMethods as false explicitly for open payment links ([#5501](https://github.com/juspay/hyperswitch/pull/5501)) ([`b4e7717`](https://github.com/juspay/hyperswitch/commit/b4e77170559d5912758f18d2db46bf25eb5277b2))

    ### Refactors

    - **role:** Determine level of role entity ([#5488](https://github.com/juspay/hyperswitch/pull/5488)) ([`c036fd7`](https://github.com/juspay/hyperswitch/commit/c036fd7f41a21eb481859671db672b0bcebdca97))
    - **router:** Domain and diesel model changes for merchant_connector_account create v2 flow ([#5462](https://github.com/juspay/hyperswitch/pull/5462)) ([`85209d1`](https://github.com/juspay/hyperswitch/commit/85209d12ae3439b555983d62b2cc3bf764c1b441))
    - **routing:** Api v2 for routing create and activate endpoints ([#5423](https://github.com/juspay/hyperswitch/pull/5423)) ([`6140cfe`](https://github.com/juspay/hyperswitch/commit/6140cfe04ea7b3f895f8989dbf2803a06b1a6dd2))

    **Full Changelog:** [`2024.08.01.0...2024.08.02.0`](https://github.com/juspay/hyperswitch/compare/2024.08.01.0...2024.08.02.0)

    - - -

    ## 2024.08.01.0

    ### Bug Fixes

    - **payment_link:** Move redirection fn to global scope for open links ([#5494](https://github.com/juspay/hyperswitch/pull/5494)) ([`7ddfbf5`](https://github.com/juspay/hyperswitch/commit/7ddfbf51c3c3db99041e3d175a9100a60a339fe8))

    ### Documentation

    - API-Ref changes for Payouts ([#5236](https://github.com/juspay/hyperswitch/pull/5236)) ([`540ef07`](https://github.com/juspay/hyperswitch/commit/540ef071cb238a56d52d06687226aab7fd0dfe68))

    **Full Changelog:** [`2024.07.31.0...2024.08.01.0`](https://github.com/juspay/hyperswitch/compare/2024.07.31.0...2024.08.01.0)

    - - -

    ## 2024.07.31.0

    ### Features

    - **connector:** [BAMBORA, BITPAY, STAX] Move connector to hyperswitch_connectors ([#5450](https://github.com/juspay/hyperswitch/pull/5450)) ([`827fa07`](https://github.com/juspay/hyperswitch/commit/827fa07418b0514cbc5a43af2e4c7a88d1b7b4e7))
    - **payment_link:** Add provision for secured payment links ([#5357](https://github.com/juspay/hyperswitch/pull/5357)) ([`043abb5`](https://github.com/juspay/hyperswitch/commit/043abb59b9291e18824d16363f60657f22bd33e1))
    - Rename columns in organization for v2 ([#5424](https://github.com/juspay/hyperswitch/pull/5424)) ([`a791391`](https://github.com/juspay/hyperswitch/commit/a791391e2ac125ef7bb6a92de5f1419e673bdfe0))

    ### Bug Fixes

    - **connector:** [Pix] convert data type of pix fields ([#5476](https://github.com/juspay/hyperswitch/pull/5476)) ([`be9347b`](https://github.com/juspay/hyperswitch/commit/be9347b8d56c0a6cf0d04cf51c75dd6426d3a21a))

    ### Refactors

    - **configs:** Include env for cybersource in integration_test ([#5474](https://github.com/juspay/hyperswitch/pull/5474)) ([`b3b71b1`](https://github.com/juspay/hyperswitch/commit/b3b71b10c3627868420648e70913a0620dcb3b6e))
    - **id_type:** Use macros for defining ID types and implementing common traits ([#5471](https://github.com/juspay/hyperswitch/pull/5471)) ([`1d4fb1d`](https://github.com/juspay/hyperswitch/commit/1d4fb1d2474190ea0a70810e416c61883fab34b8))

    ### Documentation

    - Update postgreSQL database url ([#5482](https://github.com/juspay/hyperswitch/pull/5482)) ([`ef7fa0d`](https://github.com/juspay/hyperswitch/commit/ef7fa0d16ebe12bd86572c7ab80e7caa70d75578))

    **Full Changelog:** [`2024.07.30.0...2024.07.31.0`](https://github.com/juspay/hyperswitch/compare/2024.07.30.0...2024.07.31.0)

    - - -

    ## 2024.07.30.0

    ### Features

    - Add env variable for enable key manager service ([#5442](https://github.com/juspay/hyperswitch/pull/5442)) ([`db26d32`](https://github.com/juspay/hyperswitch/commit/db26d32d8465e20cf3835fbfe6d0a19688078b8c))

    ### Refactors

    - **router:** Remove `connector_account_details` and `connector_webhook_details` in merchant_connector_account list response ([#5457](https://github.com/juspay/hyperswitch/pull/5457)) ([`45a1494`](https://github.com/juspay/hyperswitch/commit/45a149418f1dad0cd27f975dc3dd56c68172b9dd))

    **Full Changelog:** [`2024.07.29.0...2024.07.30.0`](https://github.com/juspay/hyperswitch/compare/2024.07.29.0...2024.07.30.0)

    - - -

    ## 2024.07.29.0

    ### Features

    - **connector:**
      - [FISERV] Move connector to hyperswitch_connectors ([#5441](https://github.com/juspay/hyperswitch/pull/5441)) ([`2bee694`](https://github.com/juspay/hyperswitch/commit/2bee694d5bb7393c11817bbee26b459609f6dd8c))
      - [Bambora APAC] add mandate flow ([#5376](https://github.com/juspay/hyperswitch/pull/5376)) ([`dbfa006`](https://github.com/juspay/hyperswitch/commit/dbfa006b475736bf415588680d7fc1a16bf16891))
    - **payments:** Support sort criteria in payments list ([#5389](https://github.com/juspay/hyperswitch/pull/5389)) ([`043ea6d`](https://github.com/juspay/hyperswitch/commit/043ea6d8dc9fe8108e0b7eb8113217bc37fa488a))

    ### Bug Fixes

    - Added created at and modified at keys in PaymentAttemptResponse ([#5412](https://github.com/juspay/hyperswitch/pull/5412)) ([`9795397`](https://github.com/juspay/hyperswitch/commit/979539702190363c67045d509be04498efd9a1fa))

    ### Refactors

    - **connector:** Add amount conversion framework to placetopay ([#4988](https://github.com/juspay/hyperswitch/pull/4988)) ([`08334da`](https://github.com/juspay/hyperswitch/commit/08334dae82145e1fd699e0008fedcbd8bb7b23c7))
    - **merchant_account_v2:** Recreate id for `merchant_account` v2 ([#5439](https://github.com/juspay/hyperswitch/pull/5439)) ([`93976db`](https://github.com/juspay/hyperswitch/commit/93976db30a91b3e67d854681fb4b9db8eea7e295))
    - **opensearch:** Add Error Handling for Empty Query and Filters in Request ([#5432](https://github.com/juspay/hyperswitch/pull/5432)) ([`b60933e`](https://github.com/juspay/hyperswitch/commit/b60933e310abb4ee56355f28dfb56d9c60083f04))

    ### Miscellaneous Tasks

    - Address Rust 1.80 clippy lints ([#5447](https://github.com/juspay/hyperswitch/pull/5447)) ([`074e90c`](https://github.com/juspay/hyperswitch/commit/074e90c9f9fbc26255ed27400a6a781aa6958339))

    **Full Changelog:** [`2024.07.26.0...2024.07.29.0`](https://github.com/juspay/hyperswitch/compare/2024.07.26.0...2024.07.29.0)

    - - -

    ## 2024.07.26.0

    ### Features

    - **connector:** [HELCIM] Move connector to hyperswitch_connectors ([#5287](https://github.com/juspay/hyperswitch/pull/5287)) ([`0f89a0a`](https://github.com/juspay/hyperswitch/commit/0f89a0acbfc2d55f415e0daeb27e8d9022e6a862))
    - **events:** Forward the tenant configuration as part of the kafka message ([#5224](https://github.com/juspay/hyperswitch/pull/5224)) ([`623cf4c`](https://github.com/juspay/hyperswitch/commit/623cf4c841847f109597ee50017d6cfc0b4d9982))

    ### Bug Fixes

    - **cypress:** Fix cypress tests, failing due to error codes being recently changed ([#5425](https://github.com/juspay/hyperswitch/pull/5425)) ([`7228a87`](https://github.com/juspay/hyperswitch/commit/7228a874a3db43b89ae07941b04396215db394ef))
    - **euclid:** Change the address taken in SessionFlowRouting from shipping to billing address ([#5435](https://github.com/juspay/hyperswitch/pull/5435)) ([`9ca9545`](https://github.com/juspay/hyperswitch/commit/9ca9545318d8e62d62b4dc58a09b90fcdeb58870))

    ### Refactors

    - **connector:** Add amount conversion framework to payone ([#4981](https://github.com/juspay/hyperswitch/pull/4981)) ([`5eccffa`](https://github.com/juspay/hyperswitch/commit/5eccffac9d9f2b3e38ad07f6e12907e2c135b840))
    - **user_roles:** Make org and merchant id nullable ([#5353](https://github.com/juspay/hyperswitch/pull/5353)) ([`0330aff`](https://github.com/juspay/hyperswitch/commit/0330aff958b80872fbd6a6fccc61ff1984c59511))

    **Full Changelog:** [`2024.07.25.0...2024.07.26.0`](https://github.com/juspay/hyperswitch/compare/2024.07.25.0...2024.07.26.0)

    - - -

    ## 2024.07.25.0

    ### Features

    - **connector:** [Itaubank] Add refund and rsync flow ([#5420](https://github.com/juspay/hyperswitch/pull/5420)) ([`920b323`](https://github.com/juspay/hyperswitch/commit/920b3236ee132dac446fc73de82d24806c6b5148))
    - **router:** Add merchant_connector_account create v2 api flow ([#5385](https://github.com/juspay/hyperswitch/pull/5385)) ([`98349a0`](https://github.com/juspay/hyperswitch/commit/98349a0c3bbc438e541a03e7fe1c005e5751e6e0))
    - Add create retrieve and update api endpoints for organization resource ([#5361](https://github.com/juspay/hyperswitch/pull/5361)) ([`26b8783`](https://github.com/juspay/hyperswitch/commit/26b878308f7e493d6adb8c08b54a5498406eb28a))
    - Create additional columns in organization table ([#5380](https://github.com/juspay/hyperswitch/pull/5380)) ([`65471da`](https://github.com/juspay/hyperswitch/commit/65471da57b19c8eb2922fba0350e06b37b53f45f))

    ### Bug Fixes

    - **euclid:** Remove business_profile routing feature flag ([#5430](https://github.com/juspay/hyperswitch/pull/5430)) ([`e18ea7a`](https://github.com/juspay/hyperswitch/commit/e18ea7a7bab257a6082639e84da8d9e44f31168f))

    ### Refactors

    - **connector:**
      - Added amount conversion framework for billwerk ([#4972](https://github.com/juspay/hyperswitch/pull/4972)) ([`9d9dce9`](https://github.com/juspay/hyperswitch/commit/9d9dce90fc3dc2a51afa2b11035c4ae729329df4))
      - Added amount conversion framework for bitpay ([#4973](https://github.com/juspay/hyperswitch/pull/4973)) ([`83dbb7a`](https://github.com/juspay/hyperswitch/commit/83dbb7a8daf44bdd3d8c0e98973bba4b90eb5861))
    - **core:** Patch file for removal of id from schema ([#5398](https://github.com/juspay/hyperswitch/pull/5398)) ([`ff3b9a2`](https://github.com/juspay/hyperswitch/commit/ff3b9a2a12cd7f7e6c20f81777f6862b1f229bd4))
    - **merchant_id:** Create domain type for `merchant_id` ([#5408](https://github.com/juspay/hyperswitch/pull/5408)) ([`7068fbf`](https://github.com/juspay/hyperswitch/commit/7068fbfbe2f561f71c2358d8d2a744d28672a892))

    **Full Changelog:** [`2024.07.24.0...2024.07.25.0`](https://github.com/juspay/hyperswitch/compare/2024.07.24.0...2024.07.25.0)

    - - -

    ## 2024.07.24.0

    ### Features

    - **connector:** [WELLSFARGO] Add template code ([#5333](https://github.com/juspay/hyperswitch/pull/5333)) ([`94bb3e7`](https://github.com/juspay/hyperswitch/commit/94bb3e78fddf310d9ee3211f98a386e4f8261242))
    - **customer:** Customer v2 refactor for customer create end point ([#5350](https://github.com/juspay/hyperswitch/pull/5350)) ([`aaf1f2b`](https://github.com/juspay/hyperswitch/commit/aaf1f2b1e5e1f473154a57af0d1b9402bd238ec4))

    ### Bug Fixes

    - **connector:** [Datatrans] Handling for 4-Digit YYYY input and Correct 3DS Routing to no_3ds ([#5410](https://github.com/juspay/hyperswitch/pull/5410)) ([`3e16219`](https://github.com/juspay/hyperswitch/commit/3e1621944562a0fca3014a190393b744d235bc4c))

    ### Refactors

    - **connector:**
      - Add amount conversion framework to volt ([#4985](https://github.com/juspay/hyperswitch/pull/4985)) ([`e4b3982`](https://github.com/juspay/hyperswitch/commit/e4b3982c13cedf0f7feaec22df414761e22d98df))
      - [Itaubank] add dynamic fields for pix ([#5419](https://github.com/juspay/hyperswitch/pull/5419)) ([`afae590`](https://github.com/juspay/hyperswitch/commit/afae5906a8d6ceab136393c7588bfc447e822ddc))

    ### Miscellaneous Tasks

    - **users:** Email templates footer icon style enhance ([#5375](https://github.com/juspay/hyperswitch/pull/5375)) ([`876eeea`](https://github.com/juspay/hyperswitch/commit/876eeea0f426f63d0419021ba85372a016d46e27))

    **Full Changelog:** [`2024.07.23.0...2024.07.24.0`](https://github.com/juspay/hyperswitch/compare/2024.07.23.0...2024.07.24.0)

    - - -

    ## 2024.07.23.0

    ### Features

    - **connector:** [Itau Bank] Add payment and sync flow for Pix ([#5342](https://github.com/juspay/hyperswitch/pull/5342)) ([`3fef96e`](https://github.com/juspay/hyperswitch/commit/3fef96e727ebb411d5699b8b37bdec30a2606da0))

    ### Bug Fixes

    - **router:** Store `network_transaction_id` in stripe `authorize` flow ([#5399](https://github.com/juspay/hyperswitch/pull/5399)) ([`be78dfc`](https://github.com/juspay/hyperswitch/commit/be78dfc04eff671fb0b4e6037c84aee8ab367e70))
    - Add offset and limit to key transfer API ([#5358](https://github.com/juspay/hyperswitch/pull/5358)) ([`b393803`](https://github.com/juspay/hyperswitch/commit/b393803a6199a12f86d7bbdc998e5a0d8366c000))

    ### Refactors

    - **connector:** Add billing_country in klarna dynamic fields ([#5373](https://github.com/juspay/hyperswitch/pull/5373)) ([`4838a86`](https://github.com/juspay/hyperswitch/commit/4838a86ebcb5000e65293e0d095e5de95e3a64a0))
    - **core:** Change primary keys in payment_methods table ([#5393](https://github.com/juspay/hyperswitch/pull/5393)) ([`ca749b3`](https://github.com/juspay/hyperswitch/commit/ca749b32591edcbf4676da4327f8b6ccbc839d4b))
    - **dashboard_metadata:** Alter query for merchant scoped metadata ([#5397](https://github.com/juspay/hyperswitch/pull/5397)) ([`eaa391a`](https://github.com/juspay/hyperswitch/commit/eaa391a959076424399fb9331a78a16eaf790478))
    - **router:** Make `original_payment_authorized_currency` and `original_payment_authorized_amount` mandatory fields for `Discover` cards and `Cybersource` connector during payment method migration. ([#5370](https://github.com/juspay/hyperswitch/pull/5370)) ([`06f1406`](https://github.com/juspay/hyperswitch/commit/06f1406cbc350a71f961a19dc2a6cfef2ceeb3a1))

    ### Miscellaneous Tasks

    - Add missing logs for surcharge flow ([#5258](https://github.com/juspay/hyperswitch/pull/5258)) ([`bc19fca`](https://github.com/juspay/hyperswitch/commit/bc19fca1f4e76be6131e9c870b8aa1c709fef578))
    - Add customer, shipping and billing details to payment_response for payment list api ([#5401](https://github.com/juspay/hyperswitch/pull/5401)) ([`fa6c63b`](https://github.com/juspay/hyperswitch/commit/fa6c63bd5409ec45f23ddf4616c5eb3cf399aa1b))

    **Full Changelog:** [`2024.07.20.0...2024.07.23.0`](https://github.com/juspay/hyperswitch/compare/2024.07.20.0...2024.07.23.0)

    - - -

    ## 2024.07.20.0

    ### Features

    - **merchant_account_v2:** Add merchant_account_v2 domain and diesel models ([#5365](https://github.com/juspay/hyperswitch/pull/5365)) ([`5861c5a`](https://github.com/juspay/hyperswitch/commit/5861c5a63b3ab228d886888962e5734b9018eab9))

    ### Bug Fixes

    - Use encrypt api for all encryption and decryption ([#5379](https://github.com/juspay/hyperswitch/pull/5379)) ([`83849a5`](https://github.com/juspay/hyperswitch/commit/83849a5f3cbb1843013535b0631e6e3d38d037b7))

    ### Refactors

    - **core:** Change primary keys in user, user_roles and roles tables ([#5374](https://github.com/juspay/hyperswitch/pull/5374)) ([`b51c8e1`](https://github.com/juspay/hyperswitch/commit/b51c8e1d12c2f0012b8210a6c25c989f9dd89c3b))

    **Full Changelog:** [`2024.07.19.1...2024.07.20.0`](https://github.com/juspay/hyperswitch/compare/2024.07.19.1...2024.07.20.0)

    - - -

    ## 2024.07.19.1

    ### Features

    - **connector:** Plaid connector Integration ([#3952](https://github.com/juspay/hyperswitch/pull/3952)) ([`eb01680`](https://github.com/juspay/hyperswitch/commit/eb01680284fea4d61ef95418878d49104885352e))
    - Encryption service integration to support batch encryption and decryption ([#5164](https://github.com/juspay/hyperswitch/pull/5164)) ([`33298b3`](https://github.com/juspay/hyperswitch/commit/33298b38081c46fe4ee38f8ad6ddffd2b98a1d5c))

    ### Refactors

    - **connector:** Make the `original_authorized_amount` optional for MITs with `connector_mandate_details` ([#5311](https://github.com/juspay/hyperswitch/pull/5311)) ([`a8e2f3e`](https://github.com/juspay/hyperswitch/commit/a8e2f3ebc9da60ef41459b080d8856d3cadf8c41))
    - **core:** Change primary key of refund table ([#5367](https://github.com/juspay/hyperswitch/pull/5367)) ([`c698921`](https://github.com/juspay/hyperswitch/commit/c698921c417da4f6f74887224818ccb5d92b9fc3))

    **Full Changelog:** [`2024.07.19.0...2024.07.19.1`](https://github.com/juspay/hyperswitch/compare/2024.07.19.0...2024.07.19.1)

    - - -

    ## 2024.07.19.0

    ### Features

    - **connector:** [Itau Bank] Template for payment flows ([#5304](https://github.com/juspay/hyperswitch/pull/5304)) ([`ef1418f`](https://github.com/juspay/hyperswitch/commit/ef1418f978835a8df149181bc5e19053775490f2))

    ### Bug Fixes

    - **core:** [payouts] failure of payout retrieve when token is expired ([#5362](https://github.com/juspay/hyperswitch/pull/5362)) ([`817d06c`](https://github.com/juspay/hyperswitch/commit/817d06c7faa14493674931ba51ab6c32769602d1))

    ### Refactors

    - **blocklist:** Change primary key of blocklist table ([#5356](https://github.com/juspay/hyperswitch/pull/5356)) ([`93047ae`](https://github.com/juspay/hyperswitch/commit/93047ae616b6a5240c2be13f8c5267e5fa616eab))
    - **merchant_account:** Change primary key for merchant account ([#5327](https://github.com/juspay/hyperswitch/pull/5327)) ([`a0c367e`](https://github.com/juspay/hyperswitch/commit/a0c367ee8c7f04cfdf1f9d4863447f24279a537f))
    - **router:** Remove id dependency from merchant connector account, dispute and mandate ([#5330](https://github.com/juspay/hyperswitch/pull/5330)) ([`6d74527`](https://github.com/juspay/hyperswitch/commit/6d74527f4428c8cb61e89d59385bfb2dd8056c2e))
    - **routing:** Remove backwards compatibility for the routing crate ([#3015](https://github.com/juspay/hyperswitch/pull/3015)) ([`78a7804`](https://github.com/juspay/hyperswitch/commit/78a7804b9c8b4db881b112fc72e31cfd3e97a82d))

    ### Documentation

    - Updating Error codes for documentation purposes ([#5314](https://github.com/juspay/hyperswitch/pull/5314)) ([`fe14336`](https://github.com/juspay/hyperswitch/commit/fe14336f78b15e948b10d09b197fb1d529939b5c))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`93dd60c`](https://github.com/juspay/hyperswitch/commit/93dd60c9ab8180ed7688959e32a3c2730c2bfad2))
    - Increasing log coverage for payment method list ([#5042](https://github.com/juspay/hyperswitch/pull/5042)) ([`edb581e`](https://github.com/juspay/hyperswitch/commit/edb581e8e3307714c1ebc3dec65fc73aeb2d7cb0))

    ### Build System / Dependencies

    - Remove unused dependencies ([#5343](https://github.com/juspay/hyperswitch/pull/5343)) ([`7f582e4`](https://github.com/juspay/hyperswitch/commit/7f582e4737c1c7dfe906e7d01de239e131511f84))

    **Full Changelog:** [`2024.07.18.0...2024.07.19.0`](https://github.com/juspay/hyperswitch/compare/2024.07.18.0...2024.07.19.0)

    - - -

    ## 2024.07.18.0

    ### Features

    - **core:** Payments core modification for open banking connectors ([#3947](https://github.com/juspay/hyperswitch/pull/3947)) ([`eb6f27d`](https://github.com/juspay/hyperswitch/commit/eb6f27d64e07f3f65b4e9a2f227898a238355477))
    - **globalsearch:** Added search_tags based filter for global search in dashboard ([#5341](https://github.com/juspay/hyperswitch/pull/5341)) ([`35c9b8a`](https://github.com/juspay/hyperswitch/commit/35c9b8afe1a09b858c79c0ce13cf5c24d200d3fd))
    - **payout_link:** Secure payout links using server side validations and client side headers ([#5219](https://github.com/juspay/hyperswitch/pull/5219)) ([`2d204c9`](https://github.com/juspay/hyperswitch/commit/2d204c9f7348c4ed121ab472ef1b5bb8d9d32d24))
    - **router:** Add support for passing the domain dynamically in the session call ([#5347](https://github.com/juspay/hyperswitch/pull/5347)) ([`67bfb1c`](https://github.com/juspay/hyperswitch/commit/67bfb1cfecd4a4ad8503eaf57837073bb1980bdd))

    ### Refactors

    - **connector:** Added amount conversion framework for checkout,adyen and globalpay ([#4974](https://github.com/juspay/hyperswitch/pull/4974)) ([`ecc862c`](https://github.com/juspay/hyperswitch/commit/ecc862c3543be37e2cc7959f450ca51770978ae5))
    - **cypress:** Nullify false positives ([#5303](https://github.com/juspay/hyperswitch/pull/5303)) ([`96edf52`](https://github.com/juspay/hyperswitch/commit/96edf52ca639178e01dc4c3e008611b847bc358f))
    - **router:** Remove the locker call in the psync flow ([#5348](https://github.com/juspay/hyperswitch/pull/5348)) ([`24360b2`](https://github.com/juspay/hyperswitch/commit/24360b22efc308cc5fc6da7b4168f560a1dc8689))

    **Full Changelog:** [`2024.07.17.0...2024.07.18.0`](https://github.com/juspay/hyperswitch/compare/2024.07.17.0...2024.07.18.0)

    - - -

    ## 2024.07.17.0

    ### Features

    - **mca:** Added recipient connector call for open banking connectors ([#3758](https://github.com/juspay/hyperswitch/pull/3758)) ([`3951ac6`](https://github.com/juspay/hyperswitch/commit/3951ac6578359c62a9b12582f5a5bbeef4c1b769))
    - **webhooks:** Add support for custom outgoing webhook http headers ([#5275](https://github.com/juspay/hyperswitch/pull/5275)) ([`101b21f`](https://github.com/juspay/hyperswitch/commit/101b21f52d69619fac1cc2f71597514f7cbee027))

    ### Bug Fixes

    - **database:** Modified_at updated for every state change for Payment Attempts ([#5312](https://github.com/juspay/hyperswitch/pull/5312)) ([`926dcd3`](https://github.com/juspay/hyperswitch/commit/926dcd3a3c0f3c09d39767e2a2c5721a42272322))
    - **logs:** Ignore request headers while logging ([#5273](https://github.com/juspay/hyperswitch/pull/5273)) ([`34d2cec`](https://github.com/juspay/hyperswitch/commit/34d2cec151d2ceeb51a638a661bc1a4c716b2859))
    - **payment_methods:** Set `requires_cvv` to false when either `connector_mandate_details` or `network_transaction_id` is present during MITs ([#5331](https://github.com/juspay/hyperswitch/pull/5331)) ([`29f8732`](https://github.com/juspay/hyperswitch/commit/29f8732d308ee3a90eba1c6ddeb8b3cedde3e3d3))
    - **routing:** Do not update `perform_session_flow_routing` output if the `SessionRoutingChoice` is none ([#5336](https://github.com/juspay/hyperswitch/pull/5336)) ([`f07689e`](https://github.com/juspay/hyperswitch/commit/f07689e75b8be8f79471b09b3752f0d5a4cec7f5))

    ### Miscellaneous Tasks

    - Create justfile for running commands for v1 and v2 migrations ([#5325](https://github.com/juspay/hyperswitch/pull/5325)) ([`23bfceb`](https://github.com/juspay/hyperswitch/commit/23bfceb6c8d3bc62d1e97f1b5feaba2dbbf9bcde))

    **Full Changelog:** [`2024.07.16.0...2024.07.17.0`](https://github.com/juspay/hyperswitch/compare/2024.07.16.0...2024.07.17.0)

    - - -

    ## 2024.07.16.0

    ### Features

    - **core:** [Payouts] Add retrieve flow for payouts ([#4936](https://github.com/juspay/hyperswitch/pull/4936)) ([`693f08d`](https://github.com/juspay/hyperswitch/commit/693f08dc5bf57de3ec180968209f98a133503109))
    - **proxy:** Add support to pass proxy bypass urls from configs ([#5322](https://github.com/juspay/hyperswitch/pull/5322)) ([`61b3aef`](https://github.com/juspay/hyperswitch/commit/61b3aef6617ccfa02d2892b31612811602aabd2b))

    ### Bug Fixes

    - **connector:** [AUTHORIZEDOTNET] Populate error reason for failure transactions ([#5319](https://github.com/juspay/hyperswitch/pull/5319)) ([`d8d222a`](https://github.com/juspay/hyperswitch/commit/d8d222a5d53f934cd45761c6c68edfab37590c85))
    - **router:** Store `customer_acceptance` in payment_attempt, use it in confirm flow for delayed authorizations like external 3ds flow ([#5308](https://github.com/juspay/hyperswitch/pull/5308)) ([`0f70473`](https://github.com/juspay/hyperswitch/commit/0f70473a3a0764d95441ac5dd39d6c1676071a82))

    ### Refactors

    - **connector:** [Mifinity] add a field language_preference in payment request for mifinity payment method data ([#5326](https://github.com/juspay/hyperswitch/pull/5326)) ([`e4a0ff1`](https://github.com/juspay/hyperswitch/commit/e4a0ff1c190c0d711aacc67cd25d57bf6c481f0d))

    ### Documentation

    - Updating Error codes in API-ref ([#5296](https://github.com/juspay/hyperswitch/pull/5296)) ([`da1f604`](https://github.com/juspay/hyperswitch/commit/da1f604bb86293b9897d5eb2a0242afb36956efa))

    **Full Changelog:** [`2024.07.15.0...2024.07.16.0`](https://github.com/juspay/hyperswitch/compare/2024.07.15.0...2024.07.16.0)

    - - -

    ## 2024.07.15.0

    ### Features

    - **connector:** [DATATRANS] Implement card payments ([#5028](https://github.com/juspay/hyperswitch/pull/5028)) ([`f24a407`](https://github.com/juspay/hyperswitch/commit/f24a4070c33a435f25be9511fe1b90cf337efa52))
    - **logging:** Emit a setup error when a restricted keys are used for logging default keys ([#5185](https://github.com/juspay/hyperswitch/pull/5185)) ([`ff96a62`](https://github.com/juspay/hyperswitch/commit/ff96a62b9570392f8b9474ca375c630081cb1189))
    - **payment_methods:** Add support to migrate existing customer PMs from processor to hyperswitch ([#5306](https://github.com/juspay/hyperswitch/pull/5306)) ([`2149994`](https://github.com/juspay/hyperswitch/commit/21499947ad229580dd37cbbb22c31c48270bdb29))

    ### Bug Fixes

    - **connector:** [Adyen] fix bank debit mandates for adyen ([#5302](https://github.com/juspay/hyperswitch/pull/5302)) ([`06dc803`](https://github.com/juspay/hyperswitch/commit/06dc80358cb1db972cca7d7f1a6d8d5e3c9e4606))
    - **payments:** Populate merchant order ref id in list ([#5310](https://github.com/juspay/hyperswitch/pull/5310)) ([`bf4ec90`](https://github.com/juspay/hyperswitch/commit/bf4ec90d4500d9883dfa946b2ca99976a681ea37))
    - Email template minor fix ([#5291](https://github.com/juspay/hyperswitch/pull/5291)) ([`42e26e7`](https://github.com/juspay/hyperswitch/commit/42e26e763e47706744b66cf808a158d97c31153b))

    ### Refactors

    - **cypress:** Correction of cypress tests env variables for Payment method list ([#5299](https://github.com/juspay/hyperswitch/pull/5299)) ([`1081e38`](https://github.com/juspay/hyperswitch/commit/1081e38089e3d6e5bbae73932fe4385ae420250a))
    - **payouts:** Update helper functions for deciding whether or not to consume flows based on current status ([#5248](https://github.com/juspay/hyperswitch/pull/5248)) ([`d65d7b5`](https://github.com/juspay/hyperswitch/commit/d65d7b5ccaf3ba0d53a83e1f483a04fc409584c3))
    - Use `Debug` impl instead of `Display` impl for logging errors ([#5301](https://github.com/juspay/hyperswitch/pull/5301)) ([`e835706`](https://github.com/juspay/hyperswitch/commit/e835706ad6153f25d74aa1f3b450eaf2fc73a313))

    ### Miscellaneous Tasks

    - **euclid_wasm:** Refactor connector metadata ([#5083](https://github.com/juspay/hyperswitch/pull/5083)) ([`8b614c9`](https://github.com/juspay/hyperswitch/commit/8b614c9b7ed4831b6a11094ad924a8dd55a996d6))
    - Making of function create_encrypted_data ([#5251](https://github.com/juspay/hyperswitch/pull/5251)) ([`6ee1cad`](https://github.com/juspay/hyperswitch/commit/6ee1cad46931e2ceb8a6280e469aa1735d60c970))

    **Full Changelog:** [`2024.07.12.0...2024.07.15.0`](https://github.com/juspay/hyperswitch/compare/2024.07.12.0...2024.07.15.0)

    - - -

    ## 2024.07.12.0

    ### Features

    - **config:** [ZSL] Update ZSL base url for production ([#5290](https://github.com/juspay/hyperswitch/pull/5290)) ([`4e41827`](https://github.com/juspay/hyperswitch/commit/4e41827ade5a4c844cbc8822618ac2e35c6029e2))
    - **payouts:** Add country, currency filters for payout methods ([#5130](https://github.com/juspay/hyperswitch/pull/5130)) ([`d6f7f3c`](https://github.com/juspay/hyperswitch/commit/d6f7f3c799558a624d065b0eff31748c97e24baa))
    - Create key in encryption service for merchant and user ([#4910](https://github.com/juspay/hyperswitch/pull/4910)) ([`43741df`](https://github.com/juspay/hyperswitch/commit/43741df4a76a66faa472dacd66b396232a2fbdbf))

    ### Bug Fixes

    - **analytics:** Resolve issues for payment-intent v2 analytics ([#5283](https://github.com/juspay/hyperswitch/pull/5283)) ([`bcb3450`](https://github.com/juspay/hyperswitch/commit/bcb3450445807a12cde70333bf24593ed57091b5))
    - **connector:** [BANKOFAMERICA] Remove cards 3ds flow ([#5294](https://github.com/juspay/hyperswitch/pull/5294)) ([`7c408af`](https://github.com/juspay/hyperswitch/commit/7c408aff1e7a664d38216fadb49730f378622ed2))
    - **cypress:** Validate false positives and fix PML tests ([#5293](https://github.com/juspay/hyperswitch/pull/5293)) ([`68adda0`](https://github.com/juspay/hyperswitch/commit/68adda036d4830a8803768efdeb7f43e09365339))
    - **router:**
      - Send assurance_details required as false in googlepay metadata during merchant_connector_account creation from dashboard ([#5278](https://github.com/juspay/hyperswitch/pull/5278)) ([`6f754ea`](https://github.com/juspay/hyperswitch/commit/6f754eaa1dee947bc0f4917bc8cb2ce49d59de67))
      - [razorpay] update refund webhook reference id ([#5297](https://github.com/juspay/hyperswitch/pull/5297)) ([`48e3b41`](https://github.com/juspay/hyperswitch/commit/48e3b41e32ba54a8d8642ba65b1cda251a6da315))
      - Fail refund with bad request error for duplicate refund_id in refunds create flow ([#5282](https://github.com/juspay/hyperswitch/pull/5282)) ([`f63a678`](https://github.com/juspay/hyperswitch/commit/f63a678d71ee1cc55aa3569a52d6e6541ba65c44))
      - Fixed integrity check failures in case of 3ds flow in sync flow ([#5279](https://github.com/juspay/hyperswitch/pull/5279)) ([`6d372ef`](https://github.com/juspay/hyperswitch/commit/6d372efbed08bc4ef7d946fb36acb67458896433))

    ### Refactors

    - **analytics:** Create new permissions for Generate Report APIs ([#5178](https://github.com/juspay/hyperswitch/pull/5178)) ([`998ce02`](https://github.com/juspay/hyperswitch/commit/998ce02ebc1eed10e426987d1af9c02d1f1735fe))
    - **connectors:** [boa/cybs] add billing address to MIT request ([#5068](https://github.com/juspay/hyperswitch/pull/5068)) ([`66ac158`](https://github.com/juspay/hyperswitch/commit/66ac1584dfd6e8574732cb753bdce0136d36c205))
    - Move trait IncomingWebhook to hyperswitch_interfaces ([#5191](https://github.com/juspay/hyperswitch/pull/5191)) ([`35d502e`](https://github.com/juspay/hyperswitch/commit/35d502e3da6b271452011dfae178108e3ba8c3c7))

    ### Miscellaneous Tasks

    - Fix file name ignored by git in cypress ([#5281](https://github.com/juspay/hyperswitch/pull/5281)) ([`3312e78`](https://github.com/juspay/hyperswitch/commit/3312e787f9873d10114e6a4ca78a0c3714ab2b1c))

    **Full Changelog:** [`2024.07.11.0...2024.07.12.0`](https://github.com/juspay/hyperswitch/compare/2024.07.11.0...2024.07.12.0)

    - - -

    ## 2024.07.11.0

    ### Features

    - **connector:** [Bambora APAC] Add payment flows ([#5193](https://github.com/juspay/hyperswitch/pull/5193)) ([`f7abcee`](https://github.com/juspay/hyperswitch/commit/f7abcee625e87d3c2f5c3ab0327aa5dea3d5e0c4))
    - **merchant_account:** Add merchant account create v2 route ([#5061](https://github.com/juspay/hyperswitch/pull/5061)) ([`d6b9151`](https://github.com/juspay/hyperswitch/commit/d6b9151e9edae17e06234c8958170bf38ff060bc))
    - **router:** Add an api to migrate the payment method ([#5186](https://github.com/juspay/hyperswitch/pull/5186)) ([`125699f`](https://github.com/juspay/hyperswitch/commit/125699f89c603809778c276362f2d7825ab5a8de))

    ### Bug Fixes

    - **analytics:** Updated frm clickhouse script for creating table ([#5272](https://github.com/juspay/hyperswitch/pull/5272)) ([`545a6db`](https://github.com/juspay/hyperswitch/commit/545a6dbfc60b5ad20a8fc9dd303998cb9aa255da))
    - **payments_create:** Save the `customer_id` in payments create ([#5262](https://github.com/juspay/hyperswitch/pull/5262)) ([`53cb953`](https://github.com/juspay/hyperswitch/commit/53cb95378e3974d1d46ff76873a95b4c5c9a4991))
    - **router:** [razorpay] make source verification false ([#5268](https://github.com/juspay/hyperswitch/pull/5268)) ([`3da93f1`](https://github.com/juspay/hyperswitch/commit/3da93f1f73680cc20313a068aacae3018b067b45))

    ### Refactors

    - **connector:**
      - Update connector_refund_id and Refactor Webhook Status ([#5280](https://github.com/juspay/hyperswitch/pull/5280)) ([`5e4b082`](https://github.com/juspay/hyperswitch/commit/5e4b0826e6375b4e85916ee4990e405bb27e2a78))
      - [Mifinity] fix redirection after payment completion and handle 5xx error ([#5250](https://github.com/juspay/hyperswitch/pull/5250)) ([`38d5137`](https://github.com/juspay/hyperswitch/commit/38d5137c2736a38ee3b15288fed2ac9f9985bce8))
    - **cypress:** Unify fixtures in tests & follow conventions ([#5180](https://github.com/juspay/hyperswitch/pull/5180)) ([`1adcf01`](https://github.com/juspay/hyperswitch/commit/1adcf0150458c4670b81fa8e2307dc0c32aa1ff1))
    - **user_auth_method:** Populate default user auth method ([#5257](https://github.com/juspay/hyperswitch/pull/5257)) ([`f8f6972`](https://github.com/juspay/hyperswitch/commit/f8f69728b3303663942722acc1514249d98912d4))

    **Full Changelog:** [`2024.07.10.1...2024.07.11.0`](https://github.com/juspay/hyperswitch/compare/2024.07.10.1...2024.07.11.0)

    - - -

    ## 2024.07.10.1

    ### Refactors

    - **connector:** Wasm changes for razorpay ([#5265](https://github.com/juspay/hyperswitch/pull/5265)) ([`c016407`](https://github.com/juspay/hyperswitch/commit/c0164076881a0ce561ced98e7da61bf6904ba60b))

    **Full Changelog:** [`2024.07.10.0...2024.07.10.1`](https://github.com/juspay/hyperswitch/compare/2024.07.10.0...2024.07.10.1)

    - - -

    ## 2024.07.10.0

    ### Features

    - **connector:** [RazorPay] Add new connector and Implement payment flows for UPI payment method ([#5200](https://github.com/juspay/hyperswitch/pull/5200)) ([`fdac313`](https://github.com/juspay/hyperswitch/commit/fdac31324110ebe20ba56dd60cfe8c41dbd309a4))
    - **core:** Constraint Graph for Payment Methods List ([#5081](https://github.com/juspay/hyperswitch/pull/5081)) ([`82c6e0e`](https://github.com/juspay/hyperswitch/commit/82c6e0e649e509dd88fe6b5524b12fee99f813ab))
    - **decision:** Add support to register api keys to proxy ([#5168](https://github.com/juspay/hyperswitch/pull/5168)) ([`071d534`](https://github.com/juspay/hyperswitch/commit/071d5345b5801e124da18d679202b0a60033b2f5))

    ### Refactors

    - **core:** Removal of deserialization logs for routing_metadata ([#5253](https://github.com/juspay/hyperswitch/pull/5253)) ([`d9c7849`](https://github.com/juspay/hyperswitch/commit/d9c7849dfa773f9c4181def50c26e35c45a76d54))

    **Full Changelog:** [`2024.07.09.0...2024.07.10.0`](https://github.com/juspay/hyperswitch/compare/2024.07.09.0...2024.07.10.0)

    - - -

    ## 2024.07.09.0

    ### Features

    - **core:** Addition of shipping address details in payment intent ([#5112](https://github.com/juspay/hyperswitch/pull/5112)) ([`2d31d38`](https://github.com/juspay/hyperswitch/commit/2d31d38c1e35be99e9b0297b197bab81fa5f5030))
    - **router:** Add integrity check for refund refund sync and capture flow with stripe as connector ([#5187](https://github.com/juspay/hyperswitch/pull/5187)) ([`adc760f`](https://github.com/juspay/hyperswitch/commit/adc760f0a6c75b5a51d9955f5e507776e7a88d1a))
    - Add `hsdev` binary to run migrations ([#4877](https://github.com/juspay/hyperswitch/pull/4877)) ([`f64b522`](https://github.com/juspay/hyperswitch/commit/f64b522154cf4d3702ad39babc75c7ba940f8217))

    ### Bug Fixes

    - **connector:** Remove mandatory payment_method_type check in MIT ([#5246](https://github.com/juspay/hyperswitch/pull/5246)) ([`19744ce`](https://github.com/juspay/hyperswitch/commit/19744cec1042f8b7c5cc496c3b4d201604aca204))

    **Full Changelog:** [`2024.07.08.1...2024.07.09.0`](https://github.com/juspay/hyperswitch/compare/2024.07.08.1...2024.07.09.0)

    - - -

    ## 2024.07.08.1

    ### Bug Fixes

    - **core:** Fetch customer id from customer object during MIT ([#5218](https://github.com/juspay/hyperswitch/pull/5218)) ([`a79437d`](https://github.com/juspay/hyperswitch/commit/a79437d5f078287a3eddb9bfdc7902533efd41b4))
    - **cypress:**
      - Remove unsupported manual confirm tests ([#5223](https://github.com/juspay/hyperswitch/pull/5223)) ([`549c293`](https://github.com/juspay/hyperswitch/commit/549c293c3f0f5393ee3c29ee74fee1a983c46755))
      - Fix payouts failing ([#5239](https://github.com/juspay/hyperswitch/pull/5239)) ([`864d53c`](https://github.com/juspay/hyperswitch/commit/864d53c6d20ed993b55d9932e8d62abd4a64fd5a))
    - **router:** [Iatapay] add CLEARED refund status ([#5231](https://github.com/juspay/hyperswitch/pull/5231)) ([`d4813b9`](https://github.com/juspay/hyperswitch/commit/d4813b99500d2607985a8a21c888f040fff843dc))

    **Full Changelog:** [`2024.07.08.0...2024.07.08.1`](https://github.com/juspay/hyperswitch/compare/2024.07.08.0...2024.07.08.1)

    - - -

    ## 2024.07.08.0

    ### Bug Fixes

    - **connector:** [adyen] remove browser info for mit and [paypal] add refund key in headers ([#5225](https://github.com/juspay/hyperswitch/pull/5225)) ([`5ea09c7`](https://github.com/juspay/hyperswitch/commit/5ea09c7f9d50791fddc19cc97922659bb1bc0f57))

    **Full Changelog:** [`2024.07.06.0...2024.07.08.0`](https://github.com/juspay/hyperswitch/compare/2024.07.06.0...2024.07.08.0)

    - - -

    ## 2024.07.06.0

    ### Features

    - **connector:** [BRAINTREE] Implement Card Mandates ([#5204](https://github.com/juspay/hyperswitch/pull/5204)) ([`1904ffa`](https://github.com/juspay/hyperswitch/commit/1904ffad889bbf2c77e959fda60c0c55fd57f596))
    - **core:** Billing_details inclusion in Payment Intent ([#5090](https://github.com/juspay/hyperswitch/pull/5090)) ([`ec01788`](https://github.com/juspay/hyperswitch/commit/ec01788bc4d4363a3e783e7b877d1d31f90e196e))
    - **events:**
      - Add payment metadata to hyperswitch-payment-intent-events ([#5170](https://github.com/juspay/hyperswitch/pull/5170)) ([`5ebfbaf`](https://github.com/juspay/hyperswitch/commit/5ebfbaf19965b0dfbaaf975b38b0f72db83eca66))
      - Add hashed customer_email and feature_metadata ([#5220](https://github.com/juspay/hyperswitch/pull/5220)) ([`ae2a34e`](https://github.com/juspay/hyperswitch/commit/ae2a34e02cd8bc0ab2e213c18953583046b17241))
    - **router:**
      - Pass fields to indicate if the customer address details to be connector from wallets ([#5210](https://github.com/juspay/hyperswitch/pull/5210)) ([`c642d9d`](https://github.com/juspay/hyperswitch/commit/c642d9dcf5e2bb9a91d543731e33ce5fe3e81b95))
      - Pass the shipping email whenever the billing details are included in the session token response ([#5228](https://github.com/juspay/hyperswitch/pull/5228)) ([`9c89f88`](https://github.com/juspay/hyperswitch/commit/9c89f8899d40820a0c656695248dab451f15a272))

    ### Bug Fixes

    - **analytics:** Using HashSet to represent the returned metrics ([#5179](https://github.com/juspay/hyperswitch/pull/5179)) ([`16e8f4b`](https://github.com/juspay/hyperswitch/commit/16e8f4b263842bcf0767ed06ee94d73e02247dd8))
    - **cypress:** Fix metadata missing while creating connector if not in auth ([#5215](https://github.com/juspay/hyperswitch/pull/5215)) ([`91a9542`](https://github.com/juspay/hyperswitch/commit/91a954264a5dbf11a27ba1c672c0391f64f448a0))
    - **refunds:** Add aliases on refund status for backwards compatibility ([#5216](https://github.com/juspay/hyperswitch/pull/5216)) ([`a2c0d7f`](https://github.com/juspay/hyperswitch/commit/a2c0d7f09522a105f0037de5cbd4ed602e5cfdc6))

    ### Refactors

    - Adding millisecond to Kafka timestamp ([#5202](https://github.com/juspay/hyperswitch/pull/5202)) ([`00f9ed4`](https://github.com/juspay/hyperswitch/commit/00f9ed4cae6022708f5c46544e4bbec5deafbc7d))
    - Fix unit and documentation tests ([#4754](https://github.com/juspay/hyperswitch/pull/4754)) ([`648cecb`](https://github.com/juspay/hyperswitch/commit/648cecb204571eb5ac7378d9a217bf74c32a8377))

    **Full Changelog:** [`2024.07.05.0...2024.07.06.0`](https://github.com/juspay/hyperswitch/compare/2024.07.05.0...2024.07.06.0)

    - - -

    ## 2024.07.05.0

    ### Features

    - **analytics:**
      - FRM Analytics ([#4880](https://github.com/juspay/hyperswitch/pull/4880)) ([`cc88c07`](https://github.com/juspay/hyperswitch/commit/cc88c0707fe9fa6b54546c0c73b7b46f42497f17))
      - Refund status serialization issue for ckh analytics ([#5199](https://github.com/juspay/hyperswitch/pull/5199)) ([`755d968`](https://github.com/juspay/hyperswitch/commit/755d968c95b8a5287408599de5187e50deac588f))
    - **core:**
      - Added integrity framework for Authorize and Sync flow with connector as Stripe ([#5109](https://github.com/juspay/hyperswitch/pull/5109)) ([`c8c0cb7`](https://github.com/juspay/hyperswitch/commit/c8c0cb765e8a511aae0b3a4f94115bb07d122c9d))
      - Add merchant order reference id ([#5197](https://github.com/juspay/hyperswitch/pull/5197)) ([`f4665d2`](https://github.com/juspay/hyperswitch/commit/f4665d2f4a46a7beec96183db347ea7265cb881c))
    - **cypress:** Make tests forcefully skippable ([#5176](https://github.com/juspay/hyperswitch/pull/5176)) ([`bf9893e`](https://github.com/juspay/hyperswitch/commit/bf9893e2306a6d4525b0602c8242f77e2c4fec76))

    ### Bug Fixes

    - **router:** `override setup_future_usage` filed to on_session based on merchant config ([#5195](https://github.com/juspay/hyperswitch/pull/5195)) ([`52abda9`](https://github.com/juspay/hyperswitch/commit/52abda9bd17c6a4285df8a535f48e7a621fcabbe))
    - **user_auth_method:** Make id option in auth select ([#5213](https://github.com/juspay/hyperswitch/pull/5213)) ([`5478f70`](https://github.com/juspay/hyperswitch/commit/5478f70e3e0463ec53f8b4f652474dd7c790b6e1))

    ### Refactors

    - **cypress:** Error handling and add sync refunds in places where missing ([#5128](https://github.com/juspay/hyperswitch/pull/5128)) ([`ddfdc35`](https://github.com/juspay/hyperswitch/commit/ddfdc35f707f5a587adcddcda986f45cd80dd0ed))

    ### Documentation

    - Updated API - ref for payments ([#5172](https://github.com/juspay/hyperswitch/pull/5172)) ([`cf5c104`](https://github.com/juspay/hyperswitch/commit/cf5c1041b787ecf74519eb5077ebacd3b1beef67))

    **Full Changelog:** [`2024.07.04.0...2024.07.05.0`](https://github.com/juspay/hyperswitch/compare/2024.07.04.0...2024.07.05.0)

    - - -

    ## 2024.07.04.0

    ### Features

    - **pm_auth:** Added balance check for PM auth bank account ([#5054](https://github.com/juspay/hyperswitch/pull/5054)) ([`f513c8e`](https://github.com/juspay/hyperswitch/commit/f513c8e4daa95a6ceb89ce616e3d55058708fb2a))

    ### Refactors

    - **migrations:** Add commands to make file to run migrations for api v2 ([#5169](https://github.com/juspay/hyperswitch/pull/5169)) ([`ff23e2f`](https://github.com/juspay/hyperswitch/commit/ff23e2f7d3de77cbb03a837de20e1435d1632d68))
    - **payment_methods:** Add appropriate missing logs ([#5190](https://github.com/juspay/hyperswitch/pull/5190)) ([`e85407f`](https://github.com/juspay/hyperswitch/commit/e85407fc5344e983732077d4fdcae85ad59bfd10))

    **Full Changelog:** [`2024.07.03.0...2024.07.04.0`](https://github.com/juspay/hyperswitch/compare/2024.07.03.0...2024.07.04.0)

    - - -

    ## 2024.07.03.0

    ### Features

    - **router:**
      - Collect billing details from wallet connector based on the `collect_billing_details_from_wallet_connector` field ([#5065](https://github.com/juspay/hyperswitch/pull/5065)) ([`ee9190b`](https://github.com/juspay/hyperswitch/commit/ee9190bf4f29699a2878bc89d7a83cd77a3ce472))
      - Add refunds manual-update api ([#5094](https://github.com/juspay/hyperswitch/pull/5094)) ([`9bc7801`](https://github.com/juspay/hyperswitch/commit/9bc780151c8ff1874d971bf8c79ae53cb6c477d8))

    ### Bug Fixes

    - **auth_methods:** Add checks for duplicate `auth_method` in create API ([#5161](https://github.com/juspay/hyperswitch/pull/5161)) ([`045e974`](https://github.com/juspay/hyperswitch/commit/045e9742bd1d8985847eab47f6a38e1f750c09de))
    - **event:** Updated the ApiEventMetric ([#5126](https://github.com/juspay/hyperswitch/pull/5126)) ([`1bb2ae8`](https://github.com/juspay/hyperswitch/commit/1bb2ae8423786449e4d53ace08aa94f872cc73f2))
    - **router:**
      - [CYBS] make payment status optional ([#5165](https://github.com/juspay/hyperswitch/pull/5165)) ([`e3470a2`](https://github.com/juspay/hyperswitch/commit/e3470a240d84e2971c5194f0aa2022eae04c0943))
      - Update last used when the customer acceptance is passed in the recurring payment ([#5116](https://github.com/juspay/hyperswitch/pull/5116)) ([`b2e0caf`](https://github.com/juspay/hyperswitch/commit/b2e0caf6d9a33239f9819b077d3cd7dd444e60bd))
    - Realtime user analytics ([#5129](https://github.com/juspay/hyperswitch/pull/5129)) ([`5d86002`](https://github.com/juspay/hyperswitch/commit/5d86002ce7f182c9c3d478cd5eb6a43ce63f1398))

    ### Refactors

    - **payment_link:** Logs payment links logs coverage ([#4918](https://github.com/juspay/hyperswitch/pull/4918)) ([`618ec41`](https://github.com/juspay/hyperswitch/commit/618ec41aff0470347ab9818066b210c458cc2d43))
    - **router:** Changed payment method token TTL to api contract based config from const value ([#5115](https://github.com/juspay/hyperswitch/pull/5115)) ([`3bbdfb5`](https://github.com/juspay/hyperswitch/commit/3bbdfb5a1c76b9b0a1139e739a5e13867b98ca27))
    - Use hashmap deserializer for generic_link options ([#5157](https://github.com/juspay/hyperswitch/pull/5157)) ([`a343f69`](https://github.com/juspay/hyperswitch/commit/a343f69dc4889c37857d41cb7da1f23445ea7ccf))

    **Full Changelog:** [`2024.07.02.0...2024.07.03.0`](https://github.com/juspay/hyperswitch/compare/2024.07.02.0...2024.07.03.0)

    - - -

    ## 2024.07.02.0

    ### Features

    - **analytics:** Add v2 payment analytics (payment-intents analytics) ([#5150](https://github.com/juspay/hyperswitch/pull/5150)) ([`9fc525d`](https://github.com/juspay/hyperswitch/commit/9fc525d49849e160345902beecac01d3a2f4c70f))
    - **connector:** [Bambora Apac] Template for integration ([#5062](https://github.com/juspay/hyperswitch/pull/5062)) ([`1b89463`](https://github.com/juspay/hyperswitch/commit/1b8946321befb3a3a79c5fe2acf6b255b8930940))
    - **globalsearch:** Implement tag-based filters in global search ([#5151](https://github.com/juspay/hyperswitch/pull/5151)) ([`4314fcd`](https://github.com/juspay/hyperswitch/commit/4314fcd17309a1c0d82b1b65eb867f913b72fbd7))
    - **payment_link:** Add multiple custom css support in business level ([#5137](https://github.com/juspay/hyperswitch/pull/5137)) ([`ecc6c00`](https://github.com/juspay/hyperswitch/commit/ecc6c00d4aaa034f96eae76c64024d56bb5fa173))
    - **tls:** Add support for https in actix web ([#5089](https://github.com/juspay/hyperswitch/pull/5089)) ([`2688d24`](https://github.com/juspay/hyperswitch/commit/2688d24d4963550ff3efee363194446a3c75cc59))

    ### Bug Fixes

    - **connector:** [Paypal] dispute webhook deserialization failure ([#5111](https://github.com/juspay/hyperswitch/pull/5111)) ([`af2497b`](https://github.com/juspay/hyperswitch/commit/af2497b5012f048a4cf72b61712812bca534c17c))
    - **router:**
      - Mark retry payment as failure if `connector_tokenization` fails ([#5114](https://github.com/juspay/hyperswitch/pull/5114)) ([`ecb8caf`](https://github.com/juspay/hyperswitch/commit/ecb8cafaed5a29e8ab204992a2f35102d2add09f))
      - Rename the browser name header to `x-browser-name` ([#5162](https://github.com/juspay/hyperswitch/pull/5162)) ([`ff14e79`](https://github.com/juspay/hyperswitch/commit/ff14e79adf48a983855cf7abcc282bf556ecf2f9))

    ### Refactors

    - **connector:** Add amount conversion framework to iatapay along with amount conversion code to connector template ([#4866](https://github.com/juspay/hyperswitch/pull/4866)) ([`8a33bd5`](https://github.com/juspay/hyperswitch/commit/8a33bd5e7368b4e863cbc58c73702f48567d39dc))

    ### Miscellaneous Tasks

    - **ci:** Fix ci tests failing by removing them ([#5167](https://github.com/juspay/hyperswitch/pull/5167)) ([`4fbff39`](https://github.com/juspay/hyperswitch/commit/4fbff39906a57420cf5b8b4e1084bff1f82c070b))

    **Full Changelog:** [`2024.07.01.0...2024.07.02.0`](https://github.com/juspay/hyperswitch/compare/2024.07.01.0...2024.07.02.0)

    - - -

    ## 2024.07.01.0

    ### Features

    - **core:** Customer_details storage in payment_intent ([#5007](https://github.com/juspay/hyperswitch/pull/5007)) ([`bb9a971`](https://github.com/juspay/hyperswitch/commit/bb9a97154c19eeadfdf17428c18d2facebe1dd3a))
    - **cypress:** Add iatapay connector ([#5093](https://github.com/juspay/hyperswitch/pull/5093)) ([`f03dc7a`](https://github.com/juspay/hyperswitch/commit/f03dc7a1c9bc72f402a0e7be9830329c95a2338b))

    ### Bug Fixes

    - **connector:** [ADYEN] send `browser_info` for all the card and googlepay payments ([#5153](https://github.com/juspay/hyperswitch/pull/5153)) ([`a172cba`](https://github.com/juspay/hyperswitch/commit/a172cba5d3575e0648be65bae988f001408d671f))
    - **users:** Clear cookie and alter parsing for sso ([#5147](https://github.com/juspay/hyperswitch/pull/5147)) ([`6d9b37e`](https://github.com/juspay/hyperswitch/commit/6d9b37e8a2e91a0cf2e493dd48100bfeebadd926))

    ### Refactors

    - **connector:** Added amount framework to paypal, payouts and routing ([#4865](https://github.com/juspay/hyperswitch/pull/4865)) ([`b08ce22`](https://github.com/juspay/hyperswitch/commit/b08ce22108a5f64d33430806a8bea034c5ccb44a))
    - **hyperswitch_constraint_graph:** Removal of lifetime from the Constraint Graph framework ([#5132](https://github.com/juspay/hyperswitch/pull/5132)) ([`6df8f06`](https://github.com/juspay/hyperswitch/commit/6df8f0646bd05c689071d8e02a3cf993fe8912f5))

    ### Documentation

    - Api reference docs update for Payments - Create ([#4955](https://github.com/juspay/hyperswitch/pull/4955)) ([`f55cae2`](https://github.com/juspay/hyperswitch/commit/f55cae20af6977680b86275cd3de500079d274ee))

    ### Miscellaneous Tasks

    - **cards:** Add configuration option to change the decryption scheme locker ([#5140](https://github.com/juspay/hyperswitch/pull/5140)) ([`d2626fa`](https://github.com/juspay/hyperswitch/commit/d2626fa3fe4216504fd0df216eea8462c87cce07))
    - **euclid_wasm:** Make field domain optional wasm ([#5154](https://github.com/juspay/hyperswitch/pull/5154)) ([`910fcc8`](https://github.com/juspay/hyperswitch/commit/910fcc89e24b8accd59a5a30021837222f803fa9))
    - **postman:** Update Postman collection files ([`b4351f5`](https://github.com/juspay/hyperswitch/commit/b4351f50d6b59c190bbd4ae7d1d28097a14148e0))
    - Fix ui-test configs ([#5152](https://github.com/juspay/hyperswitch/pull/5152)) ([`760fd3b`](https://github.com/juspay/hyperswitch/commit/760fd3b566f7a898cf79d50e5bdb4629ed3eca5f))

    **Full Changelog:** [`2024.06.28.0...2024.07.01.0`](https://github.com/juspay/hyperswitch/compare/2024.06.28.0...2024.07.01.0)

    - - -

    ## 2024.06.28.0

    ### Features

    - **router:** Skip apple pay session call if the browser is not Safari ([#5136](https://github.com/juspay/hyperswitch/pull/5136)) ([`d4dba55`](https://github.com/juspay/hyperswitch/commit/d4dba55fedc37ba9d1d54d28456ca17851ab9881))

    ### Bug Fixes

    - **opensearch:** Show search results only if user has access permission to the index ([#5097](https://github.com/juspay/hyperswitch/pull/5097)) ([`9c49ded`](https://github.com/juspay/hyperswitch/commit/9c49ded104b81f1aefcc288e3ded64ebbd4d466f))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`aa1e8f2`](https://github.com/juspay/hyperswitch/commit/aa1e8f243f7e9e9e3b6e3f809fc404077af3057b))
    - Use generic phone numbers instead ([#5142](https://github.com/juspay/hyperswitch/pull/5142)) ([`57055ec`](https://github.com/juspay/hyperswitch/commit/57055ecab2300c2284d0e674a22247fa65776ed8))

    **Full Changelog:** [`2024.06.27.0...2024.06.28.0`](https://github.com/juspay/hyperswitch/compare/2024.06.27.0...2024.06.28.0)

    - - -

    ## 2024.06.27.0

    ### Features

    - **email:** Add `auth_id` in email types and send `auth_id` in email URLs ([#5120](https://github.com/juspay/hyperswitch/pull/5120)) ([`4ccd25d`](https://github.com/juspay/hyperswitch/commit/4ccd25d0dc0703f9ac9ff441bedc8a9ce4ce78c6))
    - **router:** Add payments manual-update api ([#5045](https://github.com/juspay/hyperswitch/pull/5045)) ([`ed021c1`](https://github.com/juspay/hyperswitch/commit/ed021c1d9961a2723c9b2fecf9f35ff16ef08294))
    - **users:**
      - Implemented openidconnect ([#5124](https://github.com/juspay/hyperswitch/pull/5124)) ([`ce7d0d4`](https://github.com/juspay/hyperswitch/commit/ce7d0d427d817eb4199f2f6ea8ea86a04bd98a26))
      - Add endpoint for terminate auth select ([#5135](https://github.com/juspay/hyperswitch/pull/5135)) ([`eb6afd6`](https://github.com/juspay/hyperswitch/commit/eb6afd66f29ecbe17a8487d514b54ddaf1893af3))
    - Realtime user analytics ([#5098](https://github.com/juspay/hyperswitch/pull/5098)) ([`cd5a1a3`](https://github.com/juspay/hyperswitch/commit/cd5a1a34c50d5249d17ec91998fb96cd19119b9d))

    ### Bug Fixes

    - **connector:** [BOA/CYBS] make risk information message optional ([#5107](https://github.com/juspay/hyperswitch/pull/5107)) ([`ffe90a4`](https://github.com/juspay/hyperswitch/commit/ffe90a41125a0eb1e8a858b336120e355fd3b69e))
    - **docs:** Open-api fix for payment response ([#5103](https://github.com/juspay/hyperswitch/pull/5103)) ([`2e1167a`](https://github.com/juspay/hyperswitch/commit/2e1167acbcc06022985ce761d2d4e624bbbc97c3))

    ### Refactors

    - **connector:**
      - Add amount framework to payme & Trustpay with googlePay, ApplePay for bluesnap, Noon & Trustpay ([#4833](https://github.com/juspay/hyperswitch/pull/4833)) ([`e69a7bd`](https://github.com/juspay/hyperswitch/commit/e69a7bda52784a7d7166f19e745bab6df72c7430))
      - Added amount conversion framework for cashtocode ([#4857](https://github.com/juspay/hyperswitch/pull/4857)) ([`86f4060`](https://github.com/juspay/hyperswitch/commit/86f4060d332b3515a92010287be32fe69508d451))
      - [AdyenPlatform]Throw 4xx instead of 5xx for source_balance_account ([#4990](https://github.com/juspay/hyperswitch/pull/4990)) ([`1c464ac`](https://github.com/juspay/hyperswitch/commit/1c464acc566fde23c68c4b4b30354f17e56acd80))

    **Full Changelog:** [`2024.06.25.1...2024.06.27.0`](https://github.com/juspay/hyperswitch/compare/2024.06.25.1...2024.06.27.0)

    - - -

    ## 2024.06.25.1

    ### Features

    - **router:** Updated `last_used_at` field for apple pay and google pay for CITs ([#5087](https://github.com/juspay/hyperswitch/pull/5087)) ([`7c639bf`](https://github.com/juspay/hyperswitch/commit/7c639bf878a96212c6e5c03e86a3787c2bc1e151))

    ### Bug Fixes

    - **payment_methods:** Use existing field value of `nick_name` in db if not sent during request ([#5105](https://github.com/juspay/hyperswitch/pull/5105)) ([`ea74f3e`](https://github.com/juspay/hyperswitch/commit/ea74f3e537aca44c42bd1e9c80eb7a1e220c295d))
    - **router:** Skip serialize if none for assurance_details_required in googlepay session response ([#5118](https://github.com/juspay/hyperswitch/pull/5118)) ([`ec8a393`](https://github.com/juspay/hyperswitch/commit/ec8a39339d692ceb080d08f3e83667441909bf62))

    ### Refactors

    - Separate DB queries and HTML creation for payout links ([#4967](https://github.com/juspay/hyperswitch/pull/4967)) ([`9e4b2d1`](https://github.com/juspay/hyperswitch/commit/9e4b2d1c11204b1c18bd97e586191b7518e6d91f))

    **Full Changelog:** [`2024.06.25.0...2024.06.25.1`](https://github.com/juspay/hyperswitch/compare/2024.06.25.0...2024.06.25.1)

    - - -

    ## 2024.06.25.0

    ### Features

    - **ci:** Add vector to handle logs pipeline ([#5021](https://github.com/juspay/hyperswitch/pull/5021)) ([`fed7b69`](https://github.com/juspay/hyperswitch/commit/fed7b697995b37bf3ef198121de571c6e338863c))
    - **router:** Add support for googlepay step up flow ([#2744](https://github.com/juspay/hyperswitch/pull/2744)) ([`ff84d78`](https://github.com/juspay/hyperswitch/commit/ff84d78c6512f70d761148274e97286f5cf021dd))
    - **users:** Decision manager flow changes for SSO ([#4995](https://github.com/juspay/hyperswitch/pull/4995)) ([`8ceaaa9`](https://github.com/juspay/hyperswitch/commit/8ceaaa9e3d95558a7252a9a986b39c8377426857))
    - Added kafka events for authentication create and update ([#4991](https://github.com/juspay/hyperswitch/pull/4991)) ([`10e9121`](https://github.com/juspay/hyperswitch/commit/10e9121341fe25d195f4c9a25dcc383c2ffd0c95))

    ### Bug Fixes

    - **access_token:** Use `merchant_connector_id` in access token ([#5106](https://github.com/juspay/hyperswitch/pull/5106)) ([`b7bf457`](https://github.com/juspay/hyperswitch/commit/b7bf457d0cdcc4d4947b5750a7982aca85d3a7e9))

    ### Refactors

    - **core:** Introduce an interface to switch between old and new connector integration implementations on the connectors ([#5013](https://github.com/juspay/hyperswitch/pull/5013)) ([`e658899`](https://github.com/juspay/hyperswitch/commit/e658899c1406225bb905ce4fb76e13fa3609666e))
    - **events:** Populate object identifiers in outgoing webhooks analytics events during retries ([#5067](https://github.com/juspay/hyperswitch/pull/5067)) ([`b878405`](https://github.com/juspay/hyperswitch/commit/b87840595d4bc325d37779512dc5504a8a613e5d))
    - [Fiserv] Remove Default Case Handling ([#4767](https://github.com/juspay/hyperswitch/pull/4767)) ([`9caabef`](https://github.com/juspay/hyperswitch/commit/9caabeff86dfb93b29d6f734e6724f4d69bdda4e))

    **Full Changelog:** [`2024.06.24.0...2024.06.25.0`](https://github.com/juspay/hyperswitch/compare/2024.06.24.0...2024.06.25.0)

    - - -

    ## 2024.06.24.0

    ### Features

    - **payment_methods:** Implement Process tracker workflow for Payment method Status update ([#4668](https://github.com/juspay/hyperswitch/pull/4668)) ([`5cde7ee`](https://github.com/juspay/hyperswitch/commit/5cde7ee0344d4068a232c96f60b53629b8c17f7f))
    - **users:** Setup user authentication methods schema and apis ([#4999](https://github.com/juspay/hyperswitch/pull/4999)) ([`2005d3d`](https://github.com/juspay/hyperswitch/commit/2005d3df9fc2e559ea65c57892ab940e38b9af50))

    ### Bug Fixes

    - **router:** Avoid considering pre-routing results during `perform_session_token_routing` ([#5076](https://github.com/juspay/hyperswitch/pull/5076)) ([`a71fe03`](https://github.com/juspay/hyperswitch/commit/a71fe033e7de75171d140506ff4d51a362c185f4))

    ### Refactors

    - **redis:** Spawn one subscriber thread for handling all the published messages to different channel ([#5064](https://github.com/juspay/hyperswitch/pull/5064)) ([`6a07e10`](https://github.com/juspay/hyperswitch/commit/6a07e10af379006c4643bb8f0a9cb2f46813ff8a))

    **Full Changelog:** [`2024.06.20.1...2024.06.24.0`](https://github.com/juspay/hyperswitch/compare/2024.06.20.1...2024.06.24.0)

    - - -

    ## 2024.06.20.1

    ### Features

    - **cypress:** Add 2 more payout connectors and bank transfer support for payout ([#4993](https://github.com/juspay/hyperswitch/pull/4993)) ([`45a908b`](https://github.com/juspay/hyperswitch/commit/45a908b4407db160b5f92b0bf84a9612cfaf44ef))

    ### Bug Fixes

    - **cypress:** Address cypress skipping tests ([#5046](https://github.com/juspay/hyperswitch/pull/5046)) ([`973ecbf`](https://github.com/juspay/hyperswitch/commit/973ecbf84ec62d05556ccd568992243e460f8b10))
    - **payment_methods:** Support last used for off session token payments ([#5039](https://github.com/juspay/hyperswitch/pull/5039)) ([`d98293a`](https://github.com/juspay/hyperswitch/commit/d98293ae9a01ccdcd62466d9c64c6b6f492f227b))

    ### Refactors

    - **connector:** [Mifinity]dynamic fields for mifinity ([#5056](https://github.com/juspay/hyperswitch/pull/5056)) ([`6f58b4e`](https://github.com/juspay/hyperswitch/commit/6f58b4efbd111b2d0b8ef33cbcd377c434f181e2))
    - **payment_method:** [Klarna] store and populate payment_type for klarna_sdk Paylater in response ([#4956](https://github.com/juspay/hyperswitch/pull/4956)) ([`c9bfb89`](https://github.com/juspay/hyperswitch/commit/c9bfb89f7eb03d73d5af3fe2bcd7632347ec17b4))
    - Introduce ConnectorIntegrationNew and add default implementation for each Connector ([#4989](https://github.com/juspay/hyperswitch/pull/4989)) ([`84bed81`](https://github.com/juspay/hyperswitch/commit/84bed81defce0671274241318204029a2bb30a12))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`d546415`](https://github.com/juspay/hyperswitch/commit/d546415c26c2727c22ad0e46dba1c0235501cd2e))

    **Full Changelog:** [`2024.06.20.0...2024.06.20.1`](https://github.com/juspay/hyperswitch/compare/2024.06.20.0...2024.06.20.1)

    - - -

    ## 2024.06.20.0

    ### Features

    - **core:** Add logger for sessions call failure ([#5036](https://github.com/juspay/hyperswitch/pull/5036)) ([`397d221`](https://github.com/juspay/hyperswitch/commit/397d2212405d63dab17272f8c26e4b3a5fc47aa8))
    - **router:** Add payment method type duplication check for `google_pay` ([#5023](https://github.com/juspay/hyperswitch/pull/5023)) ([`7d46afd`](https://github.com/juspay/hyperswitch/commit/7d46afd9852a793befa5321835ae9413fafb3fd9))

    ### Bug Fixes

    - **connector:** Add local bank redirect type in compatibility layer, default the country to AT for Local Bank Redirect and add creds_identifier in access token ([#5038](https://github.com/juspay/hyperswitch/pull/5038)) ([`655b81d`](https://github.com/juspay/hyperswitch/commit/655b81d69743e64fb982a1e222d7a102a4b3459f))
    - **events:** Correct parsing of API events with user event_type for Clickhouse ([#5022](https://github.com/juspay/hyperswitch/pull/5022)) ([`2106a27`](https://github.com/juspay/hyperswitch/commit/2106a27f4059f7d562ae4c6d0d69cc3acbb43eca))
    - **logging:** Fix stack overflow on recording restricted keys ([#4423](https://github.com/juspay/hyperswitch/pull/4423)) ([`7208ca4`](https://github.com/juspay/hyperswitch/commit/7208ca4db4876015c5beadeacdcbaeeaba3b56e9))

    ### Refactors

    - **connector:** Add amount conversion framework for noon ([#4843](https://github.com/juspay/hyperswitch/pull/4843)) ([`8c7e1a3`](https://github.com/juspay/hyperswitch/commit/8c7e1a3b8bbb7ad7fef460659e9daaa13d71521b))
    - **core:** Reverts the payment method list filtering using constraint graph ([#5044](https://github.com/juspay/hyperswitch/pull/5044)) ([`e486641`](https://github.com/juspay/hyperswitch/commit/e486641c97e0a00835ed49257c2665293591901c))
    - **storage:** Remove `id` from payment intent, attempt and remove datamodel ext from payment intent ([#4923](https://github.com/juspay/hyperswitch/pull/4923)) ([`bec51a3`](https://github.com/juspay/hyperswitch/commit/bec51a35574fcee2473465dc30c8f0f85de18145))

    **Full Changelog:** [`2024.06.19.0...2024.06.20.0`](https://github.com/juspay/hyperswitch/compare/2024.06.19.0...2024.06.20.0)

    - - -

    ## 2024.06.19.0

    ### Features

    - **multitenancy:** Add tenant_id as a field for data pipeline and support individual database for clickhouse ([#4867](https://github.com/juspay/hyperswitch/pull/4867)) ([`776ddb8`](https://github.com/juspay/hyperswitch/commit/776ddb8c1afdd2f9f14980629a0a1d251df41fbc))
    - **router:** Override the `setup_future_usage` to `on_session` based on the merchant config ([#5016](https://github.com/juspay/hyperswitch/pull/5016)) ([`a7ad790`](https://github.com/juspay/hyperswitch/commit/a7ad7906d7e84fa59df3cfffd16dea8db300e675))

    ### Bug Fixes

    - **opensearch:** Handle index not present errors in search api ([#4965](https://github.com/juspay/hyperswitch/pull/4965)) ([`ae1edb0`](https://github.com/juspay/hyperswitch/commit/ae1edb061d38effeb12fd122b94e45fb768dd508))
    - **payment_methods:** Populate card fields while saving card again during metadata change condition ([#5019](https://github.com/juspay/hyperswitch/pull/5019)) ([`010e6fe`](https://github.com/juspay/hyperswitch/commit/010e6fe3eef9398224b6e96b2469ac350d5e13c0))

    ### Refactors

    - Move trait ConnectorIntegration to crate hyperswitch_interfaces ([#4946](https://github.com/juspay/hyperswitch/pull/4946)) ([`cbe3a6d`](https://github.com/juspay/hyperswitch/commit/cbe3a6d43e50ed5f13ecc5738c6a9ab2827b0a3c))
    - Add basic counter metrics for IMC ([#5006](https://github.com/juspay/hyperswitch/pull/5006)) ([`d2092dc`](https://github.com/juspay/hyperswitch/commit/d2092dcb0a5ccddf8248ffb33fae91280268610e))

    ### Miscellaneous Tasks

    - **docker-compose:** Pass correct configuration values for running SDK demo app ([#5012](https://github.com/juspay/hyperswitch/pull/5012)) ([`91c8af6`](https://github.com/juspay/hyperswitch/commit/91c8af6ef6d74cc3e0cb55c5f26ca1eae6907709))

    **Full Changelog:** [`2024.06.17.0...2024.06.19.0`](https://github.com/juspay/hyperswitch/compare/2024.06.17.0...2024.06.19.0)

    - - -

    ## 2024.06.17.0

    ### Features

    - **connector:** Added template code for datatrans ([#4890](https://github.com/juspay/hyperswitch/pull/4890)) ([`6582729`](https://github.com/juspay/hyperswitch/commit/658272904897f7cbc4d9a349278712f35a8d3e96))

    ### Bug Fixes

    - **users:** Magic link is not expiring after one usage ([#4971](https://github.com/juspay/hyperswitch/pull/4971)) ([`2852a3b`](https://github.com/juspay/hyperswitch/commit/2852a3ba156e3e2bd89d0a116990134268e7bee8))

    ### Miscellaneous Tasks

    - **process_tracker:** Use `const` instead of `String` for `business_status` ([#4849](https://github.com/juspay/hyperswitch/pull/4849)) ([`40dfad8`](https://github.com/juspay/hyperswitch/commit/40dfad89ac6e70a15321b3711ee4c05c3c2ff201))
    - Introduce RouterDataNew and FlowSpecificData models ([#4961](https://github.com/juspay/hyperswitch/pull/4961)) ([`656fb3e`](https://github.com/juspay/hyperswitch/commit/656fb3e09a159d1cf67b2f494673bc8ded5a7ae8))
    - Address Rust 1.79 clippy lints ([#5003](https://github.com/juspay/hyperswitch/pull/5003)) ([`edf919e`](https://github.com/juspay/hyperswitch/commit/edf919e142736a28588b0f7e40ce724ad0065777))

    **Full Changelog:** [`2024.06.14.0...2024.06.17.0`](https://github.com/juspay/hyperswitch/compare/2024.06.14.0...2024.06.17.0)

    - - -

    ## 2024.06.14.0

    ### Features

    - **connectors:** [Iatapay] add payment methods ([#4968](https://github.com/juspay/hyperswitch/pull/4968)) ([`0e059e7`](https://github.com/juspay/hyperswitch/commit/0e059e7d847b0c15ed120c72bb4902ac60e6f955))
    - **payment_methods:** Use Ephemeral auth for pm list and pm delete ([#4996](https://github.com/juspay/hyperswitch/pull/4996)) ([`ad7886a`](https://github.com/juspay/hyperswitch/commit/ad7886a6ff636f99e62601483c907f5c90954eb4))
    - **router:** Include the pre-routing connectors in Apple Pay retries ([#4952](https://github.com/juspay/hyperswitch/pull/4952)) ([`fb83661`](https://github.com/juspay/hyperswitch/commit/fb836618a66f57fca5c78aa1c2a255792ab1dfb4))

    ### Bug Fixes

    - **cypress:** Add `jwt_token` and `cookie` for routing test ([#4953](https://github.com/juspay/hyperswitch/pull/4953)) ([`0a86cdb`](https://github.com/juspay/hyperswitch/commit/0a86cdb5060679e9609c2db6d2f82b8edda1b374))

    ### Refactors

    - **core:** Make country aggregator nodes weak for list payment methods ([#4994](https://github.com/juspay/hyperswitch/pull/4994)) ([`18493bd`](https://github.com/juspay/hyperswitch/commit/18493bd8f03b933b15bc3c40b3501222587fc59f))

    **Full Changelog:** [`2024.06.13.0...2024.06.14.0`](https://github.com/juspay/hyperswitch/compare/2024.06.13.0...2024.06.14.0)

    - - -

    ## 2024.06.13.0

    ### Features

    - **connector:** [BOA/CYB] Make billTo fields optional ([#4951](https://github.com/juspay/hyperswitch/pull/4951)) ([`4651584`](https://github.com/juspay/hyperswitch/commit/4651584ecc25e40a285b3544315901145d8c6b4b))
    - **events:** Add audit events payment capture ([#4913](https://github.com/juspay/hyperswitch/pull/4913)) ([`40a996e`](https://github.com/juspay/hyperswitch/commit/40a996e84c1d9ccc55b62c561cee443508e9e60f))
    - **payouts:** Make payout_type optional in payouts table ([#4954](https://github.com/juspay/hyperswitch/pull/4954)) ([`b847606`](https://github.com/juspay/hyperswitch/commit/b847606d665388fba898425b31dd5f207f60a56e))

    ### Bug Fixes

    - **core:** Fix the multitenancy prefix in routing cache ([#4963](https://github.com/juspay/hyperswitch/pull/4963)) ([`b420522`](https://github.com/juspay/hyperswitch/commit/b42052269455051fe15163217ee83d80a1470f84))

    ### Refactors

    - **connector:**
      - Add amount conversion framework to bluesnap ([#4825](https://github.com/juspay/hyperswitch/pull/4825)) ([`fb0a7aa`](https://github.com/juspay/hyperswitch/commit/fb0a7aa556212af08f47ddc3c62bfbc918e3bf01))
      - [Mifinity]Move destination_account_number from pmd to Mifinity Metadata ([#4962](https://github.com/juspay/hyperswitch/pull/4962)) ([`5b21951`](https://github.com/juspay/hyperswitch/commit/5b21951102c54cee4b6d1d74ed6a7e7e9f3e192d))
    - **payment_methods:** Enable deletion of default Payment Methods ([#4942](https://github.com/juspay/hyperswitch/pull/4942)) ([`cf3d039`](https://github.com/juspay/hyperswitch/commit/cf3d039efdbaa95ae9e75de60b3cea67e21d11db))

    ### Miscellaneous Tasks

    - **env:** Revert typo in integ env ([#4958](https://github.com/juspay/hyperswitch/pull/4958)) ([`271b977`](https://github.com/juspay/hyperswitch/commit/271b977aa286e80cb09c6692c4cd470e3c6c741c))

    **Full Changelog:** [`2024.06.12.0...2024.06.13.0`](https://github.com/juspay/hyperswitch/compare/2024.06.12.0...2024.06.13.0)

    - - -

    ## 2024.06.12.0

    ### Features

    - **connector:**
      - [Multisafepay] Add support for Ideal and Giropay ([#4398](https://github.com/juspay/hyperswitch/pull/4398)) ([`b01bbba`](https://github.com/juspay/hyperswitch/commit/b01bbba6ff9ea9acec6a83ad0dde327a377d9f6e))
      - Implement auth and post auth flows for gpayments ([#4746](https://github.com/juspay/hyperswitch/pull/4746)) ([`d93f65f`](https://github.com/juspay/hyperswitch/commit/d93f65fd95a73b75d93290ac23ea4f73f22e6a7e))
    - **metrics:** Add support for gauge metrics and include IMC metrics ([#4939](https://github.com/juspay/hyperswitch/pull/4939)) ([`42cd769`](https://github.com/juspay/hyperswitch/commit/42cd769407f4a30e50d5b9826677a4dd310d97f4))

    ### Bug Fixes

    - Add validation for connector authentication type during mca create and update operation ([#4932](https://github.com/juspay/hyperswitch/pull/4932)) ([`9f2476b`](https://github.com/juspay/hyperswitch/commit/9f2476b99a06e18f1a9a3f5d6d17f2659361616d))

    ### Refactors

    - **conditional_configs:** Refactor conditional_configs to use Moka Cache instead of Static Cache ([#4814](https://github.com/juspay/hyperswitch/pull/4814)) ([`4d0c893`](https://github.com/juspay/hyperswitch/commit/4d0c89362a598dff87ec98b3e68d425cdfeef566))
    - **connector:**
      - Changed amount to minor Unit for stripe ([#4786](https://github.com/juspay/hyperswitch/pull/4786)) ([`b705757`](https://github.com/juspay/hyperswitch/commit/b705757be37a9803b964ef94d04c664c0f1e102d))
      - [Mifinity] Add dynamic fields for Mifinity Wallet ([#4943](https://github.com/juspay/hyperswitch/pull/4943)) ([`a949676`](https://github.com/juspay/hyperswitch/commit/a949676f8b9cdaac1975004e9984052cf5c3985e))
    - **cypress:** Fix payouts not running ([#4904](https://github.com/juspay/hyperswitch/pull/4904)) ([`bbcf034`](https://github.com/juspay/hyperswitch/commit/bbcf0340cac7b6ef854d6a99a370f948394cd09c))
    - Wrap the encryption and file storage interface client in appstate with `Arc` as opposed to `Box` ([#4949](https://github.com/juspay/hyperswitch/pull/4949)) ([`88cf904`](https://github.com/juspay/hyperswitch/commit/88cf904f5b01d890c25ff7fe22d25c634ec5a785))

    ### Miscellaneous Tasks

    - **euclid_wasm:** Update apple pay metadata ([#4930](https://github.com/juspay/hyperswitch/pull/4930)) ([`7b293ff`](https://github.com/juspay/hyperswitch/commit/7b293ff785e2cdc323eae13c1342d9e65067402f))

    **Full Changelog:** [`2024.06.11.0...2024.06.12.0`](https://github.com/juspay/hyperswitch/compare/2024.06.11.0...2024.06.12.0)

    - - -

    ## 2024.06.11.0

    ### Features

    - **events:** Add audit events payment confirm ([#4763](https://github.com/juspay/hyperswitch/pull/4763)) ([`eb0101f`](https://github.com/juspay/hyperswitch/commit/eb0101fa7d617afb226cd024881b53dcd080d129))

    ### Bug Fixes

    - **multitenancy:** Remove tenant id from redis stream key of kafkaStore ([#4916](https://github.com/juspay/hyperswitch/pull/4916)) ([`9c7dcbe`](https://github.com/juspay/hyperswitch/commit/9c7dcbe1a042f92dbdd74ec138b56e09fd604a27))
    - **payments:** Populate payment method data in payments list ([#4919](https://github.com/juspay/hyperswitch/pull/4919)) ([`7085a46`](https://github.com/juspay/hyperswitch/commit/7085a46271791ca3f1c7b86afa7c8b199b93c0cd))

    ### Refactors

    - **business_profile:** Add `is_connector_agnostic_mit_enabled` in the business profile APIs ([#4925](https://github.com/juspay/hyperswitch/pull/4925)) ([`894560f`](https://github.com/juspay/hyperswitch/commit/894560f07bbc820152941ea8ad4005dbc9fb3477))
    - **connector:** [CRYPTOPAY] amount conversion framework added ([#4928](https://github.com/juspay/hyperswitch/pull/4928)) ([`adb9b11`](https://github.com/juspay/hyperswitch/commit/adb9b11f69ee4ab2f79af83aa5124b994840d9a0))
    - **users:** Make password nullable in `users` table ([#4902](https://github.com/juspay/hyperswitch/pull/4902)) ([`e3e31f3`](https://github.com/juspay/hyperswitch/commit/e3e31f392bc40b5d153d1f4dac6f91decd65b723))

    **Full Changelog:** [`2024.06.10.0...2024.06.11.0`](https://github.com/juspay/hyperswitch/compare/2024.06.10.0...2024.06.11.0)

    - - -

    ## 2024.06.10.0

    ### Features

    - **Cypress:** Add routing test ([#4768](https://github.com/juspay/hyperswitch/pull/4768)) ([`39d46fd`](https://github.com/juspay/hyperswitch/commit/39d46fd0156c389ebddf2564d9d97d5ceacd8372))
    - **connector:**
      - [BOA] Handle refund status 201 ([#4908](https://github.com/juspay/hyperswitch/pull/4908)) ([`13fa7d5`](https://github.com/juspay/hyperswitch/commit/13fa7d5c56d53ca1dc9ec9425892f561221e08ec))
      - [BOA/CYB] Make state,zip optional for Non US CA Txns ([#4915](https://github.com/juspay/hyperswitch/pull/4915)) ([`2f12cca`](https://github.com/juspay/hyperswitch/commit/2f12cca7ae5a4875b50ca5ff5068500b5004eb6f))

    ### Bug Fixes

    - **payment_methods:** Filter the apple pay retryable connectors for a specific business profile with default fallback configuration ([#4794](https://github.com/juspay/hyperswitch/pull/4794)) ([`d784fcb`](https://github.com/juspay/hyperswitch/commit/d784fcb5e65060eb35424448b4762f09f83d532b))

    ### Refactors

    - **connector:** Convert init payment flow to preprocessing flow for shift4 ([#4884](https://github.com/juspay/hyperswitch/pull/4884)) ([`5b92371`](https://github.com/juspay/hyperswitch/commit/5b92371a734a84777b67f1e72e5c75e48e9a194e))
    - **openapi:** Move openapi to a separate folder ([#4859](https://github.com/juspay/hyperswitch/pull/4859)) ([`0510532`](https://github.com/juspay/hyperswitch/commit/05105321caceb14f99f0ec0f8ccefd9db9b02bb6))
    - **payout:** Move payout quote call to payout core from execute_pretasks ([#4900](https://github.com/juspay/hyperswitch/pull/4900)) ([`d0fd709`](https://github.com/juspay/hyperswitch/commit/d0fd7095cd4a433aa7eb51258303ef45008e28de))

    **Full Changelog:** [`2024.06.07.0...2024.06.10.0`](https://github.com/juspay/hyperswitch/compare/2024.06.07.0...2024.06.10.0)

    - - -

    ## 2024.06.07.0

    ### Features

    - **connector:** [MIFINITY] Implement payment flows and Mifinity payment method ([#4592](https://github.com/juspay/hyperswitch/pull/4592)) ([`6750be5`](https://github.com/juspay/hyperswitch/commit/6750be5aeecfa8c3805cf2eac49e6122a8eb91e1))
    - **events:** Add metadata info to events ([#4875](https://github.com/juspay/hyperswitch/pull/4875)) ([`c9dbb56`](https://github.com/juspay/hyperswitch/commit/c9dbb567ab1a633aef6d4fd8bace7250ed638747))
    - **router:** Add `acquirer_country_code` in acquirer_details and send it in netcetera authentication flow ([#4835](https://github.com/juspay/hyperswitch/pull/4835)) ([`3077421`](https://github.com/juspay/hyperswitch/commit/3077421cbde335faec961fb6d751078e87dcf1ac))

    ### Bug Fixes

    - **connectors:** [BOA/CYBS] make avs code optional ([#4898](https://github.com/juspay/hyperswitch/pull/4898)) ([`3d9ecd0`](https://github.com/juspay/hyperswitch/commit/3d9ecd09383916fa9ac824e5ebf9052f6862758d))

    ### Refactors

    - **connector:** Convert init payment flow to preprocessing flow for nuvei ([#4878](https://github.com/juspay/hyperswitch/pull/4878)) ([`e7acaa5`](https://github.com/juspay/hyperswitch/commit/e7acaa5716e93a7ebcd497fe18bb3748e04e890c))
    - **outgoing_webhooks:** Raise errors in the analytics pipeline in case of API client errors or non-2xx responses ([#4894](https://github.com/juspay/hyperswitch/pull/4894)) ([`9da9202`](https://github.com/juspay/hyperswitch/commit/9da92027ef82f96140ee6663733c19ac927e3775))

    ### Miscellaneous Tasks

    - **config:** [MIFINITY] add configs for Mifinity in WASM ([#4895](https://github.com/juspay/hyperswitch/pull/4895)) ([`b4dbe84`](https://github.com/juspay/hyperswitch/commit/b4dbe841f82b1d3bbbd70926fa46c03270b5599b))

    **Full Changelog:** [`2024.06.06.1...2024.06.07.0`](https://github.com/juspay/hyperswitch/compare/2024.06.06.1...2024.06.07.0)

    - - -

    ## 2024.06.06.1

    ### Features

    - **router:** Add an api to migrate the apple pay certificates from connector metadata to `connector_wallets_details` column in merchant connector account ([#4790](https://github.com/juspay/hyperswitch/pull/4790)) ([`7a94237`](https://github.com/juspay/hyperswitch/commit/7a9423759e79167c4093c3482ea56f619cf95635))

    ### Refactors

    - **webhooks:** Extract incoming and outgoing webhooks into separate modules ([#4870](https://github.com/juspay/hyperswitch/pull/4870)) ([`b1cb053`](https://github.com/juspay/hyperswitch/commit/b1cb053a55e9ce4d78f7770b53e39700311d9cd4))

    **Full Changelog:** [`2024.06.06.0...2024.06.06.1`](https://github.com/juspay/hyperswitch/compare/2024.06.06.0...2024.06.06.1)

    - - -

    ## 2024.06.06.0

    ### Features

    - **connector:** Add payouts integration for AdyenPlatform ([#4874](https://github.com/juspay/hyperswitch/pull/4874)) ([`32cf06c`](https://github.com/juspay/hyperswitch/commit/32cf06c73611554d263d9bb44d7dbe940d56dd59))
    - **core:** Create Payout Webhook Flow ([#4696](https://github.com/juspay/hyperswitch/pull/4696)) ([`a3183a0`](https://github.com/juspay/hyperswitch/commit/a3183a0c5ba75c9ebf2335b81f7e4ccadd87e7d2))
    - **multitenancy:** Move users and tenants to global schema ([#4781](https://github.com/juspay/hyperswitch/pull/4781)) ([`c5e28f2`](https://github.com/juspay/hyperswitch/commit/c5e28f2670d51bf6529eb729167c97ad301217ef))

    ### Bug Fixes

    - **connector:**
      - [ZSL] capture connector transaction ID ([#4863](https://github.com/juspay/hyperswitch/pull/4863)) ([`f39c420`](https://github.com/juspay/hyperswitch/commit/f39c420623bd05147aeb92ed255f84d74e9370cd))
      - [Adyen]add configs for afterpay adyen ([#4885](https://github.com/juspay/hyperswitch/pull/4885)) ([`a8b57ea`](https://github.com/juspay/hyperswitch/commit/a8b57eaf2318d43ee2533622de94123af593c4b6))
    - **users:** Populate correct `org_id` for Internal Signup ([#4888](https://github.com/juspay/hyperswitch/pull/4888)) ([`76ec5e1`](https://github.com/juspay/hyperswitch/commit/76ec5e1e02380efc86cae93923f2a7b2bd0d58a0))

    ### Refactors

    - **business_profile:** Add `collect_shipping_details_from_wallet_connector` in the business profile response ([#4892](https://github.com/juspay/hyperswitch/pull/4892)) ([`377d6ea`](https://github.com/juspay/hyperswitch/commit/377d6eacd308aca7048c7af071e0d0f121475888))
    - **connector:**
      - Move AuthorizeSessionToken flow to core from execute_pretasks for nuvei and square ([#4854](https://github.com/juspay/hyperswitch/pull/4854)) ([`32f0fae`](https://github.com/juspay/hyperswitch/commit/32f0fae27de6bd0ab2a8e6de3b93c97205e14151))
      - [BOA/CYBS] add customer token for mandates and refactor psync ([#4815](https://github.com/juspay/hyperswitch/pull/4815)) ([`3d53fd0`](https://github.com/juspay/hyperswitch/commit/3d53fd018a2b14465bf3cc1557a483e98da07f9b))
      - [KLARNA] Add dynamic fields for klarna payment method ([#4891](https://github.com/juspay/hyperswitch/pull/4891)) ([`dae1413`](https://github.com/juspay/hyperswitch/commit/dae14139604b52e11f84c1341bfcb2e58c62a884))
    - **core:** Inclusion of constraint graph for merchant Payment Method list ([#4845](https://github.com/juspay/hyperswitch/pull/4845)) ([`4df84e9`](https://github.com/juspay/hyperswitch/commit/4df84e913f5724491c948c283a022931c617f46f))

    ### Miscellaneous Tasks

    - **eulid_wasm:** Allow merchant to select different paypal paymentmenthod type ([#4882](https://github.com/juspay/hyperswitch/pull/4882)) ([`326b6b5`](https://github.com/juspay/hyperswitch/commit/326b6b52324ae60128a1b1fbcff85ab3b99a500a))
    - **users:** Email templates updated ([#4562](https://github.com/juspay/hyperswitch/pull/4562)) ([`7ab65ac`](https://github.com/juspay/hyperswitch/commit/7ab65ac8834f47c4448b64899ce3e3656132fb63))

    **Full Changelog:** [`2024.06.05.0...2024.06.06.0`](https://github.com/juspay/hyperswitch/compare/2024.06.05.0...2024.06.06.0)

    - - -

    ## 2024.06.05.0

    ### Features

    - **auth:** Create and use `SinglePurposeOrLoginTokenAuth` ([#4830](https://github.com/juspay/hyperswitch/pull/4830)) ([`5414485`](https://github.com/juspay/hyperswitch/commit/5414485866989c205830feec8ff79baecc834950))
    - **connector:** [CRYPTOPAY] Make payment_method_data.crypto.network as enum ([#4853](https://github.com/juspay/hyperswitch/pull/4853)) ([`1eaba9a`](https://github.com/juspay/hyperswitch/commit/1eaba9a10b11a4f1d540e0a848a798c81e3f6fd1))
    - **cypress:** Add service level testing for Payouts ([#4744](https://github.com/juspay/hyperswitch/pull/4744)) ([`1d36798`](https://github.com/juspay/hyperswitch/commit/1d36798399c118f7cb7af93935123634e1afd6a0))
    - **router:** Add `request_external_three_ds_authentication` flag in payment_method_list_response ([#4864](https://github.com/juspay/hyperswitch/pull/4864)) ([`fcf5297`](https://github.com/juspay/hyperswitch/commit/fcf52973f49e091cfbf4390e70cdfe883b15bf3b))

    ### Bug Fixes

    - **cypress:** Fix `redirectionHandler` from failing to compile ([#4846](https://github.com/juspay/hyperswitch/pull/4846)) ([`901b88a`](https://github.com/juspay/hyperswitch/commit/901b88ab8065459cf9f9d8b2ac27f378449afc4a))

    ### Refactors

    - **api_models:** Rename Card struct for payouts to avoid overrides in auto generated open API spec ([#4861](https://github.com/juspay/hyperswitch/pull/4861)) ([`7f75f94`](https://github.com/juspay/hyperswitch/commit/7f75f941c18e5c1ce113a6e59f91a47e8302838d))
    - **connector:**
      - [Adyen] handle redirection error response ([#4862](https://github.com/juspay/hyperswitch/pull/4862)) ([`8096d5e`](https://github.com/juspay/hyperswitch/commit/8096d5e577d892b3cdb7854dd100c3c8bab955d6))
      - [Klarna] Add support for Klarna Optional Shipping Address ([#4876](https://github.com/juspay/hyperswitch/pull/4876)) ([`3509b45`](https://github.com/juspay/hyperswitch/commit/3509b45e1b855dce4561beb5cded4ba490be6f8c))

    ### Miscellaneous Tasks

    - **euclid_wasm:** Paypal metadata ([#4868](https://github.com/juspay/hyperswitch/pull/4868)) ([`d413e1a`](https://github.com/juspay/hyperswitch/commit/d413e1a8a5105a51f1909e160cda1c3648713926))

    **Full Changelog:** [`2024.06.04.1...2024.06.05.0`](https://github.com/juspay/hyperswitch/compare/2024.06.04.1...2024.06.05.0)

    - - -

    ## 2024.06.04.1

    ### Bug Fixes

    - **connector:** [Adyen]add required fields for afterpay clearpay ([#4858](https://github.com/juspay/hyperswitch/pull/4858)) ([`ba0a1e9`](https://github.com/juspay/hyperswitch/commit/ba0a1e95b72c0acf5bde81d424aa8fe220c40a22))

    **Full Changelog:** [`2024.06.04.0...2024.06.04.1`](https://github.com/juspay/hyperswitch/compare/2024.06.04.0...2024.06.04.1)

    - - -

    ## 2024.06.04.0

    ### Features

    - **connector:** [AUTHORIZEDOTNET] Support payment_method_id in recurring mandate payment ([#4841](https://github.com/juspay/hyperswitch/pull/4841)) ([`a1788b8`](https://github.com/juspay/hyperswitch/commit/a1788b8da942f0e32a80b37eac4eecece2bef77d))
    - **consolidated-kafka-events:** Add consolidated kafka payment events ([#4798](https://github.com/juspay/hyperswitch/pull/4798)) ([`ccee1a9`](https://github.com/juspay/hyperswitch/commit/ccee1a9ce9e860bfa04e74329fb47fd73f010b23))
    - **multitenancy:** Add support for multitenancy and handle the same in router, producer, consumer, drainer and analytics ([#4630](https://github.com/juspay/hyperswitch/pull/4630)) ([`15d6c3e`](https://github.com/juspay/hyperswitch/commit/15d6c3e846a77dec6b6a5165d86044a9b9fd52f1))
    - **router:** Send `three_ds_requestor_url` in authentication_response for external 3ds flow ([#4828](https://github.com/juspay/hyperswitch/pull/4828)) ([`67f017f`](https://github.com/juspay/hyperswitch/commit/67f017f6f035b102ce7a0102b157a884ce9d4109))
    - **users:** Create config for TOTP Issuer ([#4776](https://github.com/juspay/hyperswitch/pull/4776)) ([`0cbb292`](https://github.com/juspay/hyperswitch/commit/0cbb2928bd054cb8e98c3811f397a837a8887486))

    ### Bug Fixes

    - **connector:** Make few fields optional in struct NetceteraErrorDetails ([#4827](https://github.com/juspay/hyperswitch/pull/4827)) ([`69b2f76`](https://github.com/juspay/hyperswitch/commit/69b2f76be7a2c0deba2c069a87c10a33253e2216))
    - Include client_version and client_source in retried payments ([#4826](https://github.com/juspay/hyperswitch/pull/4826)) ([`fa5f5a4`](https://github.com/juspay/hyperswitch/commit/fa5f5a4eddecd072f974738d2168cd0b7c277d2e))

    ### Refactors

    - **connector:**
      - [Klarna] Add shipping Address in Klarna Session and Payment Request ([#4836](https://github.com/juspay/hyperswitch/pull/4836)) ([`8650077`](https://github.com/juspay/hyperswitch/commit/865007717c5c7e617ca1b447ea5f9bb3d274cac3))
      - Airwallex convert init payment to preprocessing ([#4842](https://github.com/juspay/hyperswitch/pull/4842)) ([`e5da133`](https://github.com/juspay/hyperswitch/commit/e5da133fe00b5736dc3c55bf4ee86fa77158dbe7))
    - **users:** Changes for Home and Signout APIs for TOTP Redis flows ([#4851](https://github.com/juspay/hyperswitch/pull/4851)) ([`d242850`](https://github.com/juspay/hyperswitch/commit/d242850b63173f314fb259451139464f09e0a9e9))

    ### Miscellaneous Tasks

    - **cypress:** Remove logs that expose `globalState` ([#4844](https://github.com/juspay/hyperswitch/pull/4844)) ([`d84e624`](https://github.com/juspay/hyperswitch/commit/d84e62441f39c165af7dc1c8d893344ff85c1711))

    **Full Changelog:** [`2024.05.31.1...2024.06.04.0`](https://github.com/juspay/hyperswitch/compare/2024.05.31.1...2024.06.04.0)

    - - -

    ## 2024.05.31.1

    ### Features

    - **cypress:** Add trustpay, adyen bank redirects and corresponding refactor ([#4766](https://github.com/juspay/hyperswitch/pull/4766)) ([`48dac12`](https://github.com/juspay/hyperswitch/commit/48dac12cedc7f11b76c6a9ef8ba4ce04ae2456bf))

    ### Refactors

    - **core:** Reverts Inclusion of constraint graph for merchant Payment Method list ([#4839](https://github.com/juspay/hyperswitch/pull/4839)) ([`f74b9b6`](https://github.com/juspay/hyperswitch/commit/f74b9b622e5565a00bf9ee8223c64a3def37b776))
    - **first_name:** Check if first_name is sent as empty string ([#4832](https://github.com/juspay/hyperswitch/pull/4832)) ([`5cb84f6`](https://github.com/juspay/hyperswitch/commit/5cb84f66e4c59f6ffbd12bf4e91ab0152ac1c2c5))

    ### Miscellaneous Tasks

    - **euclid_wasm:** Update paypal payment experience ([#4811](https://github.com/juspay/hyperswitch/pull/4811)) ([`121b611`](https://github.com/juspay/hyperswitch/commit/121b61123f31db9d94888fa708532cdabca4bbc8))
    - Enable `clippy::large_futures` lint ([#4822](https://github.com/juspay/hyperswitch/pull/4822)) ([`d2d317c`](https://github.com/juspay/hyperswitch/commit/d2d317ce61c0c00ca38af9774bd1b45247d30c82))

    **Full Changelog:** [`2024.05.31.0...2024.05.31.1`](https://github.com/juspay/hyperswitch/compare/2024.05.31.0...2024.05.31.1)

    - - -

    ## 2024.05.31.0

    ### Features

    - **connector:** Implement pre auth flow for gpayments ([#4692](https://github.com/juspay/hyperswitch/pull/4692)) ([`bed42ce`](https://github.com/juspay/hyperswitch/commit/bed42ce4be901f2b8f46033dd395dee8dbe807c9))
    - **payout:** [Payone] add payone connector ([#4553](https://github.com/juspay/hyperswitch/pull/4553)) ([`832968c`](https://github.com/juspay/hyperswitch/commit/832968c0c444af74fb6398950159847d639eb50e))
    - **router:** Added amount conversion function in core for connector module ([#4710](https://github.com/juspay/hyperswitch/pull/4710)) ([`08eefdb`](https://github.com/juspay/hyperswitch/commit/08eefdba4a7f428ffe7f0dac9799c46b82c49864))
    - **users:** Add support to reset totp ([#4821](https://github.com/juspay/hyperswitch/pull/4821)) ([`aca6ad1`](https://github.com/juspay/hyperswitch/commit/aca6ad1bd1f43758b22638a7a2e7e4a99b66e5ff))
    - Add a domain type for `customer_id` ([#4705](https://github.com/juspay/hyperswitch/pull/4705)) ([`93d61d1`](https://github.com/juspay/hyperswitch/commit/93d61d1053a834ac1e7bf6d5dd70053d28f3e7d5))

    ### Bug Fixes

    - **netcetera:** Handle non-ascii characters for cardholdername, error message and send missing fields ([#4755](https://github.com/juspay/hyperswitch/pull/4755)) ([`5d1900e`](https://github.com/juspay/hyperswitch/commit/5d1900e1d96da1e8bb72dadfa1132a2340733fdc))
    - **routing:** Added routing validation for payments req ([#4762](https://github.com/juspay/hyperswitch/pull/4762)) ([`21a3a2e`](https://github.com/juspay/hyperswitch/commit/21a3a2ea8ada838c67b0e5871f01d09bd5a8b9ed))

    ### Refactors

    - **connector:** [Klarna] Refactor configs for sandbox and production and update payment status ([#4819](https://github.com/juspay/hyperswitch/pull/4819)) ([`f7e99e1`](https://github.com/juspay/hyperswitch/commit/f7e99e1eda4bea68351f4249074e35877a95e6ee))
    - **core:** Move router data flow types to hyperswitch domain models crate ([#4801](https://github.com/juspay/hyperswitch/pull/4801)) ([`61e67e4`](https://github.com/juspay/hyperswitch/commit/61e67e42724525660df1d1076d2422f28d58a637))

    ### Miscellaneous Tasks

    - **euclid_wasm:** Update klarna metadata ([#4823](https://github.com/juspay/hyperswitch/pull/4823)) ([`f192fa3`](https://github.com/juspay/hyperswitch/commit/f192fa3866c2ea21555aed8783fad2ac022091ad))
    - **postman:** Update Postman collection files ([`4833f1a`](https://github.com/juspay/hyperswitch/commit/4833f1ac31b725c275465cf9fba34c5950b3c500))
    - Remove redundant caching code ([#4804](https://github.com/juspay/hyperswitch/pull/4804)) ([`971ef1f`](https://github.com/juspay/hyperswitch/commit/971ef1fb8fd16f5af89071ddf4d143330d32f056))

    **Full Changelog:** [`2024.05.30.0...2024.05.31.0`](https://github.com/juspay/hyperswitch/compare/2024.05.30.0...2024.05.31.0)

    - - -

    ## 2024.05.30.0

    ### Features

    - **connector:**
      - [ZSL] handle partial payments in Local Bank Transfer ([#4777](https://github.com/juspay/hyperswitch/pull/4777)) ([`e410eba`](https://github.com/juspay/hyperswitch/commit/e410eba6ed4894b4d0d505188d89016b93391d57))
      - Add support for external authentication for cybersource ([#4714](https://github.com/juspay/hyperswitch/pull/4714)) ([`97f2ff0`](https://github.com/juspay/hyperswitch/commit/97f2ff0e7051025e397c645fd67a579d0bb492f0))
      - [Klarna] Add support for Capture, Psync, Refunds and Rsync flows ([#4799](https://github.com/juspay/hyperswitch/pull/4799)) ([`e41d5e2`](https://github.com/juspay/hyperswitch/commit/e41d5e25dfd4d3113edac11b249e847f8718b263))
    - **users:**
      - Add redis in Begin and Verify TOTP and create a new API that updates TOTP ([#4765](https://github.com/juspay/hyperswitch/pull/4765)) ([`cd9c9b6`](https://github.com/juspay/hyperswitch/commit/cd9c9b609c8d5d7c77658d973f7922ae71af9a4d))
      - Add endpoint to check 2fa status ([#4810](https://github.com/juspay/hyperswitch/pull/4810)) ([`0f7f3d9`](https://github.com/juspay/hyperswitch/commit/0f7f3d9e74f0dad5112d6045089c8bfa12f4767f))

    ### Bug Fixes

    - **Cypress:** Fixing 3DS payment failure in headless mode ([#4807](https://github.com/juspay/hyperswitch/pull/4807)) ([`b335867`](https://github.com/juspay/hyperswitch/commit/b335867eb92b7fe5a1147e7a3dd70d9f2746ba96))
    - Implement StrongEq for Vec<u8> ([#4795](https://github.com/juspay/hyperswitch/pull/4795)) ([`b812e59`](https://github.com/juspay/hyperswitch/commit/b812e596a1bef4cc154f5b925753ad158c9022de))

    ### Refactors

    - **connector:** [Klarna] Refactor Authorize call and configs for prod ([#4750](https://github.com/juspay/hyperswitch/pull/4750)) ([`a6570b6`](https://github.com/juspay/hyperswitch/commit/a6570b6a06917be27e543cb35bb210df4fc6391e))
    - **core:** Move router data response and request models to hyperswitch domain models crate ([#4789](https://github.com/juspay/hyperswitch/pull/4789)) ([`dd33329`](https://github.com/juspay/hyperswitch/commit/dd333298f8b4e8ff3c15fc79fbc528a61fa1b63f))

    **Full Changelog:** [`2024.05.29.0...2024.05.30.0`](https://github.com/juspay/hyperswitch/compare/2024.05.29.0...2024.05.30.0)

    - - -

    ## 2024.05.29.0

    ### Features

    - **connector:**
      - [Iatapay] add upi qr support ([#4728](https://github.com/juspay/hyperswitch/pull/4728)) ([`c9fa94f`](https://github.com/juspay/hyperswitch/commit/c9fa94febe7a1fcd24e8d723d14b78f8a73da0e3))
      - [CRYPTOPAY] Pass network details in payment request ([#4779](https://github.com/juspay/hyperswitch/pull/4779)) ([`84e032e`](https://github.com/juspay/hyperswitch/commit/84e032e6c28afc410c82e73e51deb629b0c4a81a))

    ### Bug Fixes

    - **docker-compose:** Fix docker compose syntax ([#4782](https://github.com/juspay/hyperswitch/pull/4782)) ([`7645edf`](https://github.com/juspay/hyperswitch/commit/7645edfa2e00500da3f8f117cc1a485fe1f41ab5))
    - Include client columns in payment attempts response struct ([#4761](https://github.com/juspay/hyperswitch/pull/4761)) ([`d686ec7`](https://github.com/juspay/hyperswitch/commit/d686ec7acda6ce852fac8d7413f9ba903adcee1d))

    ### Refactors

    - **payment_methods:** Add support for passing ttl to locker entries ([#4690](https://github.com/juspay/hyperswitch/pull/4690)) ([`7ca9c6e`](https://github.com/juspay/hyperswitch/commit/7ca9c6e81313199589444a431a73fbcdf712a9ee))
    - Retrieve extended card info config during business profile get call ([#4784](https://github.com/juspay/hyperswitch/pull/4784)) ([`c362fd0`](https://github.com/juspay/hyperswitch/commit/c362fd05325743bb3d173e335124734f1c23b9fa))

    ### Documentation

    - **analytics:** Add documentation for setting up data services and enabling data features in control center ([#4741](https://github.com/juspay/hyperswitch/pull/4741)) ([`d15cb31`](https://github.com/juspay/hyperswitch/commit/d15cb31814390bc631f9eb4195ca114e43ab4cd2))

    **Full Changelog:** [`2024.05.28.0...2024.05.29.0`](https://github.com/juspay/hyperswitch/compare/2024.05.28.0...2024.05.29.0)

    - - -

    ## 2024.05.28.0

    ### Features

    - **connector:** [AUTHORIZEDOTNET] Implement non-zero mandates ([#4758](https://github.com/juspay/hyperswitch/pull/4758)) ([`ed82af8`](https://github.com/juspay/hyperswitch/commit/ed82af81f9316c266adc7ee8273b0e33e1c83ccf))
    - **core:** [Paypal] Add session_token flow for Paypal sdk ([#4697](https://github.com/juspay/hyperswitch/pull/4697)) ([`b3d4d13`](https://github.com/juspay/hyperswitch/commit/b3d4d13db81143cf663142d8bd8fdf95b0882b3f))

    **Full Changelog:** [`2024.05.27.0...2024.05.28.0`](https://github.com/juspay/hyperswitch/compare/2024.05.27.0...2024.05.28.0)

    - - -

    ## 2024.05.27.0

    ### Refactors

    - **core:** Inclusion of constraint graph for merchant Payment Method list ([#4626](https://github.com/juspay/hyperswitch/pull/4626)) ([`2cabb0b`](https://github.com/juspay/hyperswitch/commit/2cabb0bedcdf0d1adf568f2533b6ab9ce8d9fc57))

    ### Miscellaneous Tasks

    - Add missing migrations for recently added currencies ([#4760](https://github.com/juspay/hyperswitch/pull/4760)) ([`1026f47`](https://github.com/juspay/hyperswitch/commit/1026f4783000a13b43f22e4db0b36c217d39e541))

    **Full Changelog:** [`2024.05.24.1...2024.05.27.0`](https://github.com/juspay/hyperswitch/compare/2024.05.24.1...2024.05.27.0)

    - - -

    ## 2024.05.24.1

    ### Features

    - **payment_charges:** Add support for collecting and refunding charges on payments ([#4628](https://github.com/juspay/hyperswitch/pull/4628)) ([`55ccce6`](https://github.com/juspay/hyperswitch/commit/55ccce61898083992afeab03ba1690954b1b45ef))

    ### Bug Fixes

    - **payment_methods:**
      - Log and ignore the apple pay metadata parsing error while fetching apple pay retry connectors ([#4747](https://github.com/juspay/hyperswitch/pull/4747)) ([`a7fc4c6`](https://github.com/juspay/hyperswitch/commit/a7fc4c6fcd2f031b92e36f40a14be641673b7422))
      - Revert the filter for getting the mcas which are disabled ([#4756](https://github.com/juspay/hyperswitch/pull/4756)) ([`9fb2a83`](https://github.com/juspay/hyperswitch/commit/9fb2a8301453b47e2d1c17e215f740bea8eaa91a))

    **Full Changelog:** [`2024.05.24.0...2024.05.24.1`](https://github.com/juspay/hyperswitch/compare/2024.05.24.0...2024.05.24.1)

    - - -

    ## 2024.05.24.0

    ### Features

    - **analytics:** Added client columns in payments analytics ([#4658](https://github.com/juspay/hyperswitch/pull/4658)) ([`0b415dc`](https://github.com/juspay/hyperswitch/commit/0b415dcca67f2994727627990a9cc9db19885b34))
    - **router:** Send message_version and directory_server_id in next_action block of three_ds_data for external 3ds flow ([#4715](https://github.com/juspay/hyperswitch/pull/4715)) ([`13f6efc`](https://github.com/juspay/hyperswitch/commit/13f6efc7e8c01b4a377f627b9cfe2319b518204d))
    - **users:**
      - Create terminate 2fa API ([#4731](https://github.com/juspay/hyperswitch/pull/4731)) ([`42e5ef1`](https://github.com/juspay/hyperswitch/commit/42e5ef155128f4df717e8fb101da6e6929659a0a))
      - Add support to verify 2FA using recovery code ([#4737](https://github.com/juspay/hyperswitch/pull/4737)) ([`f04c6ac`](https://github.com/juspay/hyperswitch/commit/f04c6ac030485cb28ab09e85a0f2f3c13beb6df3))
    - Authentication analytics ([#4684](https://github.com/juspay/hyperswitch/pull/4684)) ([`5e5eb5f`](https://github.com/juspay/hyperswitch/commit/5e5eb5fbae7de2e296899e0372c82906603526d6))

    ### Bug Fixes

    - **kafka:** Fix kafka timestamps sent from application ([#4709](https://github.com/juspay/hyperswitch/pull/4709)) ([`c778af2`](https://github.com/juspay/hyperswitch/commit/c778af26ddb46ff98072e8934a9509ff6e00ddc5))
    - **payment_methods:** Mask the email address being logged in the `payment_method_list` response logs ([#4749](https://github.com/juspay/hyperswitch/pull/4749)) ([`23c7395`](https://github.com/juspay/hyperswitch/commit/23c73951bbdd5e049b75ca6d8e3bcccfb629e6eb))

    ### Refactors

    - **bank-redirect:** Dynamic field changes for bankredirect payment method ([#4650](https://github.com/juspay/hyperswitch/pull/4650)) ([`da2dc10`](https://github.com/juspay/hyperswitch/commit/da2dc10f3d7233a0a9eae7d23cb07f7e8fafad78))
    - **payment_methods:** Use recurring enabled flag to decide which payment method supports MIT ([#4732](https://github.com/juspay/hyperswitch/pull/4732)) ([`ba624d0`](https://github.com/juspay/hyperswitch/commit/ba624d049840f65fc21a5e578f8d4ba8543e1420))

    ### Miscellaneous Tasks

    - Move RouterData Request types to hyperswitch_domain_models crate ([#4723](https://github.com/juspay/hyperswitch/pull/4723)) ([`ae77373`](https://github.com/juspay/hyperswitch/commit/ae77373b4cac63979673fdac37c55986d954358e))

    **Full Changelog:** [`2024.05.23.0...2024.05.24.0`](https://github.com/juspay/hyperswitch/compare/2024.05.23.0...2024.05.24.0)

    - - -

    ## 2024.05.23.0

    ### Features

    - **connector:**
      - Accept connector_transaction_id in 4xx error_response of connector ([#4720](https://github.com/juspay/hyperswitch/pull/4720)) ([`2ad7fc0`](https://github.com/juspay/hyperswitch/commit/2ad7fc0cd6c102bea4d671c98f7fe50fd709d4ec))
      - [AUTHORIZEDOTNET] Implement zero mandates ([#4704](https://github.com/juspay/hyperswitch/pull/4704)) ([`8afeda5`](https://github.com/juspay/hyperswitch/commit/8afeda54fc5e3f3d510c48c81c222387e9cacc0e))
    - **payment_methods:** Enable auto-retries for apple pay ([#4721](https://github.com/juspay/hyperswitch/pull/4721)) ([`d942a31`](https://github.com/juspay/hyperswitch/commit/d942a31d60595d366977746be7215620da0ababd))
    - **routing:** Use Moka cache for routing with cache invalidation ([#3216](https://github.com/juspay/hyperswitch/pull/3216)) ([`431560b`](https://github.com/juspay/hyperswitch/commit/431560b7fb4401d000c11dbb9c7eb70663591307))
    - **users:** Create generate recovery codes API ([#4708](https://github.com/juspay/hyperswitch/pull/4708)) ([`8fa2cd5`](https://github.com/juspay/hyperswitch/commit/8fa2cd556bf898621a1a8722a0af99d174447485))
    - **webhook:** Add frm webhook support ([#4662](https://github.com/juspay/hyperswitch/pull/4662)) ([`ae601e8`](https://github.com/juspay/hyperswitch/commit/ae601e8e1be9215488daaae7cb39ad5a030e98d9))

    ### Bug Fixes

    - **core:** Fix failing token based MIT payments ([#4735](https://github.com/juspay/hyperswitch/pull/4735)) ([`1bd4061`](https://github.com/juspay/hyperswitch/commit/1bd406197b5baf1c041f0dffa5bc02dce10f1529))
    - Added hget lookup for all updated_by existing cases ([#4716](https://github.com/juspay/hyperswitch/pull/4716)) ([`fabf80c`](https://github.com/juspay/hyperswitch/commit/fabf80c2b18ca690b7fb709c8c12d1ef7f24e5b6))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`ec50843`](https://github.com/juspay/hyperswitch/commit/ec508435a19c2942a5d66757a74dd06bed5b1a76))

    **Full Changelog:** [`2024.05.22.0...2024.05.23.0`](https://github.com/juspay/hyperswitch/compare/2024.05.22.0...2024.05.23.0)

    - - -

    ## 2024.05.22.0

    ### Features

    - **core:** Add support for connectors having separate version call for pre authentication ([#4603](https://github.com/juspay/hyperswitch/pull/4603)) ([`528d692`](https://github.com/juspay/hyperswitch/commit/528d692a89f5cf9a82d1e5c28e4b3a1ef4bf6c6a))

    ### Refactors

    - **graph:** Refactor the Knowledge Graph to include configs check, while eligibility analysis ([#4687](https://github.com/juspay/hyperswitch/pull/4687)) ([`a917776`](https://github.com/juspay/hyperswitch/commit/a917776bb8cd294f77c569e81ea4d665b6611c6d))

    ### Miscellaneous Tasks

    - Move tracing to workspace deps and remove router_env as a dependency of redis_interface ([#4717](https://github.com/juspay/hyperswitch/pull/4717)) ([`fea2ea6`](https://github.com/juspay/hyperswitch/commit/fea2ea6d2cf4f3f68e4779e53b82120806748d7b))

    **Full Changelog:** [`2024.05.21.1...2024.05.22.0`](https://github.com/juspay/hyperswitch/compare/2024.05.21.1...2024.05.22.0)

    - - -

    ## 2024.05.21.1

    ### Features

    - **Cypress:** Add response handler for Connector Testing ([#4624](https://github.com/juspay/hyperswitch/pull/4624)) ([`2e79ee0`](https://github.com/juspay/hyperswitch/commit/2e79ee0615292182111586fda7655dd9a796ef4f))
    - **constraint_graph:** Add visualization functionality to the constraint graph ([#4701](https://github.com/juspay/hyperswitch/pull/4701)) ([`0f53f74`](https://github.com/juspay/hyperswitch/commit/0f53f74d26e829602519998c41a460dc9a4809af))

    ### Refactors

    - **core:** Add support to enable pm_data and pm_id in payments response ([#4711](https://github.com/juspay/hyperswitch/pull/4711)) ([`2cd360e`](https://github.com/juspay/hyperswitch/commit/2cd360e6a9d6bbe4b91f7b501b6013db1f31d898))
    - **router:** Added a new type minor unit to amount ([#4629](https://github.com/juspay/hyperswitch/pull/4629)) ([`443b7e6`](https://github.com/juspay/hyperswitch/commit/443b7e6ea2cf63f35a28a1cd24860399d96b15ba))

    **Full Changelog:** [`2024.05.21.0...2024.05.21.1`](https://github.com/juspay/hyperswitch/compare/2024.05.21.0...2024.05.21.1)

    - - -

    ## 2024.05.21.0

    ### Features

    - **core:** Add a new endpoint for Complete Authorize flow ([#4686](https://github.com/juspay/hyperswitch/pull/4686)) ([`226c337`](https://github.com/juspay/hyperswitch/commit/226c337399a2e4c1fa50c4f3d0d4b237b5543426))

    ### Bug Fixes

    - **router:** Handle connector authentication technical failures and skip confirm in authorize flow only when authentication_type is not challenge ([#4667](https://github.com/juspay/hyperswitch/pull/4667)) ([`842728e`](https://github.com/juspay/hyperswitch/commit/842728ef93241643d12170695ddf56cee4da45bd))

    ### Refactors

    - **cache:** Remove `deref` impl on `Cache` type ([#4671](https://github.com/juspay/hyperswitch/pull/4671)) ([`36409bd`](https://github.com/juspay/hyperswitch/commit/36409bdc9185d4241971a30c55e1e331568abd2f))

    ### Documentation

    - Update Docker Compose setup guide to checkout `latest` tag ([#4695](https://github.com/juspay/hyperswitch/pull/4695)) ([`40f6776`](https://github.com/juspay/hyperswitch/commit/40f6776c46abc4b9c89fb2aa195f4ce64b312cf6))

    ### Miscellaneous Tasks

    - **docker-compose:** Specify `pull_policy` for hyperswitch services ([#4688](https://github.com/juspay/hyperswitch/pull/4688)) ([`909e75c`](https://github.com/juspay/hyperswitch/commit/909e75c71a6e3418b5d15396569d986eff852c06))

    **Full Changelog:** [`2024.05.20.2...2024.05.21.0`](https://github.com/juspay/hyperswitch/compare/2024.05.20.2...2024.05.21.0)

    - - -

    ## 2024.05.20.2

    ### Features

    - Add an api for toggle KV for all merchants ([#4600](https://github.com/juspay/hyperswitch/pull/4600)) ([`7f53461`](https://github.com/juspay/hyperswitch/commit/7f5346169edc4266b7b08578aac7aef1ede630f3))

    **Full Changelog:** [`2024.05.20.1...2024.05.20.2`](https://github.com/juspay/hyperswitch/compare/2024.05.20.1...2024.05.20.2)

    - - -

    ## 2024.05.20.1

    ### Features

    - Soft kill kv ([#4582](https://github.com/juspay/hyperswitch/pull/4582)) ([`3fa59d4`](https://github.com/juspay/hyperswitch/commit/3fa59d4bac01de8fa25e28340a57e578d9980032))

    **Full Changelog:** [`2024.05.20.0...2024.05.20.1`](https://github.com/juspay/hyperswitch/compare/2024.05.20.0...2024.05.20.1)

    - - -

    ## 2024.05.20.0

    ### Features

    - Added client_source, client_version in payment_attempt from payments confirm request headers ([#4657](https://github.com/juspay/hyperswitch/pull/4657)) ([`7e44bbc`](https://github.com/juspay/hyperswitch/commit/7e44bbca63c1818c0fabdf2734d9b0ae5d639fe1))

    ### Bug Fixes

    - **docker:** Fix stack overflow for docker images ([#4660](https://github.com/juspay/hyperswitch/pull/4660)) ([`a62f69d`](https://github.com/juspay/hyperswitch/commit/a62f69d447245273c73611309055d2341a47b783))
    - Address non-digit character cases in card number validation ([#4649](https://github.com/juspay/hyperswitch/pull/4649)) ([`8c0d72e`](https://github.com/juspay/hyperswitch/commit/8c0d72e225c56b7bece733d9565fc8774deaa490))

    ### Refactors

    - **FRM:** Refactor frm configs ([#4581](https://github.com/juspay/hyperswitch/pull/4581)) ([`853f3b4`](https://github.com/juspay/hyperswitch/commit/853f3b4854ff9ec1e169b7633f1e9bf8259e9ceb))

    **Full Changelog:** [`2024.05.17.0...2024.05.20.0`](https://github.com/juspay/hyperswitch/compare/2024.05.17.0...2024.05.20.0)

    - - -

    ## 2024.05.17.0

    ### Bug Fixes

    - **core:** Use `realip_remote_addr` function to extract ip address ([#4653](https://github.com/juspay/hyperswitch/pull/4653)) ([`8427b60`](https://github.com/juspay/hyperswitch/commit/8427b60a1851f2d9d2f141f28eb122d42f680736))
    - **recon:** Make recon status optional in merchant account ([#4654](https://github.com/juspay/hyperswitch/pull/4654)) ([`84cb2bc`](https://github.com/juspay/hyperswitch/commit/84cb2bcb6bbb82f54315c82c7421a222d2e37bc6))

    ### Refactors

    - **access_token:** Handle network delays with expiry of access token ([#4617](https://github.com/juspay/hyperswitch/pull/4617)) ([`0d45f85`](https://github.com/juspay/hyperswitch/commit/0d45f854a2cc18cc421a3d449a6dc2c830ef9dd5))
    - **cards,router:** Remove duplicated card number interface ([#4404](https://github.com/juspay/hyperswitch/pull/4404)) ([`27ae437`](https://github.com/juspay/hyperswitch/commit/27ae437a88492bf5b17ad2fbf4a083891602c07a))

    ### Miscellaneous Tasks

    - Add deprecated flag to soon to be deprecated fields in payment request and response ([#4261](https://github.com/juspay/hyperswitch/pull/4261)) ([`9ac5d70`](https://github.com/juspay/hyperswitch/commit/9ac5d70e2ed0a036b5f2bfe7488f218b83fce7c3))

    **Full Changelog:** [`2024.05.16.1...2024.05.17.0`](https://github.com/juspay/hyperswitch/compare/2024.05.16.1...2024.05.17.0)

    - - -

    ## 2024.05.16.1

    ### Features

    - **middleware:** Log content_length for 4xx ([#4655](https://github.com/juspay/hyperswitch/pull/4655)) ([`4b5b558`](https://github.com/juspay/hyperswitch/commit/4b5b558dae8d2fefb66b8b16c486f07e3e800758))

    ### Refactors

    - **session_flow:** Remove the shipping and billing parameter fields if null for apple pay and google pay ([#4661](https://github.com/juspay/hyperswitch/pull/4661)) ([`0dee53e`](https://github.com/juspay/hyperswitch/commit/0dee53ecb2d5203285a819bc8e71111d2c133f03))

    **Full Changelog:** [`2024.05.16.0...2024.05.16.1`](https://github.com/juspay/hyperswitch/compare/2024.05.16.0...2024.05.16.1)

    - - -

    ## 2024.05.16.0

    ### Features

    - **core:** Move RouterData to crate hyperswitch_domain_models ([#4524](https://github.com/juspay/hyperswitch/pull/4524)) ([`ff1c2dd`](https://github.com/juspay/hyperswitch/commit/ff1c2ddf8b9d8f35deee1ab41c2286cc5b349271))

    ### Bug Fixes

    - **connector:** Accept state abbreviation in 2 letter ([#4646](https://github.com/juspay/hyperswitch/pull/4646)) ([`3cf840e`](https://github.com/juspay/hyperswitch/commit/3cf840e48678e56a443bc891c48589d4b53bc07a))
    - **router:** Add `max_amount` validation in payment flows ([#4645](https://github.com/juspay/hyperswitch/pull/4645)) ([`df865d7`](https://github.com/juspay/hyperswitch/commit/df865d76be1c867b9ee4d9cbb92a98dca4ecf229))

    ### Refactors

    - **bank-redirect:** Remove billing from bankredirect payment data ([#4362](https://github.com/juspay/hyperswitch/pull/4362)) ([`0958d94`](https://github.com/juspay/hyperswitch/commit/0958d948f98bc41df64d8ea18cb1a8d3a0eb80fe))
    - **db:** Add TenantID field to KafkaEvent struct ([#4598](https://github.com/juspay/hyperswitch/pull/4598)) ([`24214bc`](https://github.com/juspay/hyperswitch/commit/24214bcfcd0a34acd39dba88f6c015ac6b1edbc4))
    - **router:** Remove default case handling in bambora connector ([#4473](https://github.com/juspay/hyperswitch/pull/4473)) ([`1a27ba5`](https://github.com/juspay/hyperswitch/commit/1a27ba576427126cc6a3fe2be86489abc9af63d8))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`f2ff7a2`](https://github.com/juspay/hyperswitch/commit/f2ff7a211b9f7ca16352061768e9b7c0a38a3845))

    **Full Changelog:** [`2024.05.15.0...2024.05.16.0`](https://github.com/juspay/hyperswitch/compare/2024.05.15.0...2024.05.16.0)

    - - -

    ## 2024.05.15.0

    ### Features

    - **payment_methods:** Pass required shipping details field for wallets session call based on `business_profile` config ([#4616](https://github.com/juspay/hyperswitch/pull/4616)) ([`650f3fa`](https://github.com/juspay/hyperswitch/commit/650f3fa25c4130a2148862863ff444d16b41d2f3))
    - **router:** Send `openurl_if_required` post_message in external 3ds flow for return_url redirection from sdk ([#4642](https://github.com/juspay/hyperswitch/pull/4642)) ([`bf06a5b`](https://github.com/juspay/hyperswitch/commit/bf06a5b51161365af7a3570a986455fefdf2c61b))

    ### Bug Fixes

    - **config:** Include gpayments base url in deployment config files ([#4637](https://github.com/juspay/hyperswitch/pull/4637)) ([`03ed6dc`](https://github.com/juspay/hyperswitch/commit/03ed6dc0d6abc06ecfbbffe3111581fb4a0754da))

    ### Refactors

    - **connector:** [BOA/CYBS] refund error handling ([#4632](https://github.com/juspay/hyperswitch/pull/4632)) ([`99702ed`](https://github.com/juspay/hyperswitch/commit/99702ed8f99cb03fc4452c067131aebf368de054))
    - **payment_methods:** Update api contract for update payment method endpoint ([#4641](https://github.com/juspay/hyperswitch/pull/4641)) ([`e43ae65`](https://github.com/juspay/hyperswitch/commit/e43ae653a02cf453f8492630819e505c1f529f47))
    - Remove `Ctx` generic from payments core ([#4574](https://github.com/juspay/hyperswitch/pull/4574)) ([`6b509c7`](https://github.com/juspay/hyperswitch/commit/6b509c7bec43fdd4332848498ce31023a26486e6))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`45b8814`](https://github.com/juspay/hyperswitch/commit/45b88140a2e43dfccfb5875a14dca5cd8b74b3fc))

    **Full Changelog:** [`2024.05.14.0...2024.05.15.0`](https://github.com/juspay/hyperswitch/compare/2024.05.14.0...2024.05.15.0)

    - - -

    ## 2024.05.14.0

    ### Features

    - **connector:** Generate connector template code for gpayments authenticaition connector ([#4584](https://github.com/juspay/hyperswitch/pull/4584)) ([`2a302eb`](https://github.com/juspay/hyperswitch/commit/2a302eb5973c64d8b77f8110fdbeb536ccbe1488))
    - **payment_methods:** Pass `required_billing_contact_fields` field in `/session` call based on dynamic fields ([#4601](https://github.com/juspay/hyperswitch/pull/4601)) ([`348cd74`](https://github.com/juspay/hyperswitch/commit/348cd744dca20c54c6ed47c8036f43f16429c8f3))
    - **payments_update:** Update payment_method_billing in payment update ([#4614](https://github.com/juspay/hyperswitch/pull/4614)) ([`2692995`](https://github.com/juspay/hyperswitch/commit/26929956172e9f0e1e3fb41f5e4dbb19d866abf2))
    - **refunds:** Update refunds filters ([#4409](https://github.com/juspay/hyperswitch/pull/4409)) ([`cfab2af`](https://github.com/juspay/hyperswitch/commit/cfab2af7d4a2478d7609a1bd34dd0579dad194c2))

    ### Bug Fixes

    - **connector_token:** Move config redis ([#4540](https://github.com/juspay/hyperswitch/pull/4540)) ([`1602eb5`](https://github.com/juspay/hyperswitch/commit/1602eb541d317d9b155cbcbffed3d54f7d0b5acd))

    ### Refactors

    - **bank-transfer:** Remove billing from banktransfer payment data ([#4377](https://github.com/juspay/hyperswitch/pull/4377)) ([`0f5a370`](https://github.com/juspay/hyperswitch/commit/0f5a370b55140fd63aeab4ca8427bd371f5e5ec4))
    - **card_details:** Added missing card data fields for connectors ([#4571](https://github.com/juspay/hyperswitch/pull/4571)) ([`41655ba`](https://github.com/juspay/hyperswitch/commit/41655ba300567455a5b28b85584d990981a24167))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`22210b0`](https://github.com/juspay/hyperswitch/commit/22210b0ff44014b885842c804879267d9a83ab1b))

    **Full Changelog:** [`2024.05.13.0...2024.05.14.0`](https://github.com/juspay/hyperswitch/compare/2024.05.13.0...2024.05.14.0)

    - - -

    ## 2024.05.13.0

    ### Features

    - **Connectors:** Add mandate validation for auth flow ([#4089](https://github.com/juspay/hyperswitch/pull/4089)) ([`fef28c3`](https://github.com/juspay/hyperswitch/commit/fef28c3345ae60046f46a2bdf9eca6b38278d75b))
    - **analytics:** Authentication analytics ([#4429](https://github.com/juspay/hyperswitch/pull/4429)) ([`24d1542`](https://github.com/juspay/hyperswitch/commit/24d154248c8814e729206208f096aba68dcff8c0))

    ### Bug Fixes

    - **connector:** [BOA/CYBS] add cancelled status to refund response ([#4620](https://github.com/juspay/hyperswitch/pull/4620)) ([`cf0e3da`](https://github.com/juspay/hyperswitch/commit/cf0e3daeaa1dfdfa00d4cccdff5b845ac368bcb9))
    - **router:** Fix QR data into image conversion ([#4619](https://github.com/juspay/hyperswitch/pull/4619)) ([`28ab368`](https://github.com/juspay/hyperswitch/commit/28ab36873b2a475f1de95819b3d81aae954a2cfc))

    ### Refactors

    - **payment_method_data:** Send optional billing details in response ([#4569](https://github.com/juspay/hyperswitch/pull/4569)) ([`86e0550`](https://github.com/juspay/hyperswitch/commit/86e05501cbea53fd85e2bc67a1c2be4cba47d0ff))

    **Full Changelog:** [`2024.05.10.0...2024.05.13.0`](https://github.com/juspay/hyperswitch/compare/2024.05.10.0...2024.05.13.0)

    - - -

    ## 2024.05.10.0

    ### Features

    - **connector:** [Payone] add connector template code ([#4469](https://github.com/juspay/hyperswitch/pull/4469)) ([`f386f42`](https://github.com/juspay/hyperswitch/commit/f386f423c0e5fac55a24756d7ee7a3ce1c20fb13))
    - **users:**
      - Create API to Verify TOTP ([#4597](https://github.com/juspay/hyperswitch/pull/4597)) ([`9135423`](https://github.com/juspay/hyperswitch/commit/91354232e03a8dbd9ad9eccc8620eac321765dd7))
      - New routes to accept invite and list merchants ([#4591](https://github.com/juspay/hyperswitch/pull/4591)) ([`e70d58a`](https://github.com/juspay/hyperswitch/commit/e70d58afc941d436aae0aaa683c2e8b5db2ade33))

    ### Bug Fixes

    - **connector:**
      - [iatapay]handle empty error response in case of 401 ([#4291](https://github.com/juspay/hyperswitch/pull/4291)) ([`d1404d9`](https://github.com/juspay/hyperswitch/commit/d1404d9aff2aea513a2ffd422c7e10e760b7382c))
      - [BAMBORA] Audit Fixes for Bambora ([#4604](https://github.com/juspay/hyperswitch/pull/4604)) ([`366596f`](https://github.com/juspay/hyperswitch/commit/366596f14d6c874a8e2d418a99beb90046c5b040))
    - **router:** [NETCETERA] skip sending browser_information in authentication request for app device_channel ([#4613](https://github.com/juspay/hyperswitch/pull/4613)) ([`d2a496c`](https://github.com/juspay/hyperswitch/commit/d2a496cf4ddab94efa5ad1127a94687d45bed027))
    - **users:** Fix bugs caused by the new token only flows ([#4607](https://github.com/juspay/hyperswitch/pull/4607)) ([`a0f11d7`](https://github.com/juspay/hyperswitch/commit/a0f11d79add17e0bc19d8677c90f8a35d6c99c97))

    ### Refactors

    - **billing:** Store `payment_method_data_billing` for recurring payments ([#4513](https://github.com/juspay/hyperswitch/pull/4513)) ([`55ae0fc`](https://github.com/juspay/hyperswitch/commit/55ae0fc5f704d8b35815fcd2170befb4a726ea8d))

    **Full Changelog:** [`2024.05.09.0...2024.05.10.0`](https://github.com/juspay/hyperswitch/compare/2024.05.09.0...2024.05.10.0)

    - - -

    ## 2024.05.09.0

    ### Features

    - **business_profile:** Feature add a config to use `billing` as `payment_method_billing` ([#4557](https://github.com/juspay/hyperswitch/pull/4557)) ([`3e1c7eb`](https://github.com/juspay/hyperswitch/commit/3e1c7eba49de3110a2d71cea8e0540c7182d2058))
    - **connector-configs:** [Cashtocode] add CNY currency for evoucher ([#4578](https://github.com/juspay/hyperswitch/pull/4578)) ([`c47cac8`](https://github.com/juspay/hyperswitch/commit/c47cac815792df865e416d5ffc6c46faf6662053))
    - **users:** Create `user_key_store` table and `begin_totp` API ([#4577](https://github.com/juspay/hyperswitch/pull/4577)) ([`a97016f`](https://github.com/juspay/hyperswitch/commit/a97016fea41c3b74149d8eaa5c0271ec1347bc39))

    ### Bug Fixes

    - **connector:** [BOA/CYBS] make rsync status optional ([#4570](https://github.com/juspay/hyperswitch/pull/4570)) ([`339da8b`](https://github.com/juspay/hyperswitch/commit/339da8b0c9a1e388b65ff5d82a162e758c85ec6b))
    - **core:** Drop three_dsserver_trans_id from authentication table ([#4587](https://github.com/juspay/hyperswitch/pull/4587)) ([`ec3b60e`](https://github.com/juspay/hyperswitch/commit/ec3b60e37c0b178c3e5e3fe79db88f83fd195722))
    - **users:** Correct the condition for `verify_email` flow in decision manger ([#4580](https://github.com/juspay/hyperswitch/pull/4580)) ([`3db5b82`](https://github.com/juspay/hyperswitch/commit/3db5b82d0de45130695e1a47b9e71473020fd84d))

    ### Refactors

    - **bank-debit:** Remove billingdetails from bankdebit pmd ([#4371](https://github.com/juspay/hyperswitch/pull/4371)) ([`625b531`](https://github.com/juspay/hyperswitch/commit/625b53182e20b50fde5def338e122a43457da0f2))
    - **db:** Add TenantId field to the KafkaStore struct ([#4512](https://github.com/juspay/hyperswitch/pull/4512)) ([`dca15ae`](https://github.com/juspay/hyperswitch/commit/dca15aeeb501a499fd7334d5cc68b8053757cad4))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`d85f245`](https://github.com/juspay/hyperswitch/commit/d85f245182875dcc59d8355cd07c91bfaaf08e1a))

    **Full Changelog:** [`2024.05.08.0...2024.05.09.0`](https://github.com/juspay/hyperswitch/compare/2024.05.08.0...2024.05.09.0)

    - - -

    ## 2024.05.08.0

    ### Features

    - **FRM:** Add missing fields in Signifyd payment request ([#4554](https://github.com/juspay/hyperswitch/pull/4554)) ([`df2c2ca`](https://github.com/juspay/hyperswitch/commit/df2c2ca22dc4cea986cbbf30850311d3e85000c5))
    - **connector:**
      - [Cybersource] Add payout flows for Card ([#4511](https://github.com/juspay/hyperswitch/pull/4511)) ([`a72f040`](https://github.com/juspay/hyperswitch/commit/a72f040d9281744bceb928ef2e8d3a26783aae9e))
      - [MiFinity] add connector template code ([#4447](https://github.com/juspay/hyperswitch/pull/4447)) ([`d974e6e`](https://github.com/juspay/hyperswitch/commit/d974e6e7c2e1e3cd99607183b647c420f4b14d20))
    - **router:** Add an api to enable `connector_agnostic_mit` feature ([#4480](https://github.com/juspay/hyperswitch/pull/4480)) ([`e769abe`](https://github.com/juspay/hyperswitch/commit/e769abe501470185fcca29e0abede0654579da06))
    - **users:**
      - Create Token only support for pre-login user flow APIs ([#4558](https://github.com/juspay/hyperswitch/pull/4558)) ([`5ec00d9`](https://github.com/juspay/hyperswitch/commit/5ec00d96de49ae0e0f76c5b19e22db11e7db6dd2))
      - Implement force set and force change password ([#4564](https://github.com/juspay/hyperswitch/pull/4564)) ([`59e79ff`](https://github.com/juspay/hyperswitch/commit/59e79ff205dfc2fded993b7a9130b9953bdd07e2))

    ### Bug Fixes

    - **payment_methods:** Fix deserialization errors for `sdk_eligible_payment_methods` ([#4565](https://github.com/juspay/hyperswitch/pull/4565)) ([`f63a970`](https://github.com/juspay/hyperswitch/commit/f63a97024c755fd30a3403e2146812fe4edb8067))
    - **users:** Add password validations ([#4555](https://github.com/juspay/hyperswitch/pull/4555)) ([`25fe4de`](https://github.com/juspay/hyperswitch/commit/25fe4deb8e9152b37467ac1fea18b3074f0e7624))

    ### Refactors

    - **core:** Refactor authentication core to fetch authentication only within it ([#4138](https://github.com/juspay/hyperswitch/pull/4138)) ([`71a070e`](https://github.com/juspay/hyperswitch/commit/71a070e26989f080031d92a88aa0143836d1ea7b))
    - Remove `configs/pg_agnostic_mit` api as it will not be used ([#4486](https://github.com/juspay/hyperswitch/pull/4486)) ([`99bbc39`](https://github.com/juspay/hyperswitch/commit/99bbc3982fa30f6ffd43334b1fa5da963975fe93))
    - Store `card_cvc` in extended_card_info and extend max ttl ([#4568](https://github.com/juspay/hyperswitch/pull/4568)) ([`1b5b566`](https://github.com/juspay/hyperswitch/commit/1b5b566387da83a2582216e05be4ceb1aa7251be))

    ### Miscellaneous Tasks

    - Address Rust 1.78 clippy lints ([#4545](https://github.com/juspay/hyperswitch/pull/4545)) ([`2216a88`](https://github.com/juspay/hyperswitch/commit/2216a88d25c42ede9862f6d036e7b0586a2e7c28))

    **Full Changelog:** [`2024.05.07.0...2024.05.08.0`](https://github.com/juspay/hyperswitch/compare/2024.05.07.0...2024.05.08.0)

    - - -

    ## 2024.05.07.0

    ### Features

    - **clickhouse:** Init Clickhouse container on startup ([#4365](https://github.com/juspay/hyperswitch/pull/4365)) ([`89e5884`](https://github.com/juspay/hyperswitch/commit/89e5884f9eb341026b09a0d1ab8b836de5ba0c19))
    - **constraint_graph:** Make the constraint graph framework generic and move it into a separate crate ([#3071](https://github.com/juspay/hyperswitch/pull/3071)) ([`a23a365`](https://github.com/juspay/hyperswitch/commit/a23a365cdf3fc2a24f4e2a08996a5683dc4da89a))
    - **payment_methods:** Filter payment methods based on pm client secret ([#4249](https://github.com/juspay/hyperswitch/pull/4249)) ([`575fac6`](https://github.com/juspay/hyperswitch/commit/575fac6f3ef94ef1856a77d778f822c0e97b0e9c))
    - Add decision starter API for email flows ([#4533](https://github.com/juspay/hyperswitch/pull/4533)) ([`1335554`](https://github.com/juspay/hyperswitch/commit/1335554f5193f05ba512d75a8eb9bb8047a65466))

    ### Refactors

    - **paylater:** Use payment_method_data.billing fields instead of payment_method_data ([#4333](https://github.com/juspay/hyperswitch/pull/4333)) ([`b878677`](https://github.com/juspay/hyperswitch/commit/b878677f1572dceb9cd1983c2fd0b3b05ed8a573))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`25cd685`](https://github.com/juspay/hyperswitch/commit/25cd6854f9d9162915e56213b6989eeb1d178b49))

    ### Build System / Dependencies

    - **docker:** Add web client and control center services to docker compose setup ([#4197](https://github.com/juspay/hyperswitch/pull/4197)) ([`b1cfef2`](https://github.com/juspay/hyperswitch/commit/b1cfef257a54b3ebe4f48e56a48a932e2c758dc7))

    **Full Changelog:** [`2024.05.06.0...2024.05.07.0`](https://github.com/juspay/hyperswitch/compare/2024.05.06.0...2024.05.07.0)

    - - -

    ## 2024.05.06.0

    ### Features

    - **core:** Add profile level config to toggle extended card bin ([#4445](https://github.com/juspay/hyperswitch/pull/4445)) ([`0304e8e`](https://github.com/juspay/hyperswitch/commit/0304e8e76a8ca1f602305991c4129107b20d148e))
    - **euclid_wasm:** Add configs for new payout connectors ([#4528](https://github.com/juspay/hyperswitch/pull/4528)) ([`9f41919`](https://github.com/juspay/hyperswitch/commit/9f41919094638baf9ea405a5acb89d69ecf1e2b7))

    ### Bug Fixes

    - **connector:** [BAMBORA] Restrict Card Expiry Year to 2 Digits and pass Amount in Decimal Format ([#4536](https://github.com/juspay/hyperswitch/pull/4536)) ([`d5d9006`](https://github.com/juspay/hyperswitch/commit/d5d9006fbd8e32f822f1e84d486b8a4483164baa))
    - **users:** Revert add password validations ([#4542](https://github.com/juspay/hyperswitch/pull/4542)) ([`bcce8b0`](https://github.com/juspay/hyperswitch/commit/bcce8b0489aad8455748e0945127f0a7447e8fb1))

    ### Refactors

    - **connector:** [NMI] Change fields for external auth due to API contract changes ([#4531](https://github.com/juspay/hyperswitch/pull/4531)) ([`7417250`](https://github.com/juspay/hyperswitch/commit/74172509e3b9c0af04bb2fe8a5192ab7f7fd37b5))

    ### Documentation

    - **cypress:** Update cypress docs ([#4505](https://github.com/juspay/hyperswitch/pull/4505)) ([`17b369c`](https://github.com/juspay/hyperswitch/commit/17b369cfabc42d4d06f65b92e967057dba348731))

    **Full Changelog:** [`2024.05.03.1...2024.05.06.0`](https://github.com/juspay/hyperswitch/compare/2024.05.03.1...2024.05.06.0)

    - - -

    ## 2024.05.03.1

    ### Bug Fixes

    - **api_request:** Make `payment_method_data` as optional ([#4527](https://github.com/juspay/hyperswitch/pull/4527)) ([`83a1924`](https://github.com/juspay/hyperswitch/commit/83a192466849c5fd201296e7554644a025ced888))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`e3af9d0`](https://github.com/juspay/hyperswitch/commit/e3af9d0cfbf5e73822f3a097d8a36736efae3d3a))

    **Full Changelog:** [`2024.05.03.0...2024.05.03.1`](https://github.com/juspay/hyperswitch/compare/2024.05.03.0...2024.05.03.1)

    - - -

    ## 2024.05.03.0

    ### Features

    - **connector:**
      - [Ebanx] Add payout flows ([#4146](https://github.com/juspay/hyperswitch/pull/4146)) ([`4f4cbdf`](https://github.com/juspay/hyperswitch/commit/4f4cbdff21b956b5939cdbe6a4f88f663e6b1281))
      - [Paypal] Add payout flow for wallet(Paypal and Venmo) ([#4406](https://github.com/juspay/hyperswitch/pull/4406)) ([`e4ed1e6`](https://github.com/juspay/hyperswitch/commit/e4ed1e63951873f299f076332671f4a043aa86ab))
    - **core:** Rename crate data_models to hyperswitch_domain_models ([#4504](https://github.com/juspay/hyperswitch/pull/4504)) ([`86e93cd`](https://github.com/juspay/hyperswitch/commit/86e93cd3a0f050c89a82be409b80dc2894143c9e))
    - **opensearch:** Refactoring ([#4244](https://github.com/juspay/hyperswitch/pull/4244)) ([`22cb01a`](https://github.com/juspay/hyperswitch/commit/22cb01ac1ecc90eee464561e4e944aad5cb3ed61))
    - **user:** Add route to get user details ([#4510](https://github.com/juspay/hyperswitch/pull/4510)) ([`be44447`](https://github.com/juspay/hyperswitch/commit/be44447c09ea8814dc8b88aa971e08cc749db5f3))
    - **users:** Create Decision manager for User Flows ([#4518](https://github.com/juspay/hyperswitch/pull/4518)) ([`4b3faf6`](https://github.com/juspay/hyperswitch/commit/4b3faf6781f8ab3198ca86b924f3225256d34b52))
    - Store encrypted extended card info in redis ([#4493](https://github.com/juspay/hyperswitch/pull/4493)) ([`6c59d24`](https://github.com/juspay/hyperswitch/commit/6c59d2434ce5067611d85d37b7ec6f551b7ad81a))

    ### Bug Fixes

    - **users:** Add password validations ([#4489](https://github.com/juspay/hyperswitch/pull/4489)) ([`67794da`](https://github.com/juspay/hyperswitch/commit/67794da36ec25531cbf991034452369b17da8063))

    ### Refactors

    - **Connectors:** [BOA] enhance response objects ([#4508](https://github.com/juspay/hyperswitch/pull/4508)) ([`3ed0e8b`](https://github.com/juspay/hyperswitch/commit/3ed0e8b764d1f1bc7d249122dba39be7dfdcac8b))
    - **user:** Use single purpose token and auth to accept invite ([#4498](https://github.com/juspay/hyperswitch/pull/4498)) ([`4b0cf9c`](https://github.com/juspay/hyperswitch/commit/4b0cf9ce3b793c370e754c159f7f2bf2f8b2a310))

    ### Miscellaneous Tasks

    - **payouts:** Update deployment configs for connector_customer ([#4499](https://github.com/juspay/hyperswitch/pull/4499)) ([`5a447af`](https://github.com/juspay/hyperswitch/commit/5a447afd749c170bfe9f1a106fa28a4819a671dc))

    **Full Changelog:** [`2024.05.02.0...2024.05.03.0`](https://github.com/juspay/hyperswitch/compare/2024.05.02.0...2024.05.03.0)

    - - -

    ## 2024.05.02.0

    ### Features

    - **FRM:** Add shipping details for signifyd ([#4500](https://github.com/juspay/hyperswitch/pull/4500)) ([`bda749d`](https://github.com/juspay/hyperswitch/commit/bda749d097ee9cfe80bc509491bec229da3725c3))
    - Add support for merchant to pass public key and ttl for encrypting payload ([#4456](https://github.com/juspay/hyperswitch/pull/4456)) ([`b562e62`](https://github.com/juspay/hyperswitch/commit/b562e62ac895c34574bcc8c3fcce8e5b49d0f923))
    - Add an api for retrieving the extended card info from redis ([#4484](https://github.com/juspay/hyperswitch/pull/4484)) ([`dfa4b50`](https://github.com/juspay/hyperswitch/commit/dfa4b50dbd5cfc927fbbd6a68725d2c51625e6d1))

    ### Bug Fixes

    - **access_token:** Use fallback to `connector_name` if `merchant_connector_id` is not present ([#4503](https://github.com/juspay/hyperswitch/pull/4503)) ([`632a00c`](https://github.com/juspay/hyperswitch/commit/632a00cb6803e3e6f94099e48fb4198a0ea49f99))
    - **connector:** Send valid sdk information in authentication flow netcetera ([#4474](https://github.com/juspay/hyperswitch/pull/4474)) ([`8f0d4d4`](https://github.com/juspay/hyperswitch/commit/8f0d4d4191bb96efd8700fb115d91213c2872ad8))
    - **euclid_wasm:** Connector config wasm metadata update ([#4460](https://github.com/juspay/hyperswitch/pull/4460)) ([`28df646`](https://github.com/juspay/hyperswitch/commit/28df646830f544179b7cf00eb8f51de2a606bdbc))

    ### Refactors

    - **core:** Remove payment_method_id from RouterData struct ([#4485](https://github.com/juspay/hyperswitch/pull/4485)) ([`3077a0d`](https://github.com/juspay/hyperswitch/commit/3077a0d31e8d36f18e359f1edf9a742969601f6b))
    - **cypress:** Read creds from env instead of hardcoding the path ([#4430](https://github.com/juspay/hyperswitch/pull/4430)) ([`0c9ba1e`](https://github.com/juspay/hyperswitch/commit/0c9ba1e848c757cf3e0708f2ed4694259a5344aa))
    - **user:** Deprecate Signin, Verify email and Invite v1 APIs ([#4465](https://github.com/juspay/hyperswitch/pull/4465)) ([`b0133f3`](https://github.com/juspay/hyperswitch/commit/b0133f33693575f2145d295eff78dd07b61efcda))

    ### Miscellaneous Tasks

    - Make client certificate and private key secret across codebase ([#4490](https://github.com/juspay/hyperswitch/pull/4490)) ([`dd7b10a`](https://github.com/juspay/hyperswitch/commit/dd7b10a8bdad4c509a4fbae429f3abd21a5d6758))

    **Full Changelog:** [`2024.04.30.0...2024.05.02.0`](https://github.com/juspay/hyperswitch/compare/2024.04.30.0...2024.05.02.0)

    - - -

    ## 2024.04.30.0

    ### Features

    - **FRM:** Revise post FRM core flows ([#4394](https://github.com/juspay/hyperswitch/pull/4394)) ([`01ec7c6`](https://github.com/juspay/hyperswitch/commit/01ec7c64a4e0536b11052a6d5f3b398216d7b1e3))
    - **router:**
      - Send poll_config in next_action of confirm response for external 3ds flow ([#4443](https://github.com/juspay/hyperswitch/pull/4443)) ([`c3a1db1`](https://github.com/juspay/hyperswitch/commit/c3a1db16f32bd0b5aa49dfc831156a10d6d15838))
      - Handle authorization for frictionless flow in external 3ds flow ([#4471](https://github.com/juspay/hyperswitch/pull/4471)) ([`79d8949`](https://github.com/juspay/hyperswitch/commit/79d8949413c8007e261b66b01596d257fb5959f9))
    - **user:** Add single purpose token and auth ([#4470](https://github.com/juspay/hyperswitch/pull/4470)) ([`c20ecb8`](https://github.com/juspay/hyperswitch/commit/c20ecb855aa3c4b3ce1798dcc19910fb38345b46))
    - Stripe connect integration for payouts ([#2041](https://github.com/juspay/hyperswitch/pull/2041)) ([`ac9d856`](https://github.com/juspay/hyperswitch/commit/ac9d856add0220701f809c8eb0668afe77003ef7))

    **Full Changelog:** [`2024.04.29.0...2024.04.30.0`](https://github.com/juspay/hyperswitch/compare/2024.04.29.0...2024.04.30.0)

    - - -

    ## 2024.04.29.0

    ### Features

    - **connector:** [CRYPTOPAY] Report underpaid/overpaid amount in outgoing webhooks ([#4468](https://github.com/juspay/hyperswitch/pull/4468)) ([`cc1051d`](https://github.com/juspay/hyperswitch/commit/cc1051da99c1b4e007d7f730e2fe3cb08b078d80))
    - **users:** Use cookie for auth ([#4434](https://github.com/juspay/hyperswitch/pull/4434)) ([`b2b9fab`](https://github.com/juspay/hyperswitch/commit/b2b9fab31dc838958e59a7a6755a0585d5a10302))

    ### Refactors

    - **access_token:** Use `merchant_connector_id` for storing access token ([#4462](https://github.com/juspay/hyperswitch/pull/4462)) ([`d98551d`](https://github.com/juspay/hyperswitch/commit/d98551d80a14e2878fbac93e4ba0ecb537018802))
    - **required_fields:** Change required fields for billing address ([#4258](https://github.com/juspay/hyperswitch/pull/4258)) ([`e730030`](https://github.com/juspay/hyperswitch/commit/e730030e24d177b3e696b446e5ccb964cc07ee37))
    - **scheduler:** Join frequency and count in `RetryMapping` ([#4313](https://github.com/juspay/hyperswitch/pull/4313)) ([`3335195`](https://github.com/juspay/hyperswitch/commit/33351953baf32be96f6ec11982c05f2bb1edb989))

    **Full Changelog:** [`2024.04.26.0...2024.04.29.0`](https://github.com/juspay/hyperswitch/compare/2024.04.26.0...2024.04.29.0)

    - - -

    ## 2024.04.26.0

    ### Features

    - **core:** [Payouts] Add access_token flow for Payout Create and Fulfill flow ([#4375](https://github.com/juspay/hyperswitch/pull/4375)) ([`7f0d04f`](https://github.com/juspay/hyperswitch/commit/7f0d04fe3782cf6777c67e40e708c7abb5c4f45e))
    - Add an api for toggling extended card info feature ([#4444](https://github.com/juspay/hyperswitch/pull/4444)) ([`87d9fce`](https://github.com/juspay/hyperswitch/commit/87d9fced07e5cc1366eb6d16d2584bd920ad16fe))

    ### Bug Fixes

    - **connector:** [CYBERSOURCE] Handle HTML Error Response and add Descriptor field in ApplePay payments request ([#4451](https://github.com/juspay/hyperswitch/pull/4451)) ([`dbd3160`](https://github.com/juspay/hyperswitch/commit/dbd3160fcf310b2942ef096bfb091881bfeec902))

    ### Refactors

    - **configs:** Add comments to configs for deployments to environments ([#4458](https://github.com/juspay/hyperswitch/pull/4458)) ([`9d096e6`](https://github.com/juspay/hyperswitch/commit/9d096e6b4883e34908eca0d5aa134a88bec22b40))
    - **connector:** Pass optional browser_info to stripe for increased trust ([#4374](https://github.com/juspay/hyperswitch/pull/4374)) ([`4c793c3`](https://github.com/juspay/hyperswitch/commit/4c793c3c00e93ebf4a4db3439a213474ff57b54d))
    - **core:** Make save_payment_method as post_update_tracker trait function ([#4307](https://github.com/juspay/hyperswitch/pull/4307)) ([`5f40eee`](https://github.com/juspay/hyperswitch/commit/5f40eee3fa264390ea6ac7feaca7737d83dccb3a))
    - **payment_methods:** Store `card_network` in locker ([#4425](https://github.com/juspay/hyperswitch/pull/4425)) ([`5b54d55`](https://github.com/juspay/hyperswitch/commit/5b54d55c5e0d2c8ae1090fb566434efb50120857))
    - **voucher:** Remove billing details from voucher pmd ([#4361](https://github.com/juspay/hyperswitch/pull/4361)) ([`2dd0ee6`](https://github.com/juspay/hyperswitch/commit/2dd0ee68bf23e5f49d22011f0294f44f4e97423b))

    ### Documentation

    - **cypress:** Update Cypress README Documentation ([#4380](https://github.com/juspay/hyperswitch/pull/4380)) ([`8ee1a58`](https://github.com/juspay/hyperswitch/commit/8ee1a58c386fc5f08025c6ac90c96468e6d26bc7))
    - Add documentation page for building Docker images ([#4457](https://github.com/juspay/hyperswitch/pull/4457)) ([`705e827`](https://github.com/juspay/hyperswitch/commit/705e82779a2b7bfd0cb1cd856b4a760d487cd8c5))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`047f917`](https://github.com/juspay/hyperswitch/commit/047f9171a5ae5e8211e18b1c882672dab0c26d07))

    **Full Changelog:** [`2024.04.25.0...2024.04.26.0`](https://github.com/juspay/hyperswitch/compare/2024.04.25.0...2024.04.26.0)

    - - -

    ## 2024.04.25.0

    ### Features

    - **router:** Handle authorize redirection after webhook processing for external 3ds flow ([#4452](https://github.com/juspay/hyperswitch/pull/4452)) ([`131e487`](https://github.com/juspay/hyperswitch/commit/131e487c662985737e9b50a8e62295ed9d23ca83))

    ### Bug Fixes

    - **routing/tests:** Fix unit tests for routing ([#4438](https://github.com/juspay/hyperswitch/pull/4438)) ([`1d0d94d`](https://github.com/juspay/hyperswitch/commit/1d0d94d5e6528534ce461db39620f35490582ecb))

    ### Documentation

    - **try_local_system:** Update WSL setup guide to address a memory issue ([#4431](https://github.com/juspay/hyperswitch/pull/4431)) ([`56f14b9`](https://github.com/juspay/hyperswitch/commit/56f14b935d5e9742a894408a714033318ecb6f2a))

    ### Miscellaneous Tasks

    - Remove repetitive words ([#4448](https://github.com/juspay/hyperswitch/pull/4448)) ([`f49b0b3`](https://github.com/juspay/hyperswitch/commit/f49b0b3aabdf72030cb893ce479214eccd5a6e0f))

    **Full Changelog:** [`2024.04.24.0...2024.04.25.0`](https://github.com/juspay/hyperswitch/compare/2024.04.24.0...2024.04.25.0)

    - - -

    ## 2024.04.24.0

    ### Features

    - **connector:**
      - Implement authentication flow for netcetera ([#4334](https://github.com/juspay/hyperswitch/pull/4334)) ([`5ce0535`](https://github.com/juspay/hyperswitch/commit/5ce0535bb6798af16057c1323541ee4789dbceb1))
      - Add webhook support for netcetera ([#4382](https://github.com/juspay/hyperswitch/pull/4382)) ([`776c1a7`](https://github.com/juspay/hyperswitch/commit/776c1a7a24b494bf767c5524d1b8ac90472d32e2))

    ### Bug Fixes

    - **masking:** Mask email while logging SQL query ([#4436](https://github.com/juspay/hyperswitch/pull/4436)) ([`4c81a66`](https://github.com/juspay/hyperswitch/commit/4c81a664c90ad749e80c372296c844b39dded334))
    - **user:** Blacklist token after delete user role ([#4428](https://github.com/juspay/hyperswitch/pull/4428)) ([`b67e07f`](https://github.com/juspay/hyperswitch/commit/b67e07fb9ee576c57dcbca21c52aa1e4ed2d2818))

    ### Refactors

    - **router:** Enable saved payment method for payment link bug fix ([#4435](https://github.com/juspay/hyperswitch/pull/4435)) ([`213ff06`](https://github.com/juspay/hyperswitch/commit/213ff063a0f6182f9ccd7cdb268aad1ec0372cc9))

    ### Miscellaneous Tasks

    - **configs:** Add wasm changes for pull_mechanism_enabled config for 3dsecureio connector ([#4433](https://github.com/juspay/hyperswitch/pull/4433)) ([`b2248fe`](https://github.com/juspay/hyperswitch/commit/b2248fe08b0b075a9d326e862a18f50e5bef12f8))

    **Full Changelog:** [`2024.04.23.0...2024.04.24.0`](https://github.com/juspay/hyperswitch/compare/2024.04.23.0...2024.04.24.0)

    - - -

    ## 2024.04.23.0

    ### Features

    - **euclied_wasm:** [NMI] Add configs for extended 3DS ([#4422](https://github.com/juspay/hyperswitch/pull/4422)) ([`b8be10d`](https://github.com/juspay/hyperswitch/commit/b8be10de52e40d2327819d33c6c1ec40a459bdd5))
    - **router:** Add poll ability in external 3ds authorization flow ([#4393](https://github.com/juspay/hyperswitch/pull/4393)) ([`4476553`](https://github.com/juspay/hyperswitch/commit/447655382bcf2fdd69a1ec6a56e5e4df8a8feef2))

    ### Refactors

    - **wallet:** Use `billing.phone` instead of `telephone_number` ([#4329](https://github.com/juspay/hyperswitch/pull/4329)) ([`3e6bc19`](https://github.com/juspay/hyperswitch/commit/3e6bc191fd5804feface9ee1a0cb7ddbbe025569))

    ### Miscellaneous Tasks

    - Add wasm toml configs for netcetera authnetication connector ([#4426](https://github.com/juspay/hyperswitch/pull/4426)) ([`4851da1`](https://github.com/juspay/hyperswitch/commit/4851da1595074dbb2760e76f83403e8ac9f7895f))

    **Full Changelog:** [`2024.04.22.0...2024.04.23.0`](https://github.com/juspay/hyperswitch/compare/2024.04.22.0...2024.04.23.0)

    - - -

    ## 2024.04.22.0

    ### Features

    - **payment_methods:** Client secret implementation in payment method… ([#4134](https://github.com/juspay/hyperswitch/pull/4134)) ([`4330781`](https://github.com/juspay/hyperswitch/commit/43307815e0200caf2e9517ec1374d09696356fbc))
    - **router:** [BOA/CYBS] add avs_response and cvv validation result in the response ([#4376](https://github.com/juspay/hyperswitch/pull/4376)) ([`e458e49`](https://github.com/juspay/hyperswitch/commit/e458e4907e39961f386900f21382c9ace3b7c392))

    ### Bug Fixes

    - **connectors:** Mask fields for webhook_resource_object ([#4400](https://github.com/juspay/hyperswitch/pull/4400)) ([`110bf22`](https://github.com/juspay/hyperswitch/commit/110bf22511cf4994c7325fb105fee60f910c1210))
    - **core:** Fix 3DS mandates, for the connector _mandate_details to be stored in the payment_methods table ([#4323](https://github.com/juspay/hyperswitch/pull/4323)) ([`f4e5784`](https://github.com/juspay/hyperswitch/commit/f4e5784f6ce57b4a205c164889242bfa1bc1fde2))
    - **user:** Add onboarding_survey enum in dashboard metadata type ([#4353](https://github.com/juspay/hyperswitch/pull/4353)) ([`f6fccaf`](https://github.com/juspay/hyperswitch/commit/f6fccafb3d43ce4b2865cf4b3cba7ad8a9619e5b))

    **Full Changelog:** [`2024.04.19.0...2024.04.22.0`](https://github.com/juspay/hyperswitch/compare/2024.04.19.0...2024.04.22.0)

    - - -

    ## 2024.04.19.0

    ### Features

    - **connector:** [NMI] External 3DS flow for Cards ([#4385](https://github.com/juspay/hyperswitch/pull/4385)) ([`4feda8f`](https://github.com/juspay/hyperswitch/commit/4feda8f89049b830f974e82f414720fd12608170))
    - **payments:** Add amount and connector id filter in list ([#4354](https://github.com/juspay/hyperswitch/pull/4354)) ([`53e5307`](https://github.com/juspay/hyperswitch/commit/53e5307c3cc3ae2b9f1d93d6c1e4d8e7827def7c))

    ### Testing

    - **cypress:** Update ConnectorAuth Details ([#4386](https://github.com/juspay/hyperswitch/pull/4386)) ([`ef1914e`](https://github.com/juspay/hyperswitch/commit/ef1914ec9b75240628ad0c6367499ec063d31e3d))

    **Full Changelog:** [`2024.04.18.0...2024.04.19.0`](https://github.com/juspay/hyperswitch/compare/2024.04.18.0...2024.04.19.0)

    - - -

    ## 2024.04.18.0

    ### Features

    - **payment_link:** Add support for saved payment method option for payment link ([#4373](https://github.com/juspay/hyperswitch/pull/4373)) ([`14341ca`](https://github.com/juspay/hyperswitch/commit/14341cad27c635d35a7804752a7dd9db4ad45503))
    - **router:** Add retrieve poll status api ([#4358](https://github.com/juspay/hyperswitch/pull/4358)) ([`ca47ea9`](https://github.com/juspay/hyperswitch/commit/ca47ea9b13ff29085f7cc4e408f2b6498b1d6e8a))

    ### Bug Fixes

    - **config:** Remove `merchant_business_country` from the connector configs as enums can not be handled in this toml file ([#4383](https://github.com/juspay/hyperswitch/pull/4383)) ([`2f59143`](https://github.com/juspay/hyperswitch/commit/2f5914392be9bb4c59c9bf5be9f5d4b6c99ef682))
    - **router:** Make payment_instrument optional ([#4389](https://github.com/juspay/hyperswitch/pull/4389)) ([`450dd0f`](https://github.com/juspay/hyperswitch/commit/450dd0fe0d7c2283fbb43b7dfbe0b6214265d124))

    **Full Changelog:** [`2024.04.17.0...2024.04.18.0`](https://github.com/juspay/hyperswitch/compare/2024.04.17.0...2024.04.18.0)

    - - -

    ## 2024.04.17.0

    ### Features

    - **payment_link:** Added display_sdk_only option for displaying only sdk without payment details ([#4363](https://github.com/juspay/hyperswitch/pull/4363)) ([`4d99098`](https://github.com/juspay/hyperswitch/commit/4d9909899f493ee28fec08846fde9737867df52b))

    ### Refactors

    - **payment_methods:** Revamp payment methods update endpoint ([#4305](https://github.com/juspay/hyperswitch/pull/4305)) ([`3333bbf`](https://github.com/juspay/hyperswitch/commit/3333bbfe7f5af30b872809629f9942a76a823638))

    **Full Changelog:** [`2024.04.16.1...2024.04.17.0`](https://github.com/juspay/hyperswitch/compare/2024.04.16.1...2024.04.17.0)

    - - -

    ## 2024.04.16.1

    ### Features

    - **connector:** Integrate netcetera connector with pre authentication flow ([#4293](https://github.com/juspay/hyperswitch/pull/4293)) ([`d4dbaad`](https://github.com/juspay/hyperswitch/commit/d4dbaadb06f74835235c0deb53835a8f97fa26b6))
    - **mandate_kv:** Add kv support for mandate ([#4275](https://github.com/juspay/hyperswitch/pull/4275)) ([`00340a3`](https://github.com/juspay/hyperswitch/commit/00340a3369a08d93b7fe7a2c1c7ba244ee5b6248))
    - **payments:** Get new filters for payments list ([#4174](https://github.com/juspay/hyperswitch/pull/4174)) ([`c3361ef`](https://github.com/juspay/hyperswitch/commit/c3361ef5ebed09b24df73221faaa6d6178fda070))
    - **pm_list:** Add dynamic fields for local bank transfer ([#4349](https://github.com/juspay/hyperswitch/pull/4349)) ([`60d244c`](https://github.com/juspay/hyperswitch/commit/60d244cbe860fd13749ac8b4f6adfd85aefb8dde))
    - **router:** Add external authentication webhooks flow ([#4339](https://github.com/juspay/hyperswitch/pull/4339)) ([`00cd96d`](https://github.com/juspay/hyperswitch/commit/00cd96d0979244d71abfa0a20c7a5125997c73d6))

    ### Bug Fixes

    - **address:** Use first_name if last_name is not passed ([#4360](https://github.com/juspay/hyperswitch/pull/4360)) ([`1b7cde2`](https://github.com/juspay/hyperswitch/commit/1b7cde2d1b687e9c5ca8e3c02eef5c7d3fb7da8f))
    - Added find all support for pm kv ([#4357](https://github.com/juspay/hyperswitch/pull/4357)) ([`5b811aa`](https://github.com/juspay/hyperswitch/commit/5b811aac00493f2368716265418f1c547450222c))

    **Full Changelog:** [`2024.04.16.0...2024.04.16.1`](https://github.com/juspay/hyperswitch/compare/2024.04.16.0...2024.04.16.1)

    - - -

    ## 2024.04.16.0

    ### Features

    - **events:** Add payment cancel events ([#4166](https://github.com/juspay/hyperswitch/pull/4166)) ([`dea21c6`](https://github.com/juspay/hyperswitch/commit/dea21c65ffc872394caa39e29bcd6674d2e4f174))
    - **router:** Add `merchant_business_country` field in apple pay `session_token_data` ([#4236](https://github.com/juspay/hyperswitch/pull/4236)) ([`c3c8d09`](https://github.com/juspay/hyperswitch/commit/c3c8d094531df8092c1e9b772af75b22a7c2dccb))

    ### Miscellaneous Tasks

    - **configs:** [Zsl] Add configs for wasm ([#4346](https://github.com/juspay/hyperswitch/pull/4346)) ([`2f7faca`](https://github.com/juspay/hyperswitch/commit/2f7faca97e0ad47341e73a261fb9faff9043de13))

    **Full Changelog:** [`2024.04.15.0...2024.04.16.0`](https://github.com/juspay/hyperswitch/compare/2024.04.15.0...2024.04.16.0)

    - - -

    ## 2024.04.15.0

    ### Bug Fixes

    - **logger:** Use specified log level only for first-party crates ([#4356](https://github.com/juspay/hyperswitch/pull/4356)) ([`b204be0`](https://github.com/juspay/hyperswitch/commit/b204be0e919d0ffd97b383e6a654982f78f9fa3d))

    ### Refactors

    - **router:** Change stack size ([#4355](https://github.com/juspay/hyperswitch/pull/4355)) ([`4c2e972`](https://github.com/juspay/hyperswitch/commit/4c2e97273ab07917477ce016f7f04400e7e5df9a))

    **Full Changelog:** [`2024.04.12.1...2024.04.15.0`](https://github.com/juspay/hyperswitch/compare/2024.04.12.1...2024.04.15.0)

    - - -

    ## 2024.04.12.1

    ### Features

    - **core:** Create mandates with payment_token ([#4342](https://github.com/juspay/hyperswitch/pull/4342)) ([`53697fb`](https://github.com/juspay/hyperswitch/commit/53697fb472d6e236d57aef6883a6b11a0e9232f1))
    - **customer:** Customer kv impl ([#4267](https://github.com/juspay/hyperswitch/pull/4267)) ([`c980f01`](https://github.com/juspay/hyperswitch/commit/c980f016918144290ea98df2860644249c7b2e03))

    ### Bug Fixes

    - **connector:** [ZSL] Add base_url to Environments ([#4344](https://github.com/juspay/hyperswitch/pull/4344)) ([`91830f6`](https://github.com/juspay/hyperswitch/commit/91830f6d7965f1ba9c23925a1399fdf810a7b31a))
    - **payouts:** Update payout's state in app after DB operations ([#4341](https://github.com/juspay/hyperswitch/pull/4341)) ([`0fe93d6`](https://github.com/juspay/hyperswitch/commit/0fe93d65b40acf169ec333bc238505e3381f9842))
    - **router:** Capture billing country in payments request ([#4347](https://github.com/juspay/hyperswitch/pull/4347)) ([`986ed2a`](https://github.com/juspay/hyperswitch/commit/986ed2a923444a38960462ec03f5e7cd8a2c249a))
    - Revert payment method kv changes ([#4351](https://github.com/juspay/hyperswitch/pull/4351)) ([`bb202e3`](https://github.com/juspay/hyperswitch/commit/bb202e39bfc10cfc5ea6e15805ba28e2699284c8))

    ### Refactors

    - **payment_methods:** Add BankTransfer payment method data to new domain type to be used in connector module ([#4260](https://github.com/juspay/hyperswitch/pull/4260)) ([`08d0811`](https://github.com/juspay/hyperswitch/commit/08d08114be0792614ce8fb990d6a9f45420cae33))

    **Full Changelog:** [`2024.04.12.0...2024.04.12.1`](https://github.com/juspay/hyperswitch/compare/2024.04.12.0...2024.04.12.1)

    - - -

    ## 2024.04.12.0

    ### Features

    - **connector:** [ZSL] add connector template code ([#4285](https://github.com/juspay/hyperswitch/pull/4285)) ([`086516b`](https://github.com/juspay/hyperswitch/commit/086516b7b307e074b4301bd14a4c65595b6e142c))
    - **events:** Add events framework for registering events ([#4115](https://github.com/juspay/hyperswitch/pull/4115)) ([`3963219`](https://github.com/juspay/hyperswitch/commit/3963219e44bd771353d754aa356097e2d78a1392))
    - **payment_methods:** Added kv support for payment_methods table ([#4311](https://github.com/juspay/hyperswitch/pull/4311)) ([`eb3cecd`](https://github.com/juspay/hyperswitch/commit/eb3cecdd74b4c758948f9de82727af76b9ba9fb0))
    - **payouts:** Add kafka events ([#4264](https://github.com/juspay/hyperswitch/pull/4264)) ([`a2958c3`](https://github.com/juspay/hyperswitch/commit/a2958c33b5c4ed627c97e97e791ca2cfbfcecd5e))
    - **router:**
      - Add `ApiKeyAuth` support for `upsert_connector_agnostic_mandate_config` ([#4335](https://github.com/juspay/hyperswitch/pull/4335)) ([`963a10c`](https://github.com/juspay/hyperswitch/commit/963a10c877cf7e63cef2c05093cc2c3d4eab66ec))
      - Add support for accepting an existing `payment_method_id` as the `payment_method_data` in `/payments` request ([#4328](https://github.com/juspay/hyperswitch/pull/4328)) ([`92e19af`](https://github.com/juspay/hyperswitch/commit/92e19af275c615db77e3ae398bfd487529210ba4))
    - **users:** Add role specific fields for list merchants API ([#4326](https://github.com/juspay/hyperswitch/pull/4326)) ([`018c5b1`](https://github.com/juspay/hyperswitch/commit/018c5b10646a68a9898c47ade4874d52250231a8))

    ### Bug Fixes

    - **compatibility:** Generate payment_id if not sent ([#4125](https://github.com/juspay/hyperswitch/pull/4125)) ([`9448673`](https://github.com/juspay/hyperswitch/commit/9448673c1c49fe1419f47c28f59e30268b9691c5))
    - **connectors:** Amount received should be zero for `pending` and `failed` status ([#4331](https://github.com/juspay/hyperswitch/pull/4331)) ([`6aa66c4`](https://github.com/juspay/hyperswitch/commit/6aa66c4243fd2a55c9df5420fd2dc85ef156561b))
    - **mandate:** Add validation for currency in MIT recurring payments ([#4308](https://github.com/juspay/hyperswitch/pull/4308)) ([`07c917c`](https://github.com/juspay/hyperswitch/commit/07c917c0559da1774848d0deb95a2725fc0d6503))

    ### Refactors

    - **card:** Use `billing.first_name` instead of `card_holder_name` ([#4239](https://github.com/juspay/hyperswitch/pull/4239)) ([`8b66cda`](https://github.com/juspay/hyperswitch/commit/8b66cdaaf384bb0d5ce986334a7b32bb3cb13581))
    - **connector:** [Ebanx] Add base_url to Integ Environment ([#4332](https://github.com/juspay/hyperswitch/pull/4332)) ([`13ba3cb`](https://github.com/juspay/hyperswitch/commit/13ba3cbd9627ff53b701084d8d4c0b800793a3e3))
    - **connectors:** [ZSL] add Local bank Transfer ([#4337](https://github.com/juspay/hyperswitch/pull/4337)) ([`266a075`](https://github.com/juspay/hyperswitch/commit/266a075ab653b96505a4f8f26688153ced952c8f))
    - **payment_methods:**
      - Add some payment method data to new domain type to be used in connector module ([#4234](https://github.com/juspay/hyperswitch/pull/4234)) ([`ce1e165`](https://github.com/juspay/hyperswitch/commit/ce1e165cecade481ce6002795049d6a9ffec96e2))
      - Add BankDebit payment method data to new domain type to be used in connector module ([#4238](https://github.com/juspay/hyperswitch/pull/4238)) ([`2bf775a`](https://github.com/juspay/hyperswitch/commit/2bf775a97e331cde2cad3e3d2a325850d969add9))
    - **router:** Add `updated` field to `PaymentsResponse` ([#4292](https://github.com/juspay/hyperswitch/pull/4292)) ([`c99e038`](https://github.com/juspay/hyperswitch/commit/c99e038a4813aa68b7a0a6ad3458c93a0e3c27ba))

    ### Miscellaneous Tasks

    - **deps:** Update time crate to 0.3.35 ([#4338](https://github.com/juspay/hyperswitch/pull/4338)) ([`44e7456`](https://github.com/juspay/hyperswitch/commit/44e7456a1088f8c413ff3694357822328bbc29bb))

    **Full Changelog:** [`2024.04.10.0...2024.04.12.0`](https://github.com/juspay/hyperswitch/compare/2024.04.10.0...2024.04.12.0)

    - - -

    ## 2024.04.10.0

    ### Features

    - **connector:** [Ebanx] Template for ebanx payout ([#4141](https://github.com/juspay/hyperswitch/pull/4141)) ([`ed186a5`](https://github.com/juspay/hyperswitch/commit/ed186a5a9343c1d735749eb9ec90cb0d0f6094cd))
    - **router:** Add local bank transfer payment method ([#4294](https://github.com/juspay/hyperswitch/pull/4294)) ([`06440eb`](https://github.com/juspay/hyperswitch/commit/06440eb6400adf166b203d7e4f587c1e2d5fe4f8))

    ### Bug Fixes

    - **psync:** Log the error if payment method retrieve fails in the `psync flow` ([#4321](https://github.com/juspay/hyperswitch/pull/4321)) ([`5b89209`](https://github.com/juspay/hyperswitch/commit/5b89209b6f48691ee5ae2f9ede0d913abc9105f9))

    ### Refactors

    - **payment_methods:** Add BankRedirect payment method data to new domain type to be used in connector module ([#4175](https://github.com/juspay/hyperswitch/pull/4175)) ([`e0e8437`](https://github.com/juspay/hyperswitch/commit/e0e843715cd02ac8b2eff2f645fe8471551ee914))

    **Full Changelog:** [`2024.04.08.0...2024.04.10.0`](https://github.com/juspay/hyperswitch/compare/2024.04.08.0...2024.04.10.0)

    - - -

    ## 2024.04.08.0

    ### Features

    - **users:** Implemented cookie parsing for auth ([#4298](https://github.com/juspay/hyperswitch/pull/4298)) ([`2d394f9`](https://github.com/juspay/hyperswitch/commit/2d394f98e96d0beafca24abe2ac9f10a05460993))

    ### Bug Fixes

    - **locker:** Handle card duplication in payouts flow ([#4013](https://github.com/juspay/hyperswitch/pull/4013)) ([`2fac436`](https://github.com/juspay/hyperswitch/commit/2fac436683060b8e7c81b210dfdf468f5194f24c))
    - **mandates:** Store network transaction id only when `pg_agnostic` config is enabled in the `authorize_flow` ([#4318](https://github.com/juspay/hyperswitch/pull/4318)) ([`7b4c4fe`](https://github.com/juspay/hyperswitch/commit/7b4c4fea332d56f81a73b496fa0fefdbb64b3648))
    - **redis_interface:** Remove mget function from redis interface ([#4303](https://github.com/juspay/hyperswitch/pull/4303)) ([`14035d2`](https://github.com/juspay/hyperswitch/commit/14035d2f838d88c56fe37f78caab6c88bc8b33e4))

    ### Refactors

    - **payment_methods:** Add PayLater payment method data to new domain type to be used in connector module ([#4165](https://github.com/juspay/hyperswitch/pull/4165)) ([`6694852`](https://github.com/juspay/hyperswitch/commit/669485275db192b0e8e30f3528c0d61150d91847))

    **Full Changelog:** [`2024.04.05.0...2024.04.08.0`](https://github.com/juspay/hyperswitch/compare/2024.04.05.0...2024.04.08.0)

    - - -

    ## 2024.04.05.0

    ### Features

    - **payout-events:** Add kafka events for payout analytics ([#4211](https://github.com/juspay/hyperswitch/pull/4211)) ([`bc25f3f`](https://github.com/juspay/hyperswitch/commit/bc25f3fa40e807cc92d2d53a2287b92eff727d3c))
    - **router:**
      - Store `network_reference_id` against the `payment_method_id` in the `payment_method_table` ([#4041](https://github.com/juspay/hyperswitch/pull/4041)) ([`21e2d78`](https://github.com/juspay/hyperswitch/commit/21e2d78117a9e25708b8c6a2280f6a836ee86072))
      - Use `NTID` in `MIT` payments if the `pg_agnostic_mit` config is enabled ([#4113](https://github.com/juspay/hyperswitch/pull/4113)) ([`b58d7a8`](https://github.com/juspay/hyperswitch/commit/b58d7a8e62eef9880f717731063101bf92af3f34))
      - Add NTID flow for cybersource ([#4193](https://github.com/juspay/hyperswitch/pull/4193)) ([`071462f`](https://github.com/juspay/hyperswitch/commit/071462f2af8efeb16e48d351bbae68fd2fd64179))
    - **webhooks:** Allow manually retrying delivery of outgoing webhooks ([#4176](https://github.com/juspay/hyperswitch/pull/4176)) ([`63d2b68`](https://github.com/juspay/hyperswitch/commit/63d2b6855acee1adeae2efff10f424e056af0bcb))

    ### Bug Fixes

    - **payouts:** Persist status updates in payouts table ([#4280](https://github.com/juspay/hyperswitch/pull/4280)) ([`02ffe7e`](https://github.com/juspay/hyperswitch/commit/02ffe7e48068a43d319d67e0e976420d201776db))

    ### Refactors

    - **connector:**
      - [Multisafepay] handle authorize and psync 2xx failure error response ([#4124](https://github.com/juspay/hyperswitch/pull/4124)) ([`9ebe0f4`](https://github.com/juspay/hyperswitch/commit/9ebe0f4371f13c7527972242424af2d926c84b5e))
      - Add support for GooglePay recurring payments ([#4300](https://github.com/juspay/hyperswitch/pull/4300)) ([`622aac3`](https://github.com/juspay/hyperswitch/commit/622aac3015e95de55e83abd047b5c680ecd8d662))
    - **core:** Log the appropriate error message if the card fails to get saved in locker ([#4296](https://github.com/juspay/hyperswitch/pull/4296)) ([`9de3cdb`](https://github.com/juspay/hyperswitch/commit/9de3cdb7d37dd1d18c6a84368e70ceb52b7ae53a))
    - **payment_link:** Decouple shimmer css from main payment_link css for better performance ([#4286](https://github.com/juspay/hyperswitch/pull/4286)) ([`9453e8f`](https://github.com/juspay/hyperswitch/commit/9453e8fcfac49fc399343ee7c4c1598412b370c7))

    **Full Changelog:** [`2024.04.04.0...2024.04.05.0`](https://github.com/juspay/hyperswitch/compare/2024.04.04.0...2024.04.05.0)

    - - -

    ## 2024.04.04.0

    ### Features

    - **api:** Add browser information in payments response ([#3963](https://github.com/juspay/hyperswitch/pull/3963)) ([`4051cbb`](https://github.com/juspay/hyperswitch/commit/4051cbb4e7f708267b26439061e001bb00342cad))
    - **core:** Update connector_mandate_details in payment_method ([#4155](https://github.com/juspay/hyperswitch/pull/4155)) ([`d8028ce`](https://github.com/juspay/hyperswitch/commit/d8028cefd53219ce15ba31ff3ea5ada3c0e217e7))
    - **cypress:** Add cypress test cases ([#4271](https://github.com/juspay/hyperswitch/pull/4271)) ([`06e30e0`](https://github.com/juspay/hyperswitch/commit/06e30e04b06779862dd493ecaa7285875ffb402b))
    - **router:** Create a merchant config for enable processor agnostic MIT ([#4025](https://github.com/juspay/hyperswitch/pull/4025)) ([`2a691a5`](https://github.com/juspay/hyperswitch/commit/2a691a5c05573b0a9caa8b2d7e57bc90c49280fe))

    ### Refactors

    - **connector:** [Stripe] fix mandate flow ([#4281](https://github.com/juspay/hyperswitch/pull/4281)) ([`ea706f8`](https://github.com/juspay/hyperswitch/commit/ea706f81debd13a44a49ac3d1d3ef7f1882b683b))
    - **core:** Locker call made synchronous for updation of pm_id ([#4289](https://github.com/juspay/hyperswitch/pull/4289)) ([`6e94a56`](https://github.com/juspay/hyperswitch/commit/6e94a5636462a8071e69f072ec058c6068e5d1f7))
    - **mandates:** Add validations for recurring mandates using payment_method_id ([#4263](https://github.com/juspay/hyperswitch/pull/4263)) ([`49cfe72`](https://github.com/juspay/hyperswitch/commit/49cfe72cd2a20ba25c3323fca81bba7ea48b591b))
    - **payment_methods:**
      - Add Wallets payment method data to new domain type to be used in connector module ([#4160](https://github.com/juspay/hyperswitch/pull/4160)) ([`8efd468`](https://github.com/juspay/hyperswitch/commit/8efd468ac150ff8d28f5b44b25701ba1837f243d))
      - Add `network_transaction_id` column in the `payment_methods` table ([#4005](https://github.com/juspay/hyperswitch/pull/4005)) ([`179f5ff`](https://github.com/juspay/hyperswitch/commit/179f5ff052aa530f2b429aaf20ea326bdc7f7ce0))
    - **payout:** Handle saving wallet in temp locker ([#4230](https://github.com/juspay/hyperswitch/pull/4230)) ([`ae37b05`](https://github.com/juspay/hyperswitch/commit/ae37b059e09d9e6b597914536359fbdd5dd777d2))
    - Fix typos ([#4277](https://github.com/juspay/hyperswitch/pull/4277)) ([`36f4112`](https://github.com/juspay/hyperswitch/commit/36f4112a6fa07c53a0b0c101539e4bf36d18893f))
    - Fix typos in stripe transformers ([#4287](https://github.com/juspay/hyperswitch/pull/4287)) ([`4445a86`](https://github.com/juspay/hyperswitch/commit/4445a86207a31fd84553c70959a1341143759bc3))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`70eb294`](https://github.com/juspay/hyperswitch/commit/70eb2940ecef503cbf9a898d0f8382f9abe83057))

    **Full Changelog:** [`2024.04.03.0...2024.04.04.0`](https://github.com/juspay/hyperswitch/compare/2024.04.03.0...2024.04.04.0)

    - - -

    ## 2024.04.03.0

    ### Features

    - **analytics:** Three_ds and authentication events in sdkevents ([#4251](https://github.com/juspay/hyperswitch/pull/4251)) ([`88b53b0`](https://github.com/juspay/hyperswitch/commit/88b53b0d5ccfb16b03fc17c453f2c7afa26ec92e))
    - **payment_link:** Add payment info metadata to payment link ([#4270](https://github.com/juspay/hyperswitch/pull/4270)) ([`97fbc89`](https://github.com/juspay/hyperswitch/commit/97fbc899c12a0c66ac89a7feaa6d45d39239a746))
    - **router:** [BOA] implement mandates for cards and wallets ([#4232](https://github.com/juspay/hyperswitch/pull/4232)) ([`2f304e6`](https://github.com/juspay/hyperswitch/commit/2f304e601607980e7e536d94411ddf0f9023c605))

    ### Bug Fixes

    - **connector:** [Cryptopay]fix redirection for cryptopay ([#4272](https://github.com/juspay/hyperswitch/pull/4272)) ([`1023f46`](https://github.com/juspay/hyperswitch/commit/1023f46c885dc2b70ccbb3931e667740695f448e))

    ### Refactors

    - **payment_methods:** Add a new domain type for payment method data to be used in connector module ([#4140](https://github.com/juspay/hyperswitch/pull/4140)) ([`9cce152`](https://github.com/juspay/hyperswitch/commit/9cce1520e3b0c7c1d1ae70ca8cc30787ff96dded))
    - **postman:** Paypal test cases for Capture ([#4265](https://github.com/juspay/hyperswitch/pull/4265)) ([`a071463`](https://github.com/juspay/hyperswitch/commit/a071463b29f9794e7069d57057d3bcc3a238f89b))

    ### Build System / Dependencies

    - **deps:** Update dependencies ([#4268](https://github.com/juspay/hyperswitch/pull/4268)) ([`1f0d60e`](https://github.com/juspay/hyperswitch/commit/1f0d60e64fc9379d8a07a0c72970afc7b491dafa))

    **Full Changelog:** [`2024.04.02.0...2024.04.03.0`](https://github.com/juspay/hyperswitch/compare/2024.04.02.0...2024.04.03.0)

    - - -

    ## 2024.04.02.0

    ### Features

    - **connector:** [billwerk] implement payment and refund flows ([#4245](https://github.com/juspay/hyperswitch/pull/4245)) ([`aecf4ae`](https://github.com/juspay/hyperswitch/commit/aecf4aeacce33c3dc03e089ef6d62af93e29ca9a))
    - Return customer details in payments response body ([#4237](https://github.com/juspay/hyperswitch/pull/4237)) ([`740749e`](https://github.com/juspay/hyperswitch/commit/740749e18ae4458726cdf2501f3d3b789c819f7a))

    ### Refactors

    - **core:** Removed the processing status for payment_method_status ([#4213](https://github.com/juspay/hyperswitch/pull/4213)) ([`a843713`](https://github.com/juspay/hyperswitch/commit/a843713126cea102064b342b6fc82429d89d758a))

    ### Documentation

    - **README:** Remove link to outdated early access form ([`78befb4`](https://github.com/juspay/hyperswitch/commit/78befb42a35b1f98b1bd47b253d3c06e50bb2ee4))

    ### Build System / Dependencies

    - **deps:** Bump `error-stack` from version `0.3.1` to `0.4.1` ([#4188](https://github.com/juspay/hyperswitch/pull/4188)) ([`ea730d4`](https://github.com/juspay/hyperswitch/commit/ea730d4ffc712cdf264492db109836fcde9b2b03))

    **Full Changelog:** [`2024.04.01.0...2024.04.02.0`](https://github.com/juspay/hyperswitch/compare/2024.04.01.0...2024.04.02.0)

    - - -

    ## 2024.04.01.0

    ### Features

    - **mandates:** Allow off-session payments using `payment_method_id` ([#4132](https://github.com/juspay/hyperswitch/pull/4132)) ([`7b337ac`](https://github.com/juspay/hyperswitch/commit/7b337ac39d72f90dd0ebe58133218896ff279313))
    - **payment_method:** API to list countries and currencies supported by a country and payment method type ([#4126](https://github.com/juspay/hyperswitch/pull/4126)) ([`74cd4a7`](https://github.com/juspay/hyperswitch/commit/74cd4a79526eb1a2dead87855e6a39248ec5ccb7))

    ### Miscellaneous Tasks

    - **config:** Add billwerk base URL in deployment configs ([#4243](https://github.com/juspay/hyperswitch/pull/4243)) ([`e8289f0`](https://github.com/juspay/hyperswitch/commit/e8289f061d4735478cb1521de50f696d2412ad33))

    **Full Changelog:** [`2024.03.28.0...2024.04.01.0`](https://github.com/juspay/hyperswitch/compare/2024.03.28.0...2024.04.01.0)

    - - -

    ## 2024.03.28.0

    ### Features

    - **connector:** [billwerk] add connector template code ([#4123](https://github.com/juspay/hyperswitch/pull/4123)) ([`37be05d`](https://github.com/juspay/hyperswitch/commit/37be05d31d97651ddaa2c67b828d24563b35d37e))

    ### Bug Fixes

    - **connectors:** Fix wallet token deserialization error ([#4133](https://github.com/juspay/hyperswitch/pull/4133)) ([`929848f`](https://github.com/juspay/hyperswitch/commit/929848f8713b45daf479ba24fb0a49b8e327b6fd))
    - **core:** Amount capturable remain same for `processing` status in capture ([#4229](https://github.com/juspay/hyperswitch/pull/4229)) ([`9523cf4`](https://github.com/juspay/hyperswitch/commit/9523cf4bbac488503c31640cade326095937e33c))
    - **euclid_wasm:** Checkout wasm metadata issue ([#4198](https://github.com/juspay/hyperswitch/pull/4198)) ([`246898f`](https://github.com/juspay/hyperswitch/commit/246898fbb00a67d5791827527ce45e01b01b232c))
    - **log:** Adding span metadata to `tokio` spawned futures ([#4118](https://github.com/juspay/hyperswitch/pull/4118)) ([`0706221`](https://github.com/juspay/hyperswitch/commit/070622125f49c4cc9c35f5ba9c634f1fef6b26d2))
    - **trustpay:** [Trustpay] Add error code mapping '800.100.100' ([#4224](https://github.com/juspay/hyperswitch/pull/4224)) ([`9798db4`](https://github.com/juspay/hyperswitch/commit/9798db4558d926a218a0ca6f7f7c4e24a187b3da))

    ### Refactors

    - **config:** Allow wildcard origin for development and Docker Compose setups ([#4231](https://github.com/juspay/hyperswitch/pull/4231)) ([`6587472`](https://github.com/juspay/hyperswitch/commit/65874728094bb550d6c311965fbb5f1577091bbb))

    **Full Changelog:** [`2024.03.27.0...2024.03.28.0`](https://github.com/juspay/hyperswitch/compare/2024.03.27.0...2024.03.28.0)

    - - -

    ## 2024.03.27.0

    ### Bug Fixes

    - **connector:**
      - [Trustpay] fix deserialization error for incoming webhook response for trustpay and add error code mapping '800.100.203' ([#4199](https://github.com/juspay/hyperswitch/pull/4199)) ([`84bef25`](https://github.com/juspay/hyperswitch/commit/84bef251480a77027b43c3dc91353a0cb40d5ff1))
      - [CRYPTOPAY] Skip metadata serialization if none ([#4205](https://github.com/juspay/hyperswitch/pull/4205)) ([`0429399`](https://github.com/juspay/hyperswitch/commit/0429399c29f76c97bf2096bbe9e9b429c025e56b))
    - **core:** Make eci in AuthenticationData optional ([#4187](https://github.com/juspay/hyperswitch/pull/4187)) ([`4f0c788`](https://github.com/juspay/hyperswitch/commit/4f0c788cf26907e2be784978c412081a93386d04))

    **Full Changelog:** [`2024.03.26.0...2024.03.27.0`](https://github.com/juspay/hyperswitch/compare/2024.03.26.0...2024.03.27.0)

    - - -

    ## 2024.03.26.0

    ### Features

    - **events:** Allow listing webhook events and webhook delivery attempts by business profile ([#4159](https://github.com/juspay/hyperswitch/pull/4159)) ([`4c8cdf1`](https://github.com/juspay/hyperswitch/commit/4c8cdf1475ac74fb2df5bea419dfa7657f26f298))
    - **payouts:** Add user roles for payouts ([#4167](https://github.com/juspay/hyperswitch/pull/4167)) ([`13fe584`](https://github.com/juspay/hyperswitch/commit/13fe58450bad094fb2b4745ecf76bc2df8b96798))

    ### Miscellaneous Tasks

    - Address Rust 1.77 clippy lints ([#4172](https://github.com/juspay/hyperswitch/pull/4172)) ([`f213c51`](https://github.com/juspay/hyperswitch/commit/f213c51b3e5c4f0b3546b35bac4dde9698818e01))

    **Full Changelog:** [`2024.03.22.0...2024.03.26.0`](https://github.com/juspay/hyperswitch/compare/2024.03.22.0...2024.03.26.0)

    - - -

    ## 2024.03.22.0

    ### Features

    - **events:** Add APIs to list webhook events and webhook delivery attempts ([#4131](https://github.com/juspay/hyperswitch/pull/4131)) ([`14e1bba`](https://github.com/juspay/hyperswitch/commit/14e1bbaf071d1178f91124fe85580f178cb1cf96))
    - **global-search-regex-escape:** Escape reserved characters which break global search query ([#4135](https://github.com/juspay/hyperswitch/pull/4135)) ([`4f8461b`](https://github.com/juspay/hyperswitch/commit/4f8461b2a949fd2a6d24b8b42f1bf8bab55cfeeb))

    ### Miscellaneous Tasks

    - Update Slack workspace URL ([#4168](https://github.com/juspay/hyperswitch/pull/4168)) ([`75b4bac`](https://github.com/juspay/hyperswitch/commit/75b4bacc984d11cb755a8c36821ec41d3f1e2187))

    **Full Changelog:** [`2024.03.21.1...2024.03.22.0`](https://github.com/juspay/hyperswitch/compare/2024.03.21.1...2024.03.22.0)

    - - -

    ## 2024.03.21.1

    ### Features

    - **payouts:**
      - Implement list and filter APIs ([#3651](https://github.com/juspay/hyperswitch/pull/3651)) ([`fb5f0e6`](https://github.com/juspay/hyperswitch/commit/fb5f0e6c7eb7255ac423ed4385613e9a78227c77))
      - Add payout types in euclid crate ([#3862](https://github.com/juspay/hyperswitch/pull/3862)) ([`a151485`](https://github.com/juspay/hyperswitch/commit/a1514853176e6cdac73e69d90165416613c97d70))

    ### Bug Fixes

    - **router:** Handle redirection to return_url from nested iframe in separate 3ds flow ([#4164](https://github.com/juspay/hyperswitch/pull/4164)) ([`b8c9275`](https://github.com/juspay/hyperswitch/commit/b8c927593a85792588e582bf25f2daadfa5f7fb0))

    **Full Changelog:** [`2024.03.21.0...2024.03.21.1`](https://github.com/juspay/hyperswitch/compare/2024.03.21.0...2024.03.21.1)

    - - -

    ## 2024.03.21.0

    ### Features

    - Store payment check codes and authentication data from processors ([#3958](https://github.com/juspay/hyperswitch/pull/3958)) ([`7afc44e`](https://github.com/juspay/hyperswitch/commit/7afc44e8357b09c900a1e9aa384619f93f3bc81d))

    ### Bug Fixes

    - **payment_methods:**
      - Update payment method status only if existing status is not active ([#4149](https://github.com/juspay/hyperswitch/pull/4149)) ([`0e9b252`](https://github.com/juspay/hyperswitch/commit/0e9b2524cf22a220abeb604dd172aa00855a7ee6))
      - Make `ApplepayPaymentMethod` in payment_method_data column of `payment_attempt` table as json ([#4154](https://github.com/juspay/hyperswitch/pull/4154)) ([`7c0e4c7`](https://github.com/juspay/hyperswitch/commit/7c0e4c7229acacbeb93102bcdc25b74fd7a3314c))

    ### Refactors

    - **connector:** [Stripe] update stripe-api-version in API-headers ([#4120](https://github.com/juspay/hyperswitch/pull/4120)) ([`3653c2c`](https://github.com/juspay/hyperswitch/commit/3653c2c108b80a20df6e8a2bf980d48c204376cd))
    - **payment_method_data:** Add a trait to retrieve billing from payment method data ([#4095](https://github.com/juspay/hyperswitch/pull/4095)) ([`9b9bce8`](https://github.com/juspay/hyperswitch/commit/9b9bce80a6419abdd5318d993f1abd6598853dd3))

    ### Build System / Dependencies

    - **router_env:** Obtain workspace member package names from `cargo_metadata` more deterministically ([#4139](https://github.com/juspay/hyperswitch/pull/4139)) ([`8f7d9fb`](https://github.com/juspay/hyperswitch/commit/8f7d9fbc3a002127e220d8a968a6a4e15796e2fd))

    **Full Changelog:** [`2024.03.20.0...2024.03.21.0`](https://github.com/juspay/hyperswitch/compare/2024.03.20.0...2024.03.21.0)

    - - -

    ## 2024.03.20.0

    ### Features

    - **global-search:** Add dispute events index to global-search ([#4068](https://github.com/juspay/hyperswitch/pull/4068)) ([`9345379`](https://github.com/juspay/hyperswitch/commit/9345379f85a5da786c8f733542d796da567b6ffc))
    - **payouts:** Implement KVRouterStore ([#3889](https://github.com/juspay/hyperswitch/pull/3889)) ([`944089d`](https://github.com/juspay/hyperswitch/commit/944089d6914cb6bece9056f78b9aabf90e485151))
    - **router:**
      - Add offset in mandate list route ([#3923](https://github.com/juspay/hyperswitch/pull/3923)) ([`17a866a`](https://github.com/juspay/hyperswitch/commit/17a866a73541c2340547c67e47b60f813c53f744))
      - Handle redirection to return_url from iframe for separate 3ds flow ([#4119](https://github.com/juspay/hyperswitch/pull/4119)) ([`3eb4642`](https://github.com/juspay/hyperswitch/commit/3eb464250e5d604d90a99d61d1c9d6115252f0ef))

    ### Refactors

    - **connector:** [Stripe] make name field of StripeShippingAddress mandatory ([#4111](https://github.com/juspay/hyperswitch/pull/4111)) ([`ab1ec2a`](https://github.com/juspay/hyperswitch/commit/ab1ec2ad4e3f1197d08c5ff947c31e7f0fcf5c65))
    - **core:** Move authentication data fields to authentication table ([#4093](https://github.com/juspay/hyperswitch/pull/4093)) ([`a3dec0b`](https://github.com/juspay/hyperswitch/commit/a3dec0b6bc52f20246a65ed5255768fcf585147a))

    **Full Changelog:** [`2024.03.19.0...2024.03.20.0`](https://github.com/juspay/hyperswitch/compare/2024.03.19.0...2024.03.20.0)

    - - -

    ## 2024.03.19.0

    ### Features

    - **events:** Add audit events scaffolding ([#3863](https://github.com/juspay/hyperswitch/pull/3863)) ([`6f67985`](https://github.com/juspay/hyperswitch/commit/6f679851dfaca8690fa3c5c2d1a2978bfe6d42b6))

    ### Bug Fixes

    - **payments:** Populate merchant connector id and profile id in list ([#4104](https://github.com/juspay/hyperswitch/pull/4104)) ([`1dac028`](https://github.com/juspay/hyperswitch/commit/1dac0286bb402fec5e4ac3270112fcb7c3f35cd6))

    ### Refactors

    - **connector:**
      - [Coinbase][Cryptopay] Mask PII data ([#3936](https://github.com/juspay/hyperswitch/pull/3936)) ([`8eb31f9`](https://github.com/juspay/hyperswitch/commit/8eb31f94f4aae5daa41799dc78eb3a116653aa0d))
      - [Prophetpay][Rapyd][Shift4][Square] Mask PII data ([#3930](https://github.com/juspay/hyperswitch/pull/3930)) ([`b1face6`](https://github.com/juspay/hyperswitch/commit/b1face64424cd68f0a21192b981698abaec05ec3))
      - [Worldline][Worldpay][Zen] Mask PII data ([#3935](https://github.com/juspay/hyperswitch/pull/3935)) ([`612d2b1`](https://github.com/juspay/hyperswitch/commit/612d2b17e233985b70e72fa5c12164f57dede0ee))
      - [Adyen] change error message from not supported to not implemented ([#2845](https://github.com/juspay/hyperswitch/pull/2845)) ([`c3ef599`](https://github.com/juspay/hyperswitch/commit/c3ef599ad736dee34286150ec6bf5143a526ae6c))
      - [Aci] remove default case handling ([#2513](https://github.com/juspay/hyperswitch/pull/2513)) ([`7398371`](https://github.com/juspay/hyperswitch/commit/73983710a068ff04da54152d1a1a84639f961622))
      - [Klarna] Mask PII data ([#3854](https://github.com/juspay/hyperswitch/pull/3854)) ([`384f32b`](https://github.com/juspay/hyperswitch/commit/384f32ba2d8fcd57eba6c06cf49c0fa08fb21c81))
    - **payment_link:** Make performance optimisation for payment_link ([#4092](https://github.com/juspay/hyperswitch/pull/4092)) ([`fcfd567`](https://github.com/juspay/hyperswitch/commit/fcfd567bfe55747dcb05c88def96373a707f8c78))
    - **router:** Add FE error logs to loki ([#4077](https://github.com/juspay/hyperswitch/pull/4077)) ([`6149d4f`](https://github.com/juspay/hyperswitch/commit/6149d4fb607304ccdf184c8c5f28269a45ef3974))
    - **stripe:** Change NotSupported to NotImplemented error for Stripe ([#3690](https://github.com/juspay/hyperswitch/pull/3690)) ([`6ff8f75`](https://github.com/juspay/hyperswitch/commit/6ff8f75d6cd58e36882877e5194da6a160a88f9e))

    ### Miscellaneous Tasks

    - **config:** Add wasm changes for checkout connector to support external authentication flow ([#4096](https://github.com/juspay/hyperswitch/pull/4096)) ([`ce5cbfb`](https://github.com/juspay/hyperswitch/commit/ce5cbfbda6d1d75790eba6ae68d401e8817aba55))

    **Full Changelog:** [`2024.03.18.0...2024.03.19.0`](https://github.com/juspay/hyperswitch/compare/2024.03.18.0...2024.03.19.0)

    - - -

    ## 2024.03.18.0

    ### Features

    - **connector:**
      - [Paypal] Unify error code and error message in Paypal ([#2354](https://github.com/juspay/hyperswitch/pull/2354)) ([`fc81f90`](https://github.com/juspay/hyperswitch/commit/fc81f90f6168dc6e08cbfacdda0f59e99def07da))
      - [BOA/CYB] Add support for payment status ACCEPTED and CANCELLED ([#4107](https://github.com/juspay/hyperswitch/pull/4107)) ([`c52dbd6`](https://github.com/juspay/hyperswitch/commit/c52dbd6fc21c9c16ebc8f2abed1d2979bc5a606b))
    - **pm_auth:** Support different pm types in PM auth ([#3114](https://github.com/juspay/hyperswitch/pull/3114)) ([`290c456`](https://github.com/juspay/hyperswitch/commit/290c456a235072ac5a5b900c11ca8a4fa1a3b9e4))

    ### Bug Fixes

    - **api_response:** Ghost payment_method_billing being populated in the response ([#4085](https://github.com/juspay/hyperswitch/pull/4085)) ([`3d4baa2`](https://github.com/juspay/hyperswitch/commit/3d4baa230cdfa0e4e0f0ab36f3ca8c96e9b705ad))

    ### Refactors

    - **connector:**
      - [Wise] Response Fields made Optional ([#4007](https://github.com/juspay/hyperswitch/pull/4007)) ([`8c103c0`](https://github.com/juspay/hyperswitch/commit/8c103c0f8e838a899a0c1207c88fa7617b37f138))
      - [Stripe] add stripe-api-version in API-headers ([#4109](https://github.com/juspay/hyperswitch/pull/4109)) ([`ed6fdad`](https://github.com/juspay/hyperswitch/commit/ed6fdad73757425d9419575ce6aba80fae8daf4d))
      - [Payu][Placetopay][PowerTranz] Mask PII data ([#3928](https://github.com/juspay/hyperswitch/pull/3928)) ([`4cbd00b`](https://github.com/juspay/hyperswitch/commit/4cbd00ba410c093878a6e7bc4b3cb76941a57351))
      - [NMI] Mask PII data ([#3876](https://github.com/juspay/hyperswitch/pull/3876)) ([`bbf20c5`](https://github.com/juspay/hyperswitch/commit/bbf20c5b155c003bcef91880653f87c9dedc928f))
    - **core:** Remove pament_method_status from payment_data ([#4061](https://github.com/juspay/hyperswitch/pull/4061)) ([`0f6c97c`](https://github.com/juspay/hyperswitch/commit/0f6c97c47ddd0980ace13840faadc4b6eefaa48e))

    **Full Changelog:** [`2024.03.15.0...2024.03.18.0`](https://github.com/juspay/hyperswitch/compare/2024.03.15.0...2024.03.18.0)

    - - -

    ## 2024.03.15.0

    ### Features

    - **connector:** [cybersource] add card holder name in dynamic fields ([#4082](https://github.com/juspay/hyperswitch/pull/4082)) ([`5185d65`](https://github.com/juspay/hyperswitch/commit/5185d65ef5d48c21b203250cbc310b94212511c9))
    - **webhooks:** Store request and response payloads in `events` table ([#4029](https://github.com/juspay/hyperswitch/pull/4029)) ([`fd67a6c`](https://github.com/juspay/hyperswitch/commit/fd67a6c2255b866ca20823e25c4a2a6fa3304fa7))

    ### Bug Fixes

    - **connector:** [Iatapay] remove unused fields from auth response ([#4091](https://github.com/juspay/hyperswitch/pull/4091)) ([`e5b7bc6`](https://github.com/juspay/hyperswitch/commit/e5b7bc62fbfee7c1e6631b4d38fef5859dd736c1))

    ### Refactors

    - **payment_methods:** Enable country currency filter for cards ([#4056](https://github.com/juspay/hyperswitch/pull/4056)) ([`9ae10dc`](https://github.com/juspay/hyperswitch/commit/9ae10dc4d050f3aa705c72b27e676cdcb0e379c4))
    - **router:** Add IO level application logs ([#4042](https://github.com/juspay/hyperswitch/pull/4042)) ([`ad17cc7`](https://github.com/juspay/hyperswitch/commit/ad17cc738372e7397d73d6f55cae56beafa4e849))

    ### Miscellaneous Tasks

    - **config:** [AUTHORIZEDOTNET] Add apple pay manual flow to dashboard ([#4080](https://github.com/juspay/hyperswitch/pull/4080)) ([`59a2bc4`](https://github.com/juspay/hyperswitch/commit/59a2bc434dca0d9faeceaa42b965f4ba4e93b1a9))

    **Full Changelog:** [`2024.03.13.3...2024.03.15.0`](https://github.com/juspay/hyperswitch/compare/2024.03.13.3...2024.03.15.0)

    - - -

    ## 2024.03.13.3

    ### Bug Fixes

    - **mandates:** Give higher precedence to connector mandate id over network txn id in mandates ([#4073](https://github.com/juspay/hyperswitch/pull/4073)) ([`d28e415`](https://github.com/juspay/hyperswitch/commit/d28e415dc289a58468e24c15bbaf7fc15b4a91ee))
    - Get valid test cards list based on wasm feature config ([#4066](https://github.com/juspay/hyperswitch/pull/4066)) ([`fad23ad`](https://github.com/juspay/hyperswitch/commit/fad23ad032971497b07035c530397539413b7653))

    **Full Changelog:** [`2024.03.13.2...2024.03.13.3`](https://github.com/juspay/hyperswitch/compare/2024.03.13.2...2024.03.13.3)

    - - -

    ## 2024.03.13.2

    ### Bug Fixes

    - **connector:** [cybersource] update mandate condition ([#4048](https://github.com/juspay/hyperswitch/pull/4048)) ([`d82960c`](https://github.com/juspay/hyperswitch/commit/d82960c1cca5ae43d1a51f8fff6f7b6b9e016c2b))
    - **payment_methods:** Set requires-cvv to false for cards in customer payment methods list if making an off-session payment ([#4075](https://github.com/juspay/hyperswitch/pull/4075)) ([`db25dac`](https://github.com/juspay/hyperswitch/commit/db25dac5c0023ff49a839e7914a639403c733e8a))

    **Full Changelog:** [`2024.03.13.1...2024.03.13.2`](https://github.com/juspay/hyperswitch/compare/2024.03.13.1...2024.03.13.2)

    - - -

    ## 2024.03.13.1

    ### Bug Fixes

    - **router:** Fix token fetch logic in complete authorize flow for three ds payments ([#4052](https://github.com/juspay/hyperswitch/pull/4052)) ([`ada0002`](https://github.com/juspay/hyperswitch/commit/ada000245522662c36032034a76c3e8b57152582))

    **Full Changelog:** [`2024.03.13.0...2024.03.13.1`](https://github.com/juspay/hyperswitch/compare/2024.03.13.0...2024.03.13.1)

    - - -

    ## 2024.03.13.0

    ### Features

    - **connector:** [AUTHORIZEDOTNET] Audit Connector ([#4035](https://github.com/juspay/hyperswitch/pull/4035)) ([`7840bdb`](https://github.com/juspay/hyperswitch/commit/7840bdb95f90065f3f6d671b07c3044e77740ed2))
    - **core:** Confirm flow and authorization api changes for external authentication ([#4015](https://github.com/juspay/hyperswitch/pull/4015)) ([`ce3625c`](https://github.com/juspay/hyperswitch/commit/ce3625cb0cdccc750a073c012f0e541b014c3190))
    - **global-search:** Dashboard globalsearch apis ([#3831](https://github.com/juspay/hyperswitch/pull/3831)) ([`ac8ddd4`](https://github.com/juspay/hyperswitch/commit/ac8ddd40208f3da5f65ca97bf5033cea5ca3ebe3))

    ### Bug Fixes

    - **connector:** [Adyen] update config and add required fields ([#4046](https://github.com/juspay/hyperswitch/pull/4046)) ([`16d73cb`](https://github.com/juspay/hyperswitch/commit/16d73cb5f9f469d791f8880f3a2fd79135c821cd))
    - **core:** [REFUNDS] Fix Not Supported Connector Error ([#4045](https://github.com/juspay/hyperswitch/pull/4045)) ([`7513423`](https://github.com/juspay/hyperswitch/commit/7513423631ddf0fe86ef656ec6cad76d82c807bc))

    ### Refactors

    - **address:** Pass payment method billing to the connector module ([#3828](https://github.com/juspay/hyperswitch/pull/3828)) ([`195c700`](https://github.com/juspay/hyperswitch/commit/195c700e6c88e457cecc0722a7e5990db1379f22))
    - **connector:** [Checkout] remove Paypal from wasm ([#4044](https://github.com/juspay/hyperswitch/pull/4044)) ([`3eff4eb`](https://github.com/juspay/hyperswitch/commit/3eff4ebd3a60b5831cbec0158527475c8f7d7eb4))
    - **openai:** Update open-api spec to have payment changes ([#4043](https://github.com/juspay/hyperswitch/pull/4043)) ([`708cce9`](https://github.com/juspay/hyperswitch/commit/708cce926125a29b406db48cf0ebd35b217927d4))
    - **payment_methods:**
      - Filter wallet payment method from mca based on customer pm ([#4038](https://github.com/juspay/hyperswitch/pull/4038)) ([`abe9c2a`](https://github.com/juspay/hyperswitch/commit/abe9c2ac17a0783f3625dd7fde5d28e285012ec3))
      - Allow deletion of default payment method for a customer if only one pm exists ([#4027](https://github.com/juspay/hyperswitch/pull/4027)) ([`45ed56f`](https://github.com/juspay/hyperswitch/commit/45ed56f16516c44acbe75b75c0621b78ccdb9894))
    - [Checkout] change payment and webhooks API contract ([#4023](https://github.com/juspay/hyperswitch/pull/4023)) ([`733a560`](https://github.com/juspay/hyperswitch/commit/733a560146bb06e51fa4ee7ed9b6d1d3d9eddf12))

    **Full Changelog:** [`2024.03.12.0...2024.03.13.0`](https://github.com/juspay/hyperswitch/compare/2024.03.12.0...2024.03.13.0)

    - - -

    ## 2024.03.12.0

    ### Refactors

    - **core:** Status handling for payment_method_status ([#3965](https://github.com/juspay/hyperswitch/pull/3965)) ([`e87f2ea`](https://github.com/juspay/hyperswitch/commit/e87f2ea8c5669473940df8bc2f5c61fdf3f218ff))

    ### Miscellaneous Tasks

    - Add threedsecureio base url in deployment config files ([#4039](https://github.com/juspay/hyperswitch/pull/4039)) ([`d9f8423`](https://github.com/juspay/hyperswitch/commit/d9f84232a4a29814a1f9a792ebc74923862a1da6))

    **Full Changelog:** [`2024.03.11.1...2024.03.12.0`](https://github.com/juspay/hyperswitch/compare/2024.03.11.1...2024.03.12.0)

    - - -

    ## 2024.03.11.1

    ### Features

    - **router:** Add routing support for token-based mit payments ([#4012](https://github.com/juspay/hyperswitch/pull/4012)) ([`43ebfbc`](https://github.com/juspay/hyperswitch/commit/43ebfbc47f03eaaaf274847290861dcb00db26a5))
    - **users:** Implemented Set-Cookie ([#3865](https://github.com/juspay/hyperswitch/pull/3865)) ([`44eef46`](https://github.com/juspay/hyperswitch/commit/44eef46e5d7f0a198be80602ceae1c843449319c))

    ### Refactors

    - **connector:**
      - [Multisafepay] Mask PII data ([#3869](https://github.com/juspay/hyperswitch/pull/3869)) ([`c2b1561`](https://github.com/juspay/hyperswitch/commit/c2b15615e3c61e6f497180be8fa66d008ed150bb))
      - [Globalpay] Mask PII data ([#3840](https://github.com/juspay/hyperswitch/pull/3840)) ([`13f6d6c`](https://github.com/juspay/hyperswitch/commit/13f6d6c10ce421329a7eb8b494fbb3bd31aed91f))
      - [Iatapay] Mask PII data ([#3850](https://github.com/juspay/hyperswitch/pull/3850)) ([`bd7accb`](https://github.com/juspay/hyperswitch/commit/bd7accb2c250b5f330b6bbb87f6f6edf4a479a61))
      - [Payme][Payeezy] Mask PII data ([#3926](https://github.com/juspay/hyperswitch/pull/3926)) ([`ffcb2bc`](https://github.com/juspay/hyperswitch/commit/ffcb2bcf2b7a26d8fc7fc45f9878d41ba74d2fe0))
      - [Nexinets] Mask PII data ([#3874](https://github.com/juspay/hyperswitch/pull/3874)) ([`9ea5310`](https://github.com/juspay/hyperswitch/commit/9ea531068d87b76e8f41ee7d9e9d26fd755bced4))
      - [Noon] Mask PII data ([#3879](https://github.com/juspay/hyperswitch/pull/3879)) ([`96efc2a`](https://github.com/juspay/hyperswitch/commit/96efc2abf94e3e9174f625bee2270236bad50278))
      - [stripe] capture error_code and error_message for psync ([#3771](https://github.com/juspay/hyperswitch/pull/3771)) ([`614182a`](https://github.com/juspay/hyperswitch/commit/614182ae4cdc7a762e0ce90d1336b1ff16fc9fa3))
      - [Trustpay][Volt] Mask PII data ([#3932](https://github.com/juspay/hyperswitch/pull/3932)) ([`a179b9c`](https://github.com/juspay/hyperswitch/commit/a179b9c90c2b9a419f1ce394d06158f80c29ee45))
      - [Nuvie] Mask PII data ([#3924](https://github.com/juspay/hyperswitch/pull/3924)) ([`6b2f71c`](https://github.com/juspay/hyperswitch/commit/6b2f71c850ff2ea36365375a81a7026fd8c87ebc))
      - [adyen] add more fields in the payments request ([#4010](https://github.com/juspay/hyperswitch/pull/4010)) ([`5584f11`](https://github.com/juspay/hyperswitch/commit/5584f1131ae4180020be23d4c735b8356482c22d))
    - **core:** Updated payments response with payment_method_id & payment_method_status ([#3883](https://github.com/juspay/hyperswitch/pull/3883)) ([`7391416`](https://github.com/juspay/hyperswitch/commit/7391416e2473eab0474bd01bb155a9ecc96da263))

    **Full Changelog:** [`2024.03.11.0...2024.03.11.1`](https://github.com/juspay/hyperswitch/compare/2024.03.11.0...2024.03.11.1)

    - - -

    ## 2024.03.11.0

    ### Features

    - **connector:**
      - Add threedsecureio three_ds authentication connector ([#4004](https://github.com/juspay/hyperswitch/pull/4004)) ([`06c3096`](https://github.com/juspay/hyperswitch/commit/06c30967cf626e7406aa9be8643fb73288aae383))
      - [Checkout] add support for external authentication for checkout connector ([#4006](https://github.com/juspay/hyperswitch/pull/4006)) ([`142a22c`](https://github.com/juspay/hyperswitch/commit/142a22c752a7c623cee62a6d552e6ffda73df777))
    - **router:** Add payments authentication api flow ([#3996](https://github.com/juspay/hyperswitch/pull/3996)) ([`41556ba`](https://github.com/juspay/hyperswitch/commit/41556baed98c59373e0a053c023c32f2f7346b51))

    **Full Changelog:** [`2024.03.09.0...2024.03.11.0`](https://github.com/juspay/hyperswitch/compare/2024.03.09.0...2024.03.11.0)

    - - -

    ## 2024.03.09.0

    ### Features

    - **core:** Add core functions for external authentication ([#3969](https://github.com/juspay/hyperswitch/pull/3969)) ([`897e264`](https://github.com/juspay/hyperswitch/commit/897e264ad9e26df9877a18eef26a24e05de78528))
    - **payment_link:** Add shimmer page before payment_link loads starts ([#4014](https://github.com/juspay/hyperswitch/pull/4014)) ([`ba9d465`](https://github.com/juspay/hyperswitch/commit/ba9d465483edcefeacc7ace0fc8efc86ca0f813c))

    ### Bug Fixes

    - **deserialization:** Error message is different when invalid data is passed for payment method data ([#4022](https://github.com/juspay/hyperswitch/pull/4022)) ([`f1fe295`](https://github.com/juspay/hyperswitch/commit/f1fe295475adb0e827bd713be036687da662b361))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`a7d0487`](https://github.com/juspay/hyperswitch/commit/a7d04873d63c1f007d0081f02ba9a373e24ae882))

    **Full Changelog:** [`2024.03.08.0...2024.03.09.0`](https://github.com/juspay/hyperswitch/compare/2024.03.08.0...2024.03.09.0)

    - - -

    ## 2024.03.08.0

    ### Features

    - **router:** Add domain types, admin core changes and other prerequisites for 3ds external authentication flow ([#3962](https://github.com/juspay/hyperswitch/pull/3962)) ([`4902c40`](https://github.com/juspay/hyperswitch/commit/4902c403452500847f0395babc5fb940f4e2b755))

    ### Bug Fixes

    - **deserialization:** Deserialize reward payment method data ([#4011](https://github.com/juspay/hyperswitch/pull/4011)) ([`f6b44f3`](https://github.com/juspay/hyperswitch/commit/f6b44f3860147a2ddc7b37123bfe064e50b7182a))
    - **postman:** Fix postman collections for saving cards with customer_acceptance ([#4008](https://github.com/juspay/hyperswitch/pull/4008)) ([`deac899`](https://github.com/juspay/hyperswitch/commit/deac8991f78bd29d081088b0cf75a254eb358a2e))
    - **webhooks:** Abort outgoing webhook retry task if webhook URL is not available in business profile ([#3997](https://github.com/juspay/hyperswitch/pull/3997)) ([`ce0ac3d`](https://github.com/juspay/hyperswitch/commit/ce0ac3d0297da5372772efe19167f0d2f62e82eb))

    ### Refactors

    - **core:** Add OnSession as default for setup_future_usage ([#3990](https://github.com/juspay/hyperswitch/pull/3990)) ([`f9b6f5d`](https://github.com/juspay/hyperswitch/commit/f9b6f5da36c3a57da4b89db3151996403e2f3dfd))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`d36702d`](https://github.com/juspay/hyperswitch/commit/d36702d270be2b7e3816954fbac4a320d8224f31))

    **Full Changelog:** [`2024.03.07.1...2024.03.08.0`](https://github.com/juspay/hyperswitch/compare/2024.03.07.1...2024.03.08.0)

    - - -

    ## 2024.03.07.1

    ### Features

    - **users:** Add new API get the user and role details of specific user ([#3988](https://github.com/juspay/hyperswitch/pull/3988)) ([`ba42fba`](https://github.com/juspay/hyperswitch/commit/ba42fbaed0adb2a3e4d9f2d07a4f0d99ba227241))

    ### Bug Fixes

    - **users:** Revert using mget in authorization ([#3999](https://github.com/juspay/hyperswitch/pull/3999)) ([`7375b86`](https://github.com/juspay/hyperswitch/commit/7375b866a2a2767df2f213bc9eb61268392fb60d))

    ### Refactors

    - **router:** Store `ApplepayPaymentMethod` in `payment_method_data` column of `payment_attempt` table ([#3940](https://github.com/juspay/hyperswitch/pull/3940)) ([`6671bff`](https://github.com/juspay/hyperswitch/commit/6671bff3b11e9548a0085046d2594cad9f2571e2))

    **Full Changelog:** [`2024.03.07.0...2024.03.07.1`](https://github.com/juspay/hyperswitch/compare/2024.03.07.0...2024.03.07.1)

    - - -

    ## 2024.03.07.0

    ### Features

    - **connector:** [AUTHORIZEDOTNET] Add billing address in payments request ([#3981](https://github.com/juspay/hyperswitch/pull/3981)) ([`3806cd3`](https://github.com/juspay/hyperswitch/commit/3806cd35c763cc4517b761b4e3b0e736c60fac9f))
    - **core:** Store customer_acceptance in the payment_methods table ([#3885](https://github.com/juspay/hyperswitch/pull/3885)) ([`a1fd36a`](https://github.com/juspay/hyperswitch/commit/a1fd36a1abea4d400386a00ccf182dfe9da5bcda))
    - **payment_method:** Set the initial payment method as default until its explicitly set ([#3970](https://github.com/juspay/hyperswitch/pull/3970)) ([`34c1b90`](https://github.com/juspay/hyperswitch/commit/34c1b905b178973d2611bab14c7d85582ed225f0))
    - **payment_methods:** Store connector_mandate_details in PaymentMethods table ([#3907](https://github.com/juspay/hyperswitch/pull/3907)) ([`d220e81`](https://github.com/juspay/hyperswitch/commit/d220e815dc81925b205fb57d5d4f05883c1a7cde))

    ### Bug Fixes

    - **connector:**
      - [Trustpay] Add mapping to error code `100.390.105` ([#3968](https://github.com/juspay/hyperswitch/pull/3968)) ([`bf67587`](https://github.com/juspay/hyperswitch/commit/bf675878a2e36f7005468e91eefadc111ccba6b2))
      - [adyen] handle Webhook reference and object ([#3976](https://github.com/juspay/hyperswitch/pull/3976)) ([`0aa40cb`](https://github.com/juspay/hyperswitch/commit/0aa40cbae75fd4cf5b13cfc518ff761b2b673246))
    - **tests/postman/adyen:** Remove enabled payment methods for payouts processor ([#3913](https://github.com/juspay/hyperswitch/pull/3913)) ([`289b20a`](https://github.com/juspay/hyperswitch/commit/289b20a82e5ee32aae6eb4e5766f9c757d26345d))
    - **user:**
      - Use mget to check in blocklist ([#3945](https://github.com/juspay/hyperswitch/pull/3945)) ([`8154a61`](https://github.com/juspay/hyperswitch/commit/8154a611efcfa4bef3d5674db0574b065b55e9cd))
      - Improve role validation to prevent duplicate groups ([#3949](https://github.com/juspay/hyperswitch/pull/3949)) ([`05a4752`](https://github.com/juspay/hyperswitch/commit/05a475271a2c37ba6ced90b85e53015c47d573bc))

    ### Refactors

    - **connector:** [Checkout] handle default cases for dispute status mapping ([#3966](https://github.com/juspay/hyperswitch/pull/3966)) ([`2cda3dd`](https://github.com/juspay/hyperswitch/commit/2cda3dd794e51f84537a89e1015ee975322a2081))
    - **payment_methods:**
      - Filter applepay payment method from mca based on customer pm ([#3953](https://github.com/juspay/hyperswitch/pull/3953)) ([`2db39e8`](https://github.com/juspay/hyperswitch/commit/2db39e8bb9af3d55e3d075d77ff8616ee2e15f0a))
      - Prevent deletion of default payment method for a customer ([#3964](https://github.com/juspay/hyperswitch/pull/3964)) ([`db39bb0`](https://github.com/juspay/hyperswitch/commit/db39bb0a3cf350e8399a7f17842d9af9b2de440e))
      - Insert payment_method_id in redis for wallet tokens ([#3989](https://github.com/juspay/hyperswitch/pull/3989)) ([`d997e29`](https://github.com/juspay/hyperswitch/commit/d997e298f2614079a72a773493cd98ba4507b35a))
    - Kms decrypt analytics config ([#3984](https://github.com/juspay/hyperswitch/pull/3984)) ([`cfade55`](https://github.com/juspay/hyperswitch/commit/cfade55e693594a772c18eee2c35d7b3dc03f84d))

    ### Miscellaneous Tasks

    - **doc:** Add API ref for KV toggle ([#3784](https://github.com/juspay/hyperswitch/pull/3784)) ([`5e8fcda`](https://github.com/juspay/hyperswitch/commit/5e8fcda7d12f482e47be9ed672093cb45fac9e29))
    - **postman:** Update Postman collection files ([`2db4a59`](https://github.com/juspay/hyperswitch/commit/2db4a599eae2560bfef327231f2381af74145e39))

    **Full Changelog:** [`2024.03.06.0...2024.03.07.0`](https://github.com/juspay/hyperswitch/compare/2024.03.06.0...2024.03.07.0)

    - - -

    ## 2024.03.06.0

    ### Features

    - **api_models:** Add api_models for external 3ds authentication flow ([#3858](https://github.com/juspay/hyperswitch/pull/3858)) ([`0a43ceb`](https://github.com/juspay/hyperswitch/commit/0a43ceb14e27d998794941ecb7605b9e7175c757))
    - **connector:** [Checkout] accept connector_transaction_id in 2xx and 4xx error_response of connector flows ([#3959](https://github.com/juspay/hyperswitch/pull/3959)) ([`f6f6a0c`](https://github.com/juspay/hyperswitch/commit/f6f6a0c0f727a6f367c6bafb4db9a89cb46f667a))
    - **core:** External authentication related schema changes for existing tables ([#3904](https://github.com/juspay/hyperswitch/pull/3904)) ([`c09b2b3`](https://github.com/juspay/hyperswitch/commit/c09b2b3a2ae9a71d4a73063faf4796e0c8732bb4))
    - **payouts:** Implement Single Connector Retry for Payouts ([#3908](https://github.com/juspay/hyperswitch/pull/3908)) ([`0cb95a4`](https://github.com/juspay/hyperswitch/commit/0cb95a4911054e089e6ed3c528645ee1b881ebc6))
    - **roles:** Add caching for custom roles ([#3946](https://github.com/juspay/hyperswitch/pull/3946)) ([`19c5023`](https://github.com/juspay/hyperswitch/commit/19c502398f980d20b9e0a4fe98c33a2239c90c5b))
    - **router:** Add incoming header request logs ([#3939](https://github.com/juspay/hyperswitch/pull/3939)) ([`050df50`](https://github.com/juspay/hyperswitch/commit/050df5022cd3d44db23ca75f81158fb7c2429f86))

    ### Bug Fixes

    - **core:** Fix metadata validation for update payment connector ([#3834](https://github.com/juspay/hyperswitch/pull/3834)) ([`54938ad`](https://github.com/juspay/hyperswitch/commit/54938ad345a2b899360b608d8845fd7f885f82ba))
    - **router:** [nuvei] Nuvei error handling for payment declined status and included tests ([#3832](https://github.com/juspay/hyperswitch/pull/3832)) ([`087932f`](https://github.com/juspay/hyperswitch/commit/087932f06044454570c971def0e82dc3d838598c))

    ### Refactors

    - **connector:**
      - [Fiserv] Mask PII data ([#3821](https://github.com/juspay/hyperswitch/pull/3821)) ([`03cfb73`](https://github.com/juspay/hyperswitch/commit/03cfb735af29f00bccf729013e7e06684611b30d))
      - Remove default cases for Authorizedotnet, Braintree and Fiserv Connector ([#2796](https://github.com/juspay/hyperswitch/pull/2796)) ([`dbac556`](https://github.com/juspay/hyperswitch/commit/dbac55683a8f95e0efdbac43f8c2ae793063a032))

    ### Miscellaneous Tasks

    - **configs:** [BOA] Add USD Currency Filter Configuration ([#3961](https://github.com/juspay/hyperswitch/pull/3961)) ([`8a0e468`](https://github.com/juspay/hyperswitch/commit/8a0e468e6a574717b29ccbdd143908727c251dfb))
    - **postman:** Update Postman collection files ([`6305bb5`](https://github.com/juspay/hyperswitch/commit/6305bb57269fb5f6803edbad58d6e574ad4f6509))
    - **tests:** Add unit tests for backwards compatibility ([#3822](https://github.com/juspay/hyperswitch/pull/3822)) ([`c65729a`](https://github.com/juspay/hyperswitch/commit/c65729adc9009f046398312a16841532fdc177da))

    **Full Changelog:** [`2024.03.05.0...2024.03.06.0`](https://github.com/juspay/hyperswitch/compare/2024.03.05.0...2024.03.06.0)

    - - -

    ## 2024.03.05.0

    ### Features

    - **connector:** [PLACETOPAY] Fix refund request and status mapping ([#3894](https://github.com/juspay/hyperswitch/pull/3894)) ([`5eff9d4`](https://github.com/juspay/hyperswitch/commit/5eff9d47d3e53d380ef792a8fbdf06ecf78d3d16))
    - **webhooks:** Implement automatic retries for failed webhook deliveries using scheduler ([#3842](https://github.com/juspay/hyperswitch/pull/3842)) ([`5bb67c7`](https://github.com/juspay/hyperswitch/commit/5bb67c7dcc22f9cee51adf501bdd8455b41548db))

    ### Bug Fixes

    - **connector:** [Volt] Fix status mapping for Volt ([#3915](https://github.com/juspay/hyperswitch/pull/3915)) ([`f132527`](https://github.com/juspay/hyperswitch/commit/f132527490a7d8cd8469573d8e6856f33974959f))
    - **router:** [nuvei] Nuvei recurring MIT fix and mandatory details fix ([#3602](https://github.com/juspay/hyperswitch/pull/3602)) ([`aa001b4`](https://github.com/juspay/hyperswitch/commit/aa001b4579a6be022b46eb0cc3e65c52ec9d10bb))

    ### Refactors

    - **api_keys:** Provide identifier for api key in the expiry reminder email ([#3888](https://github.com/juspay/hyperswitch/pull/3888)) ([`901d61b`](https://github.com/juspay/hyperswitch/commit/901d61bc0ddb4b2ad742de927126f468629a79af))
    - **connectors:** [Checkout] PII data masking ([#3775](https://github.com/juspay/hyperswitch/pull/3775)) ([`6076eb0`](https://github.com/juspay/hyperswitch/commit/6076eb01ca80ae2d06218a09d2a69f01d78cdec4))
    - **test_utils:** Use json to run collection and add run time edit ([#3807](https://github.com/juspay/hyperswitch/pull/3807)) ([`a1d63d4`](https://github.com/juspay/hyperswitch/commit/a1d63d4b8be273c525aac76f22cf3bda25719f28))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`cd7040f`](https://github.com/juspay/hyperswitch/commit/cd7040fa8cad2e69a53e3ed609c9eb8a8a17495a))
    - Upgrade msrv to 1.70 ([#3938](https://github.com/juspay/hyperswitch/pull/3938)) ([`0e60083`](https://github.com/juspay/hyperswitch/commit/0e600837f77af0443335deb0c73d6f3b2bda5ac2))

    **Full Changelog:** [`2024.03.04.0...2024.03.05.0`](https://github.com/juspay/hyperswitch/compare/2024.03.04.0...2024.03.05.0)

    - - -

    ## 2024.03.04.0

    ### Features

    - **address:** Add payment method billing details ([#3812](https://github.com/juspay/hyperswitch/pull/3812)) ([`33f0741`](https://github.com/juspay/hyperswitch/commit/33f07419abb7adc9198c67604f4d0bebab9faeb4))
    - **core:** Diesel models and db interface changes for authentication table ([#3859](https://github.com/juspay/hyperswitch/pull/3859)) ([`8162668`](https://github.com/juspay/hyperswitch/commit/816266819928477738f70b782eab0e26b600b171))

    ### Bug Fixes

    - **connector:** [BOA/CYB] Pass ucaf for apple pay mastercard users ([#3899](https://github.com/juspay/hyperswitch/pull/3899)) ([`f95beaa`](https://github.com/juspay/hyperswitch/commit/f95beaa189f17a6e117971a749e2b4595e1e2fc3))
    - **mandates:** Remove validation for `mandate_data` object in payments create request ([#3860](https://github.com/juspay/hyperswitch/pull/3860)) ([`49d2298`](https://github.com/juspay/hyperswitch/commit/49d22981026e0bc5105aca842a3be6533bbbd477))
    - **payment_methods:** Insert `locker_id` as null in case of payment method not getting stored in locker ([#3919](https://github.com/juspay/hyperswitch/pull/3919)) ([`9917dd0`](https://github.com/juspay/hyperswitch/commit/9917dd065444d66628039b19df7cd8e7d5c107db))
    - **wasm:** [Adyen] update connector account configs and integration bugs ([#3910](https://github.com/juspay/hyperswitch/pull/3910)) ([`34f7705`](https://github.com/juspay/hyperswitch/commit/34f7705c44f5551ccc34a54b70867177909079a7))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`cb5761b`](https://github.com/juspay/hyperswitch/commit/cb5761be47fa5a9f6a1e0abb135369de96a116fa))
    - Adding addition fields from psql to kafka event for analytics usecase ([#3815](https://github.com/juspay/hyperswitch/pull/3815)) ([`cc0d006`](https://github.com/juspay/hyperswitch/commit/cc0d00633058277e6f49f352e8d158554c864038))

    **Full Changelog:** [`2024.03.01.0...2024.03.04.0`](https://github.com/juspay/hyperswitch/compare/2024.03.01.0...2024.03.04.0)

    - - -

    ## 2024.03.01.0

    ### Features

    - **roles:** Add groups for `get_from_token` api ([#3872](https://github.com/juspay/hyperswitch/pull/3872)) ([`b0b9bfa`](https://github.com/juspay/hyperswitch/commit/b0b9bfa731695b530cdcdeaeba29dc0f88bd8887))
    - Add unresponsive timeout for fred ([#3369](https://github.com/juspay/hyperswitch/pull/3369)) ([`26fb96e`](https://github.com/juspay/hyperswitch/commit/26fb96eeaaaffb4e4f87a644a3f7cc920e4b2057))

    ### Bug Fixes

    - **connector:** [adyen] production endpoints and mappings ([#3900](https://github.com/juspay/hyperswitch/pull/3900)) ([`8933ddf`](https://github.com/juspay/hyperswitch/commit/8933ddff66901027b22bb01424a528d20b54adad))

    ### Refactors

    - **connector:** CANCEL button after redirection is enabled for card 3ds ([#3829](https://github.com/juspay/hyperswitch/pull/3829)) ([`e003958`](https://github.com/juspay/hyperswitch/commit/e003958ff31ea0f1e0cddb3d2369945e8d2a2353))
    - **core:** Status mapping for Capture for 429 http code ([#3897](https://github.com/juspay/hyperswitch/pull/3897)) ([`9b5f26a`](https://github.com/juspay/hyperswitch/commit/9b5f26a5d29fe8d297cb8651b53be5cfba275276))
    - **roles:** Add more checks in create, update role APIs and change the response type ([#3896](https://github.com/juspay/hyperswitch/pull/3896)) ([`0136523`](https://github.com/juspay/hyperswitch/commit/0136523f38b7ceda0022843779ba922d612423a6))
    - **router:** Add parent caller function for DB ([#3838](https://github.com/juspay/hyperswitch/pull/3838)) ([`0936b02`](https://github.com/juspay/hyperswitch/commit/0936b02ade7f57eaa0213c4f4422bff7c9bb4de2))

    ### Miscellaneous Tasks

    - **configs:** [Cashtocode] wasm changes for AUD, INR, JPY, NZD, ZAR currency ([#3892](https://github.com/juspay/hyperswitch/pull/3892)) ([`de7f400`](https://github.com/juspay/hyperswitch/commit/de7f400c07d85b97340255556b39383648a0fd9f))
    - **dispute:** Adding disputeamount as int type ([#3886](https://github.com/juspay/hyperswitch/pull/3886)) ([`7db499d`](https://github.com/juspay/hyperswitch/commit/7db499d8a9388b9a3674f7fa130bc389151840ec))

    **Full Changelog:** [`2024.02.29.0...2024.03.01.0`](https://github.com/juspay/hyperswitch/compare/2024.02.29.0...2024.03.01.0)

    - - -

    ## 2024.02.29.0

    ### Features

    - **analytics:**
      - Adding metric api for dispute analytics ([#3810](https://github.com/juspay/hyperswitch/pull/3810)) ([`de6b16b`](https://github.com/juspay/hyperswitch/commit/de6b16bed98280a4ed8fc8cdad920a759662aa19))
      - Add force retrieve call for force retrieve calls ([#3565](https://github.com/juspay/hyperswitch/pull/3565)) ([`032d58c`](https://github.com/juspay/hyperswitch/commit/032d58cdbbf388cf25cbf2e43b0117b83f7d076d))
    - **payment_methods:** Add default payment method column in customers table and last used column in payment_methods table ([#3790](https://github.com/juspay/hyperswitch/pull/3790)) ([`f3931cf`](https://github.com/juspay/hyperswitch/commit/f3931cf484f61a4d9c107c362d0f3f6ee872e0e7))
    - **payouts:** Implement Smart Retries for Payout ([#3580](https://github.com/juspay/hyperswitch/pull/3580)) ([`8b32dff`](https://github.com/juspay/hyperswitch/commit/8b32dffe324a4cdbfde173cffe3fad2e839a52aa))

    ### Bug Fixes

    - **tests/postman/adyen:** Enable sepa payment method type for payout flows ([#3861](https://github.com/juspay/hyperswitch/pull/3861)) ([`53559c2`](https://github.com/juspay/hyperswitch/commit/53559c22527dde9536aa493ad7cd3bf353335c1a))

    ### Refactors

    - **connector:**
      - [Gocardless] Mask PII data ([#3844](https://github.com/juspay/hyperswitch/pull/3844)) ([`2f3ec7f`](https://github.com/juspay/hyperswitch/commit/2f3ec7f951967359d3995f743a486f3b380dd1f8))
      - [Mollie] Mask PII data ([#3856](https://github.com/juspay/hyperswitch/pull/3856)) ([`ffbe042`](https://github.com/juspay/hyperswitch/commit/ffbe042fdccde4a721d329d6b85c95203234368e))
    - **payment_link:** Add Miscellaneous charges in cart ([#3645](https://github.com/juspay/hyperswitch/pull/3645)) ([`15b367e`](https://github.com/juspay/hyperswitch/commit/15b367eb792448fb3f3312484ab13dd8241d4a14))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`5c91a94`](https://github.com/juspay/hyperswitch/commit/5c91a9440e098490cc00a54ead34989da81babc0))

    **Full Changelog:** [`2024.02.28.0...2024.02.29.0`](https://github.com/juspay/hyperswitch/compare/2024.02.28.0...2024.02.29.0)

    - - -

    ## 2024.02.28.0

    ### Features

    - **connector:** Mask pii information in connector request and response for stripe, aci, adyen, airwallex and authorizedotnet ([#3678](https://github.com/juspay/hyperswitch/pull/3678)) ([`1c6913b`](https://github.com/juspay/hyperswitch/commit/1c6913be747bd3da53fa2b48e339810bb30226e7))
    - **roles:** Change list roles, get role and authorization info api to respond with groups ([#3837](https://github.com/juspay/hyperswitch/pull/3837)) ([`fbe9d2f`](https://github.com/juspay/hyperswitch/commit/fbe9d2f19e9c0ca3af45a60e3d82b3ea774e11ce))
    - **router:** Add connector mit related columns to the payment methods table ([#3764](https://github.com/juspay/hyperswitch/pull/3764)) ([`5b8c261`](https://github.com/juspay/hyperswitch/commit/5b8c261d1ec34fab850c33f5d59d46255c7ebe4f))

    ### Bug Fixes

    - **connector:** [AUTHORIZEDOTNET] Fix status mapping ([#3845](https://github.com/juspay/hyperswitch/pull/3845)) ([`f4d0e2b`](https://github.com/juspay/hyperswitch/commit/f4d0e2b441a25048186be4b9d0871e2473a6f357))
    - **core:** Validate amount_to_capture in payment update ([#3830](https://github.com/juspay/hyperswitch/pull/3830)) ([`04e9734`](https://github.com/juspay/hyperswitch/commit/04e9734800a9011d9ae7bd43f75c90a75a9a9334))

    ### Refactors

    - **compatibility:** Added compatibility layer request logs ([#3774](https://github.com/juspay/hyperswitch/pull/3774)) ([`cd1a17b`](https://github.com/juspay/hyperswitch/commit/cd1a17bcd260629aad7548ff274f5512c37bfab7))
    - **connector:**
      - [Forte] Mask PII data ([#3824](https://github.com/juspay/hyperswitch/pull/3824)) ([`bd890b0`](https://github.com/juspay/hyperswitch/commit/bd890b0715ff5b77b8d1769083fa3e6c965e6dc3))
      - [Braintree] Mask PII data ([#3759](https://github.com/juspay/hyperswitch/pull/3759)) ([`3e87d44`](https://github.com/juspay/hyperswitch/commit/3e87d4468193cb4f60cd7b9fe93f2eba9250eeb5))
      - [Square] change error message from NotSupported to NotImplemented ([#2875](https://github.com/juspay/hyperswitch/pull/2875)) ([`0626ca9`](https://github.com/juspay/hyperswitch/commit/0626ca968576709a3559243f5a64e742201dbf91))
    - **payment_methods:** Introduce `locker_id` column in `payment_methods` table ([#3760](https://github.com/juspay/hyperswitch/pull/3760)) ([`3856226`](https://github.com/juspay/hyperswitch/commit/385622678f764b2bdb67423be0e5c8f055dd0b7c))
    - **router:** Added logs health and deep health ([#3780](https://github.com/juspay/hyperswitch/pull/3780)) ([`cd82228`](https://github.com/juspay/hyperswitch/commit/cd8222820a19c53dbc0a0abe6f8ab3408cb7b13f))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`8862746`](https://github.com/juspay/hyperswitch/commit/88627463eacd86bf3c8726ea4a08aedb6236ca32))

    **Full Changelog:** [`2024.02.27.0...2024.02.28.0`](https://github.com/juspay/hyperswitch/compare/2024.02.27.0...2024.02.28.0)

    - - -

    ## 2024.02.27.0

    ### Features

    - **connector:** [Payme] Add Void flow to Payme ([#3817](https://github.com/juspay/hyperswitch/pull/3817)) ([`9aabb14`](https://github.com/juspay/hyperswitch/commit/9aabb14a60f821769ccc61013368fb9683711d94))
    - **payouts:** Extend routing capabilities to payout operation ([#3531](https://github.com/juspay/hyperswitch/pull/3531)) ([`75c633f`](https://github.com/juspay/hyperswitch/commit/75c633fc7c37341177597041ccbcdfc3cf9e236f))
    - Add unique constraint restriction for KV ([#3723](https://github.com/juspay/hyperswitch/pull/3723)) ([`c117f8e`](https://github.com/juspay/hyperswitch/commit/c117f8ec638536d7ca92603ddadba59793b232de))

    ### Bug Fixes

    - **core:** Do not construct request if it is already available ([#3826](https://github.com/juspay/hyperswitch/pull/3826)) ([`84d91a7`](https://github.com/juspay/hyperswitch/commit/84d91a7b344df47899ff31a87b86b8410c204f95))

    ### Refactors

    - **connector:** [Cybersource] Mask PII data ([#3786](https://github.com/juspay/hyperswitch/pull/3786)) ([`a5cb6bb`](https://github.com/juspay/hyperswitch/commit/a5cb6bb5a456e8c435bbe0b561aa4d8a6f29ad87))
    - Incorporate `hyperswitch_interface` into router ([#3669](https://github.com/juspay/hyperswitch/pull/3669)) ([`2185cd3`](https://github.com/juspay/hyperswitch/commit/2185cd38c1ddf08d9dbb7a320b627fc03f0e7026))

    **Full Changelog:** [`2024.02.26.0...2024.02.27.0`](https://github.com/juspay/hyperswitch/compare/2024.02.26.0...2024.02.27.0)

    - - -

    ## 2024.02.26.0

    ### Features

    - **connector:** [BOA/Cybersource] Pass commerce indicator using card network for apple pay ([#3795](https://github.com/juspay/hyperswitch/pull/3795)) ([`54fa309`](https://github.com/juspay/hyperswitch/commit/54fa309b7da5d153855fb684f9655f505b2ba309))
    - **roles:** Add blacklist for roles ([#3794](https://github.com/juspay/hyperswitch/pull/3794)) ([`734327a`](https://github.com/juspay/hyperswitch/commit/734327a957c216511b182151a2f0b27819e7e3bb))

    ### Bug Fixes

    - **cards:** Return a 200 response indicating that a customer is none ([#3773](https://github.com/juspay/hyperswitch/pull/3773)) ([`2c95dcd`](https://github.com/juspay/hyperswitch/commit/2c95dcd19778726f476b219271dc42da182088af))

    **Full Changelog:** [`2024.02.23.0...2024.02.26.0`](https://github.com/juspay/hyperswitch/compare/2024.02.23.0...2024.02.26.0)

    - - -

    ## 2024.02.23.0

    ### Features

    - **address:** Add email field to address ([#3682](https://github.com/juspay/hyperswitch/pull/3682)) ([`863e380`](https://github.com/juspay/hyperswitch/commit/863e380cf2eb8ace17cad0f1bcbc2a9f4a460983))
    - **router:** Added api for the deleting config key ([#3554](https://github.com/juspay/hyperswitch/pull/3554)) ([`bbb3d3d`](https://github.com/juspay/hyperswitch/commit/bbb3d3d1e26f303964a495606dece7958f6c40fc))
    - **user:** Create apis for custom role ([#3763](https://github.com/juspay/hyperswitch/pull/3763)) ([`58809ab`](https://github.com/juspay/hyperswitch/commit/58809ab1f9c00d802b9a2a3d30b17dff1614431d))

    ### Bug Fixes

    - **api_keys:** Fix internal server error being thrown when trying to update or delete non-existent API key ([#3762](https://github.com/juspay/hyperswitch/pull/3762)) ([`5c24a76`](https://github.com/juspay/hyperswitch/commit/5c24a76fbd0de314f370a4e3d3ca897d2b7eaa3d))

    ### Refactors

    - **connector:**
      - [NMI] add hyperswitch loader to card 3ds ([#3755](https://github.com/juspay/hyperswitch/pull/3755)) ([`5aae179`](https://github.com/juspay/hyperswitch/commit/5aae1798257b5ee0c5a62104e4711748cdb5f935))
      - [NMI] Include customer_vault_id for card 3ds transaction request ([#3777](https://github.com/juspay/hyperswitch/pull/3777)) ([`2e7d30a`](https://github.com/juspay/hyperswitch/commit/2e7d30a4ad8d1731b5e91020488658d9d65866f6))
    - **connectors:** [Bluesnap] PII data masking ([#3714](https://github.com/juspay/hyperswitch/pull/3714)) ([`d000847`](https://github.com/juspay/hyperswitch/commit/d000847b938952de6ff9c2e01bdd06b4ede60e69))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`1d739ee`](https://github.com/juspay/hyperswitch/commit/1d739eee5eca8051b4a1d6a91a656df646219964))

    **Full Changelog:** [`2024.02.22.0...2024.02.23.0`](https://github.com/juspay/hyperswitch/compare/2024.02.22.0...2024.02.23.0)

    - - -

    ## 2024.02.22.0

    ### Features

    - **authz:** Add custom role checks in authorization ([#3719](https://github.com/juspay/hyperswitch/pull/3719)) ([`ada6a32`](https://github.com/juspay/hyperswitch/commit/ada6a3227616b556a0fb710302434027ff2276f4))
    - **connector:**
      - [adyen] Use connector_response_reference_id as reference to merchant ([#3688](https://github.com/juspay/hyperswitch/pull/3688)) ([`f3b90ee`](https://github.com/juspay/hyperswitch/commit/f3b90ee17f35253dd39d3e2723f8b56d416fd6e3))
      - [Adyen] populate connector_transaction_id for Adyen Payment Response ([#3727](https://github.com/juspay/hyperswitch/pull/3727)) ([`deec8b4`](https://github.com/juspay/hyperswitch/commit/deec8b4eb5493b072eaef0352a735748979cd95d))
    - **invite_multiple:** Set status of user as `InvitationSent` if `email` feature flag is enabled ([#3757](https://github.com/juspay/hyperswitch/pull/3757)) ([`ef5e886`](https://github.com/juspay/hyperswitch/commit/ef5e886ab1abdf50254343be8c6c48100ec2ec2d))
    - **users:** Send email to user if the user already exists ([#3705](https://github.com/juspay/hyperswitch/pull/3705)) ([`9725223`](https://github.com/juspay/hyperswitch/commit/97252237a9c7aa1cb5e7fa15f7ccb5c365b70b85))

    ### Bug Fixes

    - **core:** Validate capture method before update trackers ([#3715](https://github.com/juspay/hyperswitch/pull/3715)) ([`5952017`](https://github.com/juspay/hyperswitch/commit/5952017260180f0b52f989b60ff678868267a634))
    - **users:** Fix wrong email content in invite users ([#3625](https://github.com/juspay/hyperswitch/pull/3625)) ([`e139731`](https://github.com/juspay/hyperswitch/commit/e139731761387e9f00546815e260287ed600cc6e))

    ### Refactors

    - **core:** Inclusion of locker to store fingerprints ([#3630](https://github.com/juspay/hyperswitch/pull/3630)) ([`7b0bce5`](https://github.com/juspay/hyperswitch/commit/7b0bce555845c6d1187c97a921342fe129b6acba))
    - **permissions:** Remove permissions for utility APIs ([#3730](https://github.com/juspay/hyperswitch/pull/3730)) ([`4ae28e4`](https://github.com/juspay/hyperswitch/commit/4ae28e48cd73a9f96b6ae24babf167824fd182a0))
    - **scheduler:** Improve code reusability and consumer logs ([#3712](https://github.com/juspay/hyperswitch/pull/3712)) ([`7c63c76`](https://github.com/juspay/hyperswitch/commit/7c63c76011cec5fb398cff90b6237578c132b87d))

    **Full Changelog:** [`2024.02.21.0...2024.02.22.0`](https://github.com/juspay/hyperswitch/compare/2024.02.21.0...2024.02.22.0)

    - - -

    ## 2024.02.21.0

    ### Features

    - **analytics:** Added filter api for dispute analytics ([#3724](https://github.com/juspay/hyperswitch/pull/3724)) ([`6aeb440`](https://github.com/juspay/hyperswitch/commit/6aeb44091b34f202b60868028979b3720e3507ce))
    - **connector:** Accept connector_transaction_id in 2xx and 4xx error_response of connector flows for Adyen ([#3703](https://github.com/juspay/hyperswitch/pull/3703)) ([`236c5ba`](https://github.com/juspay/hyperswitch/commit/236c5baeda69721513c91682edca54facb947536))

    ### Bug Fixes

    - **config:** Add update mandate config in docker_compose ([#3732](https://github.com/juspay/hyperswitch/pull/3732)) ([`d541953`](https://github.com/juspay/hyperswitch/commit/d541953693ef7292fce2f4b2c39fe2cd5cddccbf))
    - Remove status_code being printed in EndRequest log ([#3722](https://github.com/juspay/hyperswitch/pull/3722)) ([`cf3c666`](https://github.com/juspay/hyperswitch/commit/cf3c66636ffee30cdd4353b276a89a8f9fc2d9d0))

    ### Refactors

    - **connector:** [ADYEN] Capture error reason in case of 2xx and 4xx failure ([#3708](https://github.com/juspay/hyperswitch/pull/3708)) ([`1c933a0`](https://github.com/juspay/hyperswitch/commit/1c933a08a9cad0980a4d14dd9b641995d0f4e659))
    - **connectors:**
      - [Bitpay] PII data masking ([#3704](https://github.com/juspay/hyperswitch/pull/3704)) ([`1c92328`](https://github.com/juspay/hyperswitch/commit/1c9232820e4821652112b21863e1910b3dd6be3b))
      - [Bambora] data masking ([#3695](https://github.com/juspay/hyperswitch/pull/3695)) ([`e5e4485`](https://github.com/juspay/hyperswitch/commit/e5e44857d21af9db8dee580e276028de76c7d278))
      - [BOA] PII data masking ([#3702](https://github.com/juspay/hyperswitch/pull/3702)) ([`49c71d0`](https://github.com/juspay/hyperswitch/commit/49c71d093e7e01b241ab29e3bb7b0c724b399aaf))
    - **merchant_connector_account:** Change unique constraint to connector label ([#3091](https://github.com/juspay/hyperswitch/pull/3091)) ([`073310c`](https://github.com/juspay/hyperswitch/commit/073310c1f671ccbb71cc5c8725eca9771e511589))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`421b9e8`](https://github.com/juspay/hyperswitch/commit/421b9e8f463949aca82e74e4259c88950f2bf15a))

    **Full Changelog:** [`2024.02.20.0...2024.02.21.0`](https://github.com/juspay/hyperswitch/compare/2024.02.20.0...2024.02.21.0)

    - - -

    ## 2024.02.20.0

    ### Features

    - **analytics:** Added dispute as uri param to analytics info api ([#3693](https://github.com/juspay/hyperswitch/pull/3693)) ([`76ac1a7`](https://github.com/juspay/hyperswitch/commit/76ac1a753a08f3ecc8ee264e4bccc47e8b219d1d))
    - **connector-config:** [Volt] Add config changes for open_banking_uk ([#3700](https://github.com/juspay/hyperswitch/pull/3700)) ([`1e45bb5`](https://github.com/juspay/hyperswitch/commit/1e45bb5d0f58047987cd98a063b5ffa770750423))
    - **user:** Setup roles table with queries ([#3691](https://github.com/juspay/hyperswitch/pull/3691)) ([`e0d8bb2`](https://github.com/juspay/hyperswitch/commit/e0d8bb207e8db2a6ba47307090dea7b8a6b7759f))

    ### Bug Fixes

    - **connector:**
      - [noon] Fail the payment for specific error_response ([#3674](https://github.com/juspay/hyperswitch/pull/3674)) ([`df739a3`](https://github.com/juspay/hyperswitch/commit/df739a302b062277647afe5c3888015272fdc2cf))
      - [Payme] `payme_transaction_id` converted to optional ([#3707](https://github.com/juspay/hyperswitch/pull/3707)) ([`3370c00`](https://github.com/juspay/hyperswitch/commit/3370c00589f7c04c2320370c672a9a569ab3907f))

    ### Refactors

    - **ext_traits:** Simplify the signatures of some methods in `Encode` extension trait ([#3687](https://github.com/juspay/hyperswitch/pull/3687)) ([`11fc9b3`](https://github.com/juspay/hyperswitch/commit/11fc9b39867dec50ff37cd090c686560ba2d1a9d))
    - **router:**
      - Remove fallback feature for `/add` and `/get` for locker ([#3648](https://github.com/juspay/hyperswitch/pull/3648)) ([`d0f529f`](https://github.com/juspay/hyperswitch/commit/d0f529fa4b2d14bbd0ae0986bc2bf037794d51e9))
      - Added status_code to golden_log_line ([#3681](https://github.com/juspay/hyperswitch/pull/3681)) ([`8038b48`](https://github.com/juspay/hyperswitch/commit/8038b48a54c937b3fe72b36cec5f20ee87309be4))
    - Include api key expiry workflow into process tracker ([#3661](https://github.com/juspay/hyperswitch/pull/3661)) ([`0a7625f`](https://github.com/juspay/hyperswitch/commit/0a7625ff8c85f55a95a10415b31598fe9f16704a))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`2b8f1ba`](https://github.com/juspay/hyperswitch/commit/2b8f1ba1e6a60e03b94a7aab5466266852f69aa2))

    **Full Changelog:** [`2024.02.19.0...2024.02.20.0`](https://github.com/juspay/hyperswitch/compare/2024.02.19.0...2024.02.20.0)

    - - -

    ## 2024.02.19.0

    ### Features

    - **analytics:** Adding kafka dispute analytic events ([#3549](https://github.com/juspay/hyperswitch/pull/3549)) ([`39e2233`](https://github.com/juspay/hyperswitch/commit/39e2233982c48977df8d501c898585bccd795c38))

    ### Bug Fixes

    - **logging:** Fix missing fields in consolidated log line ([#3684](https://github.com/juspay/hyperswitch/pull/3684)) ([`783fa0b`](https://github.com/juspay/hyperswitch/commit/783fa0b0dff1e157920d683a75fc579942cd9c06))

    ### Refactors

    - **connector:** [NMI] Add billing details for preprocessing ([#3672](https://github.com/juspay/hyperswitch/pull/3672)) ([`09d337b`](https://github.com/juspay/hyperswitch/commit/09d337b8a8d93884bff25d794b3a2feb314202ba))
    - **openapi:** Enable other features in api_models when running openapi ([#3649](https://github.com/juspay/hyperswitch/pull/3649)) ([`fb254b8`](https://github.com/juspay/hyperswitch/commit/fb254b8924808e6a2b2a9a31dbed78749836e8d3))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`a49a34a`](https://github.com/juspay/hyperswitch/commit/a49a34af6c048c2649e4e8b0278ae83c4eb544a6))

    **Full Changelog:** [`2024.02.16.0...2024.02.19.0`](https://github.com/juspay/hyperswitch/compare/2024.02.16.0...2024.02.19.0)

    - - -

    ## 2024.02.16.0

    ### Features

    - **users:** Email JWT blacklist ([#3659](https://github.com/juspay/hyperswitch/pull/3659)) ([`a9e3d74`](https://github.com/juspay/hyperswitch/commit/a9e3d74cc160d35b75278e39faac5df3aebd16bb))

    ### Bug Fixes

    - **env:** Add dashboard origin in toml file ([#3662](https://github.com/juspay/hyperswitch/pull/3662)) ([`cbd4039`](https://github.com/juspay/hyperswitch/commit/cbd40390b874dd91c53516d9370466fa1bdd5d15))
    - **user:** Add migration for force password change ([#3668](https://github.com/juspay/hyperswitch/pull/3668)) ([`2f473dd`](https://github.com/juspay/hyperswitch/commit/2f473dd4e73b53ee2a2ee462e9f4a51874d85a84))

    ### Refactors

    - **connector:** [NMI] Add Zip code as mandatory field for 3DS ([#3666](https://github.com/juspay/hyperswitch/pull/3666)) ([`1ddaee4`](https://github.com/juspay/hyperswitch/commit/1ddaee44df6eca0f1068f41f82c57f80511b436b))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`e94930c`](https://github.com/juspay/hyperswitch/commit/e94930cf5cf4219b967a0b447d3c7503c6a7363d))

    **Full Changelog:** [`2024.02.15.1...2024.02.16.0`](https://github.com/juspay/hyperswitch/compare/2024.02.15.1...2024.02.16.0)

    - - -

    ## 2024.02.15.1

    ### Features

    - **api_models:** Add client_secret type to payments ([#3557](https://github.com/juspay/hyperswitch/pull/3557)) ([`610a5a3`](https://github.com/juspay/hyperswitch/commit/610a5a3969789f1e1bcb074a262070247a030eb1))

    ### Bug Fixes

    - Allow all headers on cors ([#3653](https://github.com/juspay/hyperswitch/pull/3653)) ([`64bf815`](https://github.com/juspay/hyperswitch/commit/64bf815294244b1f4d42ea6cefcf2177d0febf9e))

    ### Refactors

    - **webhooks:** Check event type not supported before checking for profile_id ([#3543](https://github.com/juspay/hyperswitch/pull/3543)) ([`2d4f6b3`](https://github.com/juspay/hyperswitch/commit/2d4f6b3fa004a3f03beaa604e2dbfe95fcbe22a6))

    **Full Changelog:** [`2024.02.15.0...2024.02.15.1`](https://github.com/juspay/hyperswitch/compare/2024.02.15.0...2024.02.15.1)

    - - -

    ## 2024.02.15.0

    ### Features

    - **connector:** [Adyen] add PMD validation in validate_capture_method method for all the implemented PM’s ([#3584](https://github.com/juspay/hyperswitch/pull/3584)) ([`0c46f39`](https://github.com/juspay/hyperswitch/commit/0c46f39b9e1a397cecde1de9438c65cc7b93766b))
    - **events:** Connector response masking in clickhouse ([#3566](https://github.com/juspay/hyperswitch/pull/3566)) ([`5fb3c00`](https://github.com/juspay/hyperswitch/commit/5fb3c001b5dc371f81fe1708fd9a6c6978fb726e))
    - Add cors rules to actix ([#3646](https://github.com/juspay/hyperswitch/pull/3646)) ([`e702341`](https://github.com/juspay/hyperswitch/commit/e702341c64f5a6f542de9d413a6aa2b2e731eea6))
    - Noon payme cryptopay error mapping ([#3258](https://github.com/juspay/hyperswitch/pull/3258)) ([`702e945`](https://github.com/juspay/hyperswitch/commit/702e945be93645f9260663dd456e08c510c2f1fc))

    ### Bug Fixes

    - **router:** Store connector_mandate_id in complete auth ([#3576](https://github.com/juspay/hyperswitch/pull/3576)) ([`91cd70a`](https://github.com/juspay/hyperswitch/commit/91cd70a60b89b1c4e868e359a75f4088854562ef))

    ### Refactors

    - **router:** Added payment_method to golden log line ([#3620](https://github.com/juspay/hyperswitch/pull/3620)) ([`c5343df`](https://github.com/juspay/hyperswitch/commit/c5343dfcc20f1000e319c62fa0341c46701595ff))
    - Incorporate `hyperswitch_interface` into drainer ([#3629](https://github.com/juspay/hyperswitch/pull/3629)) ([`7b1c65b`](https://github.com/juspay/hyperswitch/commit/7b1c65b60d3874262867f77c8c28ebfa410b89a3))
    - Adding connector_name into logs ( Logging Changes ) ([#3581](https://github.com/juspay/hyperswitch/pull/3581)) ([`de12ba7`](https://github.com/juspay/hyperswitch/commit/de12ba779a229966c292caa05976883dafb4996e))

    ### Documentation

    - **connector:** Add wasm docs in connector integration docs ([#3641](https://github.com/juspay/hyperswitch/pull/3641)) ([`1236741`](https://github.com/juspay/hyperswitch/commit/1236741a14befd7472b0db0060315bb6efe720e0))

    **Full Changelog:** [`2024.02.14.0...2024.02.15.0`](https://github.com/juspay/hyperswitch/compare/2024.02.14.0...2024.02.15.0)

    - - -

    ## 2024.02.14.0

    ### Features

    - **pm_list:** Add required field for Boleto Payment Method ([#3619](https://github.com/juspay/hyperswitch/pull/3619)) ([`4d805f6`](https://github.com/juspay/hyperswitch/commit/4d805f61641175fc3566a5f6122d16745c484bf1))
    - **users:** Add some checks for prod-intent send to biz email ([#3631](https://github.com/juspay/hyperswitch/pull/3631)) ([`774a032`](https://github.com/juspay/hyperswitch/commit/774a0322aa4b36d87b122e47cd893383e262de12))

    ### Bug Fixes

    - **healthcheck:** Do not return true as response if the check if not applicable ([#3551](https://github.com/juspay/hyperswitch/pull/3551)) ([`6e103ce`](https://github.com/juspay/hyperswitch/commit/6e103cef50fea31d2508880985f80f0fd65cd536))

    ### Documentation

    - **postman:** Update rustman and collection generation docs ([#3615](https://github.com/juspay/hyperswitch/pull/3615)) ([`02652a2`](https://github.com/juspay/hyperswitch/commit/02652a2519d6372e8ef7dcfe99a86222dfeca5d6))

    ### Miscellaneous Tasks

    - **env:** Update Iatapay env to use Sandbox URL instead of Prod ([#3644](https://github.com/juspay/hyperswitch/pull/3644)) ([`8853a60`](https://github.com/juspay/hyperswitch/commit/8853a60bf4e2ed2490c60df9eaac2a8e46552b96))

    **Full Changelog:** [`2024.02.13.0...2024.02.14.0`](https://github.com/juspay/hyperswitch/compare/2024.02.13.0...2024.02.14.0)

    - - -

    ## 2024.02.13.0

    ### Features

    - **pm_list:** Add required fields for giropay ([#3194](https://github.com/juspay/hyperswitch/pull/3194)) ([`33df352`](https://github.com/juspay/hyperswitch/commit/33df3520d1daa3e399b567b85f6a75d1b10bca13))
    - **router:** Add `delete_evidence` api for disputes ([#3608](https://github.com/juspay/hyperswitch/pull/3608)) ([`1dc660f`](https://github.com/juspay/hyperswitch/commit/1dc660f80453306e86a3ea77d09829118100b59b))
    - **stripe:** Send billing address to stripe for card payment ([#3611](https://github.com/juspay/hyperswitch/pull/3611)) ([`67df984`](https://github.com/juspay/hyperswitch/commit/67df984c27841ee303eae6ba55577d8bf1ef68fa))

    ### Bug Fixes

    - **payment_link:** Changed media screen queries size for web to mobile view ([#3574](https://github.com/juspay/hyperswitch/pull/3574)) ([`cc6759b`](https://github.com/juspay/hyperswitch/commit/cc6759bd2d4207ad874a69546cb0a48db70b8629))
    - **payment_methods:**
      - Unmask last4 digits of card when listing payment methods for customer ([#3617](https://github.com/juspay/hyperswitch/pull/3617)) ([`834142e`](https://github.com/juspay/hyperswitch/commit/834142e690871e5cc8e48c2fed08621e325d5d8f))
      - Unmask last4 when metadata changed during /payments ([#3633](https://github.com/juspay/hyperswitch/pull/3633)) ([`8b1206d`](https://github.com/juspay/hyperswitch/commit/8b1206d31c6c3490c96212158252f2858e5d3f7c))

    ### Refactors

    - Introducing `hyperswitch_interface` crates ([#3536](https://github.com/juspay/hyperswitch/pull/3536)) ([`b6754a7`](https://github.com/juspay/hyperswitch/commit/b6754a7de87a417ca3f95822e970cb92b741cb95))

    ### Miscellaneous Tasks

    - **configs:** [Volt] Add configs for wasm for production ([#3406](https://github.com/juspay/hyperswitch/pull/3406)) ([`a9749c9`](https://github.com/juspay/hyperswitch/commit/a9749c93a579aa063a96e367e92232354f977fa6))
    - Address Rust 1.76 clippy lints ([#3605](https://github.com/juspay/hyperswitch/pull/3605)) ([`c55eb0a`](https://github.com/juspay/hyperswitch/commit/c55eb0afca9d43866378e8e0891ba8118a3dca39))
    - Chore(deps): bump the cargo group across 1 directories with 1 update ([#3624](https://github.com/juspay/hyperswitch/pull/3624)) ([`97e9e30`](https://github.com/juspay/hyperswitch/commit/97e9e30dbed74864ecb140dccd3c61c4b28931f8))

    **Full Changelog:** [`2024.02.12.0...2024.02.13.0`](https://github.com/juspay/hyperswitch/compare/2024.02.12.0...2024.02.13.0)

    - - -

    ## 2024.02.12.0

    ### Features

    - **user:** Implement force password reset ([#3572](https://github.com/juspay/hyperswitch/pull/3572)) ([`cfa10aa`](https://github.com/juspay/hyperswitch/commit/cfa10aa60ef16d2302787f7ecf7c129228fc0549))
    - **users:** Add transfer org ownership API ([#3603](https://github.com/juspay/hyperswitch/pull/3603)) ([`b9c29e7`](https://github.com/juspay/hyperswitch/commit/b9c29e7fd3bdc5e582a2dddbb98f3d2dbda72dd6))

    ### Refactors

    - **webhooks:** Remove unnecessary clones and lazy evaluations ([#3596](https://github.com/juspay/hyperswitch/pull/3596)) ([`bebaf41`](https://github.com/juspay/hyperswitch/commit/bebaf413f2ab1925f93f386ca4b49604542d871b))

    **Full Changelog:** [`2024.02.09.1...2024.02.12.0`](https://github.com/juspay/hyperswitch/compare/2024.02.09.1...2024.02.12.0)

    - - -

    ## 2024.02.09.1

    ### Bug Fixes

    - **core:** Add column mandate_data for storing the details of a mandate in PaymentAttempt ([#3606](https://github.com/juspay/hyperswitch/pull/3606)) ([`74f3721`](https://github.com/juspay/hyperswitch/commit/74f3721ccd0cceac6ae8e751cb83784d2f00a283))
    - **postman:** Fix failing postman tests and send a proper error message ([#3601](https://github.com/juspay/hyperswitch/pull/3601)) ([`3cef73b`](https://github.com/juspay/hyperswitch/commit/3cef73b9d8b35cb337757e29e78d22bcbe72faac))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`155aa9d`](https://github.com/juspay/hyperswitch/commit/155aa9d1192c3632c5678a958c4bb89f7861c636))

    **Full Changelog:** [`2024.02.09.0...2024.02.09.1`](https://github.com/juspay/hyperswitch/compare/2024.02.09.0...2024.02.09.1)

    - - -

    ## 2024.02.09.0

    ### Features

    - **permissions:** Permsision Info Ordering Change ([#3594](https://github.com/juspay/hyperswitch/pull/3594)) ([`96f82cb`](https://github.com/juspay/hyperswitch/commit/96f82cb21233677968aade844db91f91e3918843))
    - Adding refunds type to api_event_logs api to fetch refunds audit trail ([#3503](https://github.com/juspay/hyperswitch/pull/3503)) ([`c2b2b65`](https://github.com/juspay/hyperswitch/commit/c2b2b65b9cfc43b5999888635c7b03b1d2de78b3))

    ### Refactors

    - **payment_methods:** Handle card duplication ([#3146](https://github.com/juspay/hyperswitch/pull/3146)) ([`dd5630f`](https://github.com/juspay/hyperswitch/commit/dd5630f070db28051a3dd59a66f0a4ee6777e38f))
    - **user_role:** Change update user role request to take `email` instead of `user_id` ([#3530](https://github.com/juspay/hyperswitch/pull/3530)) ([`edd6806`](https://github.com/juspay/hyperswitch/commit/edd6806f97b8d400f1215d845023bb0d7c06aaca))

    ### Documentation

    - Add list mandates for customer ([#3592](https://github.com/juspay/hyperswitch/pull/3592)) ([`3a869a2`](https://github.com/juspay/hyperswitch/commit/3a869a2d5731a2393a687ed7773eda5344bd8e3f))

    **Full Changelog:** [`2024.02.08.0...2024.02.09.0`](https://github.com/juspay/hyperswitch/compare/2024.02.08.0...2024.02.09.0)

    - - -

    ## 2024.02.08.0

    ### Features

    - **core:**
      - Routes to toggle blocklist ([#3568](https://github.com/juspay/hyperswitch/pull/3568)) ([`fbe84b2`](https://github.com/juspay/hyperswitch/commit/fbe84b2a334cfb744ae4f27b1eadc892c7f9b164))
      - Decide flow based on setup_future_usage ([#3569](https://github.com/juspay/hyperswitch/pull/3569)) ([`ef302dd`](https://github.com/juspay/hyperswitch/commit/ef302dd3983674c9df47812d3c398a7e7b423257))
      - Add config for update_mandate_flow ([#3542](https://github.com/juspay/hyperswitch/pull/3542)) ([`14c0a2b`](https://github.com/juspay/hyperswitch/commit/14c0a2b03f34ae4359ee6a3918b76466eda25320))
    - **payouts:** Add Wallet to Payouts ([#3502](https://github.com/juspay/hyperswitch/pull/3502)) ([`3af6aaf`](https://github.com/juspay/hyperswitch/commit/3af6aaf28e92780679eb0314eb3e95803b9c3113))

    ### Bug Fixes

    - **payouts:** Saved payment methods list for bank details ([#3507](https://github.com/juspay/hyperswitch/pull/3507)) ([`a15e7ae`](https://github.com/juspay/hyperswitch/commit/a15e7ae9b156659e61de752ca94b6f43932d9de5))
    - **router:** Added validation check to number of workers in config ([#3533](https://github.com/juspay/hyperswitch/pull/3533)) ([`c0e31ed`](https://github.com/juspay/hyperswitch/commit/c0e31ed1df6cd1f17727c9ebf9d308ede02f2228))

    ### Refactors

    - **connector:** [Adyen] Status mapping based on Payment method Type ([#3567](https://github.com/juspay/hyperswitch/pull/3567)) ([`ab6b5ab`](https://github.com/juspay/hyperswitch/commit/ab6b5ab7b4cc95ec4f691eda865ed64472cb1f4a))
    - **users:** Change list roles api to also send inactive merchants ([#3583](https://github.com/juspay/hyperswitch/pull/3583)) ([`cef1643`](https://github.com/juspay/hyperswitch/commit/cef1643af54f128e68abbf4cdc9654df3b9a69e5))
    - [Noon] add new field max_amount to mandate request ([#3481](https://github.com/juspay/hyperswitch/pull/3481)) ([`926d084`](https://github.com/juspay/hyperswitch/commit/926d084e44ed6f7c83e94e60ea9da35167e499b0))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`f10b65e`](https://github.com/juspay/hyperswitch/commit/f10b65e88ee5b0fc929a717eacdbbf2fc1f0848b))

    **Full Changelog:** [`2024.02.07.0...2024.02.08.0`](https://github.com/juspay/hyperswitch/compare/2024.02.07.0...2024.02.08.0)

    - - -

    ## 2024.02.07.0

    ### Features

    - **connect:** [NMI] Use connector_response_reference_id as reference to merchant ([#2702](https://github.com/juspay/hyperswitch/pull/2702)) ([`683c1b8`](https://github.com/juspay/hyperswitch/commit/683c1b81c5a30ac0df93664805b78a8e44d49acc))
    - **connector:** Send metadata in payment authorize request for noon nmi cryptopay ([#3325](https://github.com/juspay/hyperswitch/pull/3325)) ([`ebe4ac3`](https://github.com/juspay/hyperswitch/commit/ebe4ac30a8f8f8dda7f052cb4a3788d70417aa17))
    - **router:** Block list spm customer for payment link flow ([#3500](https://github.com/juspay/hyperswitch/pull/3500)) ([`6304bda`](https://github.com/juspay/hyperswitch/commit/6304bda442be68226097fd8dcc28426b74264ab0))

    ### Bug Fixes

    - **connector:** [Stripe] capture error message and error code for failed payment, capture, void and refunds ([#3237](https://github.com/juspay/hyperswitch/pull/3237)) ([`2c52b37`](https://github.com/juspay/hyperswitch/commit/2c52b377e05b6e6296958078dd0464a49c4981a9))
    - **merchant_connector_account:** Change error to DuplicateMerchantAccount ([#3496](https://github.com/juspay/hyperswitch/pull/3496)) ([`c0d910f`](https://github.com/juspay/hyperswitch/commit/c0d910f50ebe9cf387b08ecbdb86f2f60346c0cb))
    - Auto retry once for connection closed ([#3426](https://github.com/juspay/hyperswitch/pull/3426)) ([`94e9b26`](https://github.com/juspay/hyperswitch/commit/94e9b26854948fe3ff7b0d96b754b5f0c9cac31a))

    ### Refactors

    - **blocklist:** Separate utility function & kill switch for validating data in blocklist ([#3360](https://github.com/juspay/hyperswitch/pull/3360)) ([`0a97a1e`](https://github.com/juspay/hyperswitch/commit/0a97a1eb6382a1aa465ac5a1dc792ea4e763511a))
    - **configs:** [Payme] Development config for 3DS ([#3555](https://github.com/juspay/hyperswitch/pull/3555)) ([`3705f77`](https://github.com/juspay/hyperswitch/commit/3705f77ee445acd5ce555a370b375b19d20ce3d4))

    **Full Changelog:** [`2024.02.06.0...2024.02.07.0`](https://github.com/juspay/hyperswitch/compare/2024.02.06.0...2024.02.07.0)

    - - -

    ## 2024.02.06.0

    ### Features

    - **connector:** [Adyen] Use connector_request_reference_id as reference to Payments ([#3547](https://github.com/juspay/hyperswitch/pull/3547)) ([`c2eecce`](https://github.com/juspay/hyperswitch/commit/c2eecce1e803de308dcfcf774aa8aa2323cc96ec))

    ### Bug Fixes

    - **connector:** [NMI] Handle empty response in psync and error response in complete authorize ([#3548](https://github.com/juspay/hyperswitch/pull/3548)) ([`a0fcef3`](https://github.com/juspay/hyperswitch/commit/a0fcef3f04cab75cf05154ef16fd26ab5a3783b9))
    - **router:** Handle empty body parse failures in bad request logger middleware ([#3541](https://github.com/juspay/hyperswitch/pull/3541)) ([`be22d60`](https://github.com/juspay/hyperswitch/commit/be22d60ddac18d9fb3032f72247634799e8f4ceb))
    - Add `profile_id` in dispute ([#3486](https://github.com/juspay/hyperswitch/pull/3486)) ([`0d5cd71`](https://github.com/juspay/hyperswitch/commit/0d5cd711b245fb69d0f35830aa1ba2f0b8a297cc))
    - Return currency in payment methods list response ([#3516](https://github.com/juspay/hyperswitch/pull/3516)) ([`a9c0d0c`](https://github.com/juspay/hyperswitch/commit/a9c0d0c55492c14a4a10283ffd8deae04c8ea853))

    **Full Changelog:** [`2024.02.05.0...2024.02.06.0`](https://github.com/juspay/hyperswitch/compare/2024.02.05.0...2024.02.06.0)

    - - -

    ## 2024.02.05.0

    ### Features

    - **connector-config:** [Volt] Add config changes for open_banking_uk ([#3529](https://github.com/juspay/hyperswitch/pull/3529)) ([`11bc891`](https://github.com/juspay/hyperswitch/commit/11bc891fd41809b3cefb9004b161d1f9c30ce68c))
    - **user:** Add support for resend invite ([#3523](https://github.com/juspay/hyperswitch/pull/3523)) ([`cf0e0b3`](https://github.com/juspay/hyperswitch/commit/cf0e0b330e4c62860f645bcb61d96b07c9f4fb7b))
    - Add deep health check for drainer ([#3396](https://github.com/juspay/hyperswitch/pull/3396)) ([`63c383f`](https://github.com/juspay/hyperswitch/commit/63c383f5a2b8da36d82e5563bddc5878d4b5bef5))

    ### Bug Fixes

    - Add outgoing checks for scheduler ([#3526](https://github.com/juspay/hyperswitch/pull/3526)) ([`d283053`](https://github.com/juspay/hyperswitch/commit/d283053e5eb2dab6cfdaacc3012d50199fb03175))

    ### Refactors

    - **connector:** [Noon] change error message from not supported to not implemented ([#2849](https://github.com/juspay/hyperswitch/pull/2849)) ([`892b04f`](https://github.com/juspay/hyperswitch/commit/892b04f805c219e2cf7cbe5736aef19909e986f7))
    - Rename `kms` feature flag to `aws_kms` ([#3249](https://github.com/juspay/hyperswitch/pull/3249)) ([`91519d8`](https://github.com/juspay/hyperswitch/commit/91519d846219a878c3c87ced466337ace02e99c6))

    **Full Changelog:** [`2024.02.02.0...2024.02.05.0`](https://github.com/juspay/hyperswitch/compare/2024.02.02.0...2024.02.05.0)

    - - -

    ## 2024.02.02.0

    ### Features

    - **configs:** [Noon] Add applepay mandate configs ([#3508](https://github.com/juspay/hyperswitch/pull/3508)) ([`7cf6c8c`](https://github.com/juspay/hyperswitch/commit/7cf6c8c0b9c4042f2e6b9277b7c75c85546821f7))
    - Add deep health check for scheduler ([#3304](https://github.com/juspay/hyperswitch/pull/3304)) ([`170e10c`](https://github.com/juspay/hyperswitch/commit/170e10cb8e0880737585284dd43437f549c019d3))
    - Add healthcheck for outgoing request ([#3519](https://github.com/juspay/hyperswitch/pull/3519)) ([`54fb61e`](https://github.com/juspay/hyperswitch/commit/54fb61eeebec503f599774fe9e97f6b6ce3f1458))

    ### Bug Fixes

    - **core:** Fix mandate_details to store some value only if mandate_data struct is present ([#3525](https://github.com/juspay/hyperswitch/pull/3525)) ([`78fdad2`](https://github.com/juspay/hyperswitch/commit/78fdad218ca3ae3c7410dfb8a7a8a5e542adff1c))
    - **logging:** Add an end log line for `LogSpanInitializer` ([#3528](https://github.com/juspay/hyperswitch/pull/3528)) ([`13be7e6`](https://github.com/juspay/hyperswitch/commit/13be7e6f8771a1128e3c0c5b189c91d9a0dd1416))

    ### Refactors

    - **connector:** [CYBERSOURCE] Remove default case for Cybersource ([#2705](https://github.com/juspay/hyperswitch/pull/2705)) ([`1828ea6`](https://github.com/juspay/hyperswitch/commit/1828ea6187c46d9c18dc8a0b5224387403b998e2))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`1deb37e`](https://github.com/juspay/hyperswitch/commit/1deb37ebd1128041ded64a4966a2d47a61e8c499))
    - Add file storage config in env_specific toml ([#3512](https://github.com/juspay/hyperswitch/pull/3512)) ([`20efc30`](https://github.com/juspay/hyperswitch/commit/20efc3020ac389199eed13154f070685417ef82a))

    **Full Changelog:** [`2024.02.01.0...2024.02.02.0`](https://github.com/juspay/hyperswitch/compare/2024.02.01.0...2024.02.02.0)

    - - -

    ## 2024.02.01.0

    ### Features

    - **dashboard_metadata:** Add email alert for Prod Intent ([#3482](https://github.com/juspay/hyperswitch/pull/3482)) ([`94cd7b6`](https://github.com/juspay/hyperswitch/commit/94cd7b689758a71e13a3eaa655335e658d13afc8))
    - **pm_list:** Add required fields for google pay ([#3196](https://github.com/juspay/hyperswitch/pull/3196)) ([`7f2c434`](https://github.com/juspay/hyperswitch/commit/7f2c434bd29d337dadde8b71a9137797f1c03ec0))

    ### Bug Fixes

    - **configs:** Add configs for Payme 3DS ([#3415](https://github.com/juspay/hyperswitch/pull/3415)) ([`58771b8`](https://github.com/juspay/hyperswitch/commit/58771b8985a53c83185805f770fee26c5836c645))

    ### Refactors

    - **connector:**
      - [NMI] change error message from not supported to not implemented ([#2848](https://github.com/juspay/hyperswitch/pull/2848)) ([`7575341`](https://github.com/juspay/hyperswitch/commit/757534104ee0411a887c993e45cc1fb883e82992))
      - [Paypal] Change error message from NotSupported to NotImplemented ([#2877](https://github.com/juspay/hyperswitch/pull/2877)) ([`7251f64`](https://github.com/juspay/hyperswitch/commit/7251f6474fdac3575202971e55638c435ca5c4c8))
      - [Adyen] change expiresAt time from string to unixtimestamp ([#3506](https://github.com/juspay/hyperswitch/pull/3506)) ([`b7c0f9a`](https://github.com/juspay/hyperswitch/commit/b7c0f9aa098c880314a529bc10015256ce2139f7))

    ### Miscellaneous Tasks

    - **connector_events_fields:** Added refund_id, dispute_id to connector events ([#3424](https://github.com/juspay/hyperswitch/pull/3424)) ([`90a2462`](https://github.com/juspay/hyperswitch/commit/90a24625ce312e4e7681cf4cc470e6365a052f8a))

    **Full Changelog:** [`2024.01.31.1...2024.02.01.0`](https://github.com/juspay/hyperswitch/compare/2024.01.31.1...2024.02.01.0)

    - - -

    ## 2024.01.31.1

    ### Features

    - **users:**
      - Added blacklist for users ([#3469](https://github.com/juspay/hyperswitch/pull/3469)) ([`e331d2d`](https://github.com/juspay/hyperswitch/commit/e331d2d5569405b89052c6bb59f7e755523f6f15))
      - Add `merchant_id` in `EmailToken` and change user status in reset password ([#3473](https://github.com/juspay/hyperswitch/pull/3473)) ([`db3d53f`](https://github.com/juspay/hyperswitch/commit/db3d53ff1d8b42d107fafe7a6efe7ec9f155d5a0))
    - Add deep health check for analytics ([#3438](https://github.com/juspay/hyperswitch/pull/3438)) ([`7597f3b`](https://github.com/juspay/hyperswitch/commit/7597f3b692124a762c3b212b604938be2d64175a))

    ### Bug Fixes

    - **connector:** [Trustpay] add merchant_id in gpay session response for trustpay ([#3471](https://github.com/juspay/hyperswitch/pull/3471)) ([`20568dc`](https://github.com/juspay/hyperswitch/commit/20568dc976687b8b2bfba12ab2db8926cf1c14ed))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`a4b9782`](https://github.com/juspay/hyperswitch/commit/a4b97828be103d601a5007f8e4274837faa6886f))

    **Full Changelog:** [`2024.01.31.0...2024.01.31.1`](https://github.com/juspay/hyperswitch/compare/2024.01.31.0...2024.01.31.1)

    - - -

    ## 2024.01.31.0

    ### Features

    - **connector:** [noon] add revoke mandate ([#3487](https://github.com/juspay/hyperswitch/pull/3487)) ([`b5bc8c4`](https://github.com/juspay/hyperswitch/commit/b5bc8c4e7cfdde8251ed0e2e3835ed5e3f1435c4))

    ### Bug Fixes

    - **connector:** [BOA/Cybersource] Handle Invalid Api Secret ([#3485](https://github.com/juspay/hyperswitch/pull/3485)) ([`224c1cf`](https://github.com/juspay/hyperswitch/commit/224c1cf2a421441433097618cc1dd3db224d5915))
    - **user:** Change permission for sample data ([#3462](https://github.com/juspay/hyperswitch/pull/3462)) ([`610c1c5`](https://github.com/juspay/hyperswitch/commit/610c1c575253ddf7a1a31ef941efaae2dd676b48))

    ### Refactors

    - **core:** Restrict requires_customer_action in confirm ([#3235](https://github.com/juspay/hyperswitch/pull/3235)) ([`d2accde`](https://github.com/juspay/hyperswitch/commit/d2accdef410319733d6174057bdca468bde1ae83))

    ### Miscellaneous Tasks

    - **config:** [ADYEN] Add configs for PIX in WASM ([#3498](https://github.com/juspay/hyperswitch/pull/3498)) ([`9821935`](https://github.com/juspay/hyperswitch/commit/9821935933e178765b3b0d0bcbfdf4ab041c3bc2))

    **Full Changelog:** [`2024.01.30.1...2024.01.31.0`](https://github.com/juspay/hyperswitch/compare/2024.01.30.1...2024.01.31.0)

    - - -

    ## 2024.01.30.1

    ### Features

    - **config:** Add iDEAL and Sofort Env Configs ([#3492](https://github.com/juspay/hyperswitch/pull/3492)) ([`46c1822`](https://github.com/juspay/hyperswitch/commit/46c1822d0e367e59420c9d087428bc3b12794445))
    - **connector:**
      - [Bluesnap] Metadata to connector metadata mapping ([#3331](https://github.com/juspay/hyperswitch/pull/3331)) ([`b2afdc3`](https://github.com/juspay/hyperswitch/commit/b2afdc35465426bd11428d8d4ac743617a443128))
      - [Stripe] Metadata to connector metadata mapping ([#3295](https://github.com/juspay/hyperswitch/pull/3295)) ([`864a8d7`](https://github.com/juspay/hyperswitch/commit/864a8d7b02acda5ea593cae83594962ea249c16d))
    - **core:** Update card_details for an existing mandate ([#3452](https://github.com/juspay/hyperswitch/pull/3452)) ([`02074df`](https://github.com/juspay/hyperswitch/commit/02074dfc23f1a126e76935ba5311c6aed6590ca5))
    - **pm_list:** Add required fields for sofort ([#3192](https://github.com/juspay/hyperswitch/pull/3192)) ([`3d55e3b`](https://github.com/juspay/hyperswitch/commit/3d55e3ba45619978e8ca9e5012c156dc017d2879))
    - **users:** Signin and Verify Email changes for User Invitation changes ([#3420](https://github.com/juspay/hyperswitch/pull/3420)) ([`d91da89`](https://github.com/juspay/hyperswitch/commit/d91da89065a6870f05e1ff9db007d16a58454c84))

    ### Bug Fixes

    - **logging:** Add flow to persistent logs fields ([#3472](https://github.com/juspay/hyperswitch/pull/3472)) ([`ac49103`](https://github.com/juspay/hyperswitch/commit/ac491038b16c77fc7f2249042b35dfb1d58e653d))
    - Empty payment attempts on payment retrieve ([#3447](https://github.com/juspay/hyperswitch/pull/3447)) ([`bec4f2a`](https://github.com/juspay/hyperswitch/commit/bec4f2a24e2236f7814119a6ebf0363cbf598540))

    ### Refactors

    - **payment_link:** Segregated payment link in html css js files, sdk over flow issue, surcharge bug, block SPM customer call for payment link ([#3410](https://github.com/juspay/hyperswitch/pull/3410)) ([`a7bc8c6`](https://github.com/juspay/hyperswitch/commit/a7bc8c655f5b745dccd4d818ac3ceb08c3b80c0e))
    - **settings:** Make the function to deserialize hashsets more generic ([#3104](https://github.com/juspay/hyperswitch/pull/3104)) ([`87191d6`](https://github.com/juspay/hyperswitch/commit/87191d687cd66bf096bfb98ffe51a805b4b76a03))
    - Add support for extending file storage to other schemes and provide a runtime flag for the same ([#3348](https://github.com/juspay/hyperswitch/pull/3348)) ([`a9638d1`](https://github.com/juspay/hyperswitch/commit/a9638d118e0b68653fef3bec2ce8aa3c47feedd3))

    ### Miscellaneous Tasks

    - **analytics:**
      - Adding status code to connector Kafka events ([#3393](https://github.com/juspay/hyperswitch/pull/3393)) ([`d6807ab`](https://github.com/juspay/hyperswitch/commit/d6807abba46136eabadcbfbc51bce421144dca2c))
      - Adding dispute id to api log events ([#3450](https://github.com/juspay/hyperswitch/pull/3450)) ([`937aea9`](https://github.com/juspay/hyperswitch/commit/937aea906e759e6e8a76a424db99ed052d46b7d2))
    - **kv:** Add metrics while pushing to stream ([#3364](https://github.com/juspay/hyperswitch/pull/3364)) ([`8c0c49c`](https://github.com/juspay/hyperswitch/commit/8c0c49c6bb02d4ec58242bc90eadfb267c24481e))

    **Full Changelog:** [`2024.01.30.0...2024.01.30.1`](https://github.com/juspay/hyperswitch/compare/2024.01.30.0...2024.01.30.1)

    - - -

    ## 2024.01.30.0

    ### Features

    - **router:** Add request_details logger middleware for 400 bad requests ([#3414](https://github.com/juspay/hyperswitch/pull/3414)) ([`dd0d2dc`](https://github.com/juspay/hyperswitch/commit/dd0d2dc2dd9a6263bbb8a99d1f0b2077f38dd621))

    ### Refactors

    - **openapi:** Move openapi to separate crate to decrease compile times ([#3110](https://github.com/juspay/hyperswitch/pull/3110)) ([`7d8d68f`](https://github.com/juspay/hyperswitch/commit/7d8d68faba55dfcb2886c63ae7969ebd4b9ec98c))

    ### Miscellaneous Tasks

    - **configs:** [NMI] add wasm changes for prod dashboard ([#3470](https://github.com/juspay/hyperswitch/pull/3470)) ([`3fbffdc`](https://github.com/juspay/hyperswitch/commit/3fbffdc242dafe7983c542573b7c6362f99331e6))

    **Full Changelog:** [`2024.01.29.0...2024.01.30.0`](https://github.com/juspay/hyperswitch/compare/2024.01.29.0...2024.01.30.0)

    - - -

    ## 2024.01.29.0

    ### Features

    - **connector:** [Adyen] Add support for PIX Payment Method ([#3236](https://github.com/juspay/hyperswitch/pull/3236)) ([`fc6e68f`](https://github.com/juspay/hyperswitch/commit/fc6e68f7f07bf2d48466fa493596c0db02d7550a))
    - **core:**
      - [CYBERSOURCE] Add original authorized amount in router data ([#3417](https://github.com/juspay/hyperswitch/pull/3417)) ([`47fbe48`](https://github.com/juspay/hyperswitch/commit/47fbe486cec252b8befca38f1b7ea77cc0823ee5))
      - Add outgoing webhook for manual `partial_capture` events ([#3388](https://github.com/juspay/hyperswitch/pull/3388)) ([`d5e9866`](https://github.com/juspay/hyperswitch/commit/d5e9866b522bad3e62f6f6c0d7993f5dcc2939af))
    - **logging:** Add a logging middleware to log all api requests ([#3437](https://github.com/juspay/hyperswitch/pull/3437)) ([`c2946cf`](https://github.com/juspay/hyperswitch/commit/c2946cfe05ffa81a66643e04eff5e89b545d2d43))
    - **user:**
      - Add support to delete user ([#3374](https://github.com/juspay/hyperswitch/pull/3374)) ([`7777710`](https://github.com/juspay/hyperswitch/commit/777771048a8144aac9e2f837c85531e139ecc125))
      - Support multiple invites ([#3422](https://github.com/juspay/hyperswitch/pull/3422)) ([`a59ac7d`](https://github.com/juspay/hyperswitch/commit/a59ac7d5b98f27f5fb34206c20ef9c37a07259a3))

    ### Bug Fixes

    - **connector:**
      - Use `ConnectorError::InvalidConnectorConfig` for an invalid `CoinbaseConnectorMeta` ([#3168](https://github.com/juspay/hyperswitch/pull/3168)) ([`d827c9a`](https://github.com/juspay/hyperswitch/commit/d827c9af29b8516f379e648e00f4ab307ae1a34d))
      - Fix connector template script ([#3453](https://github.com/juspay/hyperswitch/pull/3453)) ([`9a54838`](https://github.com/juspay/hyperswitch/commit/9a54838b0529013ab8f449ec6b347a104b55f8f7))
      - [HELCIM] Handle 4XX Errors ([#3458](https://github.com/juspay/hyperswitch/pull/3458)) ([`ec859ea`](https://github.com/juspay/hyperswitch/commit/ec859eabbfb8a511f0fffd30a47a144fb07f2886))
    - **core:** Return surcharge in payment method list response if passed in create request ([#3363](https://github.com/juspay/hyperswitch/pull/3363)) ([`3507ad6`](https://github.com/juspay/hyperswitch/commit/3507ad60b2f1fd84d32eb4d97fe0a847db6f2045))
    - **euclid_wasm:** Include `payouts` feature in `default` features ([#3392](https://github.com/juspay/hyperswitch/pull/3392)) ([`b45e4ca`](https://github.com/juspay/hyperswitch/commit/b45e4ca2a3788823701bdeac2e2a8c1147bb071a))

    ### Refactors

    - **connector:**
      - [Iatapay] refactor authorize flow and fix payment status mapping ([#2409](https://github.com/juspay/hyperswitch/pull/2409)) ([`f0c7bb9`](https://github.com/juspay/hyperswitch/commit/f0c7bb9a5228f2ee31858fea07abe4ecee9b78a2))
      - Use utility function to raise payment method not implemented errors ([#1871](https://github.com/juspay/hyperswitch/pull/1871)) ([`66cd5b2`](https://github.com/juspay/hyperswitch/commit/66cd5b2fc9a32085608ed34e0af477dcafe4b957))
    - **payouts:** Propagate `Not Implemented` error ([#3429](https://github.com/juspay/hyperswitch/pull/3429)) ([`5ab4437`](https://github.com/juspay/hyperswitch/commit/5ab44377b84941b8b59f9e73b1d1f0c3889eb02b))

    ### Miscellaneous Tasks

    - **configs:** [Cashtocode] wasm changes for CAD, CHF currency ([#3461](https://github.com/juspay/hyperswitch/pull/3461)) ([`10055c1`](https://github.com/juspay/hyperswitch/commit/10055c1a7354faae8d0f504e0851d2046df5734a))

    **Full Changelog:** [`2024.01.25.0...2024.01.29.0`](https://github.com/juspay/hyperswitch/compare/2024.01.25.0...2024.01.29.0)

    - - -

    ## 2024.01.25.0

    ### Refactors

    - **configs:** Add configs for deployments to environments ([#3265](https://github.com/juspay/hyperswitch/pull/3265)) ([`77c1bbb`](https://github.com/juspay/hyperswitch/commit/77c1bbb5a3fe3244cd988ac1260a4a31ae7fcd20))

    **Full Changelog:** [`2024.01.24.1...2024.01.25.0`](https://github.com/juspay/hyperswitch/compare/2024.01.24.1...2024.01.25.0)

    - - -

    ## 2024.01.24.1

    ### Features

    - **hashicorp:** Implement hashicorp secrets manager solution ([#3297](https://github.com/juspay/hyperswitch/pull/3297)) ([`629d546`](https://github.com/juspay/hyperswitch/commit/629d546aa7c774e86d609abec3b3ab5cf0d100a7))

    ### Refactors

    - **Router:** [Noon] revert adding new field max_amount to mandate request ([#3435](https://github.com/juspay/hyperswitch/pull/3435)) ([`4cd65a2`](https://github.com/juspay/hyperswitch/commit/4cd65a24f70fdef160eb2d87654f1e30538c3339))
    - **compatibility:** Revert add multiuse mandates support in stripe compatibility ([#3436](https://github.com/juspay/hyperswitch/pull/3436)) ([`8a019f0`](https://github.com/juspay/hyperswitch/commit/8a019f08acf74e04c3ae9c8790dd481301bdcfee))

    ### Miscellaneous Tasks

    - **ckh-source:** Updated ckh analytics source tables ([#3397](https://github.com/juspay/hyperswitch/pull/3397)) ([`3f343d3`](https://github.com/juspay/hyperswitch/commit/3f343d36bff7ce8f73602a2391d205367d5581c7))

    **Full Changelog:** [`2024.01.24.0...2024.01.24.1`](https://github.com/juspay/hyperswitch/compare/2024.01.24.0...2024.01.24.1)

    - - -

    ## 2024.01.24.0

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`7885b2a`](https://github.com/juspay/hyperswitch/commit/7885b2a213f474da3e018ddeb56bc6e407c48471))

    **Full Changelog:** [`2024.01.23.0...2024.01.24.0`](https://github.com/juspay/hyperswitch/compare/2024.01.23.0...2024.01.24.0)

    - - -

    ## 2024.01.23.0

    ### Features

    - **compatibility:** Add multiuse mandates support in stripe compatibility ([#3425](https://github.com/juspay/hyperswitch/pull/3425)) ([`4a8104e`](https://github.com/juspay/hyperswitch/commit/4a8104e5f8dd2cfd03de4055baf1256cb7533895))

    **Full Changelog:** [`2024.01.22.1...2024.01.23.0`](https://github.com/juspay/hyperswitch/compare/2024.01.22.1...2024.01.23.0)

    - - -

    ## 2024.01.22.1

    ### Features

    - **core:** Send `customer_name` to connectors when creating customer ([#3380](https://github.com/juspay/hyperswitch/pull/3380)) ([`7813cee`](https://github.com/juspay/hyperswitch/commit/7813ceece2081b73f1374e2ee5a9a673f0b72127))

    ### Miscellaneous Tasks

    - Chore(deps): bump the cargo group across 1 directories with 3 updates ([#3409](https://github.com/juspay/hyperswitch/pull/3409)) ([`6c46e9c`](https://github.com/juspay/hyperswitch/commit/6c46e9c19b304bb11f304e60c46e8abf67accf6d))

    **Full Changelog:** [`2024.01.22.0...2024.01.22.1`](https://github.com/juspay/hyperswitch/compare/2024.01.22.0...2024.01.22.1)

    - - -

    ## 2024.01.22.0

    ### Features

    - **user_roles:** Add accept invitation API and `UserJWTAuth` ([#3365](https://github.com/juspay/hyperswitch/pull/3365)) ([`a47372a`](https://github.com/juspay/hyperswitch/commit/a47372a451b60defda35fa212565b889ed5b2d2b))

    ### Documentation

    - Add link to api docs ([#3405](https://github.com/juspay/hyperswitch/pull/3405)) ([`4e1e78e`](https://github.com/juspay/hyperswitch/commit/4e1e78ecd962f4b34fa04f611f03e8e6f6e1bd7c))

    **Full Changelog:** [`2024.01.19.1...2024.01.22.0`](https://github.com/juspay/hyperswitch/compare/2024.01.19.1...2024.01.22.0)

    - - -

    ## 2024.01.19.1

    ### Bug Fixes

    - **connector:** [CRYPTOPAY] Fix header generation for PSYNC ([#3402](https://github.com/juspay/hyperswitch/pull/3402)) ([`ec16ed0`](https://github.com/juspay/hyperswitch/commit/ec16ed0f82f258c5699d54a386f67aff06c0d144))
    - **frm:** Update FRM manual review flow ([#3176](https://github.com/juspay/hyperswitch/pull/3176)) ([`5255ba9`](https://github.com/juspay/hyperswitch/commit/5255ba9170c633899cd4c3bbe24a44b429546f15))

    ### Refactors

    - Rename `s3` feature flag to `aws_s3` ([#3341](https://github.com/juspay/hyperswitch/pull/3341)) ([`1c04ac7`](https://github.com/juspay/hyperswitch/commit/1c04ac751240f5c931df0f282af1e0ad745e9509))

    **Full Changelog:** [`2024.01.19.0...2024.01.19.1`](https://github.com/juspay/hyperswitch/compare/2024.01.19.0...2024.01.19.1)

    - - -

    ## 2024.01.19.0

    ### Features

    - **users:**
      - Add `preferred_merchant_id` column and update user details API ([#3373](https://github.com/juspay/hyperswitch/pull/3373)) ([`862a1b5`](https://github.com/juspay/hyperswitch/commit/862a1b5303ff304cca41d3553f652fd1091aab9b))
      - Added get role from jwt api ([#3385](https://github.com/juspay/hyperswitch/pull/3385)) ([`7516a16`](https://github.com/juspay/hyperswitch/commit/7516a16763877c03ecc35fda19388bbd021c5cc7))

    ### Refactors

    - **recon:** Update recipient email and mail body for ProFeatureRequest ([#3381](https://github.com/juspay/hyperswitch/pull/3381)) ([`5a791aa`](https://github.com/juspay/hyperswitch/commit/5a791aaf4dc05e8ffdb60464a03b6fc41f860581))

    **Full Changelog:** [`2024.01.18.1...2024.01.19.0`](https://github.com/juspay/hyperswitch/compare/2024.01.18.1...2024.01.19.0)

    - - -

    ## 2024.01.18.1

    ### Bug Fixes

    - **connector:**
      - Trustpay zen error mapping ([#3255](https://github.com/juspay/hyperswitch/pull/3255)) ([`e816ccf`](https://github.com/juspay/hyperswitch/commit/e816ccfbdd7b0e24464aa93421e399d63f23b17c))
      - [Cashtocode] update amount from i64 to f64 in webhook payload ([#3382](https://github.com/juspay/hyperswitch/pull/3382)) ([`059e866`](https://github.com/juspay/hyperswitch/commit/059e86607dc271c25bb3d23f5adfc7d5f21f62fb))
    - **metrics:** Add TASKS_ADDED_COUNT and TASKS_RESET_COUNT metrics in router scheduler flow ([#3189](https://github.com/juspay/hyperswitch/pull/3189)) ([`b4df40d`](https://github.com/juspay/hyperswitch/commit/b4df40db25f6ea743c7a25db47e8f1d8e0d544e3))
    - **user:** Fetch profile_id for sample data ([#3358](https://github.com/juspay/hyperswitch/pull/3358)) ([`2f693ad`](https://github.com/juspay/hyperswitch/commit/2f693ad1fd857280ef30c6cc0297fb926f0e79e8))

    ### Refactors

    - **connector:** [Volt] Refactor Payments and Refunds Webhooks ([#3377](https://github.com/juspay/hyperswitch/pull/3377)) ([`acb3296`](https://github.com/juspay/hyperswitch/commit/acb329672297cd7337d0b0239e4c662257812e8a))
    - **core:** Add locker config to enable or disable locker ([#3352](https://github.com/juspay/hyperswitch/pull/3352)) ([`bd5356e`](https://github.com/juspay/hyperswitch/commit/bd5356e7e7cf61f9d07fe9b67c9c5bb38fddf9c7))

    **Full Changelog:** [`2024.01.18.0...2024.01.18.1`](https://github.com/juspay/hyperswitch/compare/2024.01.18.0...2024.01.18.1)

    - - -

    ## 2024.01.18.0

    ### Features

    - **connector_events:** Added api to fetch connector event logs ([#3319](https://github.com/juspay/hyperswitch/pull/3319)) ([`68a3a28`](https://github.com/juspay/hyperswitch/commit/68a3a280676c8309f9becffae545b134b5e1f2ea))
    - **payment_method:** Add capability to store bank details using /payment_methods endpoint ([#3113](https://github.com/juspay/hyperswitch/pull/3113)) ([`01c2de2`](https://github.com/juspay/hyperswitch/commit/01c2de223f60595d77c06a59a40dfe041e02cfee))

    ### Bug Fixes

    - **core:** Add validation for authtype and metadata in update payment connector ([#3305](https://github.com/juspay/hyperswitch/pull/3305)) ([`52f38d3`](https://github.com/juspay/hyperswitch/commit/52f38d3d5a7d035e8211e1f51c8f982232e2d7ab))
    - **events:** Fix event generation for paymentmethods list ([#3337](https://github.com/juspay/hyperswitch/pull/3337)) ([`ac8d81b`](https://github.com/juspay/hyperswitch/commit/ac8d81b32b3d91b875113d32782a8c62e39ba2a8))

    ### Refactors

    - **connector:** [cybersource] recurring mandate flow ([#3354](https://github.com/juspay/hyperswitch/pull/3354)) ([`387c1c4`](https://github.com/juspay/hyperswitch/commit/387c1c491bdc413ae361d04f0be25eaa58e72fa9))
    - [Noon] adding new field max_amount to mandate request ([#3209](https://github.com/juspay/hyperswitch/pull/3209)) ([`eb2a61d`](https://github.com/juspay/hyperswitch/commit/eb2a61d8597995838f21b8233653c691118b2191))

    ### Miscellaneous Tasks

    - **router:** Remove recon from default features ([#3370](https://github.com/juspay/hyperswitch/pull/3370)) ([`928beec`](https://github.com/juspay/hyperswitch/commit/928beecdd7fe9e09b38ffe750627ca4af94ffc93))

    **Full Changelog:** [`2024.01.17.0...2024.01.18.0`](https://github.com/juspay/hyperswitch/compare/2024.01.17.0...2024.01.18.0)

    - - -

    ## 2024.01.17.0

    ### Features

    - **connector:** [BANKOFAMERICA] Implement 3DS flow for cards ([#3343](https://github.com/juspay/hyperswitch/pull/3343)) ([`d533c98`](https://github.com/juspay/hyperswitch/commit/d533c98b5107fb6876c11b183eb9bc382a77a2f1))
    - **recon:** Add recon APIs ([#3345](https://github.com/juspay/hyperswitch/pull/3345)) ([`8678f8d`](https://github.com/juspay/hyperswitch/commit/8678f8d1448b5ce430931bfbbc269ef979d9eea7))

    ### Bug Fixes

    - **connector_onboarding:** Check if connector exists for the merchant account and add reset tracking id API ([#3229](https://github.com/juspay/hyperswitch/pull/3229)) ([`58cc8d6`](https://github.com/juspay/hyperswitch/commit/58cc8d6109ce49d385b06c762ab3f6670f5094eb))
    - **payment_link:** Added expires_on in payment response ([#3332](https://github.com/juspay/hyperswitch/pull/3332)) ([`5ad3f89`](https://github.com/juspay/hyperswitch/commit/5ad3f8939afafce3eec39704dcaa92270b384dcd))

    **Full Changelog:** [`2024.01.12.1...2024.01.17.0`](https://github.com/juspay/hyperswitch/compare/2024.01.12.1...2024.01.17.0)

    - - -

    ## 2024.01.12.1

    ### Miscellaneous Tasks

    - **config:** Add merchant_secret config for webhooks for cashtocode and volt in wasm dashboard ([#3333](https://github.com/juspay/hyperswitch/pull/3333)) ([`57f2cff`](https://github.com/juspay/hyperswitch/commit/57f2cff75e58b0a7811492a1fdb636f59dcefbd0))
    - Add api reference for blocklist ([#3336](https://github.com/juspay/hyperswitch/pull/3336)) ([`f381d86`](https://github.com/juspay/hyperswitch/commit/f381d86b7c9fa79d632991c74cab53d0181231c6))

    **Full Changelog:** [`2024.01.12.0...2024.01.12.1`](https://github.com/juspay/hyperswitch/compare/2024.01.12.0...2024.01.12.1)

    - - -

    ## 2024.01.12.0

    ### Features

    - **connector:**
      - [BOA/Cyb] Include merchant metadata in capture and void requests ([#3308](https://github.com/juspay/hyperswitch/pull/3308)) ([`5a5400c`](https://github.com/juspay/hyperswitch/commit/5a5400cf5b539996b2f327c51d4a07b4a86fd1be))
      - [Volt] Add support for refund webhooks ([#3326](https://github.com/juspay/hyperswitch/pull/3326)) ([`e376f68`](https://github.com/juspay/hyperswitch/commit/e376f68c167a289957a4372df108797088ab1f6e))
      - [BOA/CYB] Store AVS response in connector_metadata ([#3271](https://github.com/juspay/hyperswitch/pull/3271)) ([`e75b11e`](https://github.com/juspay/hyperswitch/commit/e75b11e98ac4c8d37c842c8ee0ccf361dcb52793))
    - **euclid_wasm:** Config changes for NMI ([#3329](https://github.com/juspay/hyperswitch/pull/3329)) ([`ed07c5b`](https://github.com/juspay/hyperswitch/commit/ed07c5ba90868a3132ca90d72219db3ba8978232))
    - **outgoingwebhookevent:** Adding api for query to fetch outgoing webhook events log ([#3310](https://github.com/juspay/hyperswitch/pull/3310)) ([`54d44be`](https://github.com/juspay/hyperswitch/commit/54d44bef730c0679f3535f66e89e88139d70ba2e))
    - **payment_link:** Added sdk layout option payment link ([#3207](https://github.com/juspay/hyperswitch/pull/3207)) ([`6117652`](https://github.com/juspay/hyperswitch/commit/61176524ca0c11c605538a1da9a267837193e1ec))
    - **router:** Payment_method block ([#3056](https://github.com/juspay/hyperswitch/pull/3056)) ([`bb09613`](https://github.com/juspay/hyperswitch/commit/bb096138b5937092badd02741fb869ee35e2e3cc))
    - **users:** Invite user without email ([#3328](https://github.com/juspay/hyperswitch/pull/3328)) ([`6a47063`](https://github.com/juspay/hyperswitch/commit/6a4706323c61f3722dc543993c55084dc9ff9850))
    - Feat(connector): [cybersource] Implement 3DS flow for cards ([#3290](https://github.com/juspay/hyperswitch/pull/3290)) ([`6fb3b00`](https://github.com/juspay/hyperswitch/commit/6fb3b00e82d1e3c03dc1c816ffa6353cc7991a53))
    - Add support for card extended bin in payment attempt ([#3312](https://github.com/juspay/hyperswitch/pull/3312)) ([`cc3eefd`](https://github.com/juspay/hyperswitch/commit/cc3eefd317117d761cdcc76804f3510952d4cec2))

    ### Bug Fixes

    - **core:** Surcharge with saved card failure ([#3318](https://github.com/juspay/hyperswitch/pull/3318)) ([`5a1a3da`](https://github.com/juspay/hyperswitch/commit/5a1a3da7502ce9e13546b896477d82719162d5b6))
    - **refund:** Add merchant_connector_id in refund ([#3303](https://github.com/juspay/hyperswitch/pull/3303)) ([`af43b07`](https://github.com/juspay/hyperswitch/commit/af43b07e4394458db478bc16e5fb8d3b0d636a31))
    - **router:** Add config to avoid connector tokenization for `apple pay` `simplified flow` ([#3234](https://github.com/juspay/hyperswitch/pull/3234)) ([`4f9c04b`](https://github.com/juspay/hyperswitch/commit/4f9c04b856761b9c0486abad4c36de191da2c460))
    - Update amount_capturable based on intent_status and payment flow ([#3278](https://github.com/juspay/hyperswitch/pull/3278)) ([`469ea20`](https://github.com/juspay/hyperswitch/commit/469ea20214aa7c1a3b4b86520724c2509ae37b0b))

    ### Refactors

    - **router:**
      - Flagged order_details validation to skip validation ([#3116](https://github.com/juspay/hyperswitch/pull/3116)) ([`8626bda`](https://github.com/juspay/hyperswitch/commit/8626bda6d5aa9e7531edc7ea50ed4f30c3b7227a))
      - Restricted list payment method Customer to api-key based ([#3100](https://github.com/juspay/hyperswitch/pull/3100)) ([`9eaebe8`](https://github.com/juspay/hyperswitch/commit/9eaebe8db3d83105ef1e8fc784241e1fb795dd22))

    ### Miscellaneous Tasks

    - Remove connector auth TOML files from `.gitignore` and `.dockerignore` ([#3330](https://github.com/juspay/hyperswitch/pull/3330)) ([`9f6ef3f`](https://github.com/juspay/hyperswitch/commit/9f6ef3f2240052053b5b7df0a13a5503d8141d56))

    **Full Changelog:** [`2024.01.11.0...2024.01.12.0`](https://github.com/juspay/hyperswitch/compare/2024.01.11.0...2024.01.12.0)

    - - -

    ## 2024.01.11.0

    ### Features

    - **core:** Add new payments webhook events ([#3212](https://github.com/juspay/hyperswitch/pull/3212)) ([`e0e28b8`](https://github.com/juspay/hyperswitch/commit/e0e28b87c0647252918ef110cd7614c46b5cf943))
    - **payment_link:** Add status page for payment link ([#3213](https://github.com/juspay/hyperswitch/pull/3213)) ([`50e4d79`](https://github.com/juspay/hyperswitch/commit/50e4d797da31b570b5920b33d77c24a21d9871e2))

    ### Bug Fixes

    - **euclid_wasm:** Update braintree config prod ([#3288](https://github.com/juspay/hyperswitch/pull/3288)) ([`8830563`](https://github.com/juspay/hyperswitch/commit/8830563748ed20c40b7a21a66e9ad9fd02ddcf0e))

    ### Refactors

    - **connector:** [bluesnap] add connector_txn_id fallback for webhook ([#3315](https://github.com/juspay/hyperswitch/pull/3315)) ([`a69e876`](https://github.com/juspay/hyperswitch/commit/a69e876f8212cb94202686e073005c23b1b2fc35))
    - Removed basilisk feature ([#3281](https://github.com/juspay/hyperswitch/pull/3281)) ([`612f8d9`](https://github.com/juspay/hyperswitch/commit/612f8d9d5f5bcba78aa64c3128cc72be0f2860ea))

    ### Miscellaneous Tasks

    - Nits and small code improvements found during investigation of PR#3168 ([#3259](https://github.com/juspay/hyperswitch/pull/3259)) ([`fe3cf54`](https://github.com/juspay/hyperswitch/commit/fe3cf54781302c733c1682ded2c1735544407a5f))

    **Full Changelog:** [`2024.01.10.0...2024.01.11.0`](https://github.com/juspay/hyperswitch/compare/2024.01.10.0...2024.01.11.0)

    - - -

    ## 2024.01.10.0

    ### Features

    - **Connector:** [VOLT] Add support for Payments Webhooks ([#3155](https://github.com/juspay/hyperswitch/pull/3155)) ([`eba7896`](https://github.com/juspay/hyperswitch/commit/eba789640b72cdfbc17d0994d16ce111a1788fe5))
    - **pm_list:** Add required fields for Ideal ([#3183](https://github.com/juspay/hyperswitch/pull/3183)) ([`1c3c5f6`](https://github.com/juspay/hyperswitch/commit/1c3c5f6b0cff9a0037175ba92c002cdf4249108d))

    ### Bug Fixes

    - **connector:**
      - [BOA/CYB] Fix Metadata Error ([#3283](https://github.com/juspay/hyperswitch/pull/3283)) ([`71044a1`](https://github.com/juspay/hyperswitch/commit/71044a14ed87ac0cd7d2bb2009f0e59c79bd344c))
      - [BOA, Cybersource] capture error_code ([#3239](https://github.com/juspay/hyperswitch/pull/3239)) ([`ecf51b5`](https://github.com/juspay/hyperswitch/commit/ecf51b5e3a30f055634edfafcd36f64cef535a53))
    - **outgoingwebhookevents:** Throw an error when outgoing webhook events env var not found ([#3291](https://github.com/juspay/hyperswitch/pull/3291)) ([`ee044a0`](https://github.com/juspay/hyperswitch/commit/ee044a0be811a53842c69f64c27d9995d84b7040))
    - **users:** Added merchant name is list merchants ([#3289](https://github.com/juspay/hyperswitch/pull/3289)) ([`8a354f4`](https://github.com/juspay/hyperswitch/commit/8a354f42295a3167d0e846c9522bc091ebdca3f4))
    - **wasm:** Fix failing `wasm-pack build` for `euclid_wasm` ([#3284](https://github.com/juspay/hyperswitch/pull/3284)) ([`5eb6711`](https://github.com/juspay/hyperswitch/commit/5eb67114646674fe227f073e417f26beb97e9a43))

    ### Refactors

    - Pass customer object to `make_pm_data` ([#3246](https://github.com/juspay/hyperswitch/pull/3246)) ([`36c32c3`](https://github.com/juspay/hyperswitch/commit/36c32c377ae788c96b578303eae5d029e3044b7c))

    ### Miscellaneous Tasks

    - **postman:** Update Postman collection files ([`8fc68ad`](https://github.com/juspay/hyperswitch/commit/8fc68adc7fb6a23d4a2970a05f5739db6010a53d))

    **Full Changelog:** [`2024.01.08.0...2024.01.10.0`](https://github.com/juspay/hyperswitch/compare/2024.01.08.0...2024.01.10.0)

    - - -

    ## 2024.01.08.0

    ### Features

    - **analytics:** Adding outgoing webhooks kafka event ([#3140](https://github.com/juspay/hyperswitch/pull/3140)) ([`1d26df2`](https://github.com/juspay/hyperswitch/commit/1d26df28bc5e1db359272b40adae70bfba9b7360))
    - **connector:** Add Revoke mandate flow ([#3261](https://github.com/juspay/hyperswitch/pull/3261)) ([`90ac26a`](https://github.com/juspay/hyperswitch/commit/90ac26a92f837568be5181108fdb1272171bbf23))
    - **merchant_account:** Add list multiple merchants in `MerchantAccountInterface` ([#3220](https://github.com/juspay/hyperswitch/pull/3220)) ([`c3172ef`](https://github.com/juspay/hyperswitch/commit/c3172ef60603325a1d9e5cab45e72d23a383e218))
    - **payments:** Add payment id in all the payment logs ([#3142](https://github.com/juspay/hyperswitch/pull/3142)) ([`7766245`](https://github.com/juspay/hyperswitch/commit/7766245478f72b0bc942922b1138c87a239be153))
    - **pm_list:** Add required fields for eps ([#3169](https://github.com/juspay/hyperswitch/pull/3169)) ([`bfd8a5a`](https://github.com/juspay/hyperswitch/commit/bfd8a5a31abb3c95cc9ca21689d5c30a6dc4ce8d))
    - Add deep health check ([#3210](https://github.com/juspay/hyperswitch/pull/3210)) ([`f30ba89`](https://github.com/juspay/hyperswitch/commit/f30ba89884d3abf2356cf1870d833a97d2411f69))
    - Include version number in response headers and on application startup ([#3045](https://github.com/juspay/hyperswitch/pull/3045)) ([`252443a`](https://github.com/juspay/hyperswitch/commit/252443a50dc48939eb08b3bcd67273bb71bbe349))

    ### Bug Fixes

    - **analytics:**
      - Fixed response code to 501 ([#3119](https://github.com/juspay/hyperswitch/pull/3119)) ([`00008c1`](https://github.com/juspay/hyperswitch/commit/00008c16c1c20f1f34381d0fc7e55ef05183e776))
      - Added response to the connector outgoing event ([#3129](https://github.com/juspay/hyperswitch/pull/3129)) ([`d152c3a`](https://github.com/juspay/hyperswitch/commit/d152c3a1ca70c39f5c64edf63b5995f6cf02c88a))
    - **connector:**
      - [NMI] Populating `ErrorResponse` with required fields and Mapping `connector_response_reference_id` ([#3214](https://github.com/juspay/hyperswitch/pull/3214)) ([`64babd3`](https://github.com/juspay/hyperswitch/commit/64babd34786ba8e6f63aa1dba1cbd1bc6264f2ac))
      - [Stripe] Deserialization Error while parsing Dispute Webhook Body ([#3256](https://github.com/juspay/hyperswitch/pull/3256)) ([`01b4ac3`](https://github.com/juspay/hyperswitch/commit/01b4ac30e40a55b05fe3585d0544b21125762bc7))
    - **router:**
      - Multiple incremental_authorizations with kv enabled ([#3185](https://github.com/juspay/hyperswitch/pull/3185)) ([`f78d02d`](https://github.com/juspay/hyperswitch/commit/f78d02d981dd7b35f2150f204b327847b811badd))
      - Payment link api contract change ([#2975](https://github.com/juspay/hyperswitch/pull/2975)) ([`3cd7496`](https://github.com/juspay/hyperswitch/commit/3cd74966b279dc1c43935dc1bceb1c69b9eb0643))
    - **user:** Add integration_completed enum in metadata type ([#3245](https://github.com/juspay/hyperswitch/pull/3245)) ([`3ab71fb`](https://github.com/juspay/hyperswitch/commit/3ab71fbd5ac86f12cf19d17561e428d33c51a4cf))
    - **users:** Fix wrong redirection url in magic link ([#3217](https://github.com/juspay/hyperswitch/pull/3217)) ([`000e644`](https://github.com/juspay/hyperswitch/commit/000e64438838461ea930545405fb2ee0d3c4356c))
    - Introduce net_amount field in payment response ([#3115](https://github.com/juspay/hyperswitch/pull/3115)) ([`23e0c63`](https://github.com/juspay/hyperswitch/commit/23e0c6354185d666771c07b8534e42380cc50812))

    ### Refactors

    - **api_lock:** Allow api lock on psync only when force sync is true ([#3242](https://github.com/juspay/hyperswitch/pull/3242)) ([`ac5349c`](https://github.com/juspay/hyperswitch/commit/ac5349cd7160f67f7a56f48f54981cf3dc1e5b52))
    - **drainer:** Change logic for trimming the stream and refactor for modularity ([#3128](https://github.com/juspay/hyperswitch/pull/3128)) ([`de7a607`](https://github.com/juspay/hyperswitch/commit/de7a607e66847ff4bbddcbbafa50d54a56f02f62))
    - **euclid_wasm:** Update wasm config ([#3222](https://github.com/juspay/hyperswitch/pull/3222)) ([`7ea50c3`](https://github.com/juspay/hyperswitch/commit/7ea50c3a78bc1a091077c23999a69dda1cf0f463))
    - Address panics due to indexing and slicing ([#3233](https://github.com/juspay/hyperswitch/pull/3233)) ([`34318bc`](https://github.com/juspay/hyperswitch/commit/34318bc1f12a1298e8993021a2d516cf86049980))

    ### Miscellaneous Tasks

    - Address Rust 1.75 clippy lints ([#3231](https://github.com/juspay/hyperswitch/pull/3231)) ([`c8279b1`](https://github.com/juspay/hyperswitch/commit/c8279b110e6c55784f042aebb956931e1870b0ca))

    **Full Changelog:** [`v1.106.1...2024.01.08.0`](https://github.com/juspay/hyperswitch/compare/v1.106.1...2024.01.08.0)

    - - -

    ## 1.106.1 (2024-01-05)

    ### Bug Fixes

    - **connector:** [iatapay] change refund amount ([#3244](https://github.com/juspay/hyperswitch/pull/3244)) ([`e79604b`](https://github.com/juspay/hyperswitch/commit/e79604bd4681a69802f3c3169dd94424e3688e42))

    **Full Changelog:** [`v1.106.0...v1.106.1`](https://github.com/juspay/hyperswitch/compare/v1.106.0...v1.106.1)

    - - -


    ## 1.106.0 (2024-01-04)

    ### Features

    - **connector:**
      - [BOA] Populate merchant_defined_information with metadata ([#3208](https://github.com/juspay/hyperswitch/pull/3208)) ([`18eca7e`](https://github.com/juspay/hyperswitch/commit/18eca7e9fbe6cdc101bd135c4618882b7a5455bf))
      - [CYBERSOURCE] Refactor cybersource ([#3215](https://github.com/juspay/hyperswitch/pull/3215)) ([`e06ba14`](https://github.com/juspay/hyperswitch/commit/e06ba148b666772fe79d7050d0c505dd2f04f87c))
    - **customers:** Add JWT Authentication for `/customers` APIs ([#3179](https://github.com/juspay/hyperswitch/pull/3179)) ([`aefe618`](https://github.com/juspay/hyperswitch/commit/aefe6184ec3e3156877c72988ca0f92454a47e7d))

    ### Bug Fixes

    - **connector:** [Volt] Error handling for auth response ([#3187](https://github.com/juspay/hyperswitch/pull/3187)) ([`a51c54d`](https://github.com/juspay/hyperswitch/commit/a51c54d39d3687c6a06176895435ac66fa194d7b))
    - **core:** Fix recurring mandates flow for cyber source ([#3224](https://github.com/juspay/hyperswitch/pull/3224)) ([`6a1743e`](https://github.com/juspay/hyperswitch/commit/6a1743ebe993d5abb53f2ce1b8b383aa4a9553fb))
    - **middleware:** Add support for logging request-id sent in request ([#3225](https://github.com/juspay/hyperswitch/pull/3225)) ([`0f72b55`](https://github.com/juspay/hyperswitch/commit/0f72b5527aab221b8e69e737e5d19abdd0696150))

    ### Refactors

    - **connector:** [NMI] Include mandatory fields for card 3DS ([#3203](https://github.com/juspay/hyperswitch/pull/3203)) ([`a46b8a7`](https://github.com/juspay/hyperswitch/commit/a46b8a7b05367fbbdbf4fca89d8a6b29110a4e1c))

    ### Testing

    - **postman:** Update postman collection files ([`0248d35`](https://github.com/juspay/hyperswitch/commit/0248d35dd49d2dc7e5e4da6b60a3ee3577c8eac9))

    ### Miscellaneous Tasks

    - Fix channel handling for consumer workflow loop ([#3223](https://github.com/juspay/hyperswitch/pull/3223)) ([`51e1fac`](https://github.com/juspay/hyperswitch/commit/51e1fac556fdd8775e0bbc858b0b3cc50a7e88ec))

    **Full Changelog:** [`v1.105.0...v1.106.0`](https://github.com/juspay/hyperswitch/compare/v1.105.0...v1.106.0)

    - - -


    ## 1.105.0 (2023-12-23)

    ### Features

    - **connector:** [BOA/CYBERSOURCE] Populate connector_transaction_id ([#3202](https://github.com/juspay/hyperswitch/pull/3202)) ([`110d3d2`](https://github.com/juspay/hyperswitch/commit/110d3d211be2edf47533cc5297ae159cad0e5034))

    **Full Changelog:** [`v1.104.0...v1.105.0`](https://github.com/juspay/hyperswitch/compare/v1.104.0...v1.105.0)

    - - -


    ## 1.104.0 (2023-12-22)

    ### Features

    - **connector:** [BOA] Implement apple pay manual flow ([#3191](https://github.com/juspay/hyperswitch/pull/3191)) ([`25fd3d5`](https://github.com/juspay/hyperswitch/commit/25fd3d502e48f10dd3acbdc88caea4007310d4ee))
    - **router:** Make the billing country for apple pay as optional field ([#3188](https://github.com/juspay/hyperswitch/pull/3188)) ([`15987cc`](https://github.com/juspay/hyperswitch/commit/15987cc81ecba3c1d0de4fa0a12424066a8842eb))

    ### Bug Fixes

    - **connector:**
      - [Trustpay] Use `connector_request_reference_id` for merchant reference instead of `payment_id` ([#2885](https://github.com/juspay/hyperswitch/pull/2885)) ([`c51c761`](https://github.com/juspay/hyperswitch/commit/c51c761677e8c5ff80de40f8796f340cf1331f96))
      - [BOA/Cyb] Truncate state length to <20 ([#3198](https://github.com/juspay/hyperswitch/pull/3198)) ([`79a18e2`](https://github.com/juspay/hyperswitch/commit/79a18e2bf7bb1f338cf982fb1a152add2ed4e087))
      - [Iatapay] fix error response handling when payment is failed ([#3197](https://github.com/juspay/hyperswitch/pull/3197)) ([`716a74c`](https://github.com/juspay/hyperswitch/commit/716a74cf8449583541c426a5c427c9e32f5b2528))
      - [BOA] Display 2XX Failure Errors ([#3200](https://github.com/juspay/hyperswitch/pull/3200)) ([`07fd9be`](https://github.com/juspay/hyperswitch/commit/07fd9bedf02a1d70fc248fbbab480a5e24a7f077))
      - [CYBERSOURCE] Display 2XX Failure Errors ([#3201](https://github.com/juspay/hyperswitch/pull/3201)) ([`86c2622`](https://github.com/juspay/hyperswitch/commit/86c26221357e14b585f44c6ebe46962c085f6552))
    - **users:** Wrong `user_role` insertion in `invite_user` for new users ([#3193](https://github.com/juspay/hyperswitch/pull/3193)) ([`b06a8d6`](https://github.com/juspay/hyperswitch/commit/b06a8d6e0d7fc4fb1bec30f702d64f0bd5e1068e))

    **Full Changelog:** [`v1.103.1...v1.104.0`](https://github.com/juspay/hyperswitch/compare/v1.103.1...v1.104.0)

    - - -


    ## 1.103.1 (2023-12-21)

    ### Bug Fixes

    - **connector:**
      - Remove set_body method for connectors implementing default get_request_body ([#3182](https://github.com/juspay/hyperswitch/pull/3182)) ([`a5e141b`](https://github.com/juspay/hyperswitch/commit/a5e141b542622e7065f0e0070a3cddacde78fd8a))
      - [Paypal] remove shipping address as mandatory field for paypal wallet ([#3181](https://github.com/juspay/hyperswitch/pull/3181)) ([`680ed60`](https://github.com/juspay/hyperswitch/commit/680ed603c5113ec29fbd13c4c633e18ad4ad10ee))

    **Full Changelog:** [`v1.103.0...v1.103.1`](https://github.com/juspay/hyperswitch/compare/v1.103.0...v1.103.1)

    - - -


    ## 1.103.0 (2023-12-20)

    ### Features

    - **connector:**
      - [NMI] Implement webhook for Payments and Refunds ([#3164](https://github.com/juspay/hyperswitch/pull/3164)) ([`30c1401`](https://github.com/juspay/hyperswitch/commit/30c14019d067ad5f105563f205eb1941010233e8))
      - [BOA] Handle BOA 5XX errors ([#3178](https://github.com/juspay/hyperswitch/pull/3178)) ([`1d80949`](https://github.com/juspay/hyperswitch/commit/1d80949bef1228bf432dc445eaba15afccb030bd))
    - **connector-config:** Add wasm support for dashboard connector configuration ([#3138](https://github.com/juspay/hyperswitch/pull/3138)) ([`b0ffbe9`](https://github.com/juspay/hyperswitch/commit/b0ffbe9355b7e38226994c1ccbbe80cdbc77adde))
    - **db:** Implement `AuthorizationInterface` for `MockDb` ([#3151](https://github.com/juspay/hyperswitch/pull/3151)) ([`396a64f`](https://github.com/juspay/hyperswitch/commit/396a64f3bbad6e75d4b263286a7ef6a2f09b180e))
    - **postman:** [Prophetpay] Add test cases ([#2946](https://github.com/juspay/hyperswitch/pull/2946)) ([`583d7b8`](https://github.com/juspay/hyperswitch/commit/583d7b87a711102e4e62417f3191ac837886eca9))

    ### Bug Fixes

    - **connector:**
      - [NMI] Fix response deserialization for vault id creation ([#3166](https://github.com/juspay/hyperswitch/pull/3166)) ([`d44daaf`](https://github.com/juspay/hyperswitch/commit/d44daaf539021a9cbc33c9391172c38825d74dcd))
      - Connector wise validation for zero auth flow ([#3159](https://github.com/juspay/hyperswitch/pull/3159)) ([`45ba128`](https://github.com/juspay/hyperswitch/commit/45ba128b6ab39f513dd114567d9915acf0eaea20))
    - **events:** Add logger for incoming webhook payload ([#3171](https://github.com/juspay/hyperswitch/pull/3171)) ([`cf47a65`](https://github.com/juspay/hyperswitch/commit/cf47a65916fd4fb5c996946ffd579fd6755d02f7))
    - **users:** Send correct `user_role` values in `switch_merchant` response ([#3167](https://github.com/juspay/hyperswitch/pull/3167)) ([`dc589d5`](https://github.com/juspay/hyperswitch/commit/dc589d580f1382874bc755d3719bd3244fdedc67))

    ### Refactors

    - **core:** Fix payment status for 4xx ([#3177](https://github.com/juspay/hyperswitch/pull/3177)) ([`e7949c2`](https://github.com/juspay/hyperswitch/commit/e7949c23b9be56a4cd763d4990c1a95c0fefae95))
    - **payment_methods:** Make the card_holder_name as an empty string if not sent ([#3173](https://github.com/juspay/hyperswitch/pull/3173)) ([`b98e53d`](https://github.com/juspay/hyperswitch/commit/b98e53d5cba5a5af04ada9bd83fa7bd2e27462d9))

    ### Testing

    - **postman:** Update postman collection files ([`6890e90`](https://github.com/juspay/hyperswitch/commit/6890e9029d90bfd518ba23979a0bd507853dc983))

    ### Documentation

    - **connector:** Update connector integration documentation  ([#3041](https://github.com/juspay/hyperswitch/pull/3041)) ([`ce5514e`](https://github.com/juspay/hyperswitch/commit/ce5514eadfce240bc4cefb472405f37432a8507b))

    **Full Changelog:** [`v1.102.1...v1.103.0`](https://github.com/juspay/hyperswitch/compare/v1.102.1...v1.103.0)

    - - -


    ## 1.102.1 (2023-12-18)

    ### Bug Fixes

    - **connector:** [BOA/CYBERSOURCE] Update error handling ([#3156](https://github.com/juspay/hyperswitch/pull/3156)) ([`8e484dd`](https://github.com/juspay/hyperswitch/commit/8e484ddab8d3f4463299c7f7e8ce75b8dd628599))
    - **euclid_wasm:** Add function to retrieve keys for 3ds and surcharge decision manager ([#3160](https://github.com/juspay/hyperswitch/pull/3160)) ([`30fe9d1`](https://github.com/juspay/hyperswitch/commit/30fe9d19e4955035a370f8f9ce37963cdb76c68a))
    - **payment_link:** Added amount conversion to base unit based on currency ([#3162](https://github.com/juspay/hyperswitch/pull/3162)) ([`0fa61a9`](https://github.com/juspay/hyperswitch/commit/0fa61a9dd194c5b3688f8f68b056c263d92327d0))
    - Change prodintent name in dashboard metadata ([#3161](https://github.com/juspay/hyperswitch/pull/3161)) ([`8db3361`](https://github.com/juspay/hyperswitch/commit/8db3361d80f674a28a3916830a4b0c1c2b89776a))

    ### Refactors

    - **connector:**
      - [Helcim] change error message from not supported to not implemented ([#2850](https://github.com/juspay/hyperswitch/pull/2850)) ([`41b5a82`](https://github.com/juspay/hyperswitch/commit/41b5a82bafa9b0392bb43ed268fefc5187b48636))
      - [Forte] change error message from not supported to not implemented ([#2847](https://github.com/juspay/hyperswitch/pull/2847)) ([`3fc0e2d`](https://github.com/juspay/hyperswitch/commit/3fc0e2d8195948d50f735df5192ae0f8431b432b))
      - [Cryptopay] change error message from not supported to not implemented ([#2846](https://github.com/juspay/hyperswitch/pull/2846)) ([`2d895be`](https://github.com/juspay/hyperswitch/commit/2d895be9856d17cd923665568aa9b6e54fc1a305))
    - **router:** [ACI] change payment error message from not supported to not implemented error ([#2837](https://github.com/juspay/hyperswitch/pull/2837)) ([`cc12e8a`](https://github.com/juspay/hyperswitch/commit/cc12e8a2435e5e47eeec77c620c747b156a3e16b))
    - **users:** Rename `user_roles` and `dashboard_metadata` columns ([#3135](https://github.com/juspay/hyperswitch/pull/3135)) ([`e3589e6`](https://github.com/juspay/hyperswitch/commit/e3589e641c8a0b3b690b82f09a61d512db2d9932))

    **Full Changelog:** [`v1.102.0+hotfix.1...v1.102.1`](https://github.com/juspay/hyperswitch/compare/v1.102.0+hotfix.1...v1.102.1)

    - - -


    ## 1.102.0 (2023-12-17)

    ### Features

    - **connector:**
      - [CYBERSOURCE] Implement Google Pay ([#3139](https://github.com/juspay/hyperswitch/pull/3139)) ([`4ae6af4`](https://github.com/juspay/hyperswitch/commit/4ae6af4632bbef5d21c3cb28538dcc4a94a10789))
      - [PlaceToPay] Implement Cards for PlaceToPay ([#3117](https://github.com/juspay/hyperswitch/pull/3117)) ([`107c66f`](https://github.com/juspay/hyperswitch/commit/107c66fec331376aa8c9f1e710e1503793fde119))
      - [CYBERSOURCE] Implement Apple Pay ([#3149](https://github.com/juspay/hyperswitch/pull/3149)) ([`5f53d84`](https://github.com/juspay/hyperswitch/commit/5f53d84a8b92f8aab67d09666b45362b287809ff))
      - [NMI] Implement 3DS for Cards ([#3143](https://github.com/juspay/hyperswitch/pull/3143)) ([`7df4523`](https://github.com/juspay/hyperswitch/commit/7df45235b1b55c3e4f1205169fb512d2aadc98ac))

    ### Bug Fixes

    - **connector:**
      - [Checkout] Fix status mapping for checkout ([#3073](https://github.com/juspay/hyperswitch/pull/3073)) ([`5b2c329`](https://github.com/juspay/hyperswitch/commit/5b2c3291d4fbe3c4154c187b4e915dc3365e761a))
      - [Cybersource] signature authentication in incremental_authorization flow ([#3141](https://github.com/juspay/hyperswitch/pull/3141)) ([`d47a7cc`](https://github.com/juspay/hyperswitch/commit/d47a7cc418b0f4bb609d99f4a463a14c39df46e4))
    - [CYBERSOURCE] Fix Status Mapping ([#3144](https://github.com/juspay/hyperswitch/pull/3144)) ([`62c0c47`](https://github.com/juspay/hyperswitch/commit/62c0c47e99f154399687a32caf9999b365da60ae))

    ### Testing

    - **postman:** Update postman collection files ([`d40de4c`](https://github.com/juspay/hyperswitch/commit/d40de4c8b51010a9e6a3164196702a20c2ab3563))

    ### Miscellaneous Tasks

    - **deps:** Bump zerocopy from 0.7.26 to 0.7.31 ([#3136](https://github.com/juspay/hyperswitch/pull/3136)) ([`d8de3c2`](https://github.com/juspay/hyperswitch/commit/d8de3c285c90103da93f0f3fd0241924dabd256f))
    - **events:** Remove duplicate logs ([#3148](https://github.com/juspay/hyperswitch/pull/3148)) ([`a78fed7`](https://github.com/juspay/hyperswitch/commit/a78fed73babace05b4f668ef219909277045ba85))

    **Full Changelog:** [`v1.101.0...v1.102.0`](https://github.com/juspay/hyperswitch/compare/v1.101.0...v1.102.0)

    - - -


    ## 1.101.0 (2023-12-14)

    ### Features

    - **payments:** Add outgoing payments webhooks ([#3133](https://github.com/juspay/hyperswitch/pull/3133)) ([`f457846`](https://github.com/juspay/hyperswitch/commit/f4578463d5e1a0f442aacebdfa7af0460489ba8c))

    ### Bug Fixes

    - **connector:** [CashToCode]Fix cashtocode redirection for evoucher pm type ([#3131](https://github.com/juspay/hyperswitch/pull/3131)) ([`71a86a8`](https://github.com/juspay/hyperswitch/commit/71a86a804e15e4d053f92cfddb36a15cf7b77f7a))
    - **locker:** Fix double serialization for json request ([#3134](https://github.com/juspay/hyperswitch/pull/3134)) ([`70b86b7`](https://github.com/juspay/hyperswitch/commit/70b86b71e4809d2a47c6bc1214f72c37d3325c37))
    - **router:** Add routing cache invalidation on payment connector update ([#3132](https://github.com/juspay/hyperswitch/pull/3132)) ([`1f84865`](https://github.com/juspay/hyperswitch/commit/1f848659f135542fdfa967b3b48ad6cdf69fda2c))

    **Full Changelog:** [`v1.100.0...v1.101.0`](https://github.com/juspay/hyperswitch/compare/v1.100.0...v1.101.0)

    - - -


    ## 1.100.0 (2023-12-14)

    ### Features

    - **connector:**
      - [RISKIFIED] Add support for riskified frm connector ([#2533](https://github.com/juspay/hyperswitch/pull/2533)) ([`151a30f`](https://github.com/juspay/hyperswitch/commit/151a30f4eed10924cd93bf7f4f66976af0ab8314))
      - [HELCIM] Add connector_request_reference_id in invoice_number  ([#3087](https://github.com/juspay/hyperswitch/pull/3087)) ([`3cc9642`](https://github.com/juspay/hyperswitch/commit/3cc9642f3ac4c07fb675e9ff4032832819d877a1))
    - **core:** Enable surcharge support for all connectors ([#3109](https://github.com/juspay/hyperswitch/pull/3109)) ([`57e1ae9`](https://github.com/juspay/hyperswitch/commit/57e1ae9dea6ff70fb1bca47c479c35026c167bad))
    - **events:** Add type info to outgoing requests & maintain structural & PII type info ([#2956](https://github.com/juspay/hyperswitch/pull/2956)) ([`6e82b0b`](https://github.com/juspay/hyperswitch/commit/6e82b0bd746b405281f79b86a3cd92b550a33f68))
    - **external_services:** Adds encrypt function for KMS ([#3111](https://github.com/juspay/hyperswitch/pull/3111)) ([`bca7cdb`](https://github.com/juspay/hyperswitch/commit/bca7cdb4c14b5fbb40d8cbf59fd1756ad27ac674))

    ### Bug Fixes

    - **api_locking:** Fix the unit interpretation for `LockSettings` expiry ([#3121](https://github.com/juspay/hyperswitch/pull/3121)) ([`3f4167d`](https://github.com/juspay/hyperswitch/commit/3f4167dbd477c793e1a4cc572da0c12d66f2b649))
    - **connector:** [trustpay] make paymentId optional field ([#3101](https://github.com/juspay/hyperswitch/pull/3101)) ([`62a7c30`](https://github.com/juspay/hyperswitch/commit/62a7c3053c5e276091f5bd54a5679caef58a4ace))
    - **docker-compose:** Remove label list from docker compose yml ([#3118](https://github.com/juspay/hyperswitch/pull/3118)) ([`e1e23fd`](https://github.com/juspay/hyperswitch/commit/e1e23fd987cae96e56311d1cfdcb225d9327860c))
    - Validate refund amount with amount_captured instead of amount ([#3120](https://github.com/juspay/hyperswitch/pull/3120)) ([`be13d15`](https://github.com/juspay/hyperswitch/commit/be13d15d3c0214c863e131cf1dbe184d5baec5d7))

    ### Refactors

    - **connector:** [Wise] Error Message For Connector Implementation  ([#2952](https://github.com/juspay/hyperswitch/pull/2952)) ([`1add2c0`](https://github.com/juspay/hyperswitch/commit/1add2c059f4fb5653f33e2f3ce454793caf2d595))
    - **payments:** Add support for receiving card_holder_name field as an empty string ([#3127](https://github.com/juspay/hyperswitch/pull/3127)) ([`4d19d8b`](https://github.com/juspay/hyperswitch/commit/4d19d8b1d18f49f02e951c5025d35cf5d62cec1b))

    ### Testing

    - **postman:** Update postman collection files ([`a5618cd`](https://github.com/juspay/hyperswitch/commit/a5618cd5d6eb5b007f7927f05e777e875195a678))

    **Full Changelog:** [`v1.99.0...v1.100.0`](https://github.com/juspay/hyperswitch/compare/v1.99.0...v1.100.0)

    - - -


    ## 1.99.0 (2023-12-12)

    ### Features

    - **connector:** [Placetopay] Add Connector Template Code  ([#3084](https://github.com/juspay/hyperswitch/pull/3084)) ([`a7b688a`](https://github.com/juspay/hyperswitch/commit/a7b688aac72e15f782046b9d108aca12f43a9994))
    - Add utility to convert TOML configuration file to list of environment variables ([#3096](https://github.com/juspay/hyperswitch/pull/3096)) ([`2c4599a`](https://github.com/juspay/hyperswitch/commit/2c4599a1cd7e244b6fb11948c88c55c5b8faad76))

    ### Bug Fixes

    - **router:** Make `request_incremental_authorization` optional in payment_intent ([#3086](https://github.com/juspay/hyperswitch/pull/3086)) ([`f7da59d`](https://github.com/juspay/hyperswitch/commit/f7da59d06af11707e210b58a875c013d31c3ee17))

    ### Refactors

    - **email:** Create client every time of sending email ([#3105](https://github.com/juspay/hyperswitch/pull/3105)) ([`fc2f163`](https://github.com/juspay/hyperswitch/commit/fc2f16392148cd66b3c3e67e3e0c782910e37e1f))

    ### Testing

    - **postman:** Update postman collection files ([`aa97821`](https://github.com/juspay/hyperswitch/commit/aa9782164fb7846fe533c5057a17756dc82ede54))

    ### Miscellaneous Tasks

    - **deps:** Update fred and moka ([#3088](https://github.com/juspay/hyperswitch/pull/3088)) ([`129b1e5`](https://github.com/juspay/hyperswitch/commit/129b1e55bd1cbad0243030fd25379f1400eb170c))

    **Full Changelog:** [`v1.98.0...v1.99.0`](https://github.com/juspay/hyperswitch/compare/v1.98.0...v1.99.0)

    - - -


    ## 1.98.0 (2023-12-11)

    ### Features

    - **connector:** Accept connector_transaction_id in error_response of connector flows for Trustpay ([#3060](https://github.com/juspay/hyperswitch/pull/3060)) ([`f53b090`](https://github.com/juspay/hyperswitch/commit/f53b090db87e094f9694481f13af62240c4c422a))
    - **pm_auth:** Pm_auth service migration ([#3047](https://github.com/juspay/hyperswitch/pull/3047)) ([`9c1c44a`](https://github.com/juspay/hyperswitch/commit/9c1c44a706750b14857e9180f5161b61ed89a2ad))
    - **user:** Add `verify_email` API ([#3076](https://github.com/juspay/hyperswitch/pull/3076)) ([`585e009`](https://github.com/juspay/hyperswitch/commit/585e00980c43797f326efb809df9ffd497d1dd26))
    - **users:** Add resend verification email API ([#3093](https://github.com/juspay/hyperswitch/pull/3093)) ([`6d5c25e`](https://github.com/juspay/hyperswitch/commit/6d5c25e3369117acaf5865965769649d524226af))

    ### Bug Fixes

    - **analytics:** Adding api_path to api logs event and to auditlogs api response ([#3079](https://github.com/juspay/hyperswitch/pull/3079)) ([`bf67438`](https://github.com/juspay/hyperswitch/commit/bf674380d5c7e856d0bae75554326aa9017c0201))
    - **config:** Add missing config fields in `docker_compose.toml` ([#3080](https://github.com/juspay/hyperswitch/pull/3080)) ([`1f8116d`](https://github.com/juspay/hyperswitch/commit/1f8116db368aec344d08603045c4cb46c2c25b41))
    - **connector:** [CYBERSOURCE] Remove Phone Number Field From Address ([#3095](https://github.com/juspay/hyperswitch/pull/3095)) ([`72955ec`](https://github.com/juspay/hyperswitch/commit/72955ecc68280773b9c77b4db3d46de95a62f9ed))
    - **drainer:** Properly log deserialization errors ([#3075](https://github.com/juspay/hyperswitch/pull/3075)) ([`42b5bd4`](https://github.com/juspay/hyperswitch/commit/42b5bd4f3d142c9fa12475f36a8b144753ac06e2))
    - **router:** Allow zero amount for payment intent in list payment methods ([#3090](https://github.com/juspay/hyperswitch/pull/3090)) ([`b283b6b`](https://github.com/juspay/hyperswitch/commit/b283b6b662c9f2eabe90473434369d8f7c2369a6))
    - **user:** Add checks for change password ([#3078](https://github.com/juspay/hyperswitch/pull/3078)) ([`26a2611`](https://github.com/juspay/hyperswitch/commit/26a261131b4dbb8570e139127a2c0d356e2820be))

    ### Refactors

    - **payment_methods:** Make the card_holder_name optional for card details in the payment APIs ([#3074](https://github.com/juspay/hyperswitch/pull/3074)) ([`b279591`](https://github.com/juspay/hyperswitch/commit/b279591057cdba6004c99efc82bb856f0bacd1e0))
    - **user:** Add account verification check in signin ([#3082](https://github.com/juspay/hyperswitch/pull/3082)) ([`f7d6e3c`](https://github.com/juspay/hyperswitch/commit/f7d6e3c0149869175a59996e67d3e2d3b6f3b8c2))

    ### Documentation

    - **openapi:** Fix `payment_methods_enabled` OpenAPI spec in merchant connector account APIs ([#3068](https://github.com/juspay/hyperswitch/pull/3068)) ([`b6838c4`](https://github.com/juspay/hyperswitch/commit/b6838c4d1a3a456e28a5f438fcd74a60bedb2539))

    ### Miscellaneous Tasks

    - **configs:** [CYBERSOURCE] Add mandate configs ([#3085](https://github.com/juspay/hyperswitch/pull/3085)) ([`777cd5c`](https://github.com/juspay/hyperswitch/commit/777cd5cdc2342fb7195a06505647fa331725e1dd))

    **Full Changelog:** [`v1.97.0...v1.98.0`](https://github.com/juspay/hyperswitch/compare/v1.97.0...v1.98.0)

    - - -


    ## 1.97.0 (2023-12-06)

    ### Features

    - **Braintree:** Sync with Hyperswitch Reference ([#3037](https://github.com/juspay/hyperswitch/pull/3037)) ([`8a995ce`](https://github.com/juspay/hyperswitch/commit/8a995cefdf6806645383710c6f39d963da232e94))
    - **connector:** [BANKOFAMERICA] Implement Apple Pay ([#3061](https://github.com/juspay/hyperswitch/pull/3061)) ([`47c0383`](https://github.com/juspay/hyperswitch/commit/47c038300adad1c02e4c77d529c7cc2457cf3b91))
    - **metrics:** Add drainer delay metric ([#3034](https://github.com/juspay/hyperswitch/pull/3034)) ([`c6e2ee2`](https://github.com/juspay/hyperswitch/commit/c6e2ee29d9ee4fe54e6fa6f87c2fa065a290d258))

    ### Bug Fixes

    - **config:** Parse kafka brokers from env variable as sequence ([#3066](https://github.com/juspay/hyperswitch/pull/3066)) ([`84decd8`](https://github.com/juspay/hyperswitch/commit/84decd8126d306a5e1cf22b36e1378a73dc963f5))
    - Throw bad request while pushing duplicate data to redis ([#3016](https://github.com/juspay/hyperswitch/pull/3016)) ([`a2405e5`](https://github.com/juspay/hyperswitch/commit/a2405e56fbd84936a1afa6aa9f8f7e815267fbec))
    - Return url none on complete authorize ([#3067](https://github.com/juspay/hyperswitch/pull/3067)) ([`6eec06b`](https://github.com/juspay/hyperswitch/commit/6eec06b1d6ee9a00b374905e0ab9e425d0e41095))

    ### Miscellaneous Tasks

    - **codeowners:** Add codeowners for hyperswitch dashboard ([#3057](https://github.com/juspay/hyperswitch/pull/3057)) ([`cfafd5c`](https://github.com/juspay/hyperswitch/commit/cfafd5cd29857283d57731dda7c5a332a493f531))

    **Full Changelog:** [`v1.96.0...v1.97.0`](https://github.com/juspay/hyperswitch/compare/v1.96.0...v1.97.0)

    - - -


    ## 1.96.0 (2023-12-05)

    ### Features

    - **connector_onboarding:** Add Connector onboarding APIs ([#3050](https://github.com/juspay/hyperswitch/pull/3050)) ([`7bd6e05`](https://github.com/juspay/hyperswitch/commit/7bd6e05c0c05ebae9b82a6f410e61ca4409d088b))
    - **pm_list:** Add required fields for bancontact_card for Mollie, Adyen and Stripe ([#3035](https://github.com/juspay/hyperswitch/pull/3035)) ([`792e642`](https://github.com/juspay/hyperswitch/commit/792e642ad58f90bae3ddcea5e6cbc70e948d8e28))
    - **user:** Add email apis and new enums for metadata ([#3053](https://github.com/juspay/hyperswitch/pull/3053)) ([`1c3d260`](https://github.com/juspay/hyperswitch/commit/1c3d260dc3e18fbf6cbd5122122a6c73dceb39a3))
    - Implement FRM flows ([#2968](https://github.com/juspay/hyperswitch/pull/2968)) ([`055d838`](https://github.com/juspay/hyperswitch/commit/055d8383671f6b466297c177bcc770618c7da96a))

    ### Bug Fixes

    - Remove redundant call to populate_payment_data function ([#3054](https://github.com/juspay/hyperswitch/pull/3054)) ([`53df543`](https://github.com/juspay/hyperswitch/commit/53df543b7f1407a758232025b7de0fb527be8e86))

    ### Documentation

    - **test_utils:** Update postman docs ([#3055](https://github.com/juspay/hyperswitch/pull/3055)) ([`8b7a7aa`](https://github.com/juspay/hyperswitch/commit/8b7a7aa6494ff669e1f8bcc92a5160e422d6b26e))

    **Full Changelog:** [`v1.95.0...v1.96.0`](https://github.com/juspay/hyperswitch/compare/v1.95.0...v1.96.0)

    - - -


    ## 1.95.0 (2023-12-05)

    ### Features

    - **connector:** [BOA/CYBERSOURCE] Fix Status Mapping for Terminal St… ([#3031](https://github.com/juspay/hyperswitch/pull/3031)) ([`95876b0`](https://github.com/juspay/hyperswitch/commit/95876b0ce03e024edf77909502c53eb4e63a9855))
    - **pm_list:** Add required field for open_banking_uk for Adyen and Volt Connector  ([#3032](https://github.com/juspay/hyperswitch/pull/3032)) ([`9d93533`](https://github.com/juspay/hyperswitch/commit/9d935332193dcc9f191a0a5a9e7405316794a418))
    - **router:**
      - Add key_value to locker metrics ([#2995](https://github.com/juspay/hyperswitch/pull/2995)) ([`83fcd1a`](https://github.com/juspay/hyperswitch/commit/83fcd1a9deb106a44c8262923c7f1660b0c46bf2))
      - Add payments incremental authorization api ([#3038](https://github.com/juspay/hyperswitch/pull/3038)) ([`a0cfdd3`](https://github.com/juspay/hyperswitch/commit/a0cfdd3fb12f04b603f65551eac985c31e08da85))
    - **types:** Add email types for sending emails ([#3020](https://github.com/juspay/hyperswitch/pull/3020)) ([`c4bd47e`](https://github.com/juspay/hyperswitch/commit/c4bd47eca93a158c9daeeeb18afb1e735eea8c94))
    - **user:**
      - Generate and delete sample data ([#2987](https://github.com/juspay/hyperswitch/pull/2987)) ([`092ec73`](https://github.com/juspay/hyperswitch/commit/092ec73b3c65ce6048d379383b078d643f0f35fc))
      - Add user_list and switch_list apis ([#3033](https://github.com/juspay/hyperswitch/pull/3033)) ([`ec15ddd`](https://github.com/juspay/hyperswitch/commit/ec15ddd0d0ed942fedec525406df3005d494b8d4))
    - Calculate surcharge for customer saved card list ([#3039](https://github.com/juspay/hyperswitch/pull/3039)) ([`daf0f09`](https://github.com/juspay/hyperswitch/commit/daf0f09f8e3293ee6a3599a25362d9171fc5b2e7))

    ### Bug Fixes

    - **connector:** [Paypal] Parse response for Cards with no 3DS check ([#3021](https://github.com/juspay/hyperswitch/pull/3021)) ([`d883cd1`](https://github.com/juspay/hyperswitch/commit/d883cd18972c5f9e8350e9a3f4e5cd56ec2c0787))
    - **pm_list:** [Trustpay]Update dynamic fields for trustpay blik ([#3042](https://github.com/juspay/hyperswitch/pull/3042)) ([`9274cef`](https://github.com/juspay/hyperswitch/commit/9274cefbdd29d2ac64baeea2fe504dff2472cb47))
    - **wasm:** Fix wasm function to return the categories for keys with their description respectively ([#3023](https://github.com/juspay/hyperswitch/pull/3023)) ([`2ac5b2c`](https://github.com/juspay/hyperswitch/commit/2ac5b2cd764c0aad53ac7c672dfcc9132fa5668f))
    - Use card bin to get additional card details ([#3036](https://github.com/juspay/hyperswitch/pull/3036)) ([`6c7d3a2`](https://github.com/juspay/hyperswitch/commit/6c7d3a2e8a047ff23b52b76792fe8f28d3b952a4))
    - Transform connector name to lowercase in connector integration script ([#3048](https://github.com/juspay/hyperswitch/pull/3048)) ([`298e362`](https://github.com/juspay/hyperswitch/commit/298e3627c379de5acfcafb074036754661801f1e))
    - Add fallback to reverselookup error ([#3025](https://github.com/juspay/hyperswitch/pull/3025)) ([`ba392f5`](https://github.com/juspay/hyperswitch/commit/ba392f58b2956d67e93a08853bcf2270a869be27))

    ### Refactors

    - **payment_methods:** Add support for passing card_cvc in payment_method_data object along with token ([#3024](https://github.com/juspay/hyperswitch/pull/3024)) ([`3ce04ab`](https://github.com/juspay/hyperswitch/commit/3ce04abae4eddfa27025368f5ef28987cccea43d))
    - **users:** Separate signup and signin ([#2921](https://github.com/juspay/hyperswitch/pull/2921)) ([`80efeb7`](https://github.com/juspay/hyperswitch/commit/80efeb76b1801529766978af1c06e2d2c7de66c0))
    - Create separate struct for surcharge details response ([#3027](https://github.com/juspay/hyperswitch/pull/3027)) ([`57591f8`](https://github.com/juspay/hyperswitch/commit/57591f819c7994099e76cff1affc7bcf3e45a031))

    ### Testing

    - **postman:** Update postman collection files ([`6e09bc9`](https://github.com/juspay/hyperswitch/commit/6e09bc9e2c4bbe14dcb70da4a438850b03b3254c))

    **Full Changelog:** [`v1.94.0...v1.95.0`](https://github.com/juspay/hyperswitch/compare/v1.94.0...v1.95.0)

    - - -


    ## 1.94.0 (2023-12-01)

    ### Features

    - **user_role:** Add APIs for user roles ([#3013](https://github.com/juspay/hyperswitch/pull/3013)) ([`3fa0bdf`](https://github.com/juspay/hyperswitch/commit/3fa0bdf76558ec91df8d3beef3c36658cd138b37))

    ### Bug Fixes

    - **config:** Add kms decryption support for sqlx password ([#3029](https://github.com/juspay/hyperswitch/pull/3029)) ([`b593467`](https://github.com/juspay/hyperswitch/commit/b5934674e518f991a8a575ad01b971dd086eeb40))

    ### Refactors

    - **connector:**
      - [Multisafe Pay] change error message from not supported to not implemented ([#2851](https://github.com/juspay/hyperswitch/pull/2851)) ([`668b943`](https://github.com/juspay/hyperswitch/commit/668b943403df2b3bb354dd093b8ec073a2618bda))
      - [Shift4] change error message from NotSupported to NotImplemented ([#2880](https://github.com/juspay/hyperswitch/pull/2880)) ([`bc79d52`](https://github.com/juspay/hyperswitch/commit/bc79d522c30aa036378cf1e01354c422585cc226))

    **Full Changelog:** [`v1.93.0...v1.94.0`](https://github.com/juspay/hyperswitch/compare/v1.93.0...v1.94.0)

    - - -


    ## 1.93.0 (2023-11-30)

    ### Features

    - **connector:** [BANKOFAMERICA] Add Required Fields for GPAY ([#3014](https://github.com/juspay/hyperswitch/pull/3014)) ([`d30b58a`](https://github.com/juspay/hyperswitch/commit/d30b58abb5e716b70c2dadec9e6f13c9e3403b6f))
    - **core:** Add ability to verify connector credentials before integrating the connector ([#2986](https://github.com/juspay/hyperswitch/pull/2986)) ([`39f255b`](https://github.com/juspay/hyperswitch/commit/39f255b4b209588dec35d780078c2ab7ceb37b10))
    - **router:** Make core changes in payments flow to support incremental authorization ([#3009](https://github.com/juspay/hyperswitch/pull/3009)) ([`1ca2ba4`](https://github.com/juspay/hyperswitch/commit/1ca2ba459495ff9340954c87a6ae3e4dce0e7b71))
    - **user:** Add support for dashboard metadata ([#3000](https://github.com/juspay/hyperswitch/pull/3000)) ([`6a2e4ab`](https://github.com/juspay/hyperswitch/commit/6a2e4ab4169820f35e953a949bd2e82e7f098ed2))

    ### Bug Fixes

    - **connector:**
      - Move authorised status to charged in setup mandate ([#3017](https://github.com/juspay/hyperswitch/pull/3017)) ([`663754d`](https://github.com/juspay/hyperswitch/commit/663754d629d59a17ba9d4985fe04f9404ceb16b7))
      - [Trustpay] Add mapping to error code `800.100.165` and `900.100.100` ([#2925](https://github.com/juspay/hyperswitch/pull/2925)) ([`8c37a8d`](https://github.com/juspay/hyperswitch/commit/8c37a8d857c5a58872fa2b2e194b85e755129677))
    - **core:** Error message on Refund update for `Not Implemented` Case ([#3011](https://github.com/juspay/hyperswitch/pull/3011)) ([`6b7ada1`](https://github.com/juspay/hyperswitch/commit/6b7ada1a34450ea3a7fc019375ba462a14ddd6ab))
    - **pm_list:** [Trustpay] Update Cards, Bank_redirect - blik pm type required field info for Trustpay ([#2999](https://github.com/juspay/hyperswitch/pull/2999)) ([`c05432c`](https://github.com/juspay/hyperswitch/commit/c05432c0bd70f222c2f898ce2cbb47a46364a490))
    - **router:**
      - [Dlocal] connector transaction id fix ([#2872](https://github.com/juspay/hyperswitch/pull/2872)) ([`44b1f49`](https://github.com/juspay/hyperswitch/commit/44b1f4949ea06d59480670ccfa02446fa7713d13))
      - Use default value for the routing algorithm column during business profile creation ([#2791](https://github.com/juspay/hyperswitch/pull/2791)) ([`b1fe76a`](https://github.com/juspay/hyperswitch/commit/b1fe76a82b4026d6eaa3baf4356378040880a458))
    - **routing:** Fix kgraph to exclude PM auth during construction ([#3019](https://github.com/juspay/hyperswitch/pull/3019)) ([`c6cb527`](https://github.com/juspay/hyperswitch/commit/c6cb527f07e23796c342f3562fbf3b61f1ef6801))

    ### Refactors

    - **connector:**
      - [Stax] change error message from NotSupported to NotImplemented ([#2879](https://github.com/juspay/hyperswitch/pull/2879)) ([`8a4dabc`](https://github.com/juspay/hyperswitch/commit/8a4dabc61df3e6012e50f785d93808ca3349be65))
      - [Volt] change error message from NotSupported to NotImplemented ([#2878](https://github.com/juspay/hyperswitch/pull/2878)) ([`de8e31b`](https://github.com/juspay/hyperswitch/commit/de8e31b70d9b3c11e268cd1deffa71918dc4270d))
      - [Adyen] Change country and issuer type to Optional for OpenBankingUk ([#2993](https://github.com/juspay/hyperswitch/pull/2993)) ([`ab3dac7`](https://github.com/juspay/hyperswitch/commit/ab3dac79b4f138cd1f60a9afc0635dcc137a4a05))
    - **postman:** Fix payme postman collection for handling `order_details` ([#2996](https://github.com/juspay/hyperswitch/pull/2996)) ([`1e60c71`](https://github.com/juspay/hyperswitch/commit/1e60c710985b341a118bb32962bd74b406d78f69))

    **Full Changelog:** [`v1.92.0...v1.93.0`](https://github.com/juspay/hyperswitch/compare/v1.92.0...v1.93.0)

    - - -


    ## 1.92.0 (2023-11-29)

    ### Features

    - **analytics:** Add Clickhouse based analytics ([#2988](https://github.com/juspay/hyperswitch/pull/2988)) ([`9df4e01`](https://github.com/juspay/hyperswitch/commit/9df4e0193ffeb6d1cc323bdebb7e2bdfb2a375e2))
    - **ses_email:** Add email services to hyperswitch ([#2977](https://github.com/juspay/hyperswitch/pull/2977)) ([`5f5e895`](https://github.com/juspay/hyperswitch/commit/5f5e895f638701a0e6ab3deea9101ef39033dd16))

    ### Bug Fixes

    - **router:** Make use of warning to log errors when apple pay metadata parsing fails ([#3010](https://github.com/juspay/hyperswitch/pull/3010)) ([`2e57745`](https://github.com/juspay/hyperswitch/commit/2e57745352c547323ac2df2554f6bc2dbd6da37f))

    **Full Changelog:** [`v1.91.1...v1.92.0`](https://github.com/juspay/hyperswitch/compare/v1.91.1...v1.92.0)

    - - -


    ## 1.91.1 (2023-11-29)

    ### Bug Fixes

    - Remove `dummy_connector` from `default` features in `common_enums` ([#3005](https://github.com/juspay/hyperswitch/pull/3005)) ([`bb593ab`](https://github.com/juspay/hyperswitch/commit/bb593ab0cd1a30190b6c305f2432de83ac7fde93))
    - Remove error propagation if card name not found in locker in case of temporary token ([#3006](https://github.com/juspay/hyperswitch/pull/3006)) ([`5c32b37`](https://github.com/juspay/hyperswitch/commit/5c32b3739e2c5895fe7f5cf8cc92f917c2639eac))
    - Few fields were not getting updated in apply_changeset function ([#3002](https://github.com/juspay/hyperswitch/pull/3002)) ([`d289524`](https://github.com/juspay/hyperswitch/commit/d289524869f0c3835db9cf90d57ebedf560e0291))

    ### Miscellaneous Tasks

    - **deps:** Bump openssl from 0.10.57 to 0.10.60 ([#3004](https://github.com/juspay/hyperswitch/pull/3004)) ([`1c2f35a`](https://github.com/juspay/hyperswitch/commit/1c2f35af92608fca5836448710eca9f9c23a776a))

    **Full Changelog:** [`v1.91.0...v1.91.1`](https://github.com/juspay/hyperswitch/compare/v1.91.0...v1.91.1)

    - - -


    ## 1.91.0 (2023-11-28)

    ### Features

    - **core:**
      - [Paypal] Add Preprocessing flow to CompleteAuthorize for Card 3DS Auth Verification ([#2757](https://github.com/juspay/hyperswitch/pull/2757)) ([`77fc92c`](https://github.com/juspay/hyperswitch/commit/77fc92c99a99aaf76d270ba5b981928183a05768))
      - Enable payment refund when payment is partially captured ([#2991](https://github.com/juspay/hyperswitch/pull/2991)) ([`837480d`](https://github.com/juspay/hyperswitch/commit/837480d935cce8cc35f07c5ccb3560285909bc52))
    - **currency_conversion:** Add currency conversion feature ([#2948](https://github.com/juspay/hyperswitch/pull/2948)) ([`c0116db`](https://github.com/juspay/hyperswitch/commit/c0116db271f6afc1b93c04705209bfc346228c68))
    - **payment_methods:** Receive `card_holder_name` in confirm flow when using token for payment ([#2982](https://github.com/juspay/hyperswitch/pull/2982)) ([`e7ad3a4`](https://github.com/juspay/hyperswitch/commit/e7ad3a4db8823f3ae8d381771739670d8350e6da))

    ### Bug Fixes

    - **connector:** [Adyen] `ErrorHandling` in case of Balance Check for Gift Cards ([#1976](https://github.com/juspay/hyperswitch/pull/1976)) ([`bd889c8`](https://github.com/juspay/hyperswitch/commit/bd889c834dd5e201b055233016f7226fa2187aea))
    - **core:** Replace euclid enum with RoutableConnectors enum ([#2994](https://github.com/juspay/hyperswitch/pull/2994)) ([`ff6a0dd`](https://github.com/juspay/hyperswitch/commit/ff6a0dd0b515778b64a3e28ef905154eee85ec78))
    - Remove error propagation if card name not found in locker ([#2998](https://github.com/juspay/hyperswitch/pull/2998)) ([`1c5a9b5`](https://github.com/juspay/hyperswitch/commit/1c5a9b5452afc33b18f45389bf3bdfd80820f476))

    ### Refactors

    - **events:** Adding changes to type of API events to Kafka ([#2992](https://github.com/juspay/hyperswitch/pull/2992)) ([`d63f6f7`](https://github.com/juspay/hyperswitch/commit/d63f6f7224f35018e7c707353508bbacc2baed5c))
    - **masking:** Use empty enums as masking:Strategy<T> types ([#2874](https://github.com/juspay/hyperswitch/pull/2874)) ([`0e66b1b`](https://github.com/juspay/hyperswitch/commit/0e66b1b5dcce6dd87c9d743c9eb73d0cd8e330b2))
    - **router:** Add openapi spec support for merchant_connector apis ([#2997](https://github.com/juspay/hyperswitch/pull/2997)) ([`cdbb385`](https://github.com/juspay/hyperswitch/commit/cdbb3853cd44443f8487abc16a9ba5d99f22e475))
    - Added min idle and max lifetime for database config ([#2900](https://github.com/juspay/hyperswitch/pull/2900)) ([`b3c51e6`](https://github.com/juspay/hyperswitch/commit/b3c51e6eb55c58adc024ee32b59c3910b2b72131))

    ### Testing

    - **postman:** Update postman collection files ([`af6b05c`](https://github.com/juspay/hyperswitch/commit/af6b05c504b6fdbec7db77fa7f71535d7fea3e7a))

    **Full Changelog:** [`v1.90.0...v1.91.0`](https://github.com/juspay/hyperswitch/compare/v1.90.0...v1.91.0)

    - - -


    ## 1.90.0 (2023-11-27)

    ### Features

    - **auth:** Add Authorization for JWT Authentication types ([#2973](https://github.com/juspay/hyperswitch/pull/2973)) ([`03c0a77`](https://github.com/juspay/hyperswitch/commit/03c0a772a99000acf4676db8ca2ce916036281d1))
    - **user:** Implement change password for user ([#2959](https://github.com/juspay/hyperswitch/pull/2959)) ([`bfa1645`](https://github.com/juspay/hyperswitch/commit/bfa1645b847fb881eb2370d5dbfef6fd0b53725d))

    ### Bug Fixes

    - **router:** Added validation to check total orderDetails amount equal to amount in request ([#2965](https://github.com/juspay/hyperswitch/pull/2965)) ([`37532d4`](https://github.com/juspay/hyperswitch/commit/37532d46f599a99e0e021b0455a6f02381005dd7))
    - Add prefix to connector_transaction_id ([#2981](https://github.com/juspay/hyperswitch/pull/2981)) ([`107c3b9`](https://github.com/juspay/hyperswitch/commit/107c3b99417dd7bca7b62741ad601485700f37be))

    ### Refactors

    - **connector:** [Nuvei] update error message ([#2867](https://github.com/juspay/hyperswitch/pull/2867)) ([`04b7c03`](https://github.com/juspay/hyperswitch/commit/04b7c0384dc9290bd60f49033fd35732527720f1))

    ### Testing

    - **postman:** Update postman collection files ([`aee59e0`](https://github.com/juspay/hyperswitch/commit/aee59e088a8e7c1b81aca1015c90c7b4fd07511d))

    ### Documentation

    - **try_local_system:** Add instructions to run using Docker Compose by pulling standalone images ([#2984](https://github.com/juspay/hyperswitch/pull/2984)) ([`0fa8ad1`](https://github.com/juspay/hyperswitch/commit/0fa8ad1b7c27010bf83e4035de9881d29e192e8a))

    ### Miscellaneous Tasks

    - **connector:** Update connector addition script ([#2801](https://github.com/juspay/hyperswitch/pull/2801)) ([`34953a0`](https://github.com/juspay/hyperswitch/commit/34953a046429fe0341e8469bd9b036e176bda205))

    **Full Changelog:** [`v1.89.0...v1.90.0`](https://github.com/juspay/hyperswitch/compare/v1.89.0...v1.90.0)

    - - -


    ## 1.89.0 (2023-11-24)

    ### Features

    - **router:** Add `connector_transaction_id` in error_response from connector flows ([#2972](https://github.com/juspay/hyperswitch/pull/2972)) ([`3322103`](https://github.com/juspay/hyperswitch/commit/3322103f5c9b7c2a5b663980246c6ca36b8dc63e))

    ### Bug Fixes

    - **connector:** [BANKOFAMERICA] Add status VOIDED in enum Bankofameri… ([#2969](https://github.com/juspay/hyperswitch/pull/2969)) ([`203bbd7`](https://github.com/juspay/hyperswitch/commit/203bbd73751e1513206e81d7cf920ec263f83c58))
    - **core:** Error propagation for not supporting partial refund ([#2976](https://github.com/juspay/hyperswitch/pull/2976)) ([`97a38a7`](https://github.com/juspay/hyperswitch/commit/97a38a78e514e4fa3b5db46b6de985be6312dcc3))
    - **router:** Mark refund status as failure for not_implemented error from connector flows ([#2978](https://github.com/juspay/hyperswitch/pull/2978)) ([`d56d805`](https://github.com/juspay/hyperswitch/commit/d56d80557050336d5ed37282f1aa34b6c17389d1))
    - Return none instead of err when payment method data is not found for bank debit during listing ([#2967](https://github.com/juspay/hyperswitch/pull/2967)) ([`5cc829a`](https://github.com/juspay/hyperswitch/commit/5cc829a11f515a413fe19f657a90aa05cebb99b5))
    - Surcharge related status and rules fix ([#2974](https://github.com/juspay/hyperswitch/pull/2974)) ([`3db7213`](https://github.com/juspay/hyperswitch/commit/3db721388a7f0e291d7eb186661fc69a57068ea6))

    ### Documentation

    - **README:** Updated Community Platform Mentions ([#2960](https://github.com/juspay/hyperswitch/pull/2960)) ([`e0bde43`](https://github.com/juspay/hyperswitch/commit/e0bde433282a34eb9eb28a2d9c43c2b17b5e65e5))
    - Add Rust locker information in architecture doc ([#2964](https://github.com/juspay/hyperswitch/pull/2964)) ([`b2f7dd1`](https://github.com/juspay/hyperswitch/commit/b2f7dd13925a1429e316cd9eaf0e2d31d46b6d4a))

    **Full Changelog:** [`v1.88.0...v1.89.0`](https://github.com/juspay/hyperswitch/compare/v1.88.0...v1.89.0)

    - - -


    ## 1.88.0 (2023-11-23)

    ### Features

    - **connector:** [BANKOFAMERICA] Implement Google Pay ([#2940](https://github.com/juspay/hyperswitch/pull/2940)) ([`f91d4ae`](https://github.com/juspay/hyperswitch/commit/f91d4ae11b02def92c1dde743a0c01b5aac5703f))
    - **router:** Allow billing and shipping address update in payments confirm flow ([#2963](https://github.com/juspay/hyperswitch/pull/2963)) ([`59ef162`](https://github.com/juspay/hyperswitch/commit/59ef162219db3e4650dde65710850bc9f3280530))

    ### Bug Fixes

    - **connector:** [Prophetpay] Use refund_id as reference_id for Refund ([#2966](https://github.com/juspay/hyperswitch/pull/2966)) ([`dd3e22a`](https://github.com/juspay/hyperswitch/commit/dd3e22a938714f373477e08d1d25e4b84ac796c6))
    - **core:** Fix Default Values Enum FieldType ([#2934](https://github.com/juspay/hyperswitch/pull/2934)) ([`35a44ed`](https://github.com/juspay/hyperswitch/commit/35a44ed2533b748e3fabb8a2f8db4fa7e5d3cf7e))
    - **drainer:** Increase jobs picked only when stream is not empty ([#2958](https://github.com/juspay/hyperswitch/pull/2958)) ([`42eedf3`](https://github.com/juspay/hyperswitch/commit/42eedf3a8c2e62fc22bcead370d129ebaf11a00b))
    - Amount_captured goes to 0 for 3ds payments ([#2954](https://github.com/juspay/hyperswitch/pull/2954)) ([`75eea7e`](https://github.com/juspay/hyperswitch/commit/75eea7e81787f2e0697b930b82a8188193f8d51f))
    - Make drainer sleep on every loop interval instead of cycle end ([#2951](https://github.com/juspay/hyperswitch/pull/2951)) ([`e8df690`](https://github.com/juspay/hyperswitch/commit/e8df69092f4c6acee58109aaff2a9454fceb571a))

    ### Refactors

    - **connector:**
      - [Payeezy] update error message ([#2919](https://github.com/juspay/hyperswitch/pull/2919)) ([`cb65370`](https://github.com/juspay/hyperswitch/commit/cb653706066b889eaa9423a6227ce1df954b4759))
      - [Worldline] change error message from NotSupported to NotImplemented ([#2893](https://github.com/juspay/hyperswitch/pull/2893)) ([`e721b06`](https://github.com/juspay/hyperswitch/commit/e721b06c7077e00458450a4fb98f4497e8227dc6))

    ### Testing

    - **postman:** Update postman collection files ([`9a3fa00`](https://github.com/juspay/hyperswitch/commit/9a3fa00426d74f6d18b3c712b292d98d80d517ba))

    **Full Changelog:** [`v1.87.0...v1.88.0`](https://github.com/juspay/hyperswitch/compare/v1.87.0...v1.88.0)

    - - -


    ## 1.87.0 (2023-11-22)

    ### Features

    - **api_event_errors:** Error field in APIEvents ([#2808](https://github.com/juspay/hyperswitch/pull/2808)) ([`ce10579`](https://github.com/juspay/hyperswitch/commit/ce10579a729fe4a7d4ab9f1a4cbd38c3ca00e90b))
    - **payment_methods:** Add support for tokenising bank details and fetching masked details while listing ([#2585](https://github.com/juspay/hyperswitch/pull/2585)) ([`9989489`](https://github.com/juspay/hyperswitch/commit/998948953ab8a444aca79957f48e7cfb3066c334))
    - **router:**
      - Migrate `payment_method_data` to rust locker only if `payment_method` is card ([#2929](https://github.com/juspay/hyperswitch/pull/2929)) ([`f8261a9`](https://github.com/juspay/hyperswitch/commit/f8261a96e758498a32c988191bf314aa6c752059))
      - Add list payment link support ([#2805](https://github.com/juspay/hyperswitch/pull/2805)) ([`b441a1f`](https://github.com/juspay/hyperswitch/commit/b441a1f2f9d9d84601cf78a6e39145e8fb847593))
    - **routing:** Routing prometheus metrics ([#2870](https://github.com/juspay/hyperswitch/pull/2870)) ([`4e15d77`](https://github.com/juspay/hyperswitch/commit/4e15d7792e3167de170c3d8310f33419f4dfb0db))

    ### Bug Fixes

    - cybersource mandates and fiserv exp year ([#2920](https://github.com/juspay/hyperswitch/pull/2920)) ([`7f74ae9`](https://github.com/juspay/hyperswitch/commit/7f74ae98a1d48eed98341e4505d3801a61e69fc7))
    - Kv logs when KeyNotSet is returned ([#2928](https://github.com/juspay/hyperswitch/pull/2928)) ([`6954de7`](https://github.com/juspay/hyperswitch/commit/6954de77a0fda14d87b79ec7ceee7cc8f1c491db))

    ### Refactors

    - **macros:** Use syn2.0  ([#2890](https://github.com/juspay/hyperswitch/pull/2890)) ([`46e13d5`](https://github.com/juspay/hyperswitch/commit/46e13d54759168ad7667af08d5481ab510e5706a))
    - **mca:** Add Serialization for `ConnectorAuthType` ([#2945](https://github.com/juspay/hyperswitch/pull/2945)) ([`341374b`](https://github.com/juspay/hyperswitch/commit/341374b8e5eced329587b93cbb6bd58e16dd9932))

    ### Testing

    - **postman:** Update postman collection files ([`b96052f`](https://github.com/juspay/hyperswitch/commit/b96052f9c64dd6e49d52ba8befd1f60a843b482a))

    ### Documentation

    - **README:** Update feature support link  ([#2894](https://github.com/juspay/hyperswitch/pull/2894)) ([`7d223ee`](https://github.com/juspay/hyperswitch/commit/7d223ee0d1b53c02421ed6bd1b5584362d7a7456))

    ### Miscellaneous Tasks

    - Address Rust 1.74 clippy lints ([#2942](https://github.com/juspay/hyperswitch/pull/2942)) ([`c6a5a85`](https://github.com/juspay/hyperswitch/commit/c6a5a8574825dc333602f4f1cee7e26969eab030))

    **Full Changelog:** [`v1.86.0...v1.87.0`](https://github.com/juspay/hyperswitch/compare/v1.86.0...v1.87.0)

    - - -


    ## 1.86.0 (2023-11-21)

    ### Features

    - **connector:** [Prophetpay] Save card token for Refund and remove Void flow ([#2927](https://github.com/juspay/hyperswitch/pull/2927)) ([`15a255e`](https://github.com/juspay/hyperswitch/commit/15a255ea60dffad9e4cf20d642636028c27c7c00))
    - Add support for 3ds and surcharge decision through routing rules ([#2869](https://github.com/juspay/hyperswitch/pull/2869)) ([`f8618e0`](https://github.com/juspay/hyperswitch/commit/f8618e077065d94aa27d7153fc5ea6f93870bd81))

    ### Bug Fixes

    - **mca:** Change the check for `disabled` field in mca create and update ([#2938](https://github.com/juspay/hyperswitch/pull/2938)) ([`e66ccde`](https://github.com/juspay/hyperswitch/commit/e66ccde4cf6d055b7d02c5e982d2e09364845602))
    - Status goes from pending to partially captured in psync ([#2915](https://github.com/juspay/hyperswitch/pull/2915)) ([`3f3b797`](https://github.com/juspay/hyperswitch/commit/3f3b797dc65c1bc6f710b122ef00d5bcb409e600))

    ### Testing

    - **postman:** Update postman collection files ([`245e489`](https://github.com/juspay/hyperswitch/commit/245e489d13209da19d6e9af01219056eec04e897))

    **Full Changelog:** [`v1.85.0...v1.86.0`](https://github.com/juspay/hyperswitch/compare/v1.85.0...v1.86.0)

    - - -


    ## 1.85.0 (2023-11-21)

    ### Features

    - **mca:** Add new `auth_type` and a status field for mca ([#2883](https://github.com/juspay/hyperswitch/pull/2883)) ([`25cef38`](https://github.com/juspay/hyperswitch/commit/25cef386b8876b43893f20b93cd68ece6e68412d))
    - **router:** Add unified_code, unified_message in payments response ([#2918](https://github.com/juspay/hyperswitch/pull/2918)) ([`3954001`](https://github.com/juspay/hyperswitch/commit/39540015fde476ad8492a9142c2c1bfda8444a27))

    ### Bug Fixes

    - **connector:**
      - [fiserv] fix metadata deserialization in merchant_connector_account ([#2746](https://github.com/juspay/hyperswitch/pull/2746)) ([`644709d`](https://github.com/juspay/hyperswitch/commit/644709d95f6ecaab497cf0cf3788b9e2ed88b855))
      - [CASHTOCODE] Fix Error Response Handling ([#2926](https://github.com/juspay/hyperswitch/pull/2926)) ([`938b63a`](https://github.com/juspay/hyperswitch/commit/938b63a1fceb87b4aae4211dac4d051e024028b1))
    - **router:** Associate parent payment token with `payment_method_id` as hyperswitch token for saved cards ([#2130](https://github.com/juspay/hyperswitch/pull/2130)) ([`efeebc0`](https://github.com/juspay/hyperswitch/commit/efeebc0f2365f0900de3dd3e10a1539621c9933d))
    - Api lock on PaymentsCreate ([#2916](https://github.com/juspay/hyperswitch/pull/2916)) ([`cfabfa6`](https://github.com/juspay/hyperswitch/commit/cfabfa60db4d275066be72ee64153a34d38f13b8))
    - Merchant_connector_id null in KV flow ([#2810](https://github.com/juspay/hyperswitch/pull/2810)) ([`e566a4e`](https://github.com/juspay/hyperswitch/commit/e566a4eff2270c2a56ec90966f42ccfd79906068))

    ### Refactors

    - **connector:** [Paypal] Add support for both BodyKey and SignatureKey ([#2633](https://github.com/juspay/hyperswitch/pull/2633)) ([`d8fcd3c`](https://github.com/juspay/hyperswitch/commit/d8fcd3c9712480c1230590c4f23b35da79df784d))
    - **core:** Query business profile only once ([#2830](https://github.com/juspay/hyperswitch/pull/2830)) ([`44deeb7`](https://github.com/juspay/hyperswitch/commit/44deeb7e7605cb5320b84c0fac1fd551877803a4))
    - **payment_methods:** Added support for pm_auth_connector field in pm list response ([#2667](https://github.com/juspay/hyperswitch/pull/2667)) ([`be4aa3b`](https://github.com/juspay/hyperswitch/commit/be4aa3b913819698c6c22ddedafe1d90fbe02add))
    - Add mapping for ConnectorError in payouts flow ([#2608](https://github.com/juspay/hyperswitch/pull/2608)) ([`5c4e7c9`](https://github.com/juspay/hyperswitch/commit/5c4e7c9031f62d63af35da2dcab79eac948e7dbb))

    ### Testing

    - **postman:** Update postman collection files ([`ce725ef`](https://github.com/juspay/hyperswitch/commit/ce725ef8c680eea3fe03671c989fd4572cfc0640))

    **Full Changelog:** [`v1.84.0...v1.85.0`](https://github.com/juspay/hyperswitch/compare/v1.84.0...v1.85.0)

    - - -


    ## 1.84.0 (2023-11-17)

    ### Features

    - **connector:** [BANKOFAMERICA] PSYNC Bugfix ([#2897](https://github.com/juspay/hyperswitch/pull/2897)) ([`bdcc138`](https://github.com/juspay/hyperswitch/commit/bdcc138e8d84577fc99f9a9aef3484b66f98209a))

    **Full Changelog:** [`v1.83.1...v1.84.0`](https://github.com/juspay/hyperswitch/compare/v1.83.1...v1.84.0)

    - - -


    ## 1.83.1 (2023-11-17)

    ### Bug Fixes

    - **router:** Add choice to use the appropriate key for jws verification ([#2917](https://github.com/juspay/hyperswitch/pull/2917)) ([`606daa9`](https://github.com/juspay/hyperswitch/commit/606daa9367cac8c2ea926313019deab2f938b591))

    **Full Changelog:** [`v1.83.0...v1.83.1`](https://github.com/juspay/hyperswitch/compare/v1.83.0...v1.83.1)

    - - -


    ## 1.83.0 (2023-11-17)

    ### Features

    - **events:** Add incoming webhook payload to api events logger ([#2852](https://github.com/juspay/hyperswitch/pull/2852)) ([`aea390a`](https://github.com/juspay/hyperswitch/commit/aea390a6a1c331f8e0dbea4f41218e43f7323508))
    - **router:** Custom payment link config for payment create ([#2741](https://github.com/juspay/hyperswitch/pull/2741)) ([`c39beb2`](https://github.com/juspay/hyperswitch/commit/c39beb2501e63bbf7fd41bbc947280d7ff5a71dc))

    ### Bug Fixes

    - **router:** Add rust locker url in proxy_bypass_urls ([#2902](https://github.com/juspay/hyperswitch/pull/2902)) ([`9a201ae`](https://github.com/juspay/hyperswitch/commit/9a201ae698c2cf52e617660f82d5bf1df2e797ae))

    ### Documentation

    - **README:** Replace cloudformation deployment template with latest s3 url. ([#2891](https://github.com/juspay/hyperswitch/pull/2891)) ([`375108b`](https://github.com/juspay/hyperswitch/commit/375108b6df50e041fc9dbeb35a6a6b46b146037a))

    **Full Changelog:** [`v1.82.0...v1.83.0`](https://github.com/juspay/hyperswitch/compare/v1.82.0...v1.83.0)

    - - -


    ## 1.82.0 (2023-11-17)

    ### Features

    - **router:** Add fallback while add card and retrieve card from rust locker ([#2888](https://github.com/juspay/hyperswitch/pull/2888)) ([`f735fb0`](https://github.com/juspay/hyperswitch/commit/f735fb0551812fd781a2db8bac5a0deef4cabb2b))

    ### Bug Fixes

    - **core:** Introduce new attempt and intent status to handle multiple partial captures ([#2802](https://github.com/juspay/hyperswitch/pull/2802)) ([`cb88be0`](https://github.com/juspay/hyperswitch/commit/cb88be01f22725948648976c2a5606a03b5ce92a))

    ### Testing

    - **postman:** Update postman collection files ([`7d05b74`](https://github.com/juspay/hyperswitch/commit/7d05b74b950d9e078b063e17d046cbeb501d006a))

    **Full Changelog:** [`v1.81.0...v1.82.0`](https://github.com/juspay/hyperswitch/compare/v1.81.0...v1.82.0)

    - - -


    ## 1.81.0 (2023-11-16)

    ### Features

    - **connector:**
      - [BANKOFAMERICA] Implement Cards for Bank of America ([#2765](https://github.com/juspay/hyperswitch/pull/2765)) ([`e8de3a7`](https://github.com/juspay/hyperswitch/commit/e8de3a710710b92f5c2351c5d67c22352c2b0a30))
      - [ProphetPay] Implement Card Redirect PaymentMethodType and flows for Authorize, CompleteAuthorize, Psync, Refund, Rsync and Void ([#2641](https://github.com/juspay/hyperswitch/pull/2641)) ([`8d4adc5`](https://github.com/juspay/hyperswitch/commit/8d4adc52af57ed0994e6efbb5b2d0d3df3fb3150))

    ### Testing

    - **postman:** Update postman collection files ([`f829197`](https://github.com/juspay/hyperswitch/commit/f8291973c38bde874c45ca15ff8d48c1f2de9781))

    **Full Changelog:** [`v1.80.0...v1.81.0`](https://github.com/juspay/hyperswitch/compare/v1.80.0...v1.81.0)

    - - -


    ## 1.80.0 (2023-11-16)

    ### Features

    - **router:** Add api to migrate card from basilisk to rust ([#2853](https://github.com/juspay/hyperswitch/pull/2853)) ([`b8b20c4`](https://github.com/juspay/hyperswitch/commit/b8b20c412df0485bf395f9aa21e6e34e90d97acd))
    - Spawn webhooks and async scheduling in background ([#2780](https://github.com/juspay/hyperswitch/pull/2780)) ([`f248fe2`](https://github.com/juspay/hyperswitch/commit/f248fe2889c9cb68af4464ab0db1735224ab5c8d))

    ### Refactors

    - **router:** Add openapi spec support for gsm apis ([#2871](https://github.com/juspay/hyperswitch/pull/2871)) ([`62c9cca`](https://github.com/juspay/hyperswitch/commit/62c9ccae6ab0d128c54962675b88739ad7797fe6))

    **Full Changelog:** [`v1.79.0...v1.80.0`](https://github.com/juspay/hyperswitch/compare/v1.79.0...v1.80.0)

    - - -


    ## 1.79.0 (2023-11-16)

    ### Features

    - Change async-bb8 fork and tokio spawn for concurrent database calls ([#2774](https://github.com/juspay/hyperswitch/pull/2774)) ([`d634fde`](https://github.com/juspay/hyperswitch/commit/d634fdeac349b92e3619234580299a6c6c38e6d4))

    ### Bug Fixes

    - **connector:** [noon] add validate psync reference ([#2886](https://github.com/juspay/hyperswitch/pull/2886)) ([`b129023`](https://github.com/juspay/hyperswitch/commit/b1290234ba13de2dd8cc4210f63bae514c2988b4))
    - **payment_link:** Render SDK for status requires_payment_method ([#2887](https://github.com/juspay/hyperswitch/pull/2887)) ([`d4d2c2c`](https://github.com/juspay/hyperswitch/commit/d4d2c2c7076a46996aa0aa74d1df827169f73155))
    - Paypal postman collection changes for surcharge feature ([#2884](https://github.com/juspay/hyperswitch/pull/2884)) ([`5956242`](https://github.com/juspay/hyperswitch/commit/5956242588ef7bdbaa1804a952d48dc47c6e15f1))

    ### Testing

    - **postman:** Update postman collection files ([`5c31365`](https://github.com/juspay/hyperswitch/commit/5c313656a129362b0e905e5fbf349dbbec57199c))

    **Full Changelog:** [`v1.78.0...v1.79.0`](https://github.com/juspay/hyperswitch/compare/v1.78.0...v1.79.0)

    - - -


    ## 1.78.0 (2023-11-14)

    ### Features

    - **router:** Add automatic retries and step up 3ds flow ([#2834](https://github.com/juspay/hyperswitch/pull/2834)) ([`d2968c9`](https://github.com/juspay/hyperswitch/commit/d2968c94978a57422fa46a8195d906736a95b864))
    - Payment link status page UI ([#2740](https://github.com/juspay/hyperswitch/pull/2740)) ([`856c7af`](https://github.com/juspay/hyperswitch/commit/856c7af77e17599ca0d4d119744ac582e9c3c971))

    ### Bug Fixes

    - Handle session and confirm flow discrepancy in surcharge details ([#2696](https://github.com/juspay/hyperswitch/pull/2696)) ([`cafea45`](https://github.com/juspay/hyperswitch/commit/cafea45982d7b520fe68fde967984ce88f68c6c0))

    **Full Changelog:** [`v1.77.0...v1.78.0`](https://github.com/juspay/hyperswitch/compare/v1.77.0...v1.78.0)

    - - -


    ## 1.77.0 (2023-11-13)

    ### Features

    - **apievent:** Added hs latency to api event ([#2734](https://github.com/juspay/hyperswitch/pull/2734)) ([`c124511`](https://github.com/juspay/hyperswitch/commit/c124511052ed8911a2ccfcf648c0793b5c1ca690))
    - **router:**
      - Add new JWT authentication variants and use them ([#2835](https://github.com/juspay/hyperswitch/pull/2835)) ([`f88eee7`](https://github.com/juspay/hyperswitch/commit/f88eee7362be2cc3e8e8dc2bb7bfd263892ff01e))
      - Profile specific fallback derivation while routing payments ([#2806](https://github.com/juspay/hyperswitch/pull/2806)) ([`8e538db`](https://github.com/juspay/hyperswitch/commit/8e538dbd5c189047d0a0b24fa752b9a1c67554f5))

    ### Build System / Dependencies

    - **deps:** Remove unused dependencies and features ([#2854](https://github.com/juspay/hyperswitch/pull/2854)) ([`0553587`](https://github.com/juspay/hyperswitch/commit/05535871152f4a6ac24ce6b5b5390da13cc29b96))

    **Full Changelog:** [`v1.76.0...v1.77.0`](https://github.com/juspay/hyperswitch/compare/v1.76.0...v1.77.0)

    - - -


    ## 1.76.0 (2023-11-12)

    ### Features

    - **analytics:** Analytics APIs  ([#2792](https://github.com/juspay/hyperswitch/pull/2792)) ([`f847802`](https://github.com/juspay/hyperswitch/commit/f847802339bfedb24cbaa47ad55e31d80cefddca))
    - **router:** Added Payment link new design ([#2731](https://github.com/juspay/hyperswitch/pull/2731)) ([`2a4f5d1`](https://github.com/juspay/hyperswitch/commit/2a4f5d13717a78dc2e2e4fc9a492a45b92151dbe))
    - **user:** Setup user tables ([#2803](https://github.com/juspay/hyperswitch/pull/2803)) ([`20c4226`](https://github.com/juspay/hyperswitch/commit/20c4226a36e4650a3ba8811b758ac5f7969bcfb3))

    ### Refactors

    - **connector:** [Zen] change error message from NotSupported to NotImplemented ([#2831](https://github.com/juspay/hyperswitch/pull/2831)) ([`b5ea8db`](https://github.com/juspay/hyperswitch/commit/b5ea8db2d2b7e7544931704a7191b42d3a8299be))
    - **core:** Remove connector response table and use payment_attempt instead ([#2644](https://github.com/juspay/hyperswitch/pull/2644)) ([`966369b`](https://github.com/juspay/hyperswitch/commit/966369b6f2c205b59524c23ad3b21ebab547631f))
    - **events:** Update api events to follow snake case naming ([#2828](https://github.com/juspay/hyperswitch/pull/2828)) ([`b3d5062`](https://github.com/juspay/hyperswitch/commit/b3d5062dc07676ec12e903b1999fdd9138c0891d))

    ### Documentation

    - **README:** Add bootstrap button for cloudformation deployment ([#2827](https://github.com/juspay/hyperswitch/pull/2827)) ([`e67e808`](https://github.com/juspay/hyperswitch/commit/e67e808d70d41c371fff168824e5a4dbb8b3a040))

    **Full Changelog:** [`v1.75.0...v1.76.0`](https://github.com/juspay/hyperswitch/compare/v1.75.0...v1.76.0)

    - - -


    ## 1.75.0 (2023-11-09)

    ### Features

    - **events:** Add extracted fields based on req/res types ([#2795](https://github.com/juspay/hyperswitch/pull/2795)) ([`8985794`](https://github.com/juspay/hyperswitch/commit/89857941b09c5fbe0f3e7d5b4f908bb144ae162d))
    - **router:**
      - Added merchant custom name support for payment link ([#2685](https://github.com/juspay/hyperswitch/pull/2685)) ([`8b15189`](https://github.com/juspay/hyperswitch/commit/8b151898dc0d8eefe5ed2bbdafe59e8f58b4698c))
      - Add `gateway_status_map` CRUD APIs ([#2809](https://github.com/juspay/hyperswitch/pull/2809)) ([`5c9e235`](https://github.com/juspay/hyperswitch/commit/5c9e235bd30dd3e03d086a83613edfcc62b2ead2))

    ### Bug Fixes

    - **analytics:** Added hs latency to api event for paymentconfirm call ([#2787](https://github.com/juspay/hyperswitch/pull/2787)) ([`aab8f60`](https://github.com/juspay/hyperswitch/commit/aab8f6035c16ca19009f8f1e0db688c17bc0b2b6))
    - [mollie] locale validation irrespective of auth type ([#2814](https://github.com/juspay/hyperswitch/pull/2814)) ([`25a73c2`](https://github.com/juspay/hyperswitch/commit/25a73c29a4c4715a54862dd6a28c875fd3752f63))

    **Full Changelog:** [`v1.74.0...v1.75.0`](https://github.com/juspay/hyperswitch/compare/v1.74.0...v1.75.0)

    - - -


    ## 1.74.0 (2023-11-08)

    ### Features

    - **core:** Use redis as temp locker instead of basilisk ([#2789](https://github.com/juspay/hyperswitch/pull/2789)) ([`6678689`](https://github.com/juspay/hyperswitch/commit/6678689265ae9a4fbb7a43c1938237d349c5a68e))
    - **events:** Add request details to api events ([#2769](https://github.com/juspay/hyperswitch/pull/2769)) ([`164d1c6`](https://github.com/juspay/hyperswitch/commit/164d1c66fbcb84104db07412496114db2f8c5c0c))
    - **router:** Add `gateway_status_map` interface ([#2804](https://github.com/juspay/hyperswitch/pull/2804)) ([`a429b23`](https://github.com/juspay/hyperswitch/commit/a429b23c7f21c9d08a79895c0b770b35aab725f7))
    - **test_utils:** Add custom-headers and custom delay support to rustman ([#2636](https://github.com/juspay/hyperswitch/pull/2636)) ([`1effddd`](https://github.com/juspay/hyperswitch/commit/1effddd0a0d3985d6df03c4ae9be28712befc05e))

    ### Bug Fixes

    - **connector:** Add attempt_status in field in error_response ([#2794](https://github.com/juspay/hyperswitch/pull/2794)) ([`5642fef`](https://github.com/juspay/hyperswitch/commit/5642fef52a6d591d12c5745ed381f41a1593f183))

    ### Refactors

    - **config:** Update payment method filter of Klarna in Stripe ([#2807](https://github.com/juspay/hyperswitch/pull/2807)) ([`21ce807`](https://github.com/juspay/hyperswitch/commit/21ce8079f4cb11d70c5eaae78f83773141c67d0c))
    - **router:** Add parameter connectors to get_request_body function ([#2708](https://github.com/juspay/hyperswitch/pull/2708)) ([`7623ea9`](https://github.com/juspay/hyperswitch/commit/7623ea93bee61b0bb22b68e86f44de17f04f876b))

    ### Documentation

    - **README:** Update README ([#2800](https://github.com/juspay/hyperswitch/pull/2800)) ([`bef0a04`](https://github.com/juspay/hyperswitch/commit/bef0a04edc6323b3b7a2e0dd7eeb7954915ba7cf))

    **Full Changelog:** [`v1.73.0...v1.74.0`](https://github.com/juspay/hyperswitch/compare/v1.73.0...v1.74.0)

    - - -


    ## 1.73.0 (2023-11-07)

    ### Features

    - **connector:**
      - [BANKOFAMERICA] Add Connector Template Code ([#2764](https://github.com/juspay/hyperswitch/pull/2764)) ([`4563935`](https://github.com/juspay/hyperswitch/commit/4563935372d2cdff3f746fa86a47f1166ffd32ac))
      - [Bitpay] Add order id as the reference id ([#2591](https://github.com/juspay/hyperswitch/pull/2591)) ([`d47d4ac`](https://github.com/juspay/hyperswitch/commit/d47d4ac682705d6ac692f9381149bbf08ad71264))
    - **router:** Make webhook events config disabled only and by default enable all the events ([#2770](https://github.com/juspay/hyperswitch/pull/2770)) ([`d335879`](https://github.com/juspay/hyperswitch/commit/d335879f9289b57a90a76c6587a58a0b3e12c9ad))
    - Make drainer logs queryable with request_id and global_id ([#2771](https://github.com/juspay/hyperswitch/pull/2771)) ([`ff73aba`](https://github.com/juspay/hyperswitch/commit/ff73aba8e72d8e072027881760335c0c818df665))

    ### Bug Fixes

    - **connector:** Fix amount conversion incase of minor unit  ([#2793](https://github.com/juspay/hyperswitch/pull/2793)) ([`34f5226`](https://github.com/juspay/hyperswitch/commit/34f52260d3fa68b54e5b46207afaf2ad07a8d8ba))

    ### Refactors

    - **payment_methods:** Added support for account subtype in pmd ([#2651](https://github.com/juspay/hyperswitch/pull/2651)) ([`e7375d0`](https://github.com/juspay/hyperswitch/commit/e7375d0e26099a7e0e6efd1b83b8eb9c7b1c5411))

    ### Documentation

    - **README:** Add one-click deployment information using CDK ([#2798](https://github.com/juspay/hyperswitch/pull/2798)) ([`bb39cd4`](https://github.com/juspay/hyperswitch/commit/bb39cd4081fdcaf68b2b5de2234e93493dbd84b6))

    **Full Changelog:** [`v1.72.0...v1.73.0`](https://github.com/juspay/hyperswitch/compare/v1.72.0...v1.73.0)

    - - -


    ## 1.72.0 (2023-11-05)

    ### Features

    - **connector:**
      - [ACI] Currency Unit Conversion ([#2750](https://github.com/juspay/hyperswitch/pull/2750)) ([`cdead78`](https://github.com/juspay/hyperswitch/commit/cdead78ea6a1f2dce92187f499f54498ba4bb173))
      - [Fiserv] Currency Unit Conversion ([#2715](https://github.com/juspay/hyperswitch/pull/2715)) ([`b6b9e4f`](https://github.com/juspay/hyperswitch/commit/b6b9e4f912e1c61cd31ab91be587ffb08c9f3a5b))
      - [Bitpay] Use `connector_request_reference_id` as reference to the connector ([#2697](https://github.com/juspay/hyperswitch/pull/2697)) ([`7141b89`](https://github.com/juspay/hyperswitch/commit/7141b89d231bae0c3b1c10095b88df16129b1665))
      - [NMI] Currency Unit Conversion ([#2707](https://github.com/juspay/hyperswitch/pull/2707)) ([`1b45a30`](https://github.com/juspay/hyperswitch/commit/1b45a302630ed8affc5abff0de1325fb5c6f870e))
      - [Payeezy] Currency Unit Conversion ([#2710](https://github.com/juspay/hyperswitch/pull/2710)) ([`25245b9`](https://github.com/juspay/hyperswitch/commit/25245b965371d93449f4584667adeb38ab7e0e59))

    ### Refactors

    - **connector:** [Stax] Currency Unit Conversion ([#2711](https://github.com/juspay/hyperswitch/pull/2711)) ([`2782923`](https://github.com/juspay/hyperswitch/commit/278292322c7c06f4239dd73861469e436bd941fa))

    ### Testing

    - **postman:** Update postman collection files ([`d11e7fd`](https://github.com/juspay/hyperswitch/commit/d11e7fd5642efe7da4b5021d87cf40f16d9eeded))

    **Full Changelog:** [`v1.71.0...v1.72.0`](https://github.com/juspay/hyperswitch/compare/v1.71.0...v1.72.0)

    - - -


    ## 1.71.0 (2023-11-03)

    ### Features

    - **merchant_connector_account:** Add cache for querying by `merchant_connector_id` ([#2738](https://github.com/juspay/hyperswitch/pull/2738)) ([`1ba6282`](https://github.com/juspay/hyperswitch/commit/1ba6282699b7dff5e6e95c9a14e51c0f8bf749cd))
    - **router:** Add Smart Routing to route payments efficiently ([#2665](https://github.com/juspay/hyperswitch/pull/2665)) ([`9b618d2`](https://github.com/juspay/hyperswitch/commit/9b618d24476967d364835d04010d9076a80aeb9c))

    ### Bug Fixes

    - **connector:**
      - [Cryptopay]Remove default case handling for Cryptopay ([#2699](https://github.com/juspay/hyperswitch/pull/2699)) ([`255a4f8`](https://github.com/juspay/hyperswitch/commit/255a4f89a8e0124310d42bb63ad459bd8cde2cba))
      - [Bluesnap] fix psync status to failure when it is '403'  ([#2772](https://github.com/juspay/hyperswitch/pull/2772)) ([`9314d14`](https://github.com/juspay/hyperswitch/commit/9314d1446326fd8a69f1f69657a976bbe7c27901))
    - Response spelling ([#2779](https://github.com/juspay/hyperswitch/pull/2779)) ([`5859372`](https://github.com/juspay/hyperswitch/commit/585937204d9071baa37d402f73159f8f650d0a07))

    ### Testing

    - **postman:** Update postman collection files ([`21e8a10`](https://github.com/juspay/hyperswitch/commit/21e8a105f9b47ded232b457a0420ad71ec2414ed))

    **Full Changelog:** [`v1.70.1...v1.71.0`](https://github.com/juspay/hyperswitch/compare/v1.70.1...v1.71.0)

    - - -


    ## 1.70.1 (2023-11-03)

    ### Revert

    - Fix(analytics): feat(analytics): analytics APIs ([#2777](https://github.com/juspay/hyperswitch/pull/2777)) ([`169d33b`](https://github.com/juspay/hyperswitch/commit/169d33bf8157b1a9910c841c8c55eddc4d2ad168))

    **Full Changelog:** [`v1.70.0...v1.70.1`](https://github.com/juspay/hyperswitch/compare/v1.70.0...v1.70.1)

    - - -


    ## 1.70.0 (2023-11-03)

    ### Features

    - **analytics:** Analytics APIs ([#2676](https://github.com/juspay/hyperswitch/pull/2676)) ([`c0a5e7b`](https://github.com/juspay/hyperswitch/commit/c0a5e7b7d945095053606e35c9bb23a06090c4e3))
    - **connector:** [Multisafepay] add error handling ([#2595](https://github.com/juspay/hyperswitch/pull/2595)) ([`b3c846d`](https://github.com/juspay/hyperswitch/commit/b3c846d637dd32a2d6d7044c118abbb2616642f0))
    - **events:** Add api auth type details to events ([#2760](https://github.com/juspay/hyperswitch/pull/2760)) ([`1094493`](https://github.com/juspay/hyperswitch/commit/10944937a02502e0727f16368d8d055e575dd518))

    ### Bug Fixes

    - **router:** Make customer_id optional when billing and shipping address is passed in payments create, update ([#2762](https://github.com/juspay/hyperswitch/pull/2762)) ([`e40a293`](https://github.com/juspay/hyperswitch/commit/e40a29351c7aa7b86a5684959a84f0236104cafd))
    - Null fields in payments response ([#2745](https://github.com/juspay/hyperswitch/pull/2745)) ([`42261a5`](https://github.com/juspay/hyperswitch/commit/42261a5306bb99d3e20eb3aa734a895e589b1d94))

    ### Testing

    - **postman:** Update postman collection files ([`772f03e`](https://github.com/juspay/hyperswitch/commit/772f03ee3836ce86de3874f6a5e7f636718e6034))

    **Full Changelog:** [`v1.69.0...v1.70.0`](https://github.com/juspay/hyperswitch/compare/v1.69.0...v1.70.0)

    - - -


    ## 1.69.0 (2023-10-31)

    ### Features

    - **connector:**
      - [VOLT] Implement payment flows and bank redirect payment method ([#2582](https://github.com/juspay/hyperswitch/pull/2582)) ([`23bd364`](https://github.com/juspay/hyperswitch/commit/23bd364a7819a48c3f5f89ff5b71cc237d6e2d46))
      - [NMI] add orderid to PaymentRequest ([#2727](https://github.com/juspay/hyperswitch/pull/2727)) ([`aad3f0f`](https://github.com/juspay/hyperswitch/commit/aad3f0f6fafdb08f1c5f1feb2588d6d0fb9162ff))
      - Worldline Use `connector_response_reference_id` as reference to merchant ([#2721](https://github.com/juspay/hyperswitch/pull/2721)) ([`a261f1a`](https://github.com/juspay/hyperswitch/commit/a261f1a2fce84354b3741429b629928d1bd06aab))
      - [Authorizedotnet] Use connector_request_reference_id as reference to the connector ([#2593](https://github.com/juspay/hyperswitch/pull/2593)) ([`3d7c6b0`](https://github.com/juspay/hyperswitch/commit/3d7c6b004d5f6399858925b40c3010fca486bbd5))
      - [Multisafepay] Currency Unit Conversion ([#2679](https://github.com/juspay/hyperswitch/pull/2679)) ([`42b13f7`](https://github.com/juspay/hyperswitch/commit/42b13f737a53143057ab23867f32017ea8c17780))
      - [Iatapay] currency unit conversion ([#2592](https://github.com/juspay/hyperswitch/pull/2592)) ([`0f5406c`](https://github.com/juspay/hyperswitch/commit/0f5406c620e9cdd20841898e9451a35f434f5b8a))
      - [BitPay] Currency Unit Conversion ([#2736](https://github.com/juspay/hyperswitch/pull/2736)) ([`e377279`](https://github.com/juspay/hyperswitch/commit/e377279d9cc872238fcfd8de324b44b0249b95c2))
    - **organization:** Add organization table ([#2669](https://github.com/juspay/hyperswitch/pull/2669)) ([`d682471`](https://github.com/juspay/hyperswitch/commit/d6824710015b134a50986b3e85d3840902322711))
    - Add one-click deploy script for HyperSwitch on AWS (EC2, RDS, Redis) ([#2730](https://github.com/juspay/hyperswitch/pull/2730)) ([`838372a`](https://github.com/juspay/hyperswitch/commit/838372ab3f6f3f35b8d884958810bab54cc17244))
    - Implement list_merchant_connector_accounts_by_merchant_id_connector_name function ([#2742](https://github.com/juspay/hyperswitch/pull/2742)) ([`15a6b5a`](https://github.com/juspay/hyperswitch/commit/15a6b5a855def5650e16b96e6529ad7fa0845e6b))

    ### Bug Fixes

    - **connector:** [Stripe] add decline_code in error_reason ([#2735](https://github.com/juspay/hyperswitch/pull/2735)) ([`0a44f56`](https://github.com/juspay/hyperswitch/commit/0a44f5699ed7b0c0ea0352b67c65df496ebe61f3))
    - **typo:** Add commit id to allowed typos ([#2733](https://github.com/juspay/hyperswitch/pull/2733)) ([`8984627`](https://github.com/juspay/hyperswitch/commit/8984627d1cfd1a773e931617a3351884b12399a5))
    - Make kv log extraction easier ([#2666](https://github.com/juspay/hyperswitch/pull/2666)) ([`577ef1a`](https://github.com/juspay/hyperswitch/commit/577ef1ae1a4718aaf90175d49e2a786af255fd63))

    ### Refactors

    - **connector:**
      - [Noon] Remove Default Case Handling ([#2677](https://github.com/juspay/hyperswitch/pull/2677)) ([`452090d`](https://github.com/juspay/hyperswitch/commit/452090d56d713a5cc5c8fae3cc2f9f3d26e27a53))
      - [Payme] Remove Default Case Handling ([#2719](https://github.com/juspay/hyperswitch/pull/2719)) ([`94947bd`](https://github.com/juspay/hyperswitch/commit/94947bdb33ca4eb91daad13b2a427592d3b69851))
      - [Payeezy] remove default case handling ([#2712](https://github.com/juspay/hyperswitch/pull/2712)) ([`ceed76f`](https://github.com/juspay/hyperswitch/commit/ceed76fb2e67771048e563a13703eb801eeaae08))
    - **core:** Use `business_profile` to read merchant configs ([#2729](https://github.com/juspay/hyperswitch/pull/2729)) ([`8c85173`](https://github.com/juspay/hyperswitch/commit/8c85173ecdd13db5ec7c4c0fe18456a31c8ee57e))
    - **db:** Migrate to payment_attempt from connector_response  ([#2656](https://github.com/juspay/hyperswitch/pull/2656)) ([`9d9fc2a`](https://github.com/juspay/hyperswitch/commit/9d9fc2a8c5e9e30ed7ed4eeb2417365fc06be711))

    ### Testing

    - **postman:** Update postman collection files ([`db8f58b`](https://github.com/juspay/hyperswitch/commit/db8f58b145feef371c958086a1ec02128680d018))

    ### Miscellaneous Tasks

    - **env:** Add ttl as env variable ([#2653](https://github.com/juspay/hyperswitch/pull/2653)) ([`8b1499e`](https://github.com/juspay/hyperswitch/commit/8b1499e121678c5df3ca0197e2ec14074fd96eb5))

    **Full Changelog:** [`v1.68.0...v1.69.0`](https://github.com/juspay/hyperswitch/compare/v1.68.0...v1.69.0)

    - - -


    ## 1.68.0 (2023-10-29)

    ### Features

    - **connector:**
      - [OpenNode] Currency Unit Conversion ([#2645](https://github.com/juspay/hyperswitch/pull/2645)) ([`88e1f29`](https://github.com/juspay/hyperswitch/commit/88e1f29dae13622bc58b8f5df1cd84b929b28ac6))
      - [Mollie] Currency Unit Conversion ([#2671](https://github.com/juspay/hyperswitch/pull/2671)) ([`3578db7`](https://github.com/juspay/hyperswitch/commit/3578db7640d8eda8f063e11b8bb64452fb987eef))
      - [Dlocal] Implement feature to use connector_request_reference_id as reference to the connector ([#2704](https://github.com/juspay/hyperswitch/pull/2704)) ([`af90089`](https://github.com/juspay/hyperswitch/commit/af90089010e06ed45a70c51d4143260eec45b6dc))
    - **events:** Add masked json serializer for logging PII values ([#2681](https://github.com/juspay/hyperswitch/pull/2681)) ([`13c66df`](https://github.com/juspay/hyperswitch/commit/13c66df92c5b7db9e44852d4afee7a4e5ae52a15))

    ### Bug Fixes

    - **connector:** [Forte] Response Handling for Verify Action ([#2601](https://github.com/juspay/hyperswitch/pull/2601)) ([`efed596`](https://github.com/juspay/hyperswitch/commit/efed5968236a8ae3b26a7697e4972f243add4292))

    ### Refactors

    - **connector:**
      - [Airwallex] Remove default case handling ([#2703](https://github.com/juspay/hyperswitch/pull/2703)) ([`4138c8f`](https://github.com/juspay/hyperswitch/commit/4138c8f5431dea4fe400b47c919c68b7c8f7b402))
      - Use connector_request_reference_id for Fiserv ([#2698](https://github.com/juspay/hyperswitch/pull/2698)) ([`05c2f84`](https://github.com/juspay/hyperswitch/commit/05c2f842e3b9c579f611716b08a10766a6d13a30))
      - [Rapyd] add and implement the get_currency_unit function ([#2664](https://github.com/juspay/hyperswitch/pull/2664)) ([`78e5cd0`](https://github.com/juspay/hyperswitch/commit/78e5cd00b55ad2bd25083aecceaa8762efe3b48d))
      - [Square] remove default case handling ([#2701](https://github.com/juspay/hyperswitch/pull/2701)) ([`05100ea`](https://github.com/juspay/hyperswitch/commit/05100ea38d540d17e211e06ea99fcfeae7958975))
      - Use connector_request_reference_id for Iatapay ([#2692](https://github.com/juspay/hyperswitch/pull/2692)) ([`4afe552`](https://github.com/juspay/hyperswitch/commit/4afe552563c6a0cb9544a9a2f870bb9d07d7cf18))

    ### Testing

    - **postman:** Update postman collection files ([`8eca66a`](https://github.com/juspay/hyperswitch/commit/8eca66a2eb8770783c671b299765aa15d7fa72f8))

    ### Documentation

    - **changelog:** Fix typo in changelog ([#2713](https://github.com/juspay/hyperswitch/pull/2713)) ([`2815443`](https://github.com/juspay/hyperswitch/commit/2815443c1b147e005a2384ff817292b1845a9f88))

    **Full Changelog:** [`v1.67.0...v1.68.0`](https://github.com/juspay/hyperswitch/compare/v1.67.0...v1.68.0)

    - - -


    ## 1.67.0 (2023-10-26)

    ### Features

    - **connector:** [OpenNode] Use connector_request_reference_id as reference to connector ([#2596](https://github.com/juspay/hyperswitch/pull/2596)) ([`96b790c`](https://github.com/juspay/hyperswitch/commit/96b790cb4b44cd4867be62e2889cb4aa23622161))

    ### Bug Fixes

    - **connector:** [Paypal]fix paypal error reason mapping when it is empty string. ([#2700](https://github.com/juspay/hyperswitch/pull/2700)) ([`2c00767`](https://github.com/juspay/hyperswitch/commit/2c007675aec13b0696c74568af36eea2c799d9ef))

    ### Refactors

    - **connector:**
      - [Worldpay] Remove Default Case Handling ([#2488](https://github.com/juspay/hyperswitch/pull/2488)) ([`2b2c381`](https://github.com/juspay/hyperswitch/commit/2b2c38146dc6dcf8d967dcc557281d3689bf746b))
      - Added default case for Opayo ([#2687](https://github.com/juspay/hyperswitch/pull/2687)) ([`1186f8c`](https://github.com/juspay/hyperswitch/commit/1186f8c4e2f04f470f4d6c058c18cd63f35b3804))
    - **router:** Tsys default case handling ([#2672](https://github.com/juspay/hyperswitch/pull/2672)) ([`9ff2721`](https://github.com/juspay/hyperswitch/commit/9ff272121a4b6d8d5e1565863d7f13caf06785b1))

    ### Testing

    - **postman:** Update postman collection files ([`9875687`](https://github.com/juspay/hyperswitch/commit/9875687e044a3b5f916fd65b9e457caec7f4e0f6))

    ### Build System / Dependencies

    - **docker:** Copy over `.gitignore` as `.dockerignore` ([#2691](https://github.com/juspay/hyperswitch/pull/2691)) ([`d680eb2`](https://github.com/juspay/hyperswitch/commit/d680eb2b49f85795daafdda9caa0fd3fe6db8108))

    **Full Changelog:** [`v1.66.0...v1.67.0`](https://github.com/juspay/hyperswitch/compare/v1.66.0...v1.67.0)

    - - -


    ## 1.66.0 (2023-10-25)

    ### Features

    - **core:** Add support for multiple `merchant_connector_account`  ([#2655](https://github.com/juspay/hyperswitch/pull/2655)) ([`5988d8d`](https://github.com/juspay/hyperswitch/commit/5988d8d42605af006fdf7d7821bbdf66e4468669))

    **Full Changelog:** [`v1.65.0...v1.66.0`](https://github.com/juspay/hyperswitch/compare/v1.65.0...v1.66.0)

    - - -


    ## 1.65.0 (2023-10-25)

    ### Features

    - **router_env:** Add support for UUID v7 for tracing actix web ([#2661](https://github.com/juspay/hyperswitch/pull/2661)) ([`65319fe`](https://github.com/juspay/hyperswitch/commit/65319fe958aaf88e48e06f731ffae8273f7b586c))

    ### Bug Fixes

    - **core:** Address clippy config changes ([#2654](https://github.com/juspay/hyperswitch/pull/2654)) ([`cfe9c25`](https://github.com/juspay/hyperswitch/commit/cfe9c2529e3c16f4d43df37f6357c70f7ca39aa6))
    - **refunds:**
      - Add `profile_id` in refunds response ([#2652](https://github.com/juspay/hyperswitch/pull/2652)) ([`bb86cc2`](https://github.com/juspay/hyperswitch/commit/bb86cc2d04665ccd68eebea68a3d5b58f481c63d))
      - Fetch refund if insert fails due to duplicate response ([#2682](https://github.com/juspay/hyperswitch/pull/2682)) ([`433cdfa`](https://github.com/juspay/hyperswitch/commit/433cdfa296849a9e642eb574bf79ee1b03b89ff6))

    ### Refactors

    - **connector:**
      - [CryptoPay] Remove Default Case Handling ([#2643](https://github.com/juspay/hyperswitch/pull/2643)) ([`6428d07`](https://github.com/juspay/hyperswitch/commit/6428d07f983026245159de4147b62bc0fc018165))
      - [CyberSource] Enhance currency Mapping with ConnectorCurrencyCommon Trait ([#2626](https://github.com/juspay/hyperswitch/pull/2626)) ([`f2f8170`](https://github.com/juspay/hyperswitch/commit/f2f8170ae1bcc2167f5bc2dfcc58f0c9f1ea0160))
      - [Cryptopay] add psync reference id validation for Cryptopay ([#2668](https://github.com/juspay/hyperswitch/pull/2668)) ([`27b9762`](https://github.com/juspay/hyperswitch/commit/27b97626245cab12dd9aefb4d85a77b5c913dba0))
      - Default case for worldline ([#2674](https://github.com/juspay/hyperswitch/pull/2674)) ([`e6272c6`](https://github.com/juspay/hyperswitch/commit/e6272c6418e5dbf9af94c48ef8814d5f415de793))

    ### Testing

    - **postman:** Update postman collection files ([`b340673`](https://github.com/juspay/hyperswitch/commit/b34067312ee7a5bc3c1498a1ff06e52849c90081))

    **Full Changelog:** [`v1.64.1...v1.65.0`](https://github.com/juspay/hyperswitch/compare/v1.64.1...v1.65.0)

    - - -


    ## 1.64.1 (2023-10-24)

    ### Refactors

    - Revert redis temp locker logic ([#2670](https://github.com/juspay/hyperswitch/pull/2670)) ([`eaa9720`](https://github.com/juspay/hyperswitch/commit/eaa972052024678ade122eec14261f9f33788e45))

    **Full Changelog:** [`v1.64.0...v1.64.1`](https://github.com/juspay/hyperswitch/compare/v1.64.0...v1.64.1)

    - - -


    ## 1.64.0 (2023-10-23)

    ### Features

    - **events:** Add request body to api events logger ([#2660](https://github.com/juspay/hyperswitch/pull/2660)) ([`830eee9`](https://github.com/juspay/hyperswitch/commit/830eee94e1d35dcd14ef9989eb7b6003c1244a18))

    ### Bug Fixes

    - **router:** Disable openapi examples ([#2648](https://github.com/juspay/hyperswitch/pull/2648)) ([`b39bdbf`](https://github.com/juspay/hyperswitch/commit/b39bdbf0c24730fea9cde0dcfa07ac43e4dd69a4))

    ### Refactors

    - **connector:**
      - Use connector_response_reference_id  for Shift4 ([#2492](https://github.com/juspay/hyperswitch/pull/2492)) ([`83f0062`](https://github.com/juspay/hyperswitch/commit/83f0062aad9886a5a0c4ecff7412acfec63f7423))
      - [PowerTranz] refactor powertranz payments to remove default cases ([#2547](https://github.com/juspay/hyperswitch/pull/2547)) ([`664093d`](https://github.com/juspay/hyperswitch/commit/664093dc79743203196d912c17570885718b1c02))

    **Full Changelog:** [`v1.63.0...v1.64.0`](https://github.com/juspay/hyperswitch/compare/v1.63.0...v1.64.0)

    - - -


    ## 1.63.0 (2023-10-20)

    ### Features

    - Add support for updating surcharge_applicable field intent ([#2647](https://github.com/juspay/hyperswitch/pull/2647)) ([`949937e`](https://github.com/juspay/hyperswitch/commit/949937e3644346f8b2b952944efb884f270645a8))

    ### Bug Fixes

    - Kms decryption of redis_temp_locker_encryption_key ([#2650](https://github.com/juspay/hyperswitch/pull/2650)) ([`5a6601f`](https://github.com/juspay/hyperswitch/commit/5a6601fad4d11cd7d2f1322a6453504494d20c6f))

    ### Refactors

    - **router:** [Nexi nets] Remove Default Case Handling ([#2639](https://github.com/juspay/hyperswitch/pull/2639)) ([`4b64c56`](https://github.com/juspay/hyperswitch/commit/4b64c563558d7c0a02b248c23921ed47ff294980))

    **Full Changelog:** [`v1.62.0...v1.63.0`](https://github.com/juspay/hyperswitch/compare/v1.62.0...v1.63.0)

    - - -


    ## 1.62.0 (2023-10-19)

    ### Features

    - **connector:**
      - [Worldpay] Use connector_request_reference_id as reference to the connector ([#2553](https://github.com/juspay/hyperswitch/pull/2553)) ([`9ea5830`](https://github.com/juspay/hyperswitch/commit/9ea5830befe333270f8f424753e1b46a439e79bb))
      - [ProphetPay] Template generation ([#2610](https://github.com/juspay/hyperswitch/pull/2610)) ([`7e6207e`](https://github.com/juspay/hyperswitch/commit/7e6207e6ca98fe2af9a61e272735e9d2292d6a92))
      - [Bambora] Use connector_response_reference_id as reference to the connector ([#2635](https://github.com/juspay/hyperswitch/pull/2635)) ([`a9b5dc9`](https://github.com/juspay/hyperswitch/commit/a9b5dc9ab767eb54a95bcebc4fd5a7b00dbf65f6))
      - [Klarna] Add order id as the reference id to merchant ([#2614](https://github.com/juspay/hyperswitch/pull/2614)) ([`b7d5573`](https://github.com/juspay/hyperswitch/commit/b7d557367a3a5aca478ffd2087af8077bc4e7e2b))

    ### Bug Fixes

    - Payment_method_data and description null during payment confirm ([#2618](https://github.com/juspay/hyperswitch/pull/2618)) ([`6765a1c`](https://github.com/juspay/hyperswitch/commit/6765a1c695493499d1907c56d05bdcd80a2fea93))

    ### Refactors

    - **connector:**
      - [Dlocal] Currency Unit Conversion ([#2615](https://github.com/juspay/hyperswitch/pull/2615)) ([`1f2fe51`](https://github.com/juspay/hyperswitch/commit/1f2fe5170ae318a8b1613f6f02538a36f30f0b3d))
      - [Iatapay] remove default case handling ([#2587](https://github.com/juspay/hyperswitch/pull/2587)) ([`6494e8a`](https://github.com/juspay/hyperswitch/commit/6494e8a6e4a195ecc9ca5b2f6ac0a636f06b03f7))
      - [noon] remove cancellation_reason ([#2627](https://github.com/juspay/hyperswitch/pull/2627)) ([`41b7742`](https://github.com/juspay/hyperswitch/commit/41b7742b5498bfa9ef32b9408ab2d9a7a43b01dc))
      - [Forte] Remove Default Case Handling ([#2625](https://github.com/juspay/hyperswitch/pull/2625)) ([`418715b`](https://github.com/juspay/hyperswitch/commit/418715b816337bcaeee1aceeb911e6d329add2ad))
      - [Dlocal] remove default case handling ([#2624](https://github.com/juspay/hyperswitch/pull/2624)) ([`1584313`](https://github.com/juspay/hyperswitch/commit/158431391d560be4a79160ccea7bf5feaa4b52db))
    - Remove code related to temp locker ([#2640](https://github.com/juspay/hyperswitch/pull/2640)) ([`cc0b422`](https://github.com/juspay/hyperswitch/commit/cc0b42263257b6cf6c7f94350442a74d3c02750b))
    - Add surcharge_applicable to payment_intent and remove surcharge_metadata from payment_attempt ([#2642](https://github.com/juspay/hyperswitch/pull/2642)) ([`e5fbaae`](https://github.com/juspay/hyperswitch/commit/e5fbaae0d4278681e5f589aa46c867e7904c4646))

    ### Testing

    - **postman:** Update postman collection files ([`2593dd1`](https://github.com/juspay/hyperswitch/commit/2593dd17c30d7f327b54f3c386a9fd42ae8146ca))

    ### Miscellaneous Tasks

    - **deps:** Bump rustix from 0.37.24 to 0.37.25 ([#2637](https://github.com/juspay/hyperswitch/pull/2637)) ([`67d0062`](https://github.com/juspay/hyperswitch/commit/67d006272158372a4b9ec65cbbe7b2ae8f35eb69))

    ### Build System / Dependencies

    - **deps:** Use `async-bb8-diesel` from `crates.io` instead of git repository ([#2619](https://github.com/juspay/hyperswitch/pull/2619)) ([`14c0821`](https://github.com/juspay/hyperswitch/commit/14c0821b8085279072db3484a3b1bcdde0f7893b))

    **Full Changelog:** [`v1.61.0...v1.62.0`](https://github.com/juspay/hyperswitch/compare/v1.61.0...v1.62.0)

    - - -


    ## 1.61.0 (2023-10-18)

    ### Features

    - **Connector:** [Paypal] add support for dispute webhooks for paypal connector ([#2353](https://github.com/juspay/hyperswitch/pull/2353)) ([`6cf8f05`](https://github.com/juspay/hyperswitch/commit/6cf8f0582cfa4f6a58c67a868cb67846970b3835))
    - **apple_pay:** Add support for decrypted apple pay token for checkout ([#2628](https://github.com/juspay/hyperswitch/pull/2628)) ([`794dbc6`](https://github.com/juspay/hyperswitch/commit/794dbc6a766d12ff3cdf0b782abb4c48b8fa77d0))
    - **connector:**
      - [Aci] Update connector_response_reference_id with merchant reference ([#2551](https://github.com/juspay/hyperswitch/pull/2551)) ([`9e450b8`](https://github.com/juspay/hyperswitch/commit/9e450b81ca8bc4b1ddbbe2c1d732dbc58c61934e))
      - [Bambora] use connector_request_reference_id ([#2518](https://github.com/juspay/hyperswitch/pull/2518)) ([`73e9391`](https://github.com/juspay/hyperswitch/commit/73e93910cd3bd668d721b15edb86240adc18f46b))
      - [Tsys] Use connector_request_reference_id as reference to the connector ([#2631](https://github.com/juspay/hyperswitch/pull/2631)) ([`b145463`](https://github.com/juspay/hyperswitch/commit/b1454634259144d896716e5cef37d9b8491f55b9))
    - **core:** Replace temp locker with redis ([#2594](https://github.com/juspay/hyperswitch/pull/2594)) ([`2edbd61`](https://github.com/juspay/hyperswitch/commit/2edbd6123512a6f2f4d51d5c2d1ed8b6ee502813))
    - **events:** Add events for incoming API requests ([#2621](https://github.com/juspay/hyperswitch/pull/2621)) ([`7a76d6c`](https://github.com/juspay/hyperswitch/commit/7a76d6c01a0c6087c6429e58cc9dd6b4ea7fc0aa))
    - **merchant_account:** Add merchant account list endpoint  ([#2560](https://github.com/juspay/hyperswitch/pull/2560)) ([`a1472c6`](https://github.com/juspay/hyperswitch/commit/a1472c6b78afa819cbe026a7db1e0c2b9016715e))
    - Update surcharge_amount and tax_amount in update_trackers of payment_confirm ([#2603](https://github.com/juspay/hyperswitch/pull/2603)) ([`2f9a355`](https://github.com/juspay/hyperswitch/commit/2f9a3557f63150bcd27e27c6510a799669706718))

    ### Bug Fixes

    - **connector:**
      - [Authorizedotnet]fix error deserialization incase of authentication failure ([#2600](https://github.com/juspay/hyperswitch/pull/2600)) ([`4859b7d`](https://github.com/juspay/hyperswitch/commit/4859b7da73125c2da72f4754863ff4485bebce29))
      - [Paypal]fix error deserelization for source verification call ([#2611](https://github.com/juspay/hyperswitch/pull/2611)) ([`da77d13`](https://github.com/juspay/hyperswitch/commit/da77d1393b8f6ab658dd7f3c202dd6c7d15c0ebd))
    - **payments:** Fix payment update enum being inserted into kv ([#2612](https://github.com/juspay/hyperswitch/pull/2612)) ([`9aa1c75`](https://github.com/juspay/hyperswitch/commit/9aa1c75eca24caa14af5f4801173cd59f76d7e57))

    ### Refactors

    - **events:** Allow box dyn for event handler ([#2629](https://github.com/juspay/hyperswitch/pull/2629)) ([`01410bb`](https://github.com/juspay/hyperswitch/commit/01410bb9f233637e98f27ebe509e859c7dad2cf4))
    - **payment_connector:** Allow connector label to be updated ([#2622](https://github.com/juspay/hyperswitch/pull/2622)) ([`c86ac9b`](https://github.com/juspay/hyperswitch/commit/c86ac9b1fe5388666463aa16c899427a2bf442fb))
    - **router:** Remove unnecessary function from Refunds Validate Flow ([#2609](https://github.com/juspay/hyperswitch/pull/2609)) ([`3399328`](https://github.com/juspay/hyperswitch/commit/3399328ae7f525fb72e0751182cf32d0b2470594))
    - Refactor connector auth type failure to 4xx ([#2616](https://github.com/juspay/hyperswitch/pull/2616)) ([`1dad745`](https://github.com/juspay/hyperswitch/commit/1dad7455c4ae8d26d52c44d90f5b8d815d85d205))

    ### Testing

    - **postman:** Update postman collection files ([`d899025`](https://github.com/juspay/hyperswitch/commit/d89902507486b8b97011fb63ed0343f727255ca2))

    ### Documentation

    - **postman:** Rewrite postman documentation to help devs develop tests for their features ([#2613](https://github.com/juspay/hyperswitch/pull/2613)) ([`1548ee6`](https://github.com/juspay/hyperswitch/commit/1548ee62b661200fcb9d439d16c072a66dbfa718))

    ### Miscellaneous Tasks

    - **scripts:** Add connector script changes ([#2620](https://github.com/juspay/hyperswitch/pull/2620)) ([`373a10b`](https://github.com/juspay/hyperswitch/commit/373a10beffc7cddef6ff76f5c8fff91ca3618581))

    **Full Changelog:** [`v1.60.0...v1.61.0`](https://github.com/juspay/hyperswitch/compare/v1.60.0...v1.61.0)

    - - -


    ## 1.60.0 (2023-10-17)

    ### Features

    - **compatibility:** Added support to connector txn id ([#2606](https://github.com/juspay/hyperswitch/pull/2606)) ([`82980a8`](https://github.com/juspay/hyperswitch/commit/82980a86ad7966c6645d26a4abec85c8c7e3bdad))
    - **router:** Better UI payment link and order details product image and merchant config support ([#2583](https://github.com/juspay/hyperswitch/pull/2583)) ([`fdd9580`](https://github.com/juspay/hyperswitch/commit/fdd95800127bb79fe2a9eeca1b7e0e158b6d2783))
    - Add updated_by to tracker tables ([#2604](https://github.com/juspay/hyperswitch/pull/2604)) ([`6a74e8c`](https://github.com/juspay/hyperswitch/commit/6a74e8cba9078529fd9662d29ac7b941a191fbf4))

    ### Bug Fixes

    - Make push to drainer generic and add application metrics for KV ([#2563](https://github.com/juspay/hyperswitch/pull/2563)) ([`274a783`](https://github.com/juspay/hyperswitch/commit/274a78343e5e3de614cfb1476570b5c449ee0c1e))

    ### Refactors

    - **connector:** [Nuvei] remove default case handling ([#2584](https://github.com/juspay/hyperswitch/pull/2584)) ([`3807601`](https://github.com/juspay/hyperswitch/commit/3807601ee1c140310abf7a7e6ee4b83d44de9558))
    - **router:** Throw bad request error on applepay verification failure ([#2607](https://github.com/juspay/hyperswitch/pull/2607)) ([`cecea87`](https://github.com/juspay/hyperswitch/commit/cecea8718a48b4e896b2bafce0f909ef8d9a6e8a))

    **Full Changelog:** [`v1.59.0...v1.60.0`](https://github.com/juspay/hyperswitch/compare/v1.59.0...v1.60.0)

    - - -


    ## 1.59.0 (2023-10-16)

    ### Features

    - **connector:**
      - Add support for surcharge in trustpay ([#2581](https://github.com/juspay/hyperswitch/pull/2581)) ([`2d5d3b8`](https://github.com/juspay/hyperswitch/commit/2d5d3b8efbf782bf03e5f5ef1aa557d3dd3f5860))
      - Add surcharge support in paypal connector ([#2568](https://github.com/juspay/hyperswitch/pull/2568)) ([`92ee1db`](https://github.com/juspay/hyperswitch/commit/92ee1db107ac41326ecfb31b4565664a29a4b80a))
    - **events:** Add basic event handler to collect application events ([#2602](https://github.com/juspay/hyperswitch/pull/2602)) ([`5d88dbc`](https://github.com/juspay/hyperswitch/commit/5d88dbc92ce470c951717debe246e182b3fe5656))

    ### Refactors

    - **connector:** [multisafepay] Remove Default Case Handling ([#2586](https://github.com/juspay/hyperswitch/pull/2586)) ([`7adc6a0`](https://github.com/juspay/hyperswitch/commit/7adc6a05b60fa9143260b2a7f623907647557621))

    **Full Changelog:** [`v1.58.0...v1.59.0`](https://github.com/juspay/hyperswitch/compare/v1.58.0...v1.59.0)

    - - -


    ## 1.58.0 (2023-10-15)

    ### Features

    - **connector:**
      - [HELCIM] Implement Cards for Helcim ([#2210](https://github.com/juspay/hyperswitch/pull/2210)) ([`b5feab6`](https://github.com/juspay/hyperswitch/commit/b5feab61d950921c75267ad88e944e7e2c4af3ca))
      - [Paypal] use connector request reference id as reference for paypal ([#2577](https://github.com/juspay/hyperswitch/pull/2577)) ([`500405d`](https://github.com/juspay/hyperswitch/commit/500405d78938772e0e9f8e3ce4f930d782c670fa))
      - [Airwallex] Currency Unit Conversion ([#2571](https://github.com/juspay/hyperswitch/pull/2571)) ([`8971b17`](https://github.com/juspay/hyperswitch/commit/8971b17b073315f869e3c843b0aee7644dcf6479))
      - [Klarna] Use connector_request_reference_id as reference to connector ([#2494](https://github.com/juspay/hyperswitch/pull/2494)) ([`2609ef6`](https://github.com/juspay/hyperswitch/commit/2609ef6aeb17e1e89d8f98ff84a2c33b9704e6b2))
      - [Dlocal] Use connector_response_reference_id as reference to merchant ([#2446](https://github.com/juspay/hyperswitch/pull/2446)) ([`f6677b8`](https://github.com/juspay/hyperswitch/commit/f6677b8e9300a75810a39de5b60243e34cf1d76c))
    - **nexinets:** Use connector_request_reference_id as reference to the connector - Work In Progress  ([#2515](https://github.com/juspay/hyperswitch/pull/2515)) ([`088dce0`](https://github.com/juspay/hyperswitch/commit/088dce076d8d8ff86769717368150e09d7d92593))
    - **router:** Add Cancel Event in Webhooks and Mapping it in Stripe ([#2573](https://github.com/juspay/hyperswitch/pull/2573)) ([`92f7918`](https://github.com/juspay/hyperswitch/commit/92f7918e6f98460fb739d50b908ae33fda2f80b8))

    ### Refactors

    - **connector:**
      - [Worldline] Currency Unit Conversion ([#2569](https://github.com/juspay/hyperswitch/pull/2569)) ([`9f03a41`](https://github.com/juspay/hyperswitch/commit/9f03a4118ccdd6036d27074c9126a79d6e9b0495))
      - [Authorizedotnet] Enhance currency Mapping with ConnectorCurrencyCommon Trait ([#2570](https://github.com/juspay/hyperswitch/pull/2570)) ([`d401975`](https://github.com/juspay/hyperswitch/commit/d4019751ff4acbd26abb2c32a600e8e6c55893f6))
      - [noon] enhance response status mapping ([#2575](https://github.com/juspay/hyperswitch/pull/2575)) ([`053c79d`](https://github.com/juspay/hyperswitch/commit/053c79d248df0ff6ec702c3c301acc5654a1735a))
    - **storage:** Update paymentintent object to provide a relation with attempts ([#2502](https://github.com/juspay/hyperswitch/pull/2502)) ([`fbf3c03`](https://github.com/juspay/hyperswitch/commit/fbf3c03d418242b1f5f1a15c69029023d0b25b4e))

    ### Testing

    - **postman:** Update postman collection files ([`08141ab`](https://github.com/juspay/hyperswitch/commit/08141abb3e87504bb4fe54fdfea92e6c889d729a))

    **Full Changelog:** [`v1.57.1+hotfix.1...v1.58.0`](https://github.com/juspay/hyperswitch/compare/v1.57.1+hotfix.1...v1.58.0)

    - - -


    ## 1.57.1 (2023-10-12)

    ### Bug Fixes

    - **connector:** Trigger Psync after redirection url ([#2422](https://github.com/juspay/hyperswitch/pull/2422)) ([`8029a89`](https://github.com/juspay/hyperswitch/commit/8029a895b2c27a1ac14a19aea23bbc06cc364809))

    **Full Changelog:** [`v1.57.0...v1.57.1`](https://github.com/juspay/hyperswitch/compare/v1.57.0...v1.57.1)

    - - -


    ## 1.57.0 (2023-10-12)

    ### Features

    - **connector:**
      - [Tsys] Use `connector_response_reference_id` as reference to the connector ([#2546](https://github.com/juspay/hyperswitch/pull/2546)) ([`550377a`](https://github.com/juspay/hyperswitch/commit/550377a6c3943d9fec4ca6a8be5a5f3aafe109ab))
      - [Cybersource] Use connector_request_reference_id as reference to the connector ([#2512](https://github.com/juspay/hyperswitch/pull/2512)) ([`81cb8da`](https://github.com/juspay/hyperswitch/commit/81cb8da4d47fe2a75330d39c665bb259faa35b00))
      - [Iatapay] use connector_response_reference_id as reference to connector ([#2524](https://github.com/juspay/hyperswitch/pull/2524)) ([`ef647b7`](https://github.com/juspay/hyperswitch/commit/ef647b7ab942707a06971b6545c81168f28cb94c))
      - [ACI] Use connector_request_reference_id as reference to the connector ([#2549](https://github.com/juspay/hyperswitch/pull/2549)) ([`c2ad200`](https://github.com/juspay/hyperswitch/commit/c2ad2002c0e6d673f62ec4c72c8fd98b07a05c0b))
    - **customers:** Add customer list endpoint ([#2564](https://github.com/juspay/hyperswitch/pull/2564)) ([`c26620e`](https://github.com/juspay/hyperswitch/commit/c26620e041add914abc60c6149787be62ea5985d))
    - **router:**
      - Add kv implementation for update address in update payments flow ([#2542](https://github.com/juspay/hyperswitch/pull/2542)) ([`9f446bc`](https://github.com/juspay/hyperswitch/commit/9f446bc1742c06a7fab3d92128ba4e7d3be80ea6))
      - Add payment link support ([#2105](https://github.com/juspay/hyperswitch/pull/2105)) ([`642085d`](https://github.com/juspay/hyperswitch/commit/642085dc745f87b4edd2f7a744c31b8979b23cfa))

    ### Bug Fixes

    - **connector:**
      - [noon] sync with reference_id ([#2544](https://github.com/juspay/hyperswitch/pull/2544)) ([`9ef60e4`](https://github.com/juspay/hyperswitch/commit/9ef60e425d0cbe764ce66c65c8c09b1992cbe99f))
      - [braintree] add 3ds redirection error mapping and metadata validation ([#2552](https://github.com/juspay/hyperswitch/pull/2552)) ([`28d02f9`](https://github.com/juspay/hyperswitch/commit/28d02f94c6d52d05b6f520e4d48ba88adf7be619))
    - **router:** Add customer_id validation for `payment method create` flow ([#2543](https://github.com/juspay/hyperswitch/pull/2543)) ([`53d7604`](https://github.com/juspay/hyperswitch/commit/53d760460305e16f03d86f699acb035151dfdfad))
    - Percentage float inconsistency problem and api models changes to support surcharge feature ([#2550](https://github.com/juspay/hyperswitch/pull/2550)) ([`1ee1184`](https://github.com/juspay/hyperswitch/commit/1ee11849d4a60afbf3d05103cb491a11e905b811))
    - Consume profile_id throughout payouts flow ([#2501](https://github.com/juspay/hyperswitch/pull/2501)) ([`7eabd24`](https://github.com/juspay/hyperswitch/commit/7eabd24a4da6f82fd30f8a4be739962538654214))
    - Parse allowed_payment_method_types only if there is some value p… ([#2161](https://github.com/juspay/hyperswitch/pull/2161)) ([`46f1419`](https://github.com/juspay/hyperswitch/commit/46f14191ab7e036539ef3fd58acd9376b6b6b63c))

    ### Refactors

    - **connector:**
      - [Worldpay] Currency Unit Conversion ([#2436](https://github.com/juspay/hyperswitch/pull/2436)) ([`b78109b`](https://github.com/juspay/hyperswitch/commit/b78109bc93433e0886b0b8656231899df84da8cf))
      - [noon] use connector_request_reference_id for sync ([#2558](https://github.com/juspay/hyperswitch/pull/2558)) ([`0889a6e`](https://github.com/juspay/hyperswitch/commit/0889a6ed0691abeed7bba44e7024545abcc74aef))
      - [noon] update and add recommended fields  ([#2381](https://github.com/juspay/hyperswitch/pull/2381)) ([`751f16e`](https://github.com/juspay/hyperswitch/commit/751f16eaee254ab8f0068e2e9e81e3e4b7fe133f))
    - **worldline:** Use `connector_request_reference_id` as reference to the connector ([#2498](https://github.com/juspay/hyperswitch/pull/2498)) ([`efa5320`](https://github.com/juspay/hyperswitch/commit/efa53204e8ab1ef1192bcdc07ed99306475badbc))

    ### Revert

    - Fix(connector): [noon] sync with reference_id ([#2556](https://github.com/juspay/hyperswitch/pull/2556)) ([`13be4d3`](https://github.com/juspay/hyperswitch/commit/13be4d36eac3d1e17d8ad9b3f3ef8993547f548b))

    **Full Changelog:** [`v1.56.0...v1.57.0`](https://github.com/juspay/hyperswitch/compare/v1.56.0...v1.57.0)

    - - -


    ## 1.56.0 (2023-10-11)

    ### Features

    - **connector:**
      - [Volt] Template generation ([#2480](https://github.com/juspay/hyperswitch/pull/2480)) ([`ee321bb`](https://github.com/juspay/hyperswitch/commit/ee321bb82686559643d8c2725b0491997af717b2))
      - [NexiNets] Update connector_response_reference_id as reference to merchant ([#2537](https://github.com/juspay/hyperswitch/pull/2537)) ([`2f6c00a`](https://github.com/juspay/hyperswitch/commit/2f6c00a1fd853876333608a7d1fa6b488c3001d3))
      - [Authorizedotnet] use connector_response_reference_id as reference to merchant ([#2497](https://github.com/juspay/hyperswitch/pull/2497)) ([`62638c4`](https://github.com/juspay/hyperswitch/commit/62638c4230bfd149c43c2805cbad0ce9be5386b3))
    - **router:** Change temp locker config as enable only ([#2522](https://github.com/juspay/hyperswitch/pull/2522)) ([`7acf101`](https://github.com/juspay/hyperswitch/commit/7acf10101435ab97d93490e19eaac5373d34f531))

    ### Refactors

    - Delete requires cvv config when merchant account is deleted ([#2525](https://github.com/juspay/hyperswitch/pull/2525)) ([`b968552`](https://github.com/juspay/hyperswitch/commit/b9685521735956659c50bc2e1c15b08cb9952aee))

    ### Testing

    - **postman:**
      - Add proper `customer_id` in payment method create api ([#2548](https://github.com/juspay/hyperswitch/pull/2548)) ([`7994a12`](https://github.com/juspay/hyperswitch/commit/7994a1259c5852ba4ebabb906bef963c6cf81bc9))
      - Update postman collection files ([`7c561d5`](https://github.com/juspay/hyperswitch/commit/7c561d57767001e755fc9abfc32352ffdc9aacea))

    ### Miscellaneous Tasks

    - **CODEOWNERS:** Update CODEOWNERS ([#2541](https://github.com/juspay/hyperswitch/pull/2541)) ([`d9fb5d4`](https://github.com/juspay/hyperswitch/commit/d9fb5d4a52f44809ab4a1576a99e97b4c8b8c41b))

    **Full Changelog:** [`v1.55.0...v1.56.0`](https://github.com/juspay/hyperswitch/compare/v1.55.0...v1.56.0)

    - - -


    ## 1.55.0 (2023-10-10)

    ### Features

    - **connector:**
      - [Multisafepay] Use connector_request_reference_id as reference to the connector ([#2503](https://github.com/juspay/hyperswitch/pull/2503)) ([`c34f1bf`](https://github.com/juspay/hyperswitch/commit/c34f1bf36ffb3a3533dd51ac87e7f66ab0dcce79))
      - [GlobalPayments] Introduce connector_request_reference_id for GlobalPayments ([#2519](https://github.com/juspay/hyperswitch/pull/2519)) ([`116139b`](https://github.com/juspay/hyperswitch/commit/116139ba7ae6878b7018068b0cb8303a8e8d1f7a))
      - [Airwallex] Use connector_request_reference_id as merchant reference id #2291 ([#2516](https://github.com/juspay/hyperswitch/pull/2516)) ([`6e89e41`](https://github.com/juspay/hyperswitch/commit/6e89e4103da4ecf6d7f06f7a9ec7da64eb493a6e))
    - **trace:** Add optional sampling behaviour for routes ([#2511](https://github.com/juspay/hyperswitch/pull/2511)) ([`ec51e48`](https://github.com/juspay/hyperswitch/commit/ec51e48402da63e1250328485095b8665d7eca65))
    - Gracefully shutdown drainer if redis goes down ([#2391](https://github.com/juspay/hyperswitch/pull/2391)) ([`2870af1`](https://github.com/juspay/hyperswitch/commit/2870af1286e897be0d40c014bc5742eafc6795db))
    - Kv for reverse lookup ([#2445](https://github.com/juspay/hyperswitch/pull/2445)) ([`13aaf96`](https://github.com/juspay/hyperswitch/commit/13aaf96db0f62dc7a706ba2ba230912ee7ef7a68))
    - Add x-hs-latency header for application overhead measurement ([#2486](https://github.com/juspay/hyperswitch/pull/2486)) ([`cf0db35`](https://github.com/juspay/hyperswitch/commit/cf0db35923d39caca9bf267b7d87a3f215884b66))

    ### Bug Fixes

    - **connector:**
      - [Airwallex] convert expiry year to four digit ([#2527](https://github.com/juspay/hyperswitch/pull/2527)) ([`4b0fa12`](https://github.com/juspay/hyperswitch/commit/4b0fa1295ca8f4e611b65fbf2458c38b89303d3b))
      - [noon] add missing response status ([#2528](https://github.com/juspay/hyperswitch/pull/2528)) ([`808ee45`](https://github.com/juspay/hyperswitch/commit/808ee45556f90b1c1360a3edbffe9ba3603439d4))

    ### Refactors

    - **payment_methods:** Added mca_id in bank details ([#2495](https://github.com/juspay/hyperswitch/pull/2495)) ([`ac3c500`](https://github.com/juspay/hyperswitch/commit/ac3c5008f80172a575f2fb08b7a5e78016ce7595))
    - **test_utils:** Refactor `test_utils` crate and add `folder` support with updated documentation ([#2487](https://github.com/juspay/hyperswitch/pull/2487)) ([`6b52ac3`](https://github.com/juspay/hyperswitch/commit/6b52ac3d398d5a180c1dc67c5b53702ad01a0773))

    ### Miscellaneous Tasks

    - [GOCARDLESS] env changes for becs and sepa mandates ([#2535](https://github.com/juspay/hyperswitch/pull/2535)) ([`4f5a383`](https://github.com/juspay/hyperswitch/commit/4f5a383bab567a1b46b2d6990c0c23ed60f1201b))

    **Full Changelog:** [`v1.54.0...v1.55.0`](https://github.com/juspay/hyperswitch/compare/v1.54.0...v1.55.0)

    - - -


    ## 1.54.0 (2023-10-09)

    ### Features

    - **connector:**
      - [Fiserv] update connector_response_reference_id in transformers ([#2489](https://github.com/juspay/hyperswitch/pull/2489)) ([`4eb7003`](https://github.com/juspay/hyperswitch/commit/4eb70034336e5ff42c9eea912d940ea04cae9326))
      - [Nuvei] Use "connector_request_reference_id" for as "attempt_id" to improve consistency in transmitting payment information ([#2493](https://github.com/juspay/hyperswitch/pull/2493)) ([`17393f5`](https://github.com/juspay/hyperswitch/commit/17393f5be3e9027fedf9466c6401754f3c4d6b99))
    - **kv:** Add kv wrapper for executing kv tasks ([#2384](https://github.com/juspay/hyperswitch/pull/2384)) ([`8b50997`](https://github.com/juspay/hyperswitch/commit/8b50997e56307507be101c562aa70d0a9b429137))
    - **process_tracker:** Make long standing payments failed ([#2380](https://github.com/juspay/hyperswitch/pull/2380)) ([`73dfc31`](https://github.com/juspay/hyperswitch/commit/73dfc31f9d16d2cf71de8433fb630bea941a7020))

    ### Bug Fixes

    - Add release feature to drianer ([#2507](https://github.com/juspay/hyperswitch/pull/2507)) ([`224b83c`](https://github.com/juspay/hyperswitch/commit/224b83c51d53fb1ca9ae11ff2f60b7b6cc807fc8))

    ### Refactors

    - Disable color in reports in json format ([#2509](https://github.com/juspay/hyperswitch/pull/2509)) ([`aa176c7`](https://github.com/juspay/hyperswitch/commit/aa176c7c5d79f68c8bd97a3248fd4d40e937a3ce))

    ### Miscellaneous Tasks

    - Address Rust 1.73 clippy lints ([#2474](https://github.com/juspay/hyperswitch/pull/2474)) ([`e02838e`](https://github.com/juspay/hyperswitch/commit/e02838eb5d3da97ef573926ded4a318ed24b6f1c))

    **Full Changelog:** [`v1.53.0...v1.54.0`](https://github.com/juspay/hyperswitch/compare/v1.53.0...v1.54.0)

    - - -


    ## 1.53.0 (2023-10-09)

    ### Features

    - **connector:**
      - [Braintree] implement dispute webhook  ([#2031](https://github.com/juspay/hyperswitch/pull/2031)) ([`eeccd10`](https://github.com/juspay/hyperswitch/commit/eeccd106ae569bd60011ed71495d7978998161f8))
      - [Paypal] Implement 3DS for Cards ([#2443](https://github.com/juspay/hyperswitch/pull/2443)) ([`d95a64d`](https://github.com/juspay/hyperswitch/commit/d95a64d6c9b870bdc38aa091cf9bf660b1ea404e))
      - [Cybersource] Use connector_response_reference_id as reference to merchant  ([#2470](https://github.com/juspay/hyperswitch/pull/2470)) ([`a2dfc48`](https://github.com/juspay/hyperswitch/commit/a2dfc48318363db051f311ee7f911de0db0eb868))
      - [Coinbase] Add order id as the reference id  ([#2469](https://github.com/juspay/hyperswitch/pull/2469)) ([`9c2fff5`](https://github.com/juspay/hyperswitch/commit/9c2fff5ab44cdd4f285b6d1437f37869b517963e))
      - [Multisafepay] Use transaction_id as reference to transaction ([#2451](https://github.com/juspay/hyperswitch/pull/2451)) ([`ba2efac`](https://github.com/juspay/hyperswitch/commit/ba2efac4fa2af22f81b0841350a334bc36e91022))

    ### Bug Fixes

    - Add startup config log to drainer ([#2482](https://github.com/juspay/hyperswitch/pull/2482)) ([`5038234`](https://github.com/juspay/hyperswitch/commit/503823408b782968fb59f6ff5d7df417b9aa7dbe))
    - Fetch data directly from DB in OLAP functions ([#2475](https://github.com/juspay/hyperswitch/pull/2475)) ([`12b5341`](https://github.com/juspay/hyperswitch/commit/12b534197276ccc4aa9575e6b518bcc50b597bee))

    ### Refactors

    - **connector:** [trustpay] refactor trustpay and handled variants errors ([#2484](https://github.com/juspay/hyperswitch/pull/2484)) ([`3f1e7c2`](https://github.com/juspay/hyperswitch/commit/3f1e7c2152a839a6fe69f60b906277ca831e7611))
    - **merchant_account:** Make `organization_id` as mandatory ([#2458](https://github.com/juspay/hyperswitch/pull/2458)) ([`53b4816`](https://github.com/juspay/hyperswitch/commit/53b4816d27fe7794cb482887ed17ddb4386bd2f7))

    ### Miscellaneous Tasks

    - Env changes for gocardless mandate ([#2485](https://github.com/juspay/hyperswitch/pull/2485)) ([`65ca5f1`](https://github.com/juspay/hyperswitch/commit/65ca5f12da54715e5db785d122e2ec9714147c68))

    **Full Changelog:** [`v1.52.0...v1.53.0`](https://github.com/juspay/hyperswitch/compare/v1.52.0...v1.53.0)

    - - -


    ## 1.52.0 (2023-10-06)

    ### Features

    - **connector:**
      - [Forte] Use connector_response_reference_id as reference to merchant ([#2456](https://github.com/juspay/hyperswitch/pull/2456)) ([`cc7e90f`](https://github.com/juspay/hyperswitch/commit/cc7e90f2293f27b74b14669a0c2d5bd6d45c4d99))
      - [PayU] Use connector_response_response_id as reference to merchant ([#2452](https://github.com/juspay/hyperswitch/pull/2452)) ([`e24897c`](https://github.com/juspay/hyperswitch/commit/e24897cd5d3859124636760a4eb42ee007f00c3e))
      - [Gocardless] Implement mandate flow ([#2461](https://github.com/juspay/hyperswitch/pull/2461)) ([`4149965`](https://github.com/juspay/hyperswitch/commit/414996592b3016bfa9f3399319c6e02ccd333c68))
      - [Gocardless] Add mandate webhoooks ([#2468](https://github.com/juspay/hyperswitch/pull/2468)) ([`8d53c66`](https://github.com/juspay/hyperswitch/commit/8d53c663a5e25817d1facda3352f84f1435efdee))
      - [Noon] Use connector_request_reference_id as Order reference ([#2466](https://github.com/juspay/hyperswitch/pull/2466)) ([`2897b6e`](https://github.com/juspay/hyperswitch/commit/2897b6ecd1a357bae93ca22fe9e7aeed18738b95))
    - **core:** Add surcharge_details field to ResponsePaymentMethodTypes struct ([#2435](https://github.com/juspay/hyperswitch/pull/2435)) ([`3f0d927`](https://github.com/juspay/hyperswitch/commit/3f0d927cb8db503c4dede98c691c1b7e6ebd441a))
    - **router:** Add mandates incoming webhooks flow ([#2464](https://github.com/juspay/hyperswitch/pull/2464)) ([`1cf8b6c`](https://github.com/juspay/hyperswitch/commit/1cf8b6cf53ee5fdde9a7a3996e5a5e5c5b8341c6))

    ### Bug Fixes

    - Update connector_mandate_id column in generate mandate flow ([#2472](https://github.com/juspay/hyperswitch/pull/2472)) ([`61288d5`](https://github.com/juspay/hyperswitch/commit/61288d541f654bcb102465e4da9883aaaac43f5b))

    ### Refactors

    - **connector:** [nmi] refactor nmi and handled variants errors ([#2463](https://github.com/juspay/hyperswitch/pull/2463)) ([`f364a06`](https://github.com/juspay/hyperswitch/commit/f364a069b90dd63a28cf25457b2cd4fda0829a8b))
    - Add support for passing context generic to api calls ([#2433](https://github.com/juspay/hyperswitch/pull/2433)) ([`601c174`](https://github.com/juspay/hyperswitch/commit/601c1744b6f15eb14ecfa3edede3159c32c53492))

    **Full Changelog:** [`v1.51.1...v1.52.0`](https://github.com/juspay/hyperswitch/compare/v1.51.1...v1.52.0)

    - - -


    ## 1.51.1 (2023-10-05)

    ### Bug Fixes

    - **router:** Make payment type optional in payments request ([#2465](https://github.com/juspay/hyperswitch/pull/2465)) ([`b5cc748`](https://github.com/juspay/hyperswitch/commit/b5cc7483f99dcd995b9022d21c94f2f9710ea7fe))

    ### Refactors

    - **router:**
      - Renamed Verify flow to SetupMandate ([#2455](https://github.com/juspay/hyperswitch/pull/2455)) ([`80f3b1e`](https://github.com/juspay/hyperswitch/commit/80f3b1edaeae9a13ea291a0315f1be2686336914))
      - Remove the payment type column in payment intent ([#2462](https://github.com/juspay/hyperswitch/pull/2462)) ([`980aa44`](https://github.com/juspay/hyperswitch/commit/980aa448634de86f11fb67aabefc15884f1b8ced))

    ### Miscellaneous Tasks

    - Fix the failing formatting check for external contributors ([#2467](https://github.com/juspay/hyperswitch/pull/2467)) ([`bb2ba08`](https://github.com/juspay/hyperswitch/commit/bb2ba0815330578295de8036ea1a5e6d66a36277))

    **Full Changelog:** [`v1.51.0...v1.51.1`](https://github.com/juspay/hyperswitch/compare/v1.51.0...v1.51.1)

    - - -


    ## 1.51.0 (2023-10-05)

    ### Features

    - **connector:**
      - [Noon] Use connector_response_reference_id as reference ([#2442](https://github.com/juspay/hyperswitch/pull/2442)) ([`688557e`](https://github.com/juspay/hyperswitch/commit/688557ef95826622fe87a4de1dfbc09446496686))
      - [Opayo] Add connector id ([#2418](https://github.com/juspay/hyperswitch/pull/2418)) ([`8e51073`](https://github.com/juspay/hyperswitch/commit/8e51073c837909838b92a9eadea32e5a577e2b54))
    - **payment_methods:** Bank details support for payment method data in pmt ([#2385](https://github.com/juspay/hyperswitch/pull/2385)) ([`e86c032`](https://github.com/juspay/hyperswitch/commit/e86c0325f51d06ecfcbc810f3320c97850716825))
    - **router:** Add support for payment_type field in payment intent ([#2448](https://github.com/juspay/hyperswitch/pull/2448)) ([`f116728`](https://github.com/juspay/hyperswitch/commit/f116728d1cba458a1e184c2fdf5a1cc012430c35))

    ### Bug Fixes

    - **connector:** Use enum to deserialize latest_charge in stripe psync response ([#2444](https://github.com/juspay/hyperswitch/pull/2444)) ([`05ee47a`](https://github.com/juspay/hyperswitch/commit/05ee47a6e90bd68a0faa6dcc381c48a1f0f274d8))
    - **payments:** Move validations of payment intent before attempt ([#2440](https://github.com/juspay/hyperswitch/pull/2440)) ([`7fb5c04`](https://github.com/juspay/hyperswitch/commit/7fb5c044bc9611e375b271065859308792773f30))
    - Return appropriate error message during webhook call for invalid merchant_secret adyen ([#2450](https://github.com/juspay/hyperswitch/pull/2450)) ([`db7f9fa`](https://github.com/juspay/hyperswitch/commit/db7f9fa801d2bacf3abda6cc447220d254f56382))

    ### Testing

    - **postman:** Update postman collection files ([`a9221d4`](https://github.com/juspay/hyperswitch/commit/a9221d44d192a3baadf9978d517e8153ef7a739a))

    **Full Changelog:** [`v1.50.0...v1.51.0`](https://github.com/juspay/hyperswitch/compare/v1.50.0...v1.51.0)

    - - -


    ## 1.50.0 (2023-10-04)

    ### Features

    - **connector:**
      - [Stax] Use connector_response_reference_id as reference to merchant ([#2415](https://github.com/juspay/hyperswitch/pull/2415)) ([`099b241`](https://github.com/juspay/hyperswitch/commit/099b241096c69879a805ca81b1c5a23118e10b52))
      - [PowerTranz] Use connector_response_reference_id as reference to merchant ([#2413](https://github.com/juspay/hyperswitch/pull/2413)) ([`0d703c7`](https://github.com/juspay/hyperswitch/commit/0d703c7ab85c68f433767a70a0feabe8daa4f24c))
      - [Payeezy] Use connector_response_reference_id as reference to merchant ([#2410](https://github.com/juspay/hyperswitch/pull/2410)) ([`485c09d`](https://github.com/juspay/hyperswitch/commit/485c09d16743d73b446d6313f0ee6462c8a77028))
      - [Square] Use reference_id as reference to merchant ([#2434](https://github.com/juspay/hyperswitch/pull/2434)) ([`591c9b7`](https://github.com/juspay/hyperswitch/commit/591c9b70d9b7f8df5d7f5d2cb2d19cfaa1457fe1))
    - **router:**
      - Remove unnecessary lookups in refund and payment_attempt kv flow ([#2425](https://github.com/juspay/hyperswitch/pull/2425)) ([`f720aec`](https://github.com/juspay/hyperswitch/commit/f720aecf1fb676cec71e636b877a46f9791d713a))
      - [OpenNode] response reference id ([#2416](https://github.com/juspay/hyperswitch/pull/2416)) ([`3bfea72`](https://github.com/juspay/hyperswitch/commit/3bfea72df34f4ce0ffdb61e49960fdf09b96eb5a))
      - Add profile id and extra filters in lists ([#2379](https://github.com/juspay/hyperswitch/pull/2379)) ([`ab2cde7`](https://github.com/juspay/hyperswitch/commit/ab2cde799371a66eb045cf8b20431b3b108dac44))

    ### Bug Fixes

    - **CI:** Fix spell check for CI pull request ([#2439](https://github.com/juspay/hyperswitch/pull/2439)) ([`04f2e11`](https://github.com/juspay/hyperswitch/commit/04f2e11cd4f3fd327408cddec36ccf4fb486b935))
    - **router:** Merchant account delete does not delete the merchant_key_store ([#2367](https://github.com/juspay/hyperswitch/pull/2367)) ([`35f7ce0`](https://github.com/juspay/hyperswitch/commit/35f7ce0f4d9e16184e2bb94360d3ced60f8b5af2))

    ### Refactors

    - **config:** Update payment method filter for apple pay ([#2423](https://github.com/juspay/hyperswitch/pull/2423)) ([`d177b4d`](https://github.com/juspay/hyperswitch/commit/d177b4d94f08fb8ef44b5c07ec1bdc771baa016d))
    - **payment_methods:** Add `requires_cvv` config while creating merchant account ([#2431](https://github.com/juspay/hyperswitch/pull/2431)) ([`6e5ab0d`](https://github.com/juspay/hyperswitch/commit/6e5ab0d121d6345f18bccc7f917064caa2737475))
    - **webhook:** Add a function to retrieve payment_id ([#2447](https://github.com/juspay/hyperswitch/pull/2447)) ([`409913f`](https://github.com/juspay/hyperswitch/commit/409913fd75076e4ee1dac1e4dc5b2f164528bc23))

    ### Build System / Dependencies

    - **deps:** Address `undeclared crate or module` errors on Windows for `scheduler` crate ([#2411](https://github.com/juspay/hyperswitch/pull/2411)) ([`4225238`](https://github.com/juspay/hyperswitch/commit/422523848e6516643a6beef1ba15af4e967f0c5b))

    **Full Changelog:** [`v1.49.0...v1.50.0`](https://github.com/juspay/hyperswitch/compare/v1.49.0...v1.50.0)

    - - -


    ## 1.49.0 (2023-10-03)

    ### Features

    - **connector:** [Nuvei] Add order id as the reference id ([#2408](https://github.com/juspay/hyperswitch/pull/2408)) ([`d5d876b`](https://github.com/juspay/hyperswitch/commit/d5d876b821187648994ea53c358467966e99cd23))
    - **pm_auth:** Added pm_auth_config to merchant_connector_account ([#2183](https://github.com/juspay/hyperswitch/pull/2183)) ([`abfdea2`](https://github.com/juspay/hyperswitch/commit/abfdea20b06a8804ec83fe9431f9a034465bb924))
    - **pm_list:** [Trustpay] add bank_redirect -  blik pm type required field info for trustpay ([#2390](https://github.com/juspay/hyperswitch/pull/2390)) ([`d81762a`](https://github.com/juspay/hyperswitch/commit/d81762a8b430ca1f197d7dabb26167f54e235735))
    - **webhooks:** Webhooks effect tracker ([#2260](https://github.com/juspay/hyperswitch/pull/2260)) ([`5048d24`](https://github.com/juspay/hyperswitch/commit/5048d248e59b8ecaf8585ffd5134953cf62e74ef))

    ### Bug Fixes

    - **CI:** Fix spell check for CI pull request  ([#2420](https://github.com/juspay/hyperswitch/pull/2420)) ([`3b10b1c`](https://github.com/juspay/hyperswitch/commit/3b10b1c473209e36183271a81eb9014a8f5cddfa))
    - **cards:** Allow card cvc 000 ([#2387](https://github.com/juspay/hyperswitch/pull/2387)) ([`f0dc374`](https://github.com/juspay/hyperswitch/commit/f0dc37438b7a6c4b25acff941aca13545217d307))
    - **configs:** Add `lock_settings` in `docker_compose.toml` ([#2396](https://github.com/juspay/hyperswitch/pull/2396)) ([`14fec5c`](https://github.com/juspay/hyperswitch/commit/14fec5c3980397079fe8861caca589157a8ba242))
    - **connector:** [noon] add connector_auth params and update description ([#2429](https://github.com/juspay/hyperswitch/pull/2429)) ([`0aa6b30`](https://github.com/juspay/hyperswitch/commit/0aa6b30d2c9056e9a21a88bdc064daa7e8659bd6))
    - **payment_methods:** prioritized `apple_pay_combined` deserialization over `apple_pay` ([#2393](https://github.com/juspay/hyperswitch/pull/2393)) ([`f12ce9c`](https://github.com/juspay/hyperswitch/commit/f12ce9c72d94674e0ae0ec7f1c91d8b5c43481e8))
    - Temp support for ach gocardless with existing api contracts ([#2395](https://github.com/juspay/hyperswitch/pull/2395)) ([`d43fbcc`](https://github.com/juspay/hyperswitch/commit/d43fbccd54011d0de6f8d39adbd264d9ada77e7e))

    ### Refactors

    - **connector:**
      - [Klarna] Expand wildcard match arms ([#2403](https://github.com/juspay/hyperswitch/pull/2403)) ([`89cb63b`](https://github.com/juspay/hyperswitch/commit/89cb63be3328010d26b5f6322449fc50e80593e4))
      - [Klarna] Enhance currency Mapping with ConnectorCurrencyCommon Trait ([#2414](https://github.com/juspay/hyperswitch/pull/2414)) ([`ee7efd0`](https://github.com/juspay/hyperswitch/commit/ee7efd05adbe14bab1d2862d7ab2bf244c226433))
      - [Cryptopay] Update PSync with connector_request_reference_id  ([#2388](https://github.com/juspay/hyperswitch/pull/2388)) ([`3680541`](https://github.com/juspay/hyperswitch/commit/36805411772da00719a716d05c650f10ca990d49))
    - **router:** Add `#[cfg(not(feature = "kms"))]` feature flag to test the simplified apple pay flow locally ([#2200](https://github.com/juspay/hyperswitch/pull/2200)) ([`e5ad9c5`](https://github.com/juspay/hyperswitch/commit/e5ad9c5c35f386486afedded90c46793196a17d0))

    ### Testing

    - **postman:** Update postman collection files ([`34099ba`](https://github.com/juspay/hyperswitch/commit/34099baa2ec2f73598c4433b0a481dec3fde8c05))

    ### Documentation

    - **README:**
      - Include Hacktoberfest information ([#2386](https://github.com/juspay/hyperswitch/pull/2386)) ([`e8eb929`](https://github.com/juspay/hyperswitch/commit/e8eb929d5b4d99d09940532e3abbca2b811bcf36))
      - Fixed TOC links ([#2402](https://github.com/juspay/hyperswitch/pull/2402)) ([`c81d8e9`](https://github.com/juspay/hyperswitch/commit/c81d8e9a180da8f71d156d39c9f85847f6d7a572))

    ### Miscellaneous Tasks

    - **deps:** Bump webpki from 0.22.0 to 0.22.2 ([#2419](https://github.com/juspay/hyperswitch/pull/2419)) ([`6bf0e75`](https://github.com/juspay/hyperswitch/commit/6bf0e75b69608ea07fd7601906982a19cdc81400))

    **Full Changelog:** [`v1.48.1+hotfix.1...v1.49.0`](https://github.com/juspay/hyperswitch/compare/v1.48.1+hotfix.1...v1.49.0)

    - - -


    ## 1.48.1 (2023-09-28)

    ### Bug Fixes

    - [Gocardless] add region in customer create request based on country ([#2389](https://github.com/juspay/hyperswitch/pull/2389)) ([`c293cb6`](https://github.com/juspay/hyperswitch/commit/c293cb6ffafd61702ee16233cf06a206c0093f3d))

    **Full Changelog:** [`v1.48.0...v1.48.1`](https://github.com/juspay/hyperswitch/compare/v1.48.0...v1.48.1)

    - - -


    ## 1.48.0 (2023-09-27)

    ### Features

    - **core:** Create surcharge_metadata field in payment attempt ([#2371](https://github.com/juspay/hyperswitch/pull/2371)) ([`934542e`](https://github.com/juspay/hyperswitch/commit/934542e92625620d71b940e99d4ae58239a60ce4))
    - **router:**
      - Append payment_id to secondary key for payment_intent in kv flow ([#2378](https://github.com/juspay/hyperswitch/pull/2378)) ([`ee91552`](https://github.com/juspay/hyperswitch/commit/ee9155208d6c0a3d5d5422b469bfa7a80671cd86))
      - Pass customers address in retrieve customer ([#2376](https://github.com/juspay/hyperswitch/pull/2376)) ([`f6cfb05`](https://github.com/juspay/hyperswitch/commit/f6cfb05fa042b5f68a5cb6fa17090d2beb91303b))

    ### Bug Fixes

    - **db:** Merchant_account cache invalidation based on publishable_key ([#2365](https://github.com/juspay/hyperswitch/pull/2365)) ([`22a8291`](https://github.com/juspay/hyperswitch/commit/22a8291ea66bc564218af0a4a2695eef70ce6790))
    - **router:** Allow address updates in payments update flow ([#2375](https://github.com/juspay/hyperswitch/pull/2375)) ([`0d3dd00`](https://github.com/juspay/hyperswitch/commit/0d3dd0033c5ec9eabc967cb1872f0699546aba89))

    ### Refactors

    - **connector:**
      - [Payme]Enhance currency Mapping with ConnectorCurrencyCommon Trait  ([#2194](https://github.com/juspay/hyperswitch/pull/2194)) ([`77b51d5`](https://github.com/juspay/hyperswitch/commit/77b51d5cbe531526f2f20a0ee4a78e95b00d87de))
      - [bluesnap] add refund status and webhooks ([#2374](https://github.com/juspay/hyperswitch/pull/2374)) ([`fe43458`](https://github.com/juspay/hyperswitch/commit/fe43458ddc0fa1cc31f2b326056baea54af57136))
    - Insert requires cvv config to configs table if not found in db ([#2208](https://github.com/juspay/hyperswitch/pull/2208)) ([`68b3310`](https://github.com/juspay/hyperswitch/commit/68b3310993c5196f9f9038f27c5cd7dad82b24d1))

    **Full Changelog:** [`v1.47.0...v1.48.0`](https://github.com/juspay/hyperswitch/compare/v1.47.0...v1.48.0)

    - - -


    ## 1.47.0 (2023-09-27)

    ### Features

    - **connector_response:** Kv for connector response table ([#2207](https://github.com/juspay/hyperswitch/pull/2207)) ([`cefa291`](https://github.com/juspay/hyperswitch/commit/cefa291c00c7d4a40213cc6c6087946c031ae0b5))

    ### Bug Fixes

    - **connector:**
      - Make webhook source verification mandatory for adyen ([#2360](https://github.com/juspay/hyperswitch/pull/2360)) ([`3d7e22a`](https://github.com/juspay/hyperswitch/commit/3d7e22a4f106e4d7c4224fecf455e2f2aa417cd0))
      - [noon] Create psync struct from webhook resource object ([#2370](https://github.com/juspay/hyperswitch/pull/2370)) ([`f12a438`](https://github.com/juspay/hyperswitch/commit/f12a43817787faedfdca26ec7f956bf5734c5ee3))
    - **merchant_connector_account:** Use appropriate key when redacting ([#2363](https://github.com/juspay/hyperswitch/pull/2363)) ([`54645cd`](https://github.com/juspay/hyperswitch/commit/54645cdbf422d59b8751fa9dbb9a61cd72770b0a))
    - **router:**
      - Fix refunds and payment_attempts kv flow ([#2362](https://github.com/juspay/hyperswitch/pull/2362)) ([`ef0df71`](https://github.com/juspay/hyperswitch/commit/ef0df7195d9a7c7cd384f6df9eb5a8b886914e2d))
      - Removed dynamic error messages ([#2168](https://github.com/juspay/hyperswitch/pull/2168)) ([`9c9d453`](https://github.com/juspay/hyperswitch/commit/9c9d45353596edb5dc5c19e1a6d8d42d05bae78c))
    - [stripe] Add customer balance in StripePaymentMethodDetailsResponse ([#2369](https://github.com/juspay/hyperswitch/pull/2369)) ([`67a3e8f`](https://github.com/juspay/hyperswitch/commit/67a3e8f534aa98a7331cb20a3877579efed6a348))

    ### Refactors

    - **connector:**
      - [bluesnap]Enhance currency Mapping with ConnectorCurrencyCommon Trait ([#2193](https://github.com/juspay/hyperswitch/pull/2193)) ([`6db60b8`](https://github.com/juspay/hyperswitch/commit/6db60b8cd4319d0246c72494fa65082108ffd06e))
      - [Zen] Enhance currency Mapping with ConnectorCurrencyCommon Trait ([#2196](https://github.com/juspay/hyperswitch/pull/2196)) ([`7fd79e0`](https://github.com/juspay/hyperswitch/commit/7fd79e05d54e6f135fbd4151d6638060660e6c85))
      - [Paypal]Enhance currency Mapping with ConnectorCurrencyCommon Trait  ([#2191](https://github.com/juspay/hyperswitch/pull/2191)) ([`2e97869`](https://github.com/juspay/hyperswitch/commit/2e97869fa0e284e1ab3bcaf940b627acf47d98e3))
      - [Cryptopay]Enhance currency Mapping with ConnectorCurrencyCommon Trait ([#2195](https://github.com/juspay/hyperswitch/pull/2195)) ([`d8c3845`](https://github.com/juspay/hyperswitch/commit/d8c384573e1f31ed4c8fd252b8d753a04a4df75d))

    ### Miscellaneous Tasks

    - **config:** [Multisafepay] Add configs for card mandates for Multisafepay ([#2372](https://github.com/juspay/hyperswitch/pull/2372)) ([`af3b9e9`](https://github.com/juspay/hyperswitch/commit/af3b9e90dbc733b436f84e47ebd62ef0b467c39c))

    **Full Changelog:** [`v1.46.0...v1.47.0`](https://github.com/juspay/hyperswitch/compare/v1.46.0...v1.47.0)

    - - -


    ## 1.46.0 (2023-09-25)

    ### Features

    - **payment_attempt:** Add kv for find last successful attempt ([#2206](https://github.com/juspay/hyperswitch/pull/2206)) ([`d3157f0`](https://github.com/juspay/hyperswitch/commit/d3157f0bd6a0246c28182c88335d95ed6ae298a9))
    - **payments:** Add api locking for payments core ([#1898](https://github.com/juspay/hyperswitch/pull/1898)) ([`5d66156`](https://github.com/juspay/hyperswitch/commit/5d661561322a21f792e2cdb2ae8c30de96ce7d02))

    ### Bug Fixes

    - **compatibility:** Update BillingDetails mappings in SCL ([#1926](https://github.com/juspay/hyperswitch/pull/1926)) ([`a48f986`](https://github.com/juspay/hyperswitch/commit/a48f9865bcd29d5c3fc5c380dde34b11c6bb254f))
    - **connector:** [stripe] use display impl for expiry date  ([#2359](https://github.com/juspay/hyperswitch/pull/2359)) ([`35622af`](https://github.com/juspay/hyperswitch/commit/35622aff7a042764729565db1ed5aca2257603ba))
    - **drainer:** Ignore errors in case the stream is empty ([#2261](https://github.com/juspay/hyperswitch/pull/2261)) ([`53de86f`](https://github.com/juspay/hyperswitch/commit/53de86f60d14981087626e1a2a5856089b6f3899))
    - Add health metric to drainer ([#2217](https://github.com/juspay/hyperswitch/pull/2217)) ([`4e8471b`](https://github.com/juspay/hyperswitch/commit/4e8471be501806ceeb96c7683be00600c3c1a0d2))

    ### Refactors

    - Enable `logs` feature flag in router crate ([#2358](https://github.com/juspay/hyperswitch/pull/2358)) ([`e4af381`](https://github.com/juspay/hyperswitch/commit/e4af3812d55689aefb5bb8ed6f12a6c9c0643a51))

    ### Testing

    - **postman:** Update postman collection files ([`d7affab`](https://github.com/juspay/hyperswitch/commit/d7affab455adf1eeccaca3005797a81e51c902ac))

    **Full Changelog:** [`v1.45.0...v1.46.0`](https://github.com/juspay/hyperswitch/compare/v1.45.0...v1.46.0)

    - - -


    ## 1.45.0 (2023-09-22)

    ### Features

    - **router:** Add mertics to apple pay flow ([#2235](https://github.com/juspay/hyperswitch/pull/2235)) ([`b9f25c4`](https://github.com/juspay/hyperswitch/commit/b9f25c4a4ee540fe13257df193f9f921233156a6))

    ### Bug Fixes

    - **router:** Fix attempt status for technical failures in psync flow ([#2252](https://github.com/juspay/hyperswitch/pull/2252)) ([`2b8bd03`](https://github.com/juspay/hyperswitch/commit/2b8bd03a7243c887c17be658f1d9e9faa462b0c7))

    ### Refactors

    - **connector:**
      - [Checkout]Enhance currency Mapping with ConnectorCurrencyCommon Trait ([#2192](https://github.com/juspay/hyperswitch/pull/2192)) ([`aa8d0dd`](https://github.com/juspay/hyperswitch/commit/aa8d0ddda17adb7c87cea9ff5fbf83b8d0e7fde1))
      - [Trustpay] Enhance currency Mapping with ConnectorCurrencyCommon Trait ([#2197](https://github.com/juspay/hyperswitch/pull/2197)) ([`583b9aa`](https://github.com/juspay/hyperswitch/commit/583b9aa33b15f09cf8ea61b4e6dee002fb562e03))
    - **core:** Eliminate business profile database queries in payments confirm flow ([#2190](https://github.com/juspay/hyperswitch/pull/2190)) ([`90e4392`](https://github.com/juspay/hyperswitch/commit/90e43929a0c05e39feac4f13d75b2eea60b858a0))

    **Full Changelog:** [`v1.44.0...v1.45.0`](https://github.com/juspay/hyperswitch/compare/v1.44.0...v1.45.0)

    - - -


    ## 1.44.0 (2023-09-22)

    ### Features

    - **connector:** [Trustpay] Add descriptor for card payment method for trustpay ([#2256](https://github.com/juspay/hyperswitch/pull/2256)) ([`b9ddc4f`](https://github.com/juspay/hyperswitch/commit/b9ddc4fb69396a2ced73bc24e3d947eb8c4e091a))
    - **db:** Add find_config_by_key_unwrap_or ([#2214](https://github.com/juspay/hyperswitch/pull/2214)) ([`2bd2526`](https://github.com/juspay/hyperswitch/commit/2bd25261b43b8b89ff2042e944ffa6008cc77c8f))

    ### Bug Fixes

    - **connector:** Fix dispute webhook failure bug in checkout during get_webhook_resource_object ([#2257](https://github.com/juspay/hyperswitch/pull/2257)) ([`1d73be0`](https://github.com/juspay/hyperswitch/commit/1d73be08fb3a747ab22ee42eed9f396d78a949dd))

    ### Refactors

    - **connector:**
      - [Stripe] refactor stripe payment method not implemented errors ([#1927](https://github.com/juspay/hyperswitch/pull/1927)) ([`417f793`](https://github.com/juspay/hyperswitch/commit/417f793284a11218fc520319ed717759f60e3934))
      - [Adyen] Enhance currency Mapping with ConnectorCurrencyCommon Trait  ([#2209](https://github.com/juspay/hyperswitch/pull/2209)) ([`3d18f20`](https://github.com/juspay/hyperswitch/commit/3d18f2062e5d7c14fc5725547eeaf80d7b2a86da))

    ### Miscellaneous Tasks

    - **CODEOWNERS:** Update CODEOWNERS ([#2254](https://github.com/juspay/hyperswitch/pull/2254)) ([`7af4c92`](https://github.com/juspay/hyperswitch/commit/7af4c92ef25b8e2b71a6839fcd80925c09897779))
    - **deps:** Bump phonenumber from 0.3.2+8.13.9 to 0.3.3+8.13.9 ([#2255](https://github.com/juspay/hyperswitch/pull/2255)) ([`8f3721d`](https://github.com/juspay/hyperswitch/commit/8f3721d16b27962923bff0968f7074cef2471e36))

    **Full Changelog:** [`v1.43.1...v1.44.0`](https://github.com/juspay/hyperswitch/compare/v1.43.1...v1.44.0)

    - - -


    ## 1.43.1 (2023-09-21)

    ### Bug Fixes

    - Add flow_name setter ([#2234](https://github.com/juspay/hyperswitch/pull/2234)) ([`30e2c90`](https://github.com/juspay/hyperswitch/commit/30e2c906724a610ec5072e3a103eb3ce21a5ef0e))

    **Full Changelog:** [`v1.43.0...v1.43.1`](https://github.com/juspay/hyperswitch/compare/v1.43.0...v1.43.1)

    - - -


    ## 1.43.0 (2023-09-21)

    ### Features

    - **connector:** [Gocardless] add support for Ach, Sepa, Becs payment methods ([#2180](https://github.com/juspay/hyperswitch/pull/2180)) ([`3efce90`](https://github.com/juspay/hyperswitch/commit/3efce9013d0572be9162216f134830ccf7e04905))
    - **core:** Add support for webhook additional source verification call for paypal ([#2058](https://github.com/juspay/hyperswitch/pull/2058)) ([`2a9e09d`](https://github.com/juspay/hyperswitch/commit/2a9e09d812ca11960cabab289b32be162bc5cfc9))
    - **db:** Enable caching for merchant_account fetch using publishable key ([#2186](https://github.com/juspay/hyperswitch/pull/2186)) ([`eb10aca`](https://github.com/juspay/hyperswitch/commit/eb10aca6313b3b3cb1763ca20b54b11c31b93b26))
    - **router:** Add kv implementation for address for payment flows ([#2177](https://github.com/juspay/hyperswitch/pull/2177)) ([`afff3e1`](https://github.com/juspay/hyperswitch/commit/afff3e1789b99a586f0b7ff6c5880743a996f565))

    ### Bug Fixes

    - **connector:**
      - [trustpay] add missing error_codes ([#2204](https://github.com/juspay/hyperswitch/pull/2204)) ([`8098322`](https://github.com/juspay/hyperswitch/commit/809832213eb0f961853bf0db8b2830a606f9ed37))
      - [Trustpay] Add missing error code ([#2212](https://github.com/juspay/hyperswitch/pull/2212)) ([`e4b3cc7`](https://github.com/juspay/hyperswitch/commit/e4b3cc790580f04012dba3d926e170dce4cec5d1))
    - **env:** Remove EUR currency from clearpay_afterpay in stripe connector ([#2213](https://github.com/juspay/hyperswitch/pull/2213)) ([`9009ab2`](https://github.com/juspay/hyperswitch/commit/9009ab2896ef9c8df9045c288af5ad601ec7fcd7))

    ### Refactors

    - **router:** Refactor customer <> address in customers and payments flow ([#2158](https://github.com/juspay/hyperswitch/pull/2158)) ([`8ee2ce1`](https://github.com/juspay/hyperswitch/commit/8ee2ce1f4fc416ac33a5e4def22ce2debdc6a6f9))

    **Full Changelog:** [`v1.42.0...v1.43.0`](https://github.com/juspay/hyperswitch/compare/v1.42.0...v1.43.0)

    - - -


    ## 1.42.0 (2023-09-20)

    ### Features

    - **connector:** [Trustpay] Add Blik payment method for trustpay ([#2152](https://github.com/juspay/hyperswitch/pull/2152)) ([`d0eec9e`](https://github.com/juspay/hyperswitch/commit/d0eec9e357a2ef6074c9a02239337378fbf8412a))

    ### Bug Fixes

    - **connector:** [SQUARE] Fix payments cancel issue ([#2162](https://github.com/juspay/hyperswitch/pull/2162)) ([`081545e`](https://github.com/juspay/hyperswitch/commit/081545e9121861ac7c1867a5e3f4c59ef848eeeb))

    ### Refactors

    - **configs:** Make TOML file an optional source of application configuration ([#2185](https://github.com/juspay/hyperswitch/pull/2185)) ([`69fbebf`](https://github.com/juspay/hyperswitch/commit/69fbebf4630047ac33defc010811d1b4c4c9051a))
    - **core:** Error thrown for wrong mca in applepay_verification flow change from 5xx to 4xx ([#2189](https://github.com/juspay/hyperswitch/pull/2189)) ([`656e710`](https://github.com/juspay/hyperswitch/commit/656e7106b44ba27a9058191259596e0a399aa20b))

    **Full Changelog:** [`v1.41.0...v1.42.0`](https://github.com/juspay/hyperswitch/compare/v1.41.0...v1.42.0)

    - - -


    ## 1.41.0 (2023-09-20)

    ### Features

    - **connector:** [Gocardless] add boilerplate code ([#2179](https://github.com/juspay/hyperswitch/pull/2179)) ([`6a64180`](https://github.com/juspay/hyperswitch/commit/6a641806172e0fad6425a19baffda97ff7eb8c96))

    ### Bug Fixes

    - **core:** Add merchant_id to gpay merchant info ([#2170](https://github.com/juspay/hyperswitch/pull/2170)) ([`5643ecf`](https://github.com/juspay/hyperswitch/commit/5643ecf07521abdebd162ed0c0fe389ae7942a17))
    - Remove x-request-id from headers before connector calls ([#2182](https://github.com/juspay/hyperswitch/pull/2182)) ([`680505f`](https://github.com/juspay/hyperswitch/commit/680505f21ad0c809f007773517dd444b211f4c99))
    - Handle 5xx during multiple capture call ([#2148](https://github.com/juspay/hyperswitch/pull/2148)) ([`e8d948e`](https://github.com/juspay/hyperswitch/commit/e8d948efeed3e9e4475ebc01d2be2ce3addd92a6))

    ### Refactors

    - **connector:** [Adyen] psync validation check for adyen ([#2160](https://github.com/juspay/hyperswitch/pull/2160)) ([`386e820`](https://github.com/juspay/hyperswitch/commit/386e820fb85acfadd234670c6da2622bd2e38460))
    - **core:** Add additional parameters in AppState and refactor AppState references ([#2123](https://github.com/juspay/hyperswitch/pull/2123)) ([`a0a8ef2`](https://github.com/juspay/hyperswitch/commit/a0a8ef27b319bdef01e72995081c7664c1e99127))
    - **router:** Use billing address for payment method list filters as opposed to shipping address ([#2176](https://github.com/juspay/hyperswitch/pull/2176)) ([`b3d5d3b`](https://github.com/juspay/hyperswitch/commit/b3d5d3b3dcdde7480df8493714986b5e737e97e0))
    - Remove redundant validate_capture_method call ([#2171](https://github.com/juspay/hyperswitch/pull/2171)) ([`1ea823b`](https://github.com/juspay/hyperswitch/commit/1ea823b0488c783315da156a474dedce2556d334))

    **Full Changelog:** [`v1.40.1+hotfix.1...v1.41.0`](https://github.com/juspay/hyperswitch/compare/v1.40.1+hotfix.1...v1.41.0)

    - - -


    ## 1.40.1 (2023-09-18)

    ### Refactors

    - **connector:** [Bluesnap] Enahnce 3ds Flow ([#2115](https://github.com/juspay/hyperswitch/pull/2115)) ([`272f5e4`](https://github.com/juspay/hyperswitch/commit/272f5e4c1f34710fe13b1ede1b938d2f0b76e251))
    - Set merchant_id as `MERCHANT_ID_NOT_FOUND` for traces and metrics if not found ([#2156](https://github.com/juspay/hyperswitch/pull/2156)) ([`d40fae8`](https://github.com/juspay/hyperswitch/commit/d40fae87feb509718059ab2d72539f37f26a8251))

    **Full Changelog:** [`v1.40.0...v1.40.1`](https://github.com/juspay/hyperswitch/compare/v1.40.0...v1.40.1)

    - - -


    ## 1.40.0 (2023-09-15)

    ### Features

    - **connector:** (adyen) add support for multiple partial capture adyen ([#2102](https://github.com/juspay/hyperswitch/pull/2102)) ([`9668a74`](https://github.com/juspay/hyperswitch/commit/9668a74a79daf7b15069d5c21ebc43749e705558))
    - **pm_auth:** Add plaid to connector list ([#2166](https://github.com/juspay/hyperswitch/pull/2166)) ([`0bc99ad`](https://github.com/juspay/hyperswitch/commit/0bc99ad327d1857dba67504ff12088e4bdd7102e))

    ### Bug Fixes

    - **router:** Move `get_connector_tokenization_action_when_confirm_true` above `call_create_connector_customer_if_required` ([#2167](https://github.com/juspay/hyperswitch/pull/2167)) ([`15418a6`](https://github.com/juspay/hyperswitch/commit/15418a6d0f9429a69eaa179e5f7d9d798bf505e6))
    - Make amount_capturable zero when payment intent status is processing ([#2163](https://github.com/juspay/hyperswitch/pull/2163)) ([`d848b55`](https://github.com/juspay/hyperswitch/commit/d848b55a119e426f809b46bd9d30b356ecd7ba2a))

    ### Refactors

    - **router:** Add camel_case for the applepay request ([#2172](https://github.com/juspay/hyperswitch/pull/2172)) ([`4c36fcb`](https://github.com/juspay/hyperswitch/commit/4c36fcb34f086bb727c87fc5ede6e3bea138685a))

    ### Testing

    - **postman:** Update postman collection files ([`b30d82d`](https://github.com/juspay/hyperswitch/commit/b30d82d9398ced95847eecdc22403febc32f3505))

    **Full Changelog:** [`v1.39.2...v1.40.0`](https://github.com/juspay/hyperswitch/compare/v1.39.2...v1.40.0)

    - - -


    ## 1.39.2 (2023-09-14)

    ### Bug Fixes

    - **router:** Add scoped error enum for customer error ([#1988](https://github.com/juspay/hyperswitch/pull/1988)) ([`5c5058d`](https://github.com/juspay/hyperswitch/commit/5c5058de8765f2a0818115ee584a39981395213a))

    ### Refactors

    - **connector:** [BraintreeGraphQl] Enhance currency Mapping with ConnectorCurrencyCommon Trait  ([#2143](https://github.com/juspay/hyperswitch/pull/2143)) ([`05696d3`](https://github.com/juspay/hyperswitch/commit/05696d326f87a08919f177e67bfa54e09fba5147))
    - **router:**
      - Changed the storage of applepay_verified_domains from business_profile to merchant_connector_account table ([#2147](https://github.com/juspay/hyperswitch/pull/2147)) ([`caa385a`](https://github.com/juspay/hyperswitch/commit/caa385a5a6635a4bf7910e2d56e2660069c146a9))
      - Get route for applepay_verified_domains ([#2157](https://github.com/juspay/hyperswitch/pull/2157)) ([`fb1760b`](https://github.com/juspay/hyperswitch/commit/fb1760b1d8b5ca55dbaa93ab18f9fba9e7930e17))
    - Add instrument to trackers for payment_confirm ([#2164](https://github.com/juspay/hyperswitch/pull/2164)) ([`c804954`](https://github.com/juspay/hyperswitch/commit/c8049542dea9b129ce81e6e550b9267642b8d027))

    ### Testing

    - **postman:** Update postman collection files ([`089bb64`](https://github.com/juspay/hyperswitch/commit/089bb64e21451fa095acb93792ea745e1275d74e))

    **Full Changelog:** [`v1.39.1+hotfix.1...v1.39.2`](https://github.com/juspay/hyperswitch/compare/v1.39.1+hotfix.1...v1.39.2)

    - - -


    ## 1.39.1 (2023-09-13)

    ### Bug Fixes

    - **connector:** [SQUARE] Add uri authority in Webhooks ([#2138](https://github.com/juspay/hyperswitch/pull/2138)) ([`daa0759`](https://github.com/juspay/hyperswitch/commit/daa07598922d1bf0c61e2482752570153f62cdb1))
    - **core:** Update amount_capturable in update trackers ([#2142](https://github.com/juspay/hyperswitch/pull/2142)) ([`bed8326`](https://github.com/juspay/hyperswitch/commit/bed8326597febd89bb4c961c9085a78b09f99f49))
    - Payment status fix in trustpay for 3ds and wallets ([#2146](https://github.com/juspay/hyperswitch/pull/2146)) ([`9b92d04`](https://github.com/juspay/hyperswitch/commit/9b92d046de9fb794d67163582af4360d5e558037))

    ### Refactors

    - **connector:** [Stripe] add support for more incoming woocommerce Stripe disputes webhooks ([#2150](https://github.com/juspay/hyperswitch/pull/2150)) ([`e023eb8`](https://github.com/juspay/hyperswitch/commit/e023eb800d17ffc24cfaf2335d2560fb0f529e50))
    - **masking:** Move masking implementations to masking crate ([#2135](https://github.com/juspay/hyperswitch/pull/2135)) ([`9d74a75`](https://github.com/juspay/hyperswitch/commit/9d74a75ddbd49e7ef7fa0cbfab1528da342dd5a0))
    - Move `Request` and `RequestBuilder` structs to common_utils crate ([#2145](https://github.com/juspay/hyperswitch/pull/2145)) ([`21be67a`](https://github.com/juspay/hyperswitch/commit/21be67ada07e41f3ff8824f608a82b606201892a))

    ### Testing

    - **postman:** Update postman collection files ([`be397de`](https://github.com/juspay/hyperswitch/commit/be397dec48d143d9180f316659aa033f668c1a55))

    **Full Changelog:** [`v1.39.0...v1.39.1`](https://github.com/juspay/hyperswitch/compare/v1.39.0...v1.39.1)

    - - -


    ## 1.39.0 (2023-09-12)

    ### Features

    - **connector:**
      - [Braintree] implement 3DS card payment for braintree ([#2095](https://github.com/juspay/hyperswitch/pull/2095)) ([`d63cbbd`](https://github.com/juspay/hyperswitch/commit/d63cbbd4ad8eb2438967b1538da363b67964750f))
      - [payme] Add support for dispute webhooks ([#2089](https://github.com/juspay/hyperswitch/pull/2089)) ([`341163b`](https://github.com/juspay/hyperswitch/commit/341163b4814fe9671d5d40305168046c065f4908))
    - **core:**
      - Enable payments void for multiple partial capture ([#2048](https://github.com/juspay/hyperswitch/pull/2048)) ([`a81bfe2`](https://github.com/juspay/hyperswitch/commit/a81bfe28edd7fc543af19b9546cbe30492716c97))
      - Add runtime flag to disable dummy connector ([#2100](https://github.com/juspay/hyperswitch/pull/2100)) ([`d52fe7f`](https://github.com/juspay/hyperswitch/commit/d52fe7f1403b6b1fc71b275b6bc22345dd6d1e8a))
    - **db:** Implement `ReverseLookupInterface` for `MockDb` ([#2119](https://github.com/juspay/hyperswitch/pull/2119)) ([`f2df2d6`](https://github.com/juspay/hyperswitch/commit/f2df2d6d01a1bf71541bf18d2ecf6dc1e667942f))
    - **router:**
      - Disable temp locker call for connector-payment_method flow based on env ([#2120](https://github.com/juspay/hyperswitch/pull/2120)) ([`fea5c4d`](https://github.com/juspay/hyperswitch/commit/fea5c4d8c186f3b4e732f7d503e49724c3e4d308))
      - New get route for derivation of verified applepay domain ([#2121](https://github.com/juspay/hyperswitch/pull/2121)) ([`177d8e5`](https://github.com/juspay/hyperswitch/commit/177d8e5237241d7deea5fd911749ea0a934abcb0))
      - Added new webhook URL to support `merchant_connector_id` ([#2006](https://github.com/juspay/hyperswitch/pull/2006)) ([`82b36e8`](https://github.com/juspay/hyperswitch/commit/82b36e885d346a9bcc50968f0c1f8ba85b9d3378))

    ### Bug Fixes

    - **connector:** [SQUARE] Throw Error for Partial Capture of Payments ([#2133](https://github.com/juspay/hyperswitch/pull/2133)) ([`cc8847c`](https://github.com/juspay/hyperswitch/commit/cc8847cce0022b375626b3c86e5b07048833be71))
    - **core:** [Bluesnap] Add secondary_base_url for script ([#2124](https://github.com/juspay/hyperswitch/pull/2124)) ([`1407049`](https://github.com/juspay/hyperswitch/commit/1407049b56bd07237b2f9ad6c12a92837995abfa))
    - **payment_methods:** Default card fetch to locker call ([#2125](https://github.com/juspay/hyperswitch/pull/2125)) ([`ffe9009`](https://github.com/juspay/hyperswitch/commit/ffe9009d6525f214e02f51998b7916f649170222))
    - **refactor:** [Paypal] refactor paypal not implemented payment methods errors ([#1974](https://github.com/juspay/hyperswitch/pull/1974)) ([`ca9fb0c`](https://github.com/juspay/hyperswitch/commit/ca9fb0caf018715a77a4364a28537e99d76b1d32))
    - **router:** Move connector customer create flow to `call_connector_service` ([#2137](https://github.com/juspay/hyperswitch/pull/2137)) ([`4d3e6bc`](https://github.com/juspay/hyperswitch/commit/4d3e6bcb6c806a86a24694bb35cfa0293525c5ad))
    - **router/scheduler:** Replace the occurrences of gen_range with a safer alternative ([#2126](https://github.com/juspay/hyperswitch/pull/2126)) ([`94ac5c0`](https://github.com/juspay/hyperswitch/commit/94ac5c03b2280827ac2efa5a040cf4cb9073f6c6))
    - **webhooks:** Fix database queries in webhook  ([#2139](https://github.com/juspay/hyperswitch/pull/2139)) ([`eff280f`](https://github.com/juspay/hyperswitch/commit/eff280f2fbaba392a61d6f55fb251de106273a41))
    - Eliminate recursive call while updating config in database ([#2128](https://github.com/juspay/hyperswitch/pull/2128)) ([`a3dd8b7`](https://github.com/juspay/hyperswitch/commit/a3dd8b7d1e4fb7bc7a6ab6e3903cb990c9f2171b))

    ### Refactors

    - **connector:** [Zen] refactor Zen payment methods not implemented errors ([#1955](https://github.com/juspay/hyperswitch/pull/1955)) ([`b0c4ee2`](https://github.com/juspay/hyperswitch/commit/b0c4ee2cf28daa147cc333f3c1e6c3ac0c0b115b))
    - **pm_list:** Get profile_id from business_details in list pm ([#2131](https://github.com/juspay/hyperswitch/pull/2131)) ([`90868b9`](https://github.com/juspay/hyperswitch/commit/90868b93d6ac20b025ed52781d18c7ffffc5ee78))

    ### Testing

    - **postman:** Update postman collection files ([`7e29adb`](https://github.com/juspay/hyperswitch/commit/7e29adb5c9dee8b03ef58ccbd85b07b106459380))

    **Full Changelog:** [`v1.38.0...v1.39.0`](https://github.com/juspay/hyperswitch/compare/v1.38.0...v1.39.0)

    - - -


    ## 1.38.0 (2023-09-11)

    ### Features

    - **confirm:** Reduce the database calls to 2 stages in case of non-retry ([#2113](https://github.com/juspay/hyperswitch/pull/2113)) ([`28b102d`](https://github.com/juspay/hyperswitch/commit/28b102de2496c0880b6b232ddc82b1ef227af4da))
    - **core:** Accept payment_confirm_source header in capture call and store in payment_intent ([#2116](https://github.com/juspay/hyperswitch/pull/2116)) ([`2f272d2`](https://github.com/juspay/hyperswitch/commit/2f272d2962901b3e52b547bc0363bfbfb8030277))
    - **router:** Saving verified domains to business_profile table ([#2109](https://github.com/juspay/hyperswitch/pull/2109)) ([`73da641`](https://github.com/juspay/hyperswitch/commit/73da641b58bbfc1b0bd4bf8872b7b316a135b5c7))

    ### Bug Fixes

    - **router:** `validate_psync_reference_id` only if call_connector_action is trigger in psync flow ([#2106](https://github.com/juspay/hyperswitch/pull/2106)) ([`60c5fdb`](https://github.com/juspay/hyperswitch/commit/60c5fdb89a771b7d1e4d41f3ed11daa00bd10f91))
    - Implement persistent caching for config table retrieval ([#2044](https://github.com/juspay/hyperswitch/pull/2044)) ([`25e82a1`](https://github.com/juspay/hyperswitch/commit/25e82a1f7f2cb547e9c42c5bab4b898dd1886d6f))

    ### Refactors

    - **core:** Use profile id to find connector ([#2020](https://github.com/juspay/hyperswitch/pull/2020)) ([`5b29c25`](https://github.com/juspay/hyperswitch/commit/5b29c25210ed118dcd97dafd608170c41b1fba58))
    - **storage_impl:** Split payment attempt models to domain + diesel ([#2010](https://github.com/juspay/hyperswitch/pull/2010)) ([`ad4b7de`](https://github.com/juspay/hyperswitch/commit/ad4b7de628ca4e0f56a06d8b9f5e2c8c5bace67a))

    ### Testing

    - **connector:** Skip ui sanity tests for external contributors ([#2118](https://github.com/juspay/hyperswitch/pull/2118)) ([`f5fed94`](https://github.com/juspay/hyperswitch/commit/f5fed9413083a6635c3d2222d28bd67d5d994eea))

    **Full Changelog:** [`v1.37.0...v1.38.0`](https://github.com/juspay/hyperswitch/compare/v1.37.0...v1.38.0)

    - - -


    ## 1.37.0 (2023-09-10)

    ### Features

    - **connector:**
      - (checkout.com) add support for multiple captures PSync ([#2043](https://github.com/juspay/hyperswitch/pull/2043)) ([`517c5c4`](https://github.com/juspay/hyperswitch/commit/517c5c41655f82ab773f6875447d7d88390d538e))
      - [Cryptopay]Add reference id for cryptopay ([#2107](https://github.com/juspay/hyperswitch/pull/2107)) ([`576648b`](https://github.com/juspay/hyperswitch/commit/576648b5a5d7775d295479df3438c913ae855827))
    - **db:** Implement `BusinessProfileInterface` for `MockDb` ([#2101](https://github.com/juspay/hyperswitch/pull/2101)) ([`0792605`](https://github.com/juspay/hyperswitch/commit/07926050887cdd5d9e3a558ede4212074d17e257))
    - **payments:** Make database calls parallel for `payments_confirm` operation ([#2098](https://github.com/juspay/hyperswitch/pull/2098)) ([`fea075e`](https://github.com/juspay/hyperswitch/commit/fea075e32efd5031b5d38a9e34bedb85b0f99e95))

    ### Bug Fixes

    - **connector:** Revert checkout apple pay to tokenization flow ([#2110](https://github.com/juspay/hyperswitch/pull/2110)) ([`cc5add6`](https://github.com/juspay/hyperswitch/commit/cc5add625da44aeb9d30f02d21d415be12ce0c48))
    - Null value in session token in next action   ([#2111](https://github.com/juspay/hyperswitch/pull/2111)) ([`f015394`](https://github.com/juspay/hyperswitch/commit/f015394e7ac52f891b32e8147ae8aabf2ef9b593))

    ### Refactors

    - **connector:**
      - [Stripe] Using `connector_request_reference_id` as object_reference_id for Webhooks ([#2064](https://github.com/juspay/hyperswitch/pull/2064)) ([`e659e70`](https://github.com/juspay/hyperswitch/commit/e659e7029e758ef46b4fd12b262a58d0c3f5e5c0))
      - [Adyen] refactor adyen payment method not implemented errors ([#1950](https://github.com/juspay/hyperswitch/pull/1950)) ([`955534e`](https://github.com/juspay/hyperswitch/commit/955534e9535b3add4841d2bcfe51536c81fd9244))

    **Full Changelog:** [`v1.36.0...v1.37.0`](https://github.com/juspay/hyperswitch/compare/v1.36.0...v1.37.0)

    - - -


    ## 1.36.0 (2023-09-07)

    ### Features

    - **apple_pay:** Add support for pre decrypted apple pay token ([#2056](https://github.com/juspay/hyperswitch/pull/2056)) ([`75ee632`](https://github.com/juspay/hyperswitch/commit/75ee6327820fe31ff2c379250eae3e7974e6ae6c))

    ### Refactors

    - **connector:**
      - [Payme] Rename types to follow naming conventions ([#2096](https://github.com/juspay/hyperswitch/pull/2096)) ([`98d7005`](https://github.com/juspay/hyperswitch/commit/98d70054e25ad8b2473110f7cde803f119b69d37))
      - [Payme] Response Handling for Preprocessing ([#2097](https://github.com/juspay/hyperswitch/pull/2097)) ([`bdf4832`](https://github.com/juspay/hyperswitch/commit/bdf48320f9d4f1dc8c13f42f6e1e06d1056acf33))
    - **router:** Changed auth of verify_apple_pay from mid to jwt ([#2094](https://github.com/juspay/hyperswitch/pull/2094)) ([`8246f4e`](https://github.com/juspay/hyperswitch/commit/8246f4e9c336152ca79e916375cd11618af4d90a))

    ### Miscellaneous Tasks

    - **deps:** Bump webpki from 0.22.0 to 0.22.1 ([#2104](https://github.com/juspay/hyperswitch/pull/2104)) ([`81c6480`](https://github.com/juspay/hyperswitch/commit/81c6480bdf2ab65b433ff2e89fcc299198019307))
    - Address Rust 1.72 clippy lints ([#2099](https://github.com/juspay/hyperswitch/pull/2099)) ([`cbbebe2`](https://github.com/juspay/hyperswitch/commit/cbbebe2408093d84a51b3916ea5a43d79404b4e9))

    **Full Changelog:** [`v1.35.0...v1.36.0`](https://github.com/juspay/hyperswitch/compare/v1.35.0...v1.36.0)

    - - -


    ## 1.35.0 (2023-09-06)

    ### Features

    - **connector:**
      - [Payme] Implement Card 3DS with sdk flow ([#2082](https://github.com/juspay/hyperswitch/pull/2082)) ([`99f1780`](https://github.com/juspay/hyperswitch/commit/99f1780fd76c7761693df1b22db9104bfa12270b))
      - [SQUARE] Implement webhooks ([#1980](https://github.com/juspay/hyperswitch/pull/1980)) ([`5a49802`](https://github.com/juspay/hyperswitch/commit/5a49802f56cd3521bbdd38581a1417fa072fb696))
    - **payment_methods:** Store necessary payment method data in payment_methods table ([#2073](https://github.com/juspay/hyperswitch/pull/2073)) ([`3c93552`](https://github.com/juspay/hyperswitch/commit/3c935521019c5882674e0e6d16e9d331b5b9f756))

    ### Bug Fixes

    - **connector:** [STAX] Incoming amount will be processed in higher unit ([#2091](https://github.com/juspay/hyperswitch/pull/2091)) ([`de9e0fe`](https://github.com/juspay/hyperswitch/commit/de9e0feac0e002a022356233e8f0b62500ce75ed))
    - **router:** Send connection_closed errors as 5xx instead of 2xx ([#2093](https://github.com/juspay/hyperswitch/pull/2093)) ([`4d58bdb`](https://github.com/juspay/hyperswitch/commit/4d58bdbe2939b9952baf6c8faa48fff09a2409f7))

    ### Refactors

    - **refunds:** Add success RefundStatus in should_call_refund check ([#2081](https://github.com/juspay/hyperswitch/pull/2081)) ([`9cae5de`](https://github.com/juspay/hyperswitch/commit/9cae5de5ffa27ce71110d703a221da65ac586d29))
    - **scheduler:** Move scheduler to new crate to support workflows in multiple crates ([#1681](https://github.com/juspay/hyperswitch/pull/1681)) ([`d4221f3`](https://github.com/juspay/hyperswitch/commit/d4221f33689b2c26b2e5753f9a3b7943811b20a3))

    ### Testing

    - **postman:** Update postman collection files ([`25f8c35`](https://github.com/juspay/hyperswitch/commit/25f8c3556f366a92a2f6e2121afe895091c3fae8))

    **Full Changelog:** [`v1.34.1...v1.35.0`](https://github.com/juspay/hyperswitch/compare/v1.34.1...v1.35.0)

    - - -


    ## 1.34.1 (2023-09-05)

    ### Bug Fixes

    - Add accounts_cache for release ([#2087](https://github.com/juspay/hyperswitch/pull/2087)) ([`e5d3180`](https://github.com/juspay/hyperswitch/commit/e5d31801ec671191ab0365cf9650fb467f252102))

    ### Refactors

    - **router:** New separate routes for applepay merchant verification ([#2083](https://github.com/juspay/hyperswitch/pull/2083)) ([`dc908f6`](https://github.com/juspay/hyperswitch/commit/dc908f6902d3260b08ebf0019b2466553871de0e))

    ### Testing

    - **postman:** Update postman collection files ([#2070](https://github.com/juspay/hyperswitch/pull/2070)) ([`cfa6ae8`](https://github.com/juspay/hyperswitch/commit/cfa6ae895d72cb6c0e79d1ee6616183f35121be1))

    **Full Changelog:** [`v1.34.0...v1.34.1`](https://github.com/juspay/hyperswitch/compare/v1.34.0...v1.34.1)

    - - -


    ## 1.34.0 (2023-09-04)

    ### Features

    - **frm:**
      - Enum variant misspelled changed from fullfillment to fulfillment ([#2065](https://github.com/juspay/hyperswitch/pull/2065)) ([`e1cebd4`](https://github.com/juspay/hyperswitch/commit/e1cebd41798172b586f81d2668bedf18fa82001d))
      - Add support to accept and decline payment when manually reviewed by merchant for risky transaction ([#2071](https://github.com/juspay/hyperswitch/pull/2071)) ([`229f111`](https://github.com/juspay/hyperswitch/commit/229f111f6cb4ea30caa7b89328a047a1be8b9be0))

    ### Refactors

    - Include binary name in `service` field in log entries ([#2077](https://github.com/juspay/hyperswitch/pull/2077)) ([`20d44ac`](https://github.com/juspay/hyperswitch/commit/20d44acd20757c333382cd78875c8c9a7c35503c))

    ### Documentation

    - **postman:** Update documentation for postman tests ([#2057](https://github.com/juspay/hyperswitch/pull/2057)) ([`119aeb4`](https://github.com/juspay/hyperswitch/commit/119aeb49ca3810cf095590fd65fdfc74a6efc27e))

    **Full Changelog:** [`v1.33.0...v1.34.0`](https://github.com/juspay/hyperswitch/compare/v1.33.0...v1.34.0)

    - - -


    ## 1.33.0 (2023-09-03)

    ### Features

    - **api:** Use `ApiClient` trait in AppState ([#2067](https://github.com/juspay/hyperswitch/pull/2067)) ([`29fd2ea`](https://github.com/juspay/hyperswitch/commit/29fd2eaab1f7d028a833d0cf87dfde2a4327da99))
    - **connector:**
      - [Zen] Use `connector_request_reference_id` as Transaction Id to Retrieve Payments ([#2052](https://github.com/juspay/hyperswitch/pull/2052)) ([`5b92c39`](https://github.com/juspay/hyperswitch/commit/5b92c39470e5a0268f9e53ecf2527772b1384802))
      - [Bluesnap] Add dispute webhooks support ([#2053](https://github.com/juspay/hyperswitch/pull/2053)) ([`f8410b5`](https://github.com/juspay/hyperswitch/commit/f8410b5b2a5191866a4631bcdc475b608440b17b))
      - [Paypal] Add manual capture for paypal wallet  ([#2072](https://github.com/juspay/hyperswitch/pull/2072)) ([`99ff82e`](https://github.com/juspay/hyperswitch/commit/99ff82ef6d42899d6cb16f05c7a0c2bc193074a3))
    - **pm_list:** Add card - credit pm type required field info for connectors ([#2075](https://github.com/juspay/hyperswitch/pull/2075)) ([`a882d76`](https://github.com/juspay/hyperswitch/commit/a882d7604c68b9360d0cbe6c6ef43815a39e669a))
    - **webhooks:** Webhook source verification ([#2069](https://github.com/juspay/hyperswitch/pull/2069)) ([`8b22f38`](https://github.com/juspay/hyperswitch/commit/8b22f38dd6b897c5b349c25d41c89fffa07f5135))

    ### Bug Fixes

    - **connector:**
      - [Paypal] fix PSync for redirection flow for PayPal ([#2068](https://github.com/juspay/hyperswitch/pull/2068)) ([`e730c73`](https://github.com/juspay/hyperswitch/commit/e730c73516888d9b29209e805d1409ccdc2d4525))
      - [STAX] Add ACH Payment Filter for Bank Debits ([#2074](https://github.com/juspay/hyperswitch/pull/2074)) ([`a12a370`](https://github.com/juspay/hyperswitch/commit/a12a370bf6a7349acf6ff585adf55b56446a425e))
    - **router:** Correct limit for payments list by filters ([#2060](https://github.com/juspay/hyperswitch/pull/2060)) ([`b7d6d31`](https://github.com/juspay/hyperswitch/commit/b7d6d31504c1f8705c5bbcdda9afdd5f3575657b))

    ### Refactors

    - **connector:** [Shift4] refactor connector authorize request struct  ([#1888](https://github.com/juspay/hyperswitch/pull/1888)) ([`e44c32d`](https://github.com/juspay/hyperswitch/commit/e44c32dd80a72aef37674a5fcc630f5ea88e6343))
    - **router:** Return generic message for UnprocessableEntity in make_pm_data ([#2050](https://github.com/juspay/hyperswitch/pull/2050)) ([`38ab6e5`](https://github.com/juspay/hyperswitch/commit/38ab6e54f1aa0e2cf03c67164d6787850d40e070))

    **Full Changelog:** [`v1.32.0...v1.33.0`](https://github.com/juspay/hyperswitch/compare/v1.32.0...v1.33.0)

    - - -


    ## 1.32.0 (2023-08-31)

    ### Features

    - **connector:** [Square] Implement Card Payments for Square ([#1902](https://github.com/juspay/hyperswitch/pull/1902)) ([`c9fe389`](https://github.com/juspay/hyperswitch/commit/c9fe389b2c04817a843e34de0aab3d024bb31f19))
    - **core:** Connector specific validation for Payment Sync ([#2005](https://github.com/juspay/hyperswitch/pull/2005)) ([`098dc89`](https://github.com/juspay/hyperswitch/commit/098dc89d0cc9c1a2e0fbbb5384fa6f55a3a6a9a2))
    - **router:**
      - Verify service for applepay merchant registration ([#2009](https://github.com/juspay/hyperswitch/pull/2009)) ([`636b871`](https://github.com/juspay/hyperswitch/commit/636b871b1199703ce8e9c7c4b15284c45eff37ac))
      - Send connector timeouts and connection closures as 2xx response instead of giving 5xx response ([#2047](https://github.com/juspay/hyperswitch/pull/2047)) ([`31088b6`](https://github.com/juspay/hyperswitch/commit/31088b606261d2524f2f84ea0c34a40ab56a7e9d))

    ### Bug Fixes

    - **connector:** [Bluesnap] make error_name as optional field ([#2045](https://github.com/juspay/hyperswitch/pull/2045)) ([`ab85617`](https://github.com/juspay/hyperswitch/commit/ab8561793549712ac50755525eab4dc6b5b19925))
    - **mock_db:** Insert merchant for mock_db ([#1984](https://github.com/juspay/hyperswitch/pull/1984)) ([`fb39795`](https://github.com/juspay/hyperswitch/commit/fb397956adf20219e039548b6a3682ba526a23f4))

    ### Refactors

    - **router:** Fixed unprocessable entity error message to custom message ([#1979](https://github.com/juspay/hyperswitch/pull/1979)) ([`655b388`](https://github.com/juspay/hyperswitch/commit/655b388358ecb7d3c3e990d19989febea9f9d4c9))

    ### Testing

    - **postman:** Update event file format to latest supported ([#2055](https://github.com/juspay/hyperswitch/pull/2055)) ([`eeee0ed`](https://github.com/juspay/hyperswitch/commit/eeee0ed5dc830279d57b07f48f6b3f6ecc95f8f1))

    ### Documentation

    - **CONTRIBUTING:** Fix open a discussion link ([#2054](https://github.com/juspay/hyperswitch/pull/2054)) ([`58105d4`](https://github.com/juspay/hyperswitch/commit/58105d4ae2eedea137c179c91775e5ec5524897a))

    ### Miscellaneous Tasks

    - Add metrics for external api call ([#2021](https://github.com/juspay/hyperswitch/pull/2021)) ([`08fb2a9`](https://github.com/juspay/hyperswitch/commit/08fb2a93c19981f5f8e81ce9a8d267929933f832))

    **Full Changelog:** [`v1.31.0...v1.32.0`](https://github.com/juspay/hyperswitch/compare/v1.31.0...v1.32.0)

    - - -


    ## 1.31.0 (2023-08-30)

    ### Features

    - **core:** Conditionally return captures list during payment sync. ([#2033](https://github.com/juspay/hyperswitch/pull/2033)) ([`c2aa014`](https://github.com/juspay/hyperswitch/commit/c2aa0142ed5af0b5fcf21b35cb129addd92c6125))

    ### Bug Fixes

    - **configs:** Fix supported connectors in `multiple_api_version_supported_connectors` table ([#2051](https://github.com/juspay/hyperswitch/pull/2051)) ([`416ad8f`](https://github.com/juspay/hyperswitch/commit/416ad8fd97e423bfdb95409271628085aa97af76))
    - **connector:** [Cryptopay] fix amount to its currency base unit  ([#2049](https://github.com/juspay/hyperswitch/pull/2049)) ([`d3f1858`](https://github.com/juspay/hyperswitch/commit/d3f18584f8e8a6090f24c4a469c6a18440d6711e))

    **Full Changelog:** [`v1.30.0...v1.31.0`](https://github.com/juspay/hyperswitch/compare/v1.30.0...v1.31.0)

    - - -


    ## 1.30.0 (2023-08-29)

    ### Features

    - **connector:**
      - [HELCIM] Add template code for Helcim ([#2019](https://github.com/juspay/hyperswitch/pull/2019)) ([`d804b23`](https://github.com/juspay/hyperswitch/commit/d804b2328274189cf5ddab9aac5bee56838618da))
      - (globalpay) add support for multilple partial capture ([#2035](https://github.com/juspay/hyperswitch/pull/2035)) ([`a93eea7`](https://github.com/juspay/hyperswitch/commit/a93eea734f2645132d05332f7e25eca486ef0eda))
      - (checkout_dot_com) add support for multiple partial captures ([#1977](https://github.com/juspay/hyperswitch/pull/1977)) ([`784702d`](https://github.com/juspay/hyperswitch/commit/784702d9c55313179e59a5cf62f14f94b46317a5))
    - **router:** Add total count for payments list ([#1912](https://github.com/juspay/hyperswitch/pull/1912)) ([`7a5c841`](https://github.com/juspay/hyperswitch/commit/7a5c8413cfcaa4d33a59dfa7035645b5cd310cb5))

    ### Bug Fixes

    - **connector:** Change 5xx to 4xx for Coinbase and Iatapay ([#1975](https://github.com/juspay/hyperswitch/pull/1975)) ([`e64d5a3`](https://github.com/juspay/hyperswitch/commit/e64d5a3fc286df0f60f65fcedf7bc4d8aa974721))

    ### Refactors

    - **recon:** Updating user flow for recon ([#2029](https://github.com/juspay/hyperswitch/pull/2029)) ([`1510623`](https://github.com/juspay/hyperswitch/commit/15106233e973fb7539799b96975a1004c2925663))

    **Full Changelog:** [`v1.29.0...v1.30.0`](https://github.com/juspay/hyperswitch/compare/v1.29.0...v1.30.0)

    - - -


    ## 1.29.0 (2023-08-29)

    ### Features

    - **connector:** [Paypal] add support for payment and refund webhooks ([#2003](https://github.com/juspay/hyperswitch/pull/2003)) ([`ade27f0`](https://github.com/juspay/hyperswitch/commit/ade27f01686d2a0cdee86d4d366cecaa12370ba6))

    ### Bug Fixes

    - **connector:** [Payme] populate error message in case of 2xx payment failures ([#2037](https://github.com/juspay/hyperswitch/pull/2037)) ([`aeebc5b`](https://github.com/juspay/hyperswitch/commit/aeebc5b52584ad8d8c128fa896d39fe8576dca0c))
    - **router:** Remove `attempt_count` in payments list response and add it in payments response ([#2008](https://github.com/juspay/hyperswitch/pull/2008)) ([`23b8d34`](https://github.com/juspay/hyperswitch/commit/23b8d3412c7d14e450b87b3ccb35a394d954d0a7))

    ### Miscellaneous Tasks

    - **creds:** Update connector API credentials ([#2034](https://github.com/juspay/hyperswitch/pull/2034)) ([`f04bee2`](https://github.com/juspay/hyperswitch/commit/f04bee261141622b63e34e1ebd4b0de4641e0210))
    - Address Rust 1.72 clippy lints ([#2011](https://github.com/juspay/hyperswitch/pull/2011)) ([`eaefa6e`](https://github.com/juspay/hyperswitch/commit/eaefa6e15c4facc28440d7fdc3aac9be0976324d))

    **Full Changelog:** [`v1.28.1...v1.29.0`](https://github.com/juspay/hyperswitch/compare/v1.28.1...v1.29.0)

    - - -


    ## 1.28.1 (2023-08-28)

    ### Bug Fixes

    - **connector:** [Noon] handle 2 digit exp year and 3ds checked status ([#2022](https://github.com/juspay/hyperswitch/pull/2022)) ([`322c615`](https://github.com/juspay/hyperswitch/commit/322c615c56c37554ae9760b9a584bf3b0032cf43))

    ### Refactors

    - **postman:** Remove `routing algorithm` struct from `merchant account create` ([#2032](https://github.com/juspay/hyperswitch/pull/2032)) ([`3d4f750`](https://github.com/juspay/hyperswitch/commit/3d4f750089b97f0fde0e74b833bf386327fb4a52))

    **Full Changelog:** [`v1.28.0...v1.28.1`](https://github.com/juspay/hyperswitch/compare/v1.28.0...v1.28.1)

    - - -


    ## 1.28.0 (2023-08-28)

    ### Features

    - **connector:** [CashToCode] perform currency based connector credentials mapping ([#2025](https://github.com/juspay/hyperswitch/pull/2025)) ([`7c0c3b6`](https://github.com/juspay/hyperswitch/commit/7c0c3b6b35f2654bbb64c9631c308925bbf5226d))

    **Full Changelog:** [`v1.27.2...v1.28.0`](https://github.com/juspay/hyperswitch/compare/v1.27.2...v1.28.0)

    - - -


    ## 1.27.2 (2023-08-27)

    ### Bug Fixes

    - **request:** Add `idle_pool_connection_timeout` as a config ([#2016](https://github.com/juspay/hyperswitch/pull/2016)) ([`6247996`](https://github.com/juspay/hyperswitch/commit/6247996ddead66086551eef0de8f0b5d678eec27))

    ### Refactors

    - **core:** Authenticate client secret with fulfilment time ([#2026](https://github.com/juspay/hyperswitch/pull/2026)) ([`1e44c8d`](https://github.com/juspay/hyperswitch/commit/1e44c8df1e57351bc5d704d7fc0bee66c5e84aec))

    **Full Changelog:** [`v1.27.1...v1.27.2`](https://github.com/juspay/hyperswitch/compare/v1.27.1...v1.27.2)

    - - -


    ## 1.27.1 (2023-08-25)

    ### Bug Fixes

    - **locker:** Accept the incoming token as the basilisk token if it is a mandate payment ([#2013](https://github.com/juspay/hyperswitch/pull/2013)) ([`ac63794`](https://github.com/juspay/hyperswitch/commit/ac637941623ffe7e2b3d6445ea18b5aabbee513f))
    - **payment:** Fix max limit on payment intents list ([#2014](https://github.com/juspay/hyperswitch/pull/2014)) ([`a888953`](https://github.com/juspay/hyperswitch/commit/a8889530043efb455b6a20ebffd2e972b5224b6f))

    ### Testing

    - **connector:** Add support for adyen webhooks ([#1999](https://github.com/juspay/hyperswitch/pull/1999)) ([`fcaca76`](https://github.com/juspay/hyperswitch/commit/fcaca76c72bdea19125ae07d927bfd6119353c45))

    **Full Changelog:** [`v1.27.0...v1.27.1`](https://github.com/juspay/hyperswitch/compare/v1.27.0...v1.27.1)

    - - -


    ## 1.27.0 (2023-08-24)

    ### Features

    - **api_client:** Add api client trait ([#1919](https://github.com/juspay/hyperswitch/pull/1919)) ([`97b2747`](https://github.com/juspay/hyperswitch/commit/97b2747458fbc9d823d56a6d69eaa5f914c64054))
    - **connector:** [Braintree] Add Authorize, Capture, Void, PSync, Refund, Rsync for Braintree GraphQL API ([#1962](https://github.com/juspay/hyperswitch/pull/1962)) ([`820f615`](https://github.com/juspay/hyperswitch/commit/820f6153af10a288afb458089d4bbb2495cd5488))

    ### Bug Fixes

    - **connector:**
      - [Paypal] fix amount to its currency base unit for Paypal Bank redirects ([#2002](https://github.com/juspay/hyperswitch/pull/2002)) ([`4accb41`](https://github.com/juspay/hyperswitch/commit/4accb41ef4ffaec8ac177b938c0f61b0737cc2c8))
      - [Trustpay] Add missing payment status codes in failure check ([#1997](https://github.com/juspay/hyperswitch/pull/1997)) ([`e889749`](https://github.com/juspay/hyperswitch/commit/e8897491b1395e9007d47108c42b789ded354592))
      - Fix payme error response deserialization error ([#1989](https://github.com/juspay/hyperswitch/pull/1989)) ([`16facdf`](https://github.com/juspay/hyperswitch/commit/16facdfa71049a968d448167f63963deb8b50cd0))
      - [Bluesnap] Update incoming Webhooks flow  ([#1982](https://github.com/juspay/hyperswitch/pull/1982)) ([`8c066d3`](https://github.com/juspay/hyperswitch/commit/8c066d3ea73481106982ced5f09058383bc97953))

    ### Testing

    - Move Postman collections to directory structure ([#1995](https://github.com/juspay/hyperswitch/pull/1995)) ([`b7e4048`](https://github.com/juspay/hyperswitch/commit/b7e4048e56fc73bb741a5b25487cd3f56febf90e))

    ### Miscellaneous Tasks

    - **creds:** Updated the API Keys to not use wrong creds ([#2001](https://github.com/juspay/hyperswitch/pull/2001)) ([`ad991c0`](https://github.com/juspay/hyperswitch/commit/ad991c04ecedd85ca4c432126487042c2fd03a67))

    **Full Changelog:** [`v1.26.0...v1.27.0`](https://github.com/juspay/hyperswitch/compare/v1.26.0...v1.27.0)

    - - -


    ## 1.26.0 (2023-08-23)

    ### Features

    - **business_profile:** Add profile id in affected tables and modify api contract ([#1971](https://github.com/juspay/hyperswitch/pull/1971)) ([`fe8d4c2`](https://github.com/juspay/hyperswitch/commit/fe8d4c2eeca21e0d79c7a056505790c8cadaef9d))
    - **connector:** Fail payment authorize when capture_method is manual_method ([#1893](https://github.com/juspay/hyperswitch/pull/1893)) ([`bca9d50`](https://github.com/juspay/hyperswitch/commit/bca9d5013b902d813a41f04286ea6cb645e1f199))
    - **core:** Add psync for multiple partial captures ([#1934](https://github.com/juspay/hyperswitch/pull/1934)) ([`5657ad6`](https://github.com/juspay/hyperswitch/commit/5657ad6933bb407d2ae32f2e068e56c9b9698ed3))
    - **pm_list:** Add  card pm required field info for connectors ([#1918](https://github.com/juspay/hyperswitch/pull/1918)) ([`52e0176`](https://github.com/juspay/hyperswitch/commit/52e01769d405308b0b882647e2e824f38aeef3dc))
    - **router:**
      - Add relevant metrics and logs for manual retries flow ([#1985](https://github.com/juspay/hyperswitch/pull/1985)) ([`1b346fc`](https://github.com/juspay/hyperswitch/commit/1b346fcf5649a24becff2751aa6f93d7a863ee61))
      - Add fields in payments list response ([#1987](https://github.com/juspay/hyperswitch/pull/1987)) ([`abc736b`](https://github.com/juspay/hyperswitch/commit/abc736bbc13288d9b35c74ed12ec7da443643ee0))
      - Add `attempt_count` in list payments response ([#1990](https://github.com/juspay/hyperswitch/pull/1990)) ([`f0cc0fb`](https://github.com/juspay/hyperswitch/commit/f0cc0fba1684f200ce6dbf3e4bc951de23a60f94))

    ### Bug Fixes

    - **test_utils:** Remove `cmd` alias for `std::process::Command` ([#1981](https://github.com/juspay/hyperswitch/pull/1981)) ([`c161530`](https://github.com/juspay/hyperswitch/commit/c161530a6c8a5486e1cd3fe16f8f01e0ca580108))
    - **webhooks:**
      - Send stripe compatible webhooks for stripe compatible merchants ([#1986](https://github.com/juspay/hyperswitch/pull/1986)) ([`36631ad`](https://github.com/juspay/hyperswitch/commit/36631ad97be509d397b91babd4cd1a492703bb5c))
      - Handling errors inside source verification ([#1994](https://github.com/juspay/hyperswitch/pull/1994)) ([`f690c5f`](https://github.com/juspay/hyperswitch/commit/f690c5f3ead64c353ac1d36401e009582c1f0ecf))

    ### Performance

    - **db:** Add index for attempt_id merchant_id ([#1993](https://github.com/juspay/hyperswitch/pull/1993)) ([`57d22b9`](https://github.com/juspay/hyperswitch/commit/57d22b966b911ee8948440072bf9ce23dbd21dd3))

    ### Refactors

    - **core:** Made authenticate_client_secret function public ([#1992](https://github.com/juspay/hyperswitch/pull/1992)) ([`6986772`](https://github.com/juspay/hyperswitch/commit/698677263be56c4ad16cbf90f5607623a18e3d8b))

    **Full Changelog:** [`v1.25.1...v1.26.0`](https://github.com/juspay/hyperswitch/compare/v1.25.1...v1.26.0)

    - - -


    ## 1.25.1 (2023-08-22)

    ### Bug Fixes

    - Storage of generic payment methods in permanent locker ([#1799](https://github.com/juspay/hyperswitch/pull/1799)) ([`19ee324`](https://github.com/juspay/hyperswitch/commit/19ee324d373262aea873bb7a120f0e80b918fd84))

    **Full Changelog:** [`v1.25.0...v1.25.1`](https://github.com/juspay/hyperswitch/compare/v1.25.0...v1.25.1)

    - - -


    ## 1.25.0 (2023-08-22)

    ### Features

    - **storage_impl:** Split payment intent interface implementation ([#1946](https://github.com/juspay/hyperswitch/pull/1946)) ([`88d65a6`](https://github.com/juspay/hyperswitch/commit/88d65a62fc81f217ade71b2d4903d3bbe85e5c94))

    ### Bug Fixes

    - **core:** Update Webhooks Event Mapping and Forced Psync preconditions ([#1970](https://github.com/juspay/hyperswitch/pull/1970)) ([`8cf1f75`](https://github.com/juspay/hyperswitch/commit/8cf1f75fb1705aa020db5f966e15c3d9a80dd908))

    **Full Changelog:** [`v1.24.0...v1.25.0`](https://github.com/juspay/hyperswitch/compare/v1.24.0...v1.25.0)

    - - -


    ## 1.24.0 (2023-08-21)

    ### Features

    - **router:** Add total count for refunds list ([#1935](https://github.com/juspay/hyperswitch/pull/1935)) ([`84967d3`](https://github.com/juspay/hyperswitch/commit/84967d396e628d4cc256ff86d82145c478a91422))

    ### Bug Fixes

    - **typo:** Add typo `daa` to allow list ([#1968](https://github.com/juspay/hyperswitch/pull/1968)) ([`875dbce`](https://github.com/juspay/hyperswitch/commit/875dbce927d86384dd41c2e900ae8074f9540b75))

    **Full Changelog:** [`v1.23.0...v1.24.0`](https://github.com/juspay/hyperswitch/compare/v1.23.0...v1.24.0)

    - - -


    ## 1.23.0 (2023-08-18)

    ### Features

    - **business_profile:** Add business profile table and CRUD endpoints ([#1928](https://github.com/juspay/hyperswitch/pull/1928)) ([`53956d6`](https://github.com/juspay/hyperswitch/commit/53956d6f8379f90e4070b49bd2322950aa11a7f2))

    ### Bug Fixes

    - **connector:** [CashToCode] Transform minor units to major units ([#1964](https://github.com/juspay/hyperswitch/pull/1964)) ([`ff2efe8`](https://github.com/juspay/hyperswitch/commit/ff2efe88357a253a22bb8467136717b7809218b6))
    - **payment_methods:** Return parent_payment_method_token for other payment methods (BankTransfer, Wallet, BankRedirect)  ([#1951](https://github.com/juspay/hyperswitch/pull/1951)) ([`156430a`](https://github.com/juspay/hyperswitch/commit/156430a5703f40b6bb899caf9904323e39003986))

    ### Refactors

    - **compatibility:** Changed MCA decode 500 error to 422 ([#1958](https://github.com/juspay/hyperswitch/pull/1958)) ([`0d85c1f`](https://github.com/juspay/hyperswitch/commit/0d85c1f8bb3e7d0e1d359d737a1e8a2f0d7885d2))

    **Full Changelog:** [`v1.22.0...v1.23.0`](https://github.com/juspay/hyperswitch/compare/v1.22.0...v1.23.0)

    - - -


    ## 1.22.0 (2023-08-18)

    ### Features

    - **router:** Send 2xx payments response for all the connector http responses (2xx, 4xx etc.) ([#1924](https://github.com/juspay/hyperswitch/pull/1924)) ([`0ab6827`](https://github.com/juspay/hyperswitch/commit/0ab6827f6cf54b0a124856487f5359b91048736c))

    ### Bug Fixes

    - **connector:** [Payme] Fix for partial capture validation ([#1939](https://github.com/juspay/hyperswitch/pull/1939)) ([`3d62cb0`](https://github.com/juspay/hyperswitch/commit/3d62cb07dd94d827b18e664a3454352f300575fe))

    **Full Changelog:** [`v1.21.2...v1.22.0`](https://github.com/juspay/hyperswitch/compare/v1.21.2...v1.22.0)

    - - -


    ## 1.21.2 (2023-08-17)

    ### Bug Fixes

    - **connector:** [Braintree] fix status mapping for braintree ([#1941](https://github.com/juspay/hyperswitch/pull/1941)) ([`d30fefb`](https://github.com/juspay/hyperswitch/commit/d30fefb2c08d4a086f4d8c0519196d83fa228d45))
    - **frm:** Added fraud_check_last_step field in fraud_check table to support 3DS transaction in frm ([#1944](https://github.com/juspay/hyperswitch/pull/1944)) ([`9a39345`](https://github.com/juspay/hyperswitch/commit/9a393455dd6643caf61747633698191ba8c59d49))

    ### Refactors

    - **connector:** Remove payment experience from Not Supported Payment Methods error ([#1937](https://github.com/juspay/hyperswitch/pull/1937)) ([`c5cf029`](https://github.com/juspay/hyperswitch/commit/c5cf029d1f20dc27f6b246094d61a381669feb68))

    **Full Changelog:** [`v1.21.1...v1.21.2`](https://github.com/juspay/hyperswitch/compare/v1.21.1...v1.21.2)

    - - -


    ## 1.21.1 (2023-08-15)

    ### Bug Fixes

    - **connector:** [Braintree] add merchant_account_id field in authorize request ([#1916](https://github.com/juspay/hyperswitch/pull/1916)) ([`68df9d6`](https://github.com/juspay/hyperswitch/commit/68df9d617c825e9a4fec88695c3c22588cf3673b))

    ### Refactors

    - **storage_impl:** Integrate the composite store from external crate ([#1921](https://github.com/juspay/hyperswitch/pull/1921)) ([`9f199d9`](https://github.com/juspay/hyperswitch/commit/9f199d9ab8fb7360bda2661a7014aea8906b74f9))

    ### Documentation

    - Documentation changes for clarity ([#1875](https://github.com/juspay/hyperswitch/pull/1875)) ([`b1e4e38`](https://github.com/juspay/hyperswitch/commit/b1e4e3883d4d039c3ed06272d984526da0e657af))

    **Full Changelog:** [`v1.21.0...v1.21.1`](https://github.com/juspay/hyperswitch/compare/v1.21.0...v1.21.1)

    - - -


    ## 1.21.0 (2023-08-14)

    ### Features

    - **generics:** Add metrics for database calls ([#1901](https://github.com/juspay/hyperswitch/pull/1901)) ([`bb6ec49`](https://github.com/juspay/hyperswitch/commit/bb6ec49a66bc9380ff0f5eca44cad381b7dc4368))

    ### Bug Fixes

    - **frm:** Add new column frm_config instead of alterning the existing… ([#1925](https://github.com/juspay/hyperswitch/pull/1925)) ([`8d916fe`](https://github.com/juspay/hyperswitch/commit/8d916feb3fe9fd5dd843cb6a4dbc29f5807aa205))
    - Add diesel migration to update local db ([#1812](https://github.com/juspay/hyperswitch/pull/1812)) ([`97a495c`](https://github.com/juspay/hyperswitch/commit/97a495cfa700835fd2dbf4f4be1b404a1e4a264a))

    ### Refactors

    - **storage:** Add redis structs to storage impls ([#1910](https://github.com/juspay/hyperswitch/pull/1910)) ([`3e26966`](https://github.com/juspay/hyperswitch/commit/3e269663c36c8a9f11108d01f96bd612f318cc15))

    **Full Changelog:** [`v1.20.0...v1.21.0`](https://github.com/juspay/hyperswitch/compare/v1.20.0...v1.21.0)

    - - -


    ## 1.20.0 (2023-08-11)

    ### Features

    - **connector:** [PayMe] Implement preprocessing flow for cards ([#1904](https://github.com/juspay/hyperswitch/pull/1904)) ([`38b9c07`](https://github.com/juspay/hyperswitch/commit/38b9c077b7cd9563aaf3f39876670df7484f519d))
    - **router:** Add webhook source verification support for multiple mca of the same connector ([#1897](https://github.com/juspay/hyperswitch/pull/1897)) ([`3554fec`](https://github.com/juspay/hyperswitch/commit/3554fec1c1ab6084480600c73fbefe39085723e0))

    ### Bug Fixes

    - **connector:**
      - [STAX] Add currency filter for payments through Stax ([#1911](https://github.com/juspay/hyperswitch/pull/1911)) ([`5bc7592`](https://github.com/juspay/hyperswitch/commit/5bc7592af3c8587a402809c050e58b257b7af8bf))
      - [Paypal] send valid error_reason in all the error responses ([#1914](https://github.com/juspay/hyperswitch/pull/1914)) ([`3df9441`](https://github.com/juspay/hyperswitch/commit/3df944196f710587eee32be871eaef1d764b694a))
    - **payment_methods:** Delete token when a payment reaches terminal state ([#1818](https://github.com/juspay/hyperswitch/pull/1818)) ([`07020d0`](https://github.com/juspay/hyperswitch/commit/07020d01b5d08d9ba5a146d62fbb8c23c6a6d3c2))

    ### Refactors

    - **storage:** Add a separate crate to represent store implementations ([#1853](https://github.com/juspay/hyperswitch/pull/1853)) ([`32b731d`](https://github.com/juspay/hyperswitch/commit/32b731d9591ff4921b7d80556c7ebe050b53121f))

    ### Miscellaneous Tasks

    - **webhooks:** Ignore payment not found in webhooks ([#1886](https://github.com/juspay/hyperswitch/pull/1886)) ([`29f068b`](https://github.com/juspay/hyperswitch/commit/29f068b20581fca280be9a1a98524368d635191f))

    **Full Changelog:** [`v1.19.0...v1.20.0`](https://github.com/juspay/hyperswitch/compare/v1.19.0...v1.20.0)

    - - -


    ## 1.19.0 (2023-08-10)

    ### Features

    - **connector:** [Adyen] implement Japanese convenience stores ([#1819](https://github.com/juspay/hyperswitch/pull/1819)) ([`a6fdf6d`](https://github.com/juspay/hyperswitch/commit/a6fdf6dc34901a9985062fd5532d967910bcf3c0))
    - **docs:** Add multiple examples support and webhook schema ([#1864](https://github.com/juspay/hyperswitch/pull/1864)) ([`f8ef52c`](https://github.com/juspay/hyperswitch/commit/f8ef52c645d353aac438d6af5b00d9097332fdcb))

    ### Bug Fixes

    - **connector:**
      - [ACI] Response Handling in case of `ErrorResponse` ([#1870](https://github.com/juspay/hyperswitch/pull/1870)) ([`14f599d`](https://github.com/juspay/hyperswitch/commit/14f599d1be272afcfd16dfac58c47dbbb649423d))
      - [Adyen] Response Handling in case of RefusalResponse ([#1877](https://github.com/juspay/hyperswitch/pull/1877)) ([`c35a571`](https://github.com/juspay/hyperswitch/commit/c35a5719eb08ff76a10d554a0e61d0af81ff26e6))
    - **router:** Handle JSON connector response parse error ([#1892](https://github.com/juspay/hyperswitch/pull/1892)) ([`393c2ab`](https://github.com/juspay/hyperswitch/commit/393c2ab94cf1052f6f8fa0b40c09e36555ffecd7))

    ### Refactors

    - **connector:** Update the `connector_template`  ([#1895](https://github.com/juspay/hyperswitch/pull/1895)) ([`5fe96d4`](https://github.com/juspay/hyperswitch/commit/5fe96d4d9683d8eae25f214f3823d3765dce326a))
    - Remove unnecessary debug logs from payment method list api ([#1884](https://github.com/juspay/hyperswitch/pull/1884)) ([`ba82f17`](https://github.com/juspay/hyperswitch/commit/ba82f173dbccfc2312677ec96fdd85813a417dc6))

    ### Documentation

    - Add architecture and monitoring diagram of hyperswitch ([#1825](https://github.com/juspay/hyperswitch/pull/1825)) ([`125ef2b`](https://github.com/juspay/hyperswitch/commit/125ef2b4f82c922209bcfe161ce4790fe2ee3a86))

    ### Miscellaneous Tasks

    - **configs:** Add `payout_connector_list` config to toml ([#1909](https://github.com/juspay/hyperswitch/pull/1909)) ([`c1e5626`](https://github.com/juspay/hyperswitch/commit/c1e56266df6aabd1c498d6a7ebec324b0df23c12))
    - Add connector functionality validation based on connector_type ([#1849](https://github.com/juspay/hyperswitch/pull/1849)) ([`33c6d71`](https://github.com/juspay/hyperswitch/commit/33c6d71a8a71619f811accbc21f3c22c3c279c47))
    - Remove spaces at beginning of commit messages when generating changelogs ([#1906](https://github.com/juspay/hyperswitch/pull/1906)) ([`7d13226`](https://github.com/juspay/hyperswitch/commit/7d13226740dbc4c1b6ec19631bb93ba89281d303))

    **Full Changelog:** [`v1.18.0...v1.19.0`](https://github.com/juspay/hyperswitch/compare/v1.18.0...v1.19.0)

    - - -


    ## 1.18.0 (2023-08-09)

    ### Features

    - **connector:**
      - [Adyen] Add support for card redirection (KNET, BENEFIT) ([#1816](https://github.com/juspay/hyperswitch/pull/1816)) ([`62461f1`](https://github.com/juspay/hyperswitch/commit/62461f1b3849bfde3d0c0608b9efd96334e30f97))
      - [Checkout] unify error code, message and reason in error response ([#1855](https://github.com/juspay/hyperswitch/pull/1855)) ([`e8a51c2`](https://github.com/juspay/hyperswitch/commit/e8a51c2abeaead3a78ec7fbe9580cf742f7dfbe3))
      - Unified error message & errorCode for blueSnap connector ([#1856](https://github.com/juspay/hyperswitch/pull/1856)) ([`222afee`](https://github.com/juspay/hyperswitch/commit/222afee5d5e18132ae40509fb792d6fd13600069))
      - [Adyen] Implement Open Banking Uk in Bank Redirects ([#1802](https://github.com/juspay/hyperswitch/pull/1802)) ([`b9f1270`](https://github.com/juspay/hyperswitch/commit/b9f12708e108c3ac691314d32b7976d7e381eee7))
      - [Adyen] Implement Momo Atm(Napas) in Card Redirects ([#1820](https://github.com/juspay/hyperswitch/pull/1820)) ([`8ae6737`](https://github.com/juspay/hyperswitch/commit/8ae67377cca506b4d7017bfd167a5ccdb03e8707))
      - [Stax] Implement Bank Debits and Webhooks for Connector Stax ([#1832](https://github.com/juspay/hyperswitch/pull/1832)) ([`0f2bb6c`](https://github.com/juspay/hyperswitch/commit/0f2bb6c09bb929a7274af6049ecff5a5f9049ca1))
    - **pm_list:** Add pm required field info for crypto pay ([#1891](https://github.com/juspay/hyperswitch/pull/1891)) ([`c205f06`](https://github.com/juspay/hyperswitch/commit/c205f064b91df483cbf0fb4d581d8908bf8fa673))
    - **router:** Add support for multiple partial capture ([#1721](https://github.com/juspay/hyperswitch/pull/1721)) ([`c333fb7`](https://github.com/juspay/hyperswitch/commit/c333fb7fc02cf19d74ca80093552e4c4628f248a))

    ### Bug Fixes

    - **router:**
      - Add `serde(transparent)` annotation for `PaymentMethodMetadata` ([#1899](https://github.com/juspay/hyperswitch/pull/1899)) ([`2d83917`](https://github.com/juspay/hyperswitch/commit/2d839170fe889051772f5d99cdaff33573b4fb20))
      - Send error_reason as error_message in payments and refund flows ([#1878](https://github.com/juspay/hyperswitch/pull/1878)) ([`6982194`](https://github.com/juspay/hyperswitch/commit/69821948c0a31b224e1b519388071b66c0d67eb1))

    ### Refactors

    - **access_token:** Handle timeout errors gracefully ([#1882](https://github.com/juspay/hyperswitch/pull/1882)) ([`cc4136f`](https://github.com/juspay/hyperswitch/commit/cc4136f85f0a64b56c4a09157f9bc4847b920b54))
    - **authorize_flow:** Suppress error while saving a card to locker after successful payment ([#1874](https://github.com/juspay/hyperswitch/pull/1874)) ([`3cc4548`](https://github.com/juspay/hyperswitch/commit/3cc4548eee4289455da99de2bf54c6b312291374))

    ### Testing

    - **connector:** Add support for webhook tests  ([#1863](https://github.com/juspay/hyperswitch/pull/1863)) ([`7b2c419`](https://github.com/juspay/hyperswitch/commit/7b2c419ce5c8f429dad3ace852891f76d2281646))

    **Full Changelog:** [`v1.17.1...v1.18.0`](https://github.com/juspay/hyperswitch/compare/v1.17.1...v1.18.0)

    - - -


    ## 1.17.1 (2023-08-07)

    ### Bug Fixes

    - **connector:** [DummyConnector] add new icons and fix `we_chat_pay` ([#1845](https://github.com/juspay/hyperswitch/pull/1845)) ([`985ff6b`](https://github.com/juspay/hyperswitch/commit/985ff6ba419b6ed13fc9e2f74dfa824a27bdd3e3))
    - **kms:** Fix kms decryption for jwe keys ([#1872](https://github.com/juspay/hyperswitch/pull/1872)) ([`ddc0302`](https://github.com/juspay/hyperswitch/commit/ddc0302298aefab0860b49210ce73abd4d121fb9))

    ### Revert

    - Ci: use `sccache-action` for caching compilation artifacts ([#1880](https://github.com/juspay/hyperswitch/pull/1880)) ([`a988018`](https://github.com/juspay/hyperswitch/commit/a988018350dccebe94b4cac66b54375b95fcbbbe))

    **Full Changelog:** [`v1.17.0...v1.17.1`](https://github.com/juspay/hyperswitch/compare/v1.17.0...v1.17.1)

    - - -


    ## 1.17.0 (2023-08-07)

    ### Features

    - **config:** Add config support to pt_mapping along with redis ([#1861](https://github.com/juspay/hyperswitch/pull/1861)) ([`b03dd24`](https://github.com/juspay/hyperswitch/commit/b03dd244561641f5b3481c79035766561bcd0a8a))
    - **connector:** [Payme] Add Sync, RSync & webhook flow support ([#1862](https://github.com/juspay/hyperswitch/pull/1862)) ([`8057980`](https://github.com/juspay/hyperswitch/commit/80579805f9dd7c387eb3c0b5c48e01fa69e48299))

    ### Bug Fixes

    - **core:** If frm is not called, send None in frm_message instead of initial values in update tracker ([#1867](https://github.com/juspay/hyperswitch/pull/1867)) ([`3250204`](https://github.com/juspay/hyperswitch/commit/3250204acc1e32f92dad725378b19dd3e4da33f6))

    ### Revert

    - Fix(core): add validation for all the connector auth_type ([#1833](https://github.com/juspay/hyperswitch/pull/1833)) ([`ae3d25e`](https://github.com/juspay/hyperswitch/commit/ae3d25e6899af0d78171d40c980146d58f8fc03f))

    **Full Changelog:** [`v1.16.0...v1.17.0`](https://github.com/juspay/hyperswitch/compare/v1.16.0...v1.17.0)

    - - -


    ## 1.16.0 (2023-08-04)

    ### Features

    - **connector:**
      - [Adyen] implement PaySafe ([#1805](https://github.com/juspay/hyperswitch/pull/1805)) ([`0f09199`](https://github.com/juspay/hyperswitch/commit/0f0919963fd1c887d3315039420a939bb377e738))
      - [Adyen] Add support for gift cards balance ([#1672](https://github.com/juspay/hyperswitch/pull/1672)) ([`c4796ff`](https://github.com/juspay/hyperswitch/commit/c4796ffdb77a6270e7abc2e65e142ee4e7639b54))
      - [Square] Add template code for connector Square ([#1834](https://github.com/juspay/hyperswitch/pull/1834)) ([`80b74e0`](https://github.com/juspay/hyperswitch/commit/80b74e096d56e08685ad52fb3049f6b611d587b3))
      - [Adyen] implement Oxxo ([#1808](https://github.com/juspay/hyperswitch/pull/1808)) ([`5ed3f34`](https://github.com/juspay/hyperswitch/commit/5ed3f34c24c82d182921d317361bc9fc72be58ce))

    ### Bug Fixes

    - **webhooks:** Do not send duplicate webhooks  ([#1850](https://github.com/juspay/hyperswitch/pull/1850)) ([`0d996b8`](https://github.com/juspay/hyperswitch/commit/0d996b8960c7445289e451744c4bdeeb87d7d567))

    ### Refactors

    - **connector:** Use utility function to raise payment method not implemented errors ([#1847](https://github.com/juspay/hyperswitch/pull/1847)) ([`f2fcc25`](https://github.com/juspay/hyperswitch/commit/f2fcc2595ae6f1c0ac5553c1a21ab33a6078b3e2))
    - **payment_methods:** Add `requires_cvv` field to customer payment method list api object ([#1852](https://github.com/juspay/hyperswitch/pull/1852)) ([`2dec2ca`](https://github.com/juspay/hyperswitch/commit/2dec2ca50bbac0eed6f9fc562662b86436b4b656))

    **Full Changelog:** [`v1.15.0...v1.16.0`](https://github.com/juspay/hyperswitch/compare/v1.15.0...v1.16.0)

    - - -


    ## 1.15.0 (2023-08-03)

    ### Features

    - **connector:**
      - [Boku] Implement Authorize, Psync, Refund and Rsync flow ([#1699](https://github.com/juspay/hyperswitch/pull/1699)) ([`9cba7da`](https://github.com/juspay/hyperswitch/commit/9cba7da0d3d4b87101debef8ec25b52a908975c5))
      - add support for bank redirect for Paypal ([#1107](https://github.com/juspay/hyperswitch/pull/1107)) ([`57887bd`](https://github.com/juspay/hyperswitch/commit/57887bdf3a892548afea80859c2553d5a1cca49d))
      - [Adyen] implement Adyen bank transfers and voucher payments in Indonesia   ([#1804](https://github.com/juspay/hyperswitch/pull/1804)) ([`9977f9d`](https://github.com/juspay/hyperswitch/commit/9977f9d40ea349cada6171af7166a533e694450f))
      - Unified errorCode and errorMessage map error reason as errorMessage in Stripe Connector ([#1797](https://github.com/juspay/hyperswitch/pull/1797)) ([`c464cc5`](https://github.com/juspay/hyperswitch/commit/c464cc510ded595ea846e7da95f60919614e2bd3))

    ### Refactors

    - **common_enums:** Added derive for additional traits in FutureU… ([#1848](https://github.com/juspay/hyperswitch/pull/1848)) ([`8f6583f`](https://github.com/juspay/hyperswitch/commit/8f6583fbeeb7ab7ac31566adf9d182a839ed9a51))
    - **config:** Add new type for kms encrypted values ([#1823](https://github.com/juspay/hyperswitch/pull/1823)) ([`73ed7ae`](https://github.com/juspay/hyperswitch/commit/73ed7ae7e305c391f413e3ac88775148db304779))

    **Full Changelog:** [`v1.14.1...v1.15.0`](https://github.com/juspay/hyperswitch/compare/v1.14.1...v1.15.0)

    - - -


    ## 1.14.1 (2023-08-02)

    ### Bug Fixes

    - Include merchant reference in CreateIntentRequest ([#1846](https://github.com/juspay/hyperswitch/pull/1846)) ([`db55ed0`](https://github.com/juspay/hyperswitch/commit/db55ed0f6dcb2442784da5d38d76810541c95051))

    **Full Changelog:** [`v1.14.0...v1.14.1`](https://github.com/juspay/hyperswitch/compare/v1.14.0...v1.14.1)

    - - -


    ## 1.14.0 (2023-08-02)

    ### Features

    - **Connector:** [Stripe] Implement Cashapp Wallet  ([#1103](https://github.com/juspay/hyperswitch/pull/1103)) ([`dadd13e`](https://github.com/juspay/hyperswitch/commit/dadd13e3819095273e710a1c6ba6e5f2fef2ed7e))
    - **connector:**
      - [iatapay] fix refund amount, hardcode IN for UPI, send merchant payment id ([#1824](https://github.com/juspay/hyperswitch/pull/1824)) ([`505aa21`](https://github.com/juspay/hyperswitch/commit/505aa218cf2b417929a7e2caaa8d820b5a68fe75))
      - [Adyen] implement Swish for Adyen ([#1701](https://github.com/juspay/hyperswitch/pull/1701)) ([`cf30255`](https://github.com/juspay/hyperswitch/commit/cf3025562ffdb9cbab77fe40795051faad750fd5))
      - [Trustpay] unify error_code, error_message and error_reason in error response ([#1817](https://github.com/juspay/hyperswitch/pull/1817)) ([`8a638e4`](https://github.com/juspay/hyperswitch/commit/8a638e4a089c772cd53742fa48f22f4bf8585c79))
      - [Stax] Implement Cards for Connector Stax ([#1773](https://github.com/juspay/hyperswitch/pull/1773)) ([`f492d0a`](https://github.com/juspay/hyperswitch/commit/f492d0a943ed57aadc7abed721f90ed9e19e0c88))
      - [Adyen] Implement Boleto Bancario in Vouchers and Add support for Voucher in Next Action ([#1657](https://github.com/juspay/hyperswitch/pull/1657)) ([`801946f`](https://github.com/juspay/hyperswitch/commit/801946f29f5701e3018f7fd54d3b3d0b4a13bc8e))
      - [Adyen] Add support for Blik ([#1727](https://github.com/juspay/hyperswitch/pull/1727)) ([`30e41a9`](https://github.com/juspay/hyperswitch/commit/30e41a9f2f73fa7406696c6bf3bb6b4a38c24405))
    - **core:** Added key should_cancel_transaction in update trackers to support Frm Pre flow cancellation ([#1811](https://github.com/juspay/hyperswitch/pull/1811)) ([`5d6510e`](https://github.com/juspay/hyperswitch/commit/5d6510eddf71b574f8d36743a56d1e6236af0bef))
    - **payment_methods:** Added value Field in required Field for Pre-filling ([#1827](https://github.com/juspay/hyperswitch/pull/1827)) ([`e047a11`](https://github.com/juspay/hyperswitch/commit/e047a11dedbceaf9778a0f4aed1f9658f4af6783))
    - **pii:** Implement a masking strategy for UPI VPAs ([#1641](https://github.com/juspay/hyperswitch/pull/1641)) ([`e3a33bb`](https://github.com/juspay/hyperswitch/commit/e3a33bb5c281ddf9c5746fad485bffa274a48b44))

    ### Bug Fixes

    - **connector:**
      - [Stripe] change payment_method name Wechatpay to wechatpayqr ([#1813](https://github.com/juspay/hyperswitch/pull/1813)) ([`208d619`](https://github.com/juspay/hyperswitch/commit/208d619409ee03b7115b7c6268457df12149bee1))
      - Refactor capture and refund flow for Connectors ([#1821](https://github.com/juspay/hyperswitch/pull/1821)) ([`d06adc7`](https://github.com/juspay/hyperswitch/commit/d06adc705c7c92307cdf3dd63b41c5ee1583a189))
      - [Payme] Fix refund request fields ([#1831](https://github.com/juspay/hyperswitch/pull/1831)) ([`6f8be0c`](https://github.com/juspay/hyperswitch/commit/6f8be0c675cb55237da9deffb857dc4958fb6828))
      - [Airwallex] Psync response ([#1826](https://github.com/juspay/hyperswitch/pull/1826)) ([`8f65819`](https://github.com/juspay/hyperswitch/commit/8f65819f1265577c9886f9c14ddfe16f2318d3d5))
      - Refactor psync and rsync for connectors ([#1830](https://github.com/juspay/hyperswitch/pull/1830)) ([`7a0d6f6`](https://github.com/juspay/hyperswitch/commit/7a0d6f69211a44d4e362fe0857cdda2ff5167f0a))
    - **payments:**
      - All AdditionalCardInfo fields optional ([#1840](https://github.com/juspay/hyperswitch/pull/1840)) ([`a1cb255`](https://github.com/juspay/hyperswitch/commit/a1cb255765394e7c91aa33bea72b2e48b597b443))
      - Write a foreign_from implementation for payment_method_data and add missing payment methods in helpers.rs ([#1801](https://github.com/juspay/hyperswitch/pull/1801)) ([`50298c1`](https://github.com/juspay/hyperswitch/commit/50298c19674cf75fe6a6aee4fa099a4885902357))
    - **ui-tests:**
      - Run ui-tests for each PR on approval ([#1839](https://github.com/juspay/hyperswitch/pull/1839)) ([`f2b370f`](https://github.com/juspay/hyperswitch/commit/f2b370f2855ccd77604fe73526a7edef81a90a47))
      - Allow ui tests on workflow dispatch ([#1843](https://github.com/juspay/hyperswitch/pull/1843)) ([`c9fd421`](https://github.com/juspay/hyperswitch/commit/c9fd421d09db5746e2a21a8132813d8e2bf5ec35))
    - Request amount fix for trustpay apple pay ([#1837](https://github.com/juspay/hyperswitch/pull/1837)) ([`3da69f3`](https://github.com/juspay/hyperswitch/commit/3da69f3ee160b022a3e2cf64c78833eb3fd95aea))

    ### Refactors

    - **multiple_mca:** Make `primary_business_detail` optional and remove default values ([#1677](https://github.com/juspay/hyperswitch/pull/1677)) ([`9c7ac62`](https://github.com/juspay/hyperswitch/commit/9c7ac6246d6cf434855bc61f7cd625101665de5c))
    - **redis:** Invoke `redis_conn()` method instead of cloning `redis_conn` property in `StorageInterface` ([#1552](https://github.com/juspay/hyperswitch/pull/1552)) ([`f32fdec`](https://github.com/juspay/hyperswitch/commit/f32fdec290a2f303887550d8db1ae2a3c065bafe))
    - **router:** Include currency conversion utility functions as `Currency` methods ([#1790](https://github.com/juspay/hyperswitch/pull/1790)) ([`2c9c8f0`](https://github.com/juspay/hyperswitch/commit/2c9c8f081d7a99574dacae471ca2996ea2b2aa44))
    - **ui_tests:** Move ui_tests to test_utils crate to reduce development time ([#1822](https://github.com/juspay/hyperswitch/pull/1822)) ([`5773faf`](https://github.com/juspay/hyperswitch/commit/5773faf739f1525cfe442c2df9d33f7475cf6b7c))

    **Full Changelog:** [`v1.13.2...v1.14.0`](https://github.com/juspay/hyperswitch/compare/v1.13.2...v1.14.0)

    - - -


    ## 1.13.2 (2023-08-01)

    ### Bug Fixes

    - **webhook:** Provide acknowledgment for webhooks with unsupported event types ([#1815](https://github.com/juspay/hyperswitch/pull/1815)) ([`28a371b`](https://github.com/juspay/hyperswitch/commit/28a371b24a590787a569f08d84149515b46ebda6))

    **Full Changelog:** [`v1.13.1...v1.13.2`](https://github.com/juspay/hyperswitch/compare/v1.13.1...v1.13.2)

    - - -


    ## 1.13.1 (2023-07-31)

    ### Bug Fixes

    - **connector:** [Trustpay] send billing address name as cardholder name ([#1806](https://github.com/juspay/hyperswitch/pull/1806)) ([`71b75c6`](https://github.com/juspay/hyperswitch/commit/71b75c653845685b71c6fb6007a718b6cb2c65c5))
    - **logs:** Remove request from logs ([#1810](https://github.com/juspay/hyperswitch/pull/1810)) ([`5ad3950`](https://github.com/juspay/hyperswitch/commit/5ad3950892fc0c84b26092b0732dd18d2d913d12))

    ### Testing

    - **connector:** Refactor UI test for connectors ([#1807](https://github.com/juspay/hyperswitch/pull/1807)) ([`34ff408`](https://github.com/juspay/hyperswitch/commit/34ff4080aeb4e8dacdeb13f2b5c17d8ead9561c8))

    **Full Changelog:** [`v1.13.0...v1.13.1`](https://github.com/juspay/hyperswitch/compare/v1.13.0...v1.13.1)

    - - -


    ## 1.13.0 (2023-07-28)

    ### Features

    - **dummy_connector:** Add 3DS Flow, Wallets and Pay Later for Dummy Connector ([#1781](https://github.com/juspay/hyperswitch/pull/1781)) ([`8186c77`](https://github.com/juspay/hyperswitch/commit/8186c778bddb8932b37e5cf4c7b3e2d507f73e89))
    - **router:** Validate payment method type in payments request against given payment method data for non-card flows ([#1236](https://github.com/juspay/hyperswitch/pull/1236)) ([`7607b6b`](https://github.com/juspay/hyperswitch/commit/7607b6b67153fce1e965d7ef7e41c62380884d8f))

    ### Bug Fixes

    - **Connector:** [Noon] Update ApplePay Payment Struct ([#1794](https://github.com/juspay/hyperswitch/pull/1794)) ([`b96687c`](https://github.com/juspay/hyperswitch/commit/b96687c3fa863af76afef68170ee2c59946b76fd))
    - **router:** Add validation for all the connector auth type ([#1748](https://github.com/juspay/hyperswitch/pull/1748)) ([`1cda7ad`](https://github.com/juspay/hyperswitch/commit/1cda7ad5fccb64c1adefc24a47b79b8315f91a59))

    ### Documentation

    - Add renewed links for readme ([#1796](https://github.com/juspay/hyperswitch/pull/1796)) ([`e06e62c`](https://github.com/juspay/hyperswitch/commit/e06e62cc75497cb245fa115bb718a29c31e577c5))

    **Full Changelog:** [`v1.12.0...v1.13.0`](https://github.com/juspay/hyperswitch/compare/v1.12.0...v1.13.0)

    - - -


    ## 1.12.0 (2023-07-27)

    ### Features

    - **connector:** [Zen] Add Latam Payment Methods ([#1670](https://github.com/juspay/hyperswitch/pull/1670)) ([`4df67ad`](https://github.com/juspay/hyperswitch/commit/4df67adb9bb110f1c5f3fc094fe21bf4741cda46))
    - **core:** Changed frm_config format type in merchant_connector_account and added frm_message in payments response ([#1543](https://github.com/juspay/hyperswitch/pull/1543)) ([`c284f41`](https://github.com/juspay/hyperswitch/commit/c284f41cc685b4a5093be12ec4b5e4b503de82b5))
    - **errors:** Add `GenericDuplicateError` in`ApiErrorResponse` ([#1792](https://github.com/juspay/hyperswitch/pull/1792)) ([`7f94716`](https://github.com/juspay/hyperswitch/commit/7f947169feac9d15616cc2b1a2aacdfa80f219bf))
    - **router:**
      - Add grouping and priority logic in connector utils to handle multiple errors in connector flows ([#1765](https://github.com/juspay/hyperswitch/pull/1765)) ([`e6a5e9f`](https://github.com/juspay/hyperswitch/commit/e6a5e9fa72d28c7b0031aa23817ae234e8f81da0))
      - Apply filters on payments ([#1744](https://github.com/juspay/hyperswitch/pull/1744)) ([`04c3de7`](https://github.com/juspay/hyperswitch/commit/04c3de73a51060ab567a4b53dce678020bcc7dfa))
    - Api contract for gift cards ([#1634](https://github.com/juspay/hyperswitch/pull/1634)) ([`8369626`](https://github.com/juspay/hyperswitch/commit/836962677b955bbe761d6c18596cbb964d8e83ad))

    ### Bug Fixes

    - **connector:**
      - [Powertranz] Fix response handling for https status code other than 200 ([#1775](https://github.com/juspay/hyperswitch/pull/1775)) ([`4805a94`](https://github.com/juspay/hyperswitch/commit/4805a94ab905da520edacdddab41e9e74bd3a956))
      - [Klarna] Handle error response with both error_messages and error_message fields ([#1783](https://github.com/juspay/hyperswitch/pull/1783)) ([`9cfdce0`](https://github.com/juspay/hyperswitch/commit/9cfdce0abe8a0c6ded458cdd4b07a8cb4098e504))
    - **router:** Add manual retry flag in Re-direction url ([#1791](https://github.com/juspay/hyperswitch/pull/1791)) ([`20f6644`](https://github.com/juspay/hyperswitch/commit/20f664408ac1e3ee795ee26b128380185e8fc2f0))

    ### Refactors

    - **core:** Use secrets for connector AuthType in connector integration ([#1441](https://github.com/juspay/hyperswitch/pull/1441)) ([`d068569`](https://github.com/juspay/hyperswitch/commit/d068569f4debe25ee94802b29b4765d473891547))

    ### Revert

    - Feat(connector): [Adyen] Add pix support for adyen ([#1795](https://github.com/juspay/hyperswitch/pull/1795)) ([`38f14b9`](https://github.com/juspay/hyperswitch/commit/38f14b9f39370e89e0176d8e0255f8fcb624efca))

    **Full Changelog:** [`v1.11.0...v1.12.0`](https://github.com/juspay/hyperswitch/compare/v1.11.0...v1.12.0)

    - - -


    ## 1.11.0 (2023-07-26)

    ### Features

    - **compatibility:** Add wallet mandate support setup intent and connector_metadata field ([#1767](https://github.com/juspay/hyperswitch/pull/1767)) ([`af9a458`](https://github.com/juspay/hyperswitch/commit/af9a4585b26b278ffb298d4e8de13479da447d5f))
    - **connector:**
      - [Boku] Template generation ([#1760](https://github.com/juspay/hyperswitch/pull/1760)) ([`78c6cce`](https://github.com/juspay/hyperswitch/commit/78c6ccea2ef88dcd02d74d173021a1e57092e1b7))
      - [Stripe, Adyen, Checkout] Add reference ID support for retries ([#1735](https://github.com/juspay/hyperswitch/pull/1735)) ([`9ba8ec3`](https://github.com/juspay/hyperswitch/commit/9ba8ec348b1e377521386d751c2a924ad843ce8d))
      - [Adyen] Add pix support for adyen ([#1703](https://github.com/juspay/hyperswitch/pull/1703)) ([`33a1368`](https://github.com/juspay/hyperswitch/commit/33a1368e8a0961610d652f5a6834ba37b995582a))
    - **db:** Implement `MerchantKeyStoreInterface` for `MockDb` ([#1772](https://github.com/juspay/hyperswitch/pull/1772)) ([`f3baf2f`](https://github.com/juspay/hyperswitch/commit/f3baf2ff3f0a50a5558316625ade647e7607d6c2))
    - **macro:** Add config validation macro for connectors ([#1755](https://github.com/juspay/hyperswitch/pull/1755)) ([`37a0651`](https://github.com/juspay/hyperswitch/commit/37a06516603e3c8d3e7cf367530266c055a6cb0a))
    - **router:** Add merchant_id check for manual_retry_allowed flag sent in payments response ([#1785](https://github.com/juspay/hyperswitch/pull/1785)) ([`435c939`](https://github.com/juspay/hyperswitch/commit/435c9395762428843699f001c0c8f80489c662ad))

    ### Bug Fixes

    - **connector:**
      - [Bluesnap] Populate Error Reason and Update error handling ([#1787](https://github.com/juspay/hyperswitch/pull/1787)) ([`5c6bcb5`](https://github.com/juspay/hyperswitch/commit/5c6bcb594eca050c2abbd3cc622c7e2d527b31be))
      - [Tsys] Update endpoint and unit tests ([#1730](https://github.com/juspay/hyperswitch/pull/1730)) ([`8223f8b`](https://github.com/juspay/hyperswitch/commit/8223f8b29a3b236bf310986013aa0b0b1c9bd7d4))
    - **redis_interface:** Add back Redis pool connect step ([#1789](https://github.com/juspay/hyperswitch/pull/1789)) ([`1f8e790`](https://github.com/juspay/hyperswitch/commit/1f8e790b14b049a540474882327545b4434665ee))

    ### Refactors

    - **fix:** [Mollie] Add support for both HeaderKey and BodyKey AuthType ([#1761](https://github.com/juspay/hyperswitch/pull/1761)) ([`07c60f8`](https://github.com/juspay/hyperswitch/commit/07c60f8abf32fb500c6dcf974b8444de476fb210))
    - **redis_interface:** Remove the `Drop` implementation on `RedisConnectionPool` ([#1786](https://github.com/juspay/hyperswitch/pull/1786)) ([`ac17b11`](https://github.com/juspay/hyperswitch/commit/ac17b11e09115947e7cf76d66d3ad35c59b47258))

    ### Testing

    - **UI-tests:** Allow ignoring connector tests at runtime ([#1766](https://github.com/juspay/hyperswitch/pull/1766)) ([`884f284`](https://github.com/juspay/hyperswitch/commit/884f284263e243b3a8342ed1c728411fb438e4f9))
    - **connector:** [Nexinets] Add UI test for Nexinets Payment methods ([#1784](https://github.com/juspay/hyperswitch/pull/1784)) ([`bf62a7c`](https://github.com/juspay/hyperswitch/commit/bf62a7c9ad8ea35c141e9fcf4edee02ff5856753))

    **Full Changelog:** [`v1.10.2...v1.11.0`](https://github.com/juspay/hyperswitch/compare/v1.10.2...v1.11.0)

    - - -


    ## 1.10.2 (2023-07-25)

    ### Bug Fixes

    - **connector:** [Paypal] fix amount to its currency base unit ([#1780](https://github.com/juspay/hyperswitch/pull/1780)) ([`f40d144`](https://github.com/juspay/hyperswitch/commit/f40d1441787977b911f72abe3d9112e4c25817d0))

    ### Revert

    - Connector_label in webhook url is reverted back to connector_name ([#1779](https://github.com/juspay/hyperswitch/pull/1779)) ([`a229c37`](https://github.com/juspay/hyperswitch/commit/a229c37a7cd71fbbd73b4aa1378d1d326cb3bbe8))

    **Full Changelog:** [`v1.10.1...v1.10.2`](https://github.com/juspay/hyperswitch/compare/v1.10.1...v1.10.2)

    - - -


    ## 1.10.1 (2023-07-25)

    ### Bug Fixes

    - **config:** Detect duplicate config insert and throw appropriate error ([#1777](https://github.com/juspay/hyperswitch/pull/1777)) ([`1ab4226`](https://github.com/juspay/hyperswitch/commit/1ab4226c780e9205785f012fd1c48c7a4bafb48f))
    - **connector:**
      - [Paypal] Fix payment status for PayPal cards ([#1749](https://github.com/juspay/hyperswitch/pull/1749)) ([`88b4b96`](https://github.com/juspay/hyperswitch/commit/88b4b9679d6de62bad7d52442be4565894a1d43b))
      - Apple pay not working because of payment_method_type[] field stripe ([#1759](https://github.com/juspay/hyperswitch/pull/1759)) ([`039a859`](https://github.com/juspay/hyperswitch/commit/039a85977b6479710625e2f7f0c0f9ca0b52571b))
    - **core:** Address 500 when deleting payment method and add logs to postman collections ([#1695](https://github.com/juspay/hyperswitch/pull/1695)) ([`df3970f`](https://github.com/juspay/hyperswitch/commit/df3970f20a8d31a856d4e7323a6cbfbb5838a9b3))
    - **router:**
      - Validate schedule time before scheduling API key expiry reminder ([#1776](https://github.com/juspay/hyperswitch/pull/1776)) ([`7b1dc78`](https://github.com/juspay/hyperswitch/commit/7b1dc78de5b4396c4ca66da27fa986287c144f22))
      - Restricted unknown customer_id to be pass in payment confirm and update call ([#1758](https://github.com/juspay/hyperswitch/pull/1758)) ([`32c7324`](https://github.com/juspay/hyperswitch/commit/32c73243c06db9e0e1210653bb79ff528d7e8dc5))

    ### Refactors

    - **payments:** Dont update client secret on payment intent status update ([#1778](https://github.com/juspay/hyperswitch/pull/1778)) ([`b719725`](https://github.com/juspay/hyperswitch/commit/b719725864c99b655956ab906e26dead71490b75))

    ### Documentation

    - **postman:** Added a note about how postman now requires you to fork a collection in order to send a request ([#1769](https://github.com/juspay/hyperswitch/pull/1769)) ([`1afc548`](https://github.com/juspay/hyperswitch/commit/1afc54837d5988eaf41f434474c30ec511681bbe))

    ### Miscellaneous Tasks

    - **config:** [Paypal] Add configs for PayPal mandates for adyen ([#1774](https://github.com/juspay/hyperswitch/pull/1774)) ([`bad9b94`](https://github.com/juspay/hyperswitch/commit/bad9b9482398bb624cb34ae7021837f7af6e8e00))

    **Full Changelog:** [`v1.10.0...v1.10.1`](https://github.com/juspay/hyperswitch/compare/v1.10.0...v1.10.1)

    - - -


    ## 1.10.0 (2023-07-21)

    ### Features

    - **connector:**
      - [Adyen] implement Online Banking Fpx for Adyen ([#1584](https://github.com/juspay/hyperswitch/pull/1584)) ([`2e492ee`](https://github.com/juspay/hyperswitch/commit/2e492ee6a9e767ef8a30446e3474f13c35afe607))
      - [Adyen] implement Online Banking Thailand for Adyen ([#1585](https://github.com/juspay/hyperswitch/pull/1585)) ([`0c3cf05`](https://github.com/juspay/hyperswitch/commit/0c3cf05ffc56ce60805a8ba7ee5b34b011261f67))
      - [Stripe] Add support for Blik ([#1565](https://github.com/juspay/hyperswitch/pull/1565)) ([`0589c57`](https://github.com/juspay/hyperswitch/commit/0589c572c48338fb8182dcd5de63e3fee574ced3))
      - [Adyen] implement Touch n Go for Adyen ([#1588](https://github.com/juspay/hyperswitch/pull/1588)) ([`8e45e73`](https://github.com/juspay/hyperswitch/commit/8e45e734c87981ce0a8a96f218bc1033dc63af76))
      - [Adyen] implement Atome for Adyen ([#1590](https://github.com/juspay/hyperswitch/pull/1590)) ([`3c5d725`](https://github.com/juspay/hyperswitch/commit/3c5d725cc204b83bca6d916293f6af6cf3648ff1))

    ### Bug Fixes

    - **compatibility:** Map connector_metadata to core request ([#1753](https://github.com/juspay/hyperswitch/pull/1753)) ([`f340860`](https://github.com/juspay/hyperswitch/commit/f340860d793a353e91f2bc4ad197021d7e518aaf))
    - **connector:**
      - [Authorizedotnet] Convert amount from cents to dollar before sending to connector ([#1756](https://github.com/juspay/hyperswitch/pull/1756)) ([`a685a9a`](https://github.com/juspay/hyperswitch/commit/a685a9aac5551768cd1afb4836ffae4385cd0fad))
      - [Adyen] Fix error message for fraud check from Adyen connector ([#1763](https://github.com/juspay/hyperswitch/pull/1763)) ([`78ce8f7`](https://github.com/juspay/hyperswitch/commit/78ce8f756357b89795fbb6351e897bfe6d1117c0))
    - **router:** Add additional card info in payment response ([#1745](https://github.com/juspay/hyperswitch/pull/1745)) ([`a891708`](https://github.com/juspay/hyperswitch/commit/a891708f6780e3830b1e6ee92268ae70e6fc4860))
    - **template:** Address add_connector.sh throwing errors when creating new connector template ([#1679](https://github.com/juspay/hyperswitch/pull/1679)) ([`3951561`](https://github.com/juspay/hyperswitch/commit/3951561752bf8f22e55b983788325c1e072e4168))
    - Remove payout test cases from connector-template ([#1757](https://github.com/juspay/hyperswitch/pull/1757)) ([`d433a98`](https://github.com/juspay/hyperswitch/commit/d433a98d1fd93aef9566287e0340879f412e5c2b))

    ### Testing

    - Fix failing unit tests ([#1743](https://github.com/juspay/hyperswitch/pull/1743)) ([`c4c9424`](https://github.com/juspay/hyperswitch/commit/c4c94241a942fd3620f818d70dc2cdeb97cb0e85))

    **Full Changelog:** [`v1.9.0...v1.10.0`](https://github.com/juspay/hyperswitch/compare/v1.9.0...v1.10.0)

    - - -


    ## 1.9.0 (2023-07-20)

    ### Features

    - **connector:**
      - [Adyen] implement Momo for Adyen ([#1583](https://github.com/juspay/hyperswitch/pull/1583)) ([`96933f2`](https://github.com/juspay/hyperswitch/commit/96933f2636e39b96435cba8e59b96b8c59413f39))
      - [Adyen] Implement Alma BNPL and DANA Wallet ([#1566](https://github.com/juspay/hyperswitch/pull/1566)) ([`5dcf758`](https://github.com/juspay/hyperswitch/commit/5dcf758ac04716e194601c1571851f07a7d24fcc))
    - **metrics:** Add pod information in metrics pipeline ([#1710](https://github.com/juspay/hyperswitch/pull/1710)) ([`cf145a3`](https://github.com/juspay/hyperswitch/commit/cf145a321c4c797f0efa44f846f19048ea69e7ec))
    - Add payout service ([#1665](https://github.com/juspay/hyperswitch/pull/1665)) ([`763e2df`](https://github.com/juspay/hyperswitch/commit/763e2df3bdfb426214d94c56529d98f453452266))

    ### Bug Fixes

    - **adyen_ui:** Ignore tests failing from connector side ([#1751](https://github.com/juspay/hyperswitch/pull/1751)) ([`e0f4507`](https://github.com/juspay/hyperswitch/commit/e0f4507b1009c481ecd8216ccd41f44fbc0ccb36))
    - **connector:**
      - [PowerTranz] error message from response_code in absence of errors object & comment billing and shipping as it is optional ([#1738](https://github.com/juspay/hyperswitch/pull/1738)) ([`54f7ab7`](https://github.com/juspay/hyperswitch/commit/54f7ab7ae14fa593fa9749c0d67807f68247e899))
      - Update amount captured after webhook call and parse error responses from connector properly ([#1680](https://github.com/juspay/hyperswitch/pull/1680)) ([`cac9f50`](https://github.com/juspay/hyperswitch/commit/cac9f5049e8abee78c260c523e871754cfc2b22c))
      - Deserialization error due to latest_charge stripe ([#1740](https://github.com/juspay/hyperswitch/pull/1740)) ([`c53631e`](https://github.com/juspay/hyperswitch/commit/c53631ef55645e45cb0c3165e79d389e0100b4ac))
      - Stripe mandate failure and other ui tests failures ([#1742](https://github.com/juspay/hyperswitch/pull/1742)) ([`ea119eb`](https://github.com/juspay/hyperswitch/commit/ea119eb856cf47c5e28117ba9ecfce722aff541f))

    ### Testing

    - **connector:**
      - [Authorizedotnet] Add UI test for Authorizedotnet Payment methods  ([#1736](https://github.com/juspay/hyperswitch/pull/1736)) ([`f44cc1e`](https://github.com/juspay/hyperswitch/commit/f44cc1e10705f167d332779a2dc0141566ac765e))
      - [Adyen] Add UI test for Adyen Payment methods ([#1648](https://github.com/juspay/hyperswitch/pull/1648)) ([`2e9b783`](https://github.com/juspay/hyperswitch/commit/2e9b78329a6bb6d400588578f7b83bc1201cc151))
      - [Noon] Add test for Noon Payment methods ([#1714](https://github.com/juspay/hyperswitch/pull/1714)) ([`f06e5dc`](https://github.com/juspay/hyperswitch/commit/f06e5dcd63affd9919d936884e055344bcd3e8ba))

    **Full Changelog:** [`v1.8.0...v1.9.0`](https://github.com/juspay/hyperswitch/compare/v1.8.0...v1.9.0)

    - - -


    ## 1.8.0 (2023-07-19)

    ### Features

    - **connector:**
      - [Adyen] Implement Gcash for Adyen ([#1576](https://github.com/juspay/hyperswitch/pull/1576)) ([`df0ef15`](https://github.com/juspay/hyperswitch/commit/df0ef157c3a107f8b3d2bbf37ef9e19ea66425fc))
      - [Adyen] Implement Vipps in Wallets ([#1554](https://github.com/juspay/hyperswitch/pull/1554)) ([`e271ced`](https://github.com/juspay/hyperswitch/commit/e271ced69e64ac65d8e16a699531b12cbe4289dc))
    - **merchant_account:** Add `is_recon_enabled` field in merchant_account ([#1713](https://github.com/juspay/hyperswitch/pull/1713)) ([`7549cd3`](https://github.com/juspay/hyperswitch/commit/7549cd3aa62fa2cb2d9e393bd1f3a0c49cbd6dda))

    ### Bug Fixes

    - **connector:**
      - [PowerTranz] resolve pr comments and add comments ([#1726](https://github.com/juspay/hyperswitch/pull/1726)) ([`432a8e0`](https://github.com/juspay/hyperswitch/commit/432a8e02e98494bd20bcb8c2a1a425f9504b86c7))
      - [PowerTranz] fix rsync not implemented error ([#1734](https://github.com/juspay/hyperswitch/pull/1734)) ([`d52b564`](https://github.com/juspay/hyperswitch/commit/d52b564f09c63067b56684fa36d8940e45ccfccc))
      - [PowerTranz] removing optional field shipping address ([#1737](https://github.com/juspay/hyperswitch/pull/1737)) ([`63eac1f`](https://github.com/juspay/hyperswitch/commit/63eac1fdd6ca43f4a87a5008f53bbac5e5d03c37))
    - **webhook:** Do not fail webhook verification if merchant_secret is not set by merchant ([#1732](https://github.com/juspay/hyperswitch/pull/1732)) ([`374f2c2`](https://github.com/juspay/hyperswitch/commit/374f2c28cd2b5ec47f3e67eb3fb925cdff5c208a))

    ### Testing

    - **connector:** [Aci] Add UI test for Aci Payment Methods ([#1702](https://github.com/juspay/hyperswitch/pull/1702)) ([`fe7a5b0`](https://github.com/juspay/hyperswitch/commit/fe7a5b039c6221e8ff7f8841e6d5356446b3de20))

    **Full Changelog:** [`v1.7.0...v1.8.0`](https://github.com/juspay/hyperswitch/compare/v1.7.0...v1.8.0)

    - - -


    ## 1.7.0 (2023-07-18)

    ### Features

    - **connector:**
      - [Adyen] Implement Twint in Wallets ([#1549](https://github.com/juspay/hyperswitch/pull/1549)) ([`d317021`](https://github.com/juspay/hyperswitch/commit/d317021bc55af8b45cb48b572d44a957d57e7d28))
      - [Stax] Add template code for Stax connector ([#1698](https://github.com/juspay/hyperswitch/pull/1698)) ([`f932d66`](https://github.com/juspay/hyperswitch/commit/f932d66c52a8b8ff78b90d1cd1b02ab068778ba0))
      - [Bluesnap] Remove wallet call  ([#1620](https://github.com/juspay/hyperswitch/pull/1620)) ([`ec35d55`](https://github.com/juspay/hyperswitch/commit/ec35d55da69ee3fef9048de14fc54b10abb32d18))
      - [Adyen] implement Kakao for Adyen ([#1558](https://github.com/juspay/hyperswitch/pull/1558)) ([`11ad9be`](https://github.com/juspay/hyperswitch/commit/11ad9beda81659da080aeb454cbea0476d0639dc))

    ### Bug Fixes

    - **build:** Add a standalone Redis mode in docker-compose installation ([#1661](https://github.com/juspay/hyperswitch/pull/1661)) ([`ee1f6cc`](https://github.com/juspay/hyperswitch/commit/ee1f6ccb4cde3142d0a853dc1b04ac3792a4e68b))
    - **router:** Add parsing for `connector_request_reference_id` env ([#1731](https://github.com/juspay/hyperswitch/pull/1731)) ([`110fbe9`](https://github.com/juspay/hyperswitch/commit/110fbe9fc546e51ad945da31f25f242273646ed0))

    ### Refactors

    - **router:** Remove `WebhookApiErrorSwitch ` and implement error mapping using `ErrorSwitch` ([#1660](https://github.com/juspay/hyperswitch/pull/1660)) ([`a7c66dd`](https://github.com/juspay/hyperswitch/commit/a7c66ddea206ea1d22be6ddb1a503badf76fe2cf))

    **Full Changelog:** [`v1.6.0...v1.7.0`](https://github.com/juspay/hyperswitch/compare/v1.6.0...v1.7.0)

    - - -


    ## 1.6.0 (2023-07-17)

    ### Features

    - **compatibility:**
      - [upi] add upi pm in compatibility layer, convert amount to base unit in iatapay ([#1711](https://github.com/juspay/hyperswitch/pull/1711)) ([`5213656`](https://github.com/juspay/hyperswitch/commit/5213656fac1cd1372374bfdcd90d41487e7aa387))
      - Add support for stripe compatible webhooks ([#1728](https://github.com/juspay/hyperswitch/pull/1728)) ([`87ae99f`](https://github.com/juspay/hyperswitch/commit/87ae99f7f2247f92078064169f998519cdfcf27b))
    - **connector:**
      - [Adyen] Implement Bizum in Bank Redirects ([#1589](https://github.com/juspay/hyperswitch/pull/1589)) ([`c654d76`](https://github.com/juspay/hyperswitch/commit/c654d76660fcca18f54e270920b1d6976a01972b))
      - [Globepay] Add Refund and Refund Sync flow ([#1706](https://github.com/juspay/hyperswitch/pull/1706)) ([`c72a592`](https://github.com/juspay/hyperswitch/commit/c72a592e5e1d5c8ed16ae8fea89a7e3cfd365532))
      - [Mollie] Implement card 3ds ([#1421](https://github.com/juspay/hyperswitch/pull/1421)) ([`91f969a`](https://github.com/juspay/hyperswitch/commit/91f969a2908f4e7b0101a212567305888f51e236))
      - [PowerTranz] Add cards 3ds support for PowerTranz connector ([#1722](https://github.com/juspay/hyperswitch/pull/1722)) ([`95a45e4`](https://github.com/juspay/hyperswitch/commit/95a45e49786db4980fac8e347534048100e24039))
      - [Tsys] Add cards for Payments and Refunds flow ([#1716](https://github.com/juspay/hyperswitch/pull/1716)) ([`714cd27`](https://github.com/juspay/hyperswitch/commit/714cd275b32d16e24a8c1e5f181f97537947a3b9))
      - [Adyen] Implement Clearpay in BNPL ([#1546](https://github.com/juspay/hyperswitch/pull/1546)) ([`abed197`](https://github.com/juspay/hyperswitch/commit/abed197366035a03810b36eead590f189d83e6ac))
      - [Adyen] implement Gopay for Adyen ([#1557](https://github.com/juspay/hyperswitch/pull/1557)) ([`de2d9bd`](https://github.com/juspay/hyperswitch/commit/de2d9bd059ed82b34a6f0656492348693b985ec4))
    - **mandates:** Recurring payment support for bank redirect and bank debit payment method for stripe ([#1119](https://github.com/juspay/hyperswitch/pull/1119)) ([`14c2d72`](https://github.com/juspay/hyperswitch/commit/14c2d72509c7fae648bbef620c2e3ef82aa9d8d6))
    - **router:**
      - Add attempt_count field in attempt update record of payment_intent ([#1725](https://github.com/juspay/hyperswitch/pull/1725)) ([`95de3a5`](https://github.com/juspay/hyperswitch/commit/95de3a579d073060dd0e4eca382650042bfd6737))
      - Restricted customer update in payments-confirm and payments-update call via clientAuth ([#1659](https://github.com/juspay/hyperswitch/pull/1659)) ([`94a5eb3`](https://github.com/juspay/hyperswitch/commit/94a5eb35335afb4c38f4af62aef1a195f30ec448))

    ### Bug Fixes

    - **ci:** Run UI tests only for 15mins max in case of build failure ([#1718](https://github.com/juspay/hyperswitch/pull/1718)) ([`16a2c46`](https://github.com/juspay/hyperswitch/commit/16a2c46affbd4319ee1106e08922e7f3094adfbe))
    - **connector:**
      - [Adyen] Fix Klarna mandates for Adyen ([#1717](https://github.com/juspay/hyperswitch/pull/1717)) ([`c34a049`](https://github.com/juspay/hyperswitch/commit/c34a049506e18fa5f0c458676e54e54f95a1609e))
      - [Adyen] Add bizum in common enums ([#1719](https://github.com/juspay/hyperswitch/pull/1719)) ([`cbde4a6`](https://github.com/juspay/hyperswitch/commit/cbde4a6d7b65cfe11de51f7fd348e238f7ff9500))
      - [Multisafepay] Fix bug in Paypal payment decline and cancel ([#1647](https://github.com/juspay/hyperswitch/pull/1647)) ([`a77ab42`](https://github.com/juspay/hyperswitch/commit/a77ab42f4fde59a48d1e044295b0955152b99b58))
    - **payments:** Populate mandate_data in the response body of the PaymentsCreate endpoint ([#1715](https://github.com/juspay/hyperswitch/pull/1715)) ([`fb149cb`](https://github.com/juspay/hyperswitch/commit/fb149cb0ff750fbaadf22d263be0f7bfe1574e37))
    - **refunds:** Modify refund fields to process updating of refund_reason ([#1544](https://github.com/juspay/hyperswitch/pull/1544)) ([`9890570`](https://github.com/juspay/hyperswitch/commit/9890570274e344c474b2b0033033ae70e0314cc8))
    - **router:** Convert ephemeral to client secret auth list payment_method_customer ([#1602](https://github.com/juspay/hyperswitch/pull/1602)) ([`5fbd1cc`](https://github.com/juspay/hyperswitch/commit/5fbd1cc3c787a64634aac640ced9e2dce59b036d))

    ### Refactors

    - **pm_list:** Update required fields for a payment method ([#1720](https://github.com/juspay/hyperswitch/pull/1720)) ([`8dd9fcc`](https://github.com/juspay/hyperswitch/commit/8dd9fcc2c594f4aebd2f0418986836fce6e5c242))

    ### Revert

    - Refactor(pm_list): Update required fields for a payment method ([#1724](https://github.com/juspay/hyperswitch/pull/1724)) ([`c6f7455`](https://github.com/juspay/hyperswitch/commit/c6f745540fa3096f8024ca29546a006395aa4bf2))

    **Full Changelog:** [`v1.5.0...v1.6.0`](https://github.com/juspay/hyperswitch/compare/v1.5.0...v1.6.0)

    - - -


    ## 1.5.0 (2023-07-14)

    ### Features

    - **connector:**
      - [Tsys] Add template code for Tsys connector ([#1704](https://github.com/juspay/hyperswitch/pull/1704)) ([`7609895`](https://github.com/juspay/hyperswitch/commit/76098952105c101c88410c6aa78c2c56298f0aaa))
      - [Authorizedotnet] Add Wallet support ([#1223](https://github.com/juspay/hyperswitch/pull/1223)) ([`05540ea`](https://github.com/juspay/hyperswitch/commit/05540ea17e6fda4ae37b31c46956b3c93f94f903))
      - [Adyen] Add support for PayPal wallet mandates ([#1686](https://github.com/juspay/hyperswitch/pull/1686)) ([`82fd844`](https://github.com/juspay/hyperswitch/commit/82fd84462072a7616806b0e06dc8a6812312f439))
    - **router:** Add expand attempts support in payments retrieve response ([#1678](https://github.com/juspay/hyperswitch/pull/1678)) ([`8572f1d`](https://github.com/juspay/hyperswitch/commit/8572f1da8eb57577b18537d3397f03448720ed3d))
    - Filter out payment_methods which does not support mandates during list api call ([#1318](https://github.com/juspay/hyperswitch/pull/1318)) ([`07aef53`](https://github.com/juspay/hyperswitch/commit/07aef53a5cd4cd70f75415e883d0e07d85244a1e))
    - Add `organization_id` to merchant account ([#1611](https://github.com/juspay/hyperswitch/pull/1611)) ([`7025b78`](https://github.com/juspay/hyperswitch/commit/7025b789b81221d45d7832460fab0c09b92aa9f9))

    ### Bug Fixes

    - **api_keys:** Fix API key being created for non-existent merchant account ([#1712](https://github.com/juspay/hyperswitch/pull/1712)) ([`c9e20dc`](https://github.com/juspay/hyperswitch/commit/c9e20dcd30beb1de0b571dc61a0e843eda3f8ae0))
    - **router:** Decrease payment method token time based on payment_intent creation time ([#1682](https://github.com/juspay/hyperswitch/pull/1682)) ([`ce1d205`](https://github.com/juspay/hyperswitch/commit/ce1d2052190623ff85b1af830fe3835300e4d025))
    - **ui-test:** Run UI tests only on merge-queue ([#1709](https://github.com/juspay/hyperswitch/pull/1709)) ([`cb0ca0c`](https://github.com/juspay/hyperswitch/commit/cb0ca0cc2f9909921d574dbaa759744edb4cc275))
    - Store and retrieve merchant secret from MCA table for webhooks source verification ([#1331](https://github.com/juspay/hyperswitch/pull/1331)) ([`a6645bd`](https://github.com/juspay/hyperswitch/commit/a6645bd3540f66ebfdfa352bce87700c3c67a069))

    ### Refactors

    - **CI-push:** Move merge_group to CI-push ([#1696](https://github.com/juspay/hyperswitch/pull/1696)) ([`08cca88`](https://github.com/juspay/hyperswitch/commit/08cca881c200a3e9a24fa780c035c37f51816ca9))
    - **payment_methods:** Remove legacy locker code  as it is not been used ([#1666](https://github.com/juspay/hyperswitch/pull/1666)) ([`8832dd6`](https://github.com/juspay/hyperswitch/commit/8832dd60b98e37a6a46452e9dc1381dd64c2720f))

    ### Testing

    - **connector:**
      - [Multisafepay] Add ui test for card 3ds ([#1688](https://github.com/juspay/hyperswitch/pull/1688)) ([`9112417`](https://github.com/juspay/hyperswitch/commit/9112417caee51117c170af6096825c5b1b2bd0e0))
      - [stripe] Add ui test for affirm ([#1694](https://github.com/juspay/hyperswitch/pull/1694)) ([`8c5703d`](https://github.com/juspay/hyperswitch/commit/8c5703df545007d8b61679bd57d0a58986ec10ce))

    ### Miscellaneous Tasks

    - Address Rust 1.71 clippy lints ([#1708](https://github.com/juspay/hyperswitch/pull/1708)) ([`2cf8ae7`](https://github.com/juspay/hyperswitch/commit/2cf8ae7817db0a74b744f41484db81e1c441ebf3))

    **Full Changelog:** [`v1.4.0...v1.5.0`](https://github.com/juspay/hyperswitch/compare/v1.4.0...v1.5.0)

    - - -


    ## 1.4.0 (2023-07-13)

    ### Features

    - **connector:**
      - [Globepay] add authorize and psync flow  ([#1639](https://github.com/juspay/hyperswitch/pull/1639)) ([`c119bfd`](https://github.com/juspay/hyperswitch/commit/c119bfdd7e93d345c340cf1282f47ab297b2c4e2))
      - [PowerTranz] Add cards support for PowerTranz connector ([#1687](https://github.com/juspay/hyperswitch/pull/1687)) ([`07120bf`](https://github.com/juspay/hyperswitch/commit/07120bf422048255f93d7073c4dcd2f853667ffd))
    - **payments:** Add client secret in redirect response  ([#1693](https://github.com/juspay/hyperswitch/pull/1693)) ([`f7d369a`](https://github.com/juspay/hyperswitch/commit/f7d369afa8b459a18a5ec0a36caebdb1a4fe72b4))
    - **router:** Add connector_response_reference_id in payments response ([#1664](https://github.com/juspay/hyperswitch/pull/1664)) ([`a3ea5dc`](https://github.com/juspay/hyperswitch/commit/a3ea5dc09c7aef016bf4c5839317cfbbbe48cdb5))

    ### Bug Fixes

    - **compatibility:**
      - Fix mismatched fields in the payments flow  ([#1640](https://github.com/juspay/hyperswitch/pull/1640)) ([`e0113b9`](https://github.com/juspay/hyperswitch/commit/e0113b98fd02d817a90f60fef177ee0faed02f68))
      - Fix AddressDetails in the customers flow ([#1654](https://github.com/juspay/hyperswitch/pull/1654)) ([`f48d6c4`](https://github.com/juspay/hyperswitch/commit/f48d6c4a2ba53a12b81eb491bd1cadc2b2be6a09))

    ### Refactors

    - **enums:** Move enums from `storage_models` and `api_models` crates to `common_enums` crate ([#1265](https://github.com/juspay/hyperswitch/pull/1265)) ([`c0e1d4d`](https://github.com/juspay/hyperswitch/commit/c0e1d4d3b014ee4d75b3e96b1347e54e722d82ab))
    - **payment_methods:** Fix db insert for payment method create ([#1651](https://github.com/juspay/hyperswitch/pull/1651)) ([`73f91a5`](https://github.com/juspay/hyperswitch/commit/73f91a5eee3046f5fcfbfaf1c772f53ea8bf6344))
    - **storage:** Update crate name to diesel models ([#1685](https://github.com/juspay/hyperswitch/pull/1685)) ([`5a0e8be`](https://github.com/juspay/hyperswitch/commit/5a0e8be8c4a6b112e0f0e5475c876e57802100ab))

    ### Testing

    - **connector:** [Trustpay] Add ui test for card 3ds  ([#1683](https://github.com/juspay/hyperswitch/pull/1683)) ([`3f756e5`](https://github.com/juspay/hyperswitch/commit/3f756e59c32aa667d7e244c1c7fe36394571b982))

    **Full Changelog:** [`v1.3.0...v1.4.0`](https://github.com/juspay/hyperswitch/compare/v1.3.0...v1.4.0)

    - - -


    ## 1.3.0 (2023-07-12)

    ### Features

    - **payments:** Dont delete client secret on success status ([#1692](https://github.com/juspay/hyperswitch/pull/1692)) ([`5216d22`](https://github.com/juspay/hyperswitch/commit/5216d22efcd291f7e460d1461ef16cef69ad6bd9))
    - Convert QrData into Qr data image source url ([#1674](https://github.com/juspay/hyperswitch/pull/1674)) ([`55ff761`](https://github.com/juspay/hyperswitch/commit/55ff761e9eca313327f67c1d271ea1672d12c339))

    ### Refactors

    - Include binary name in `crates_to_filter` for logging ([#1689](https://github.com/juspay/hyperswitch/pull/1689)) ([`123b34c`](https://github.com/juspay/hyperswitch/commit/123b34c7dca543194b230bc9e46e14758f8bfb34))

    **Full Changelog:** [`v1.2.0...v1.3.0`](https://github.com/juspay/hyperswitch/compare/v1.2.0...v1.3.0)

    - - -


    ## 1.2.0 (2023-07-11)

    ### Features

    - **connector:** [PowerTranz] Add template code for PowerTranz connector ([#1650](https://github.com/juspay/hyperswitch/pull/1650)) ([`f56f9d6`](https://github.com/juspay/hyperswitch/commit/f56f9d643451b9a7ff961b21fc6ec0eefac0ebdf))
    - **payments:** Add client_secret auth for payments retrieve ([#1663](https://github.com/juspay/hyperswitch/pull/1663)) ([`b428298`](https://github.com/juspay/hyperswitch/commit/b428298030b3c04a249f175b51b7904ab96e2ce7))
    - **pm_list:** Add required field info for crypto pay ([#1655](https://github.com/juspay/hyperswitch/pull/1655)) ([`6d4943d`](https://github.com/juspay/hyperswitch/commit/6d4943d825128250be4db54e88c3a67c01262636))
    - **router:** Add connector_request_reference_id in router_data based on merchant config ([#1627](https://github.com/juspay/hyperswitch/pull/1627)) ([`865db94`](https://github.com/juspay/hyperswitch/commit/865db9411da88b11546830ba28d72cc73ab41c10))

    ### Bug Fixes

    - **CI:** Fix msrv checks on github run on push to main ([#1645](https://github.com/juspay/hyperswitch/pull/1645)) ([`05ea08b`](https://github.com/juspay/hyperswitch/commit/05ea08bcc5c69e09462a4019830170dc0f67dfd9))
    - **core:**
      - Fix wallet payments throwing `Invalid 'payment_method_type' provided` and UI test issues ([#1633](https://github.com/juspay/hyperswitch/pull/1633)) ([`307a470`](https://github.com/juspay/hyperswitch/commit/307a470f7d838dc53df07a004ab89045ee0048ff))
      - Add Payment_Method_data in Redirection Form  ([#1668](https://github.com/juspay/hyperswitch/pull/1668)) ([`b043ce6`](https://github.com/juspay/hyperswitch/commit/b043ce6130bf27f6279401ec98237aa91632480a))
    - **locker:** Remove delete_locker_payment_method_by_lookup_key from payments_operation_core ([#1636](https://github.com/juspay/hyperswitch/pull/1636)) ([`b326c18`](https://github.com/juspay/hyperswitch/commit/b326c18f45703724b1c22c69debd15ada841bf2e))
    - **middleware:** Include `x-request-id` header in `access-control-expose-headers` header value ([#1673](https://github.com/juspay/hyperswitch/pull/1673)) ([`b1ae981`](https://github.com/juspay/hyperswitch/commit/b1ae981f82697f788d64bed146fd989a6eca16fe))
    - **router:**
      - Use `Connector` enum for `connector_name` field in `MerchantConnectorCreate` ([#1637](https://github.com/juspay/hyperswitch/pull/1637)) ([`e750a73`](https://github.com/juspay/hyperswitch/commit/e750a7332376a60843dde9e71adfa76ce48fd154))
      - Remove requires_customer_action status to payment confirm ([#1624](https://github.com/juspay/hyperswitch/pull/1624)) ([`69454ec`](https://github.com/juspay/hyperswitch/commit/69454ec55c1392aee7a5215f7dc0c834fd6613d2))
    - Map not found error properly in db_not found ([#1671](https://github.com/juspay/hyperswitch/pull/1671)) ([`fbd40b5`](https://github.com/juspay/hyperswitch/commit/fbd40b5ac44b7410da9d4b139b15561e20bca616))

    **Full Changelog:** [`v1.1.1...v1.2.0`](https://github.com/juspay/hyperswitch/compare/v1.1.1...v1.2.0)

    - - -


    ## 1.1.0 (2023-07-07)

    ### Features

    - **connector:**
      - [Globepay] Add template code for Globepay connector ([#1623](https://github.com/juspay/hyperswitch/pull/1623)) ([`06f92c2`](https://github.com/juspay/hyperswitch/commit/06f92c2c4c267e3d6ec914670684bb36b71ecd51))
      - [Payme] add Authorize, Sync, Capture, Refund, Refund Sync, Mandate & web hooks support for cards ([#1594](https://github.com/juspay/hyperswitch/pull/1594)) ([`093cc6a`](https://github.com/juspay/hyperswitch/commit/093cc6a71cb3060c06bc4e6238af8896b36308db))
    - **router:** Get filters for payments ([#1600](https://github.com/juspay/hyperswitch/pull/1600)) ([`d5891ec`](https://github.com/juspay/hyperswitch/commit/d5891ecbd4a110e3885d6504194f7c7811a413d3))
    - Add cache for api_key and mca tables ([#1212](https://github.com/juspay/hyperswitch/pull/1212)) ([`fc9057e`](https://github.com/juspay/hyperswitch/commit/fc9057ef2c601fd8a7deb5d10dc5678abd8e6f7b))

    ### Bug Fixes

    - **router:** Desc payment list for pagination ([#1556](https://github.com/juspay/hyperswitch/pull/1556)) ([`f77fdb7`](https://github.com/juspay/hyperswitch/commit/f77fdb7a6ed354151d8a758a734382a4c3b2698e))

    **Full Changelog:** [`v1.0.5...v1.1.0`](https://github.com/juspay/hyperswitch/compare/v1.0.5...v1.1.0)

    - - -

    ## 1.0.5 (2023-07-06)

    ### Features

    - **connector:** [Stripe] Add support for WeChat Pay and Qr code support in next action ([#1555](https://github.com/juspay/hyperswitch/pull/1555)) ([`a15a77d`](https://github.com/juspay/hyperswitch/commit/a15a77dea36fd13e92bd64014fc25014d51a3548))
    - **test:** Add support to run UI tests in CI pipeline ([#1539](https://github.com/juspay/hyperswitch/pull/1539)) ([`21f5e20`](https://github.com/juspay/hyperswitch/commit/21f5e20929dfef9ffdd2f20fb0fd190c59e35316))

    ### Bug Fixes

    - **connector:** [Rapyd] Add router_return_url in 3DS request ([#1621](https://github.com/juspay/hyperswitch/pull/1621)) ([`e913bfc`](https://github.com/juspay/hyperswitch/commit/e913bfc4958da613cd352eca9bc38b23ab7ac38e))

    ### Refactors

    - **payments:** Error message of manual retry ([#1617](https://github.com/juspay/hyperswitch/pull/1617)) ([`fad4895`](https://github.com/juspay/hyperswitch/commit/fad4895f756811bb0af9ccbc69b9f6dfff3ab32f))

    **Full Changelog:** [`v1.0.4...v1.0.5`](https://github.com/juspay/hyperswitch/compare/v1.0.4...v1.0.5)

    - - -

    ## 1.0.4 (2023-07-05)

    ### Features

    - **connector:** [DummyConnector] add new dummy connectors ([#1609](https://github.com/juspay/hyperswitch/pull/1609)) ([`cf7b672`](https://github.com/juspay/hyperswitch/commit/cf7b67286c5102f457595e287f4f9315046fe267))
    - **payments:** Add connector_metadata, metadata and feature_metadata fields in payments, remove udf field ([#1595](https://github.com/juspay/hyperswitch/pull/1595)) ([`e713b62`](https://github.com/juspay/hyperswitch/commit/e713b62ae3444ef9a9a8984f9fd593936734dc41))
    - **router:**
      - Modify attempt_id generation logic to accommodate payment_id as prefix ([#1596](https://github.com/juspay/hyperswitch/pull/1596)) ([`82e1bf0`](https://github.com/juspay/hyperswitch/commit/82e1bf0d168c60733775f933c838b6f9a6301cad))
      - Add card_info in payment_attempt table if not provided in request ([#1538](https://github.com/juspay/hyperswitch/pull/1538)) ([`5628985`](https://github.com/juspay/hyperswitch/commit/5628985c400500d031b0da2c7cef1b04118a096d))
    - List payment_methods with the required fields in each method ([#1310](https://github.com/juspay/hyperswitch/pull/1310)) ([`6447b04`](https://github.com/juspay/hyperswitch/commit/6447b04574e941b9214239bf5b65b7c1a229dfd6))

    ### Bug Fixes

    - **payment_methods:** Return an empty array when the merchant does not have any payment methods ([#1601](https://github.com/juspay/hyperswitch/pull/1601)) ([`04c60d7`](https://github.com/juspay/hyperswitch/commit/04c60d73cb34a3432fcb9fa24af95022b16048b2))

    ### Refactors

    - **fix:** [Nuvei] fix currency conversion issue in nuvei cards ([#1605](https://github.com/juspay/hyperswitch/pull/1605)) ([`1b22638`](https://github.com/juspay/hyperswitch/commit/1b226389bd5c8c5dba211dc058c981d8d543f45a))
    - **redis_interface:** Changed the in the get_options value from true to false ([#1606](https://github.com/juspay/hyperswitch/pull/1606)) ([`737aeb6`](https://github.com/juspay/hyperswitch/commit/737aeb6b0a083bdbcde169d4cfeb40ebc6f4378e))
    - **router:** Add psync task to process tracker after building connector request in payments flow ([#1603](https://github.com/juspay/hyperswitch/pull/1603)) ([`e978e9d`](https://github.com/juspay/hyperswitch/commit/e978e9d66bcb8ea20837fa0e87aa0b0ffffac622))

    ### Miscellaneous Tasks

    - **connector-template:** Update connector template code ([#1612](https://github.com/juspay/hyperswitch/pull/1612)) ([`8c90d0a`](https://github.com/juspay/hyperswitch/commit/8c90d0a78c99c6934a505324e07985eb31ac2f32))

    **Full Changelog:** [`v1.0.3...v1.0.4`](https://github.com/juspay/hyperswitch/compare/v1.0.3...v1.0.4)

    - - -

    ## 1.0.3 (2023-07-04)

    ### Features

    - **compatibility:** Add straight through routing and udf mapping in setup intent ([#1536](https://github.com/juspay/hyperswitch/pull/1536)) ([`1e87f3d`](https://github.com/juspay/hyperswitch/commit/1e87f3d6732fea1b44e2caa17ececb10203d9798))
    - **connector:**
      - [Adyen] implement Alipay HK for Adyen ([#1547](https://github.com/juspay/hyperswitch/pull/1547)) ([`2f9c289`](https://github.com/juspay/hyperswitch/commit/2f9c28938f95a58532604817b1ed370ef8285dd8))
      - [Mollie] Implement Przelewy24 and BancontactCard Bank Redirects for Mollie connector ([#1303](https://github.com/juspay/hyperswitch/pull/1303)) ([`f091be6`](https://github.com/juspay/hyperswitch/commit/f091be60cc628eff4a3537cd6f5d00402a08650d))
      - [Multisafepay] implement Googlepay for Multisafepay ([#1456](https://github.com/juspay/hyperswitch/pull/1456)) ([`2136326`](https://github.com/juspay/hyperswitch/commit/213632616642522df0983e62a69fb48d170f4e80))
      - [TrustPay] Add Google Pay support ([#1515](https://github.com/juspay/hyperswitch/pull/1515)) ([`47cd08a`](https://github.com/juspay/hyperswitch/commit/47cd08a0b07d457793d376b6cca3143011426f22))
      - [Airwallex] Implement Google Pay in Wallets ([#1316](https://github.com/juspay/hyperswitch/pull/1316)) ([`7489c87`](https://github.com/juspay/hyperswitch/commit/7489c870d9d85f169fb7fca469778fad5b2cc37a))
      - [Multisafepay] implement Paypal for Multisafepay ([#1459](https://github.com/juspay/hyperswitch/pull/1459)) ([`2c10e0b`](https://github.com/juspay/hyperswitch/commit/2c10e0b05c571a7c34c8f3f641b401bae68132a0))
    - **db:** Implement `ConfigInterface` for `MockDb` ([#1586](https://github.com/juspay/hyperswitch/pull/1586)) ([`2ac1f2e`](https://github.com/juspay/hyperswitch/commit/2ac1f2e29ec08c457781a7456cb30a80a2bdd1f4))
    - **email:** Implement process_tracker for scheduling email when api_key is about to expire ([#1233](https://github.com/juspay/hyperswitch/pull/1233)) ([`ee7cdef`](https://github.com/juspay/hyperswitch/commit/ee7cdef10754a72106271bf164e0acd751a8d35f))
    - **payment_method:** [upi] add new payment method and use in iatapay ([#1528](https://github.com/juspay/hyperswitch/pull/1528)) ([`2d11bf5`](https://github.com/juspay/hyperswitch/commit/2d11bf5b3ac94b207978ef7a67d3ab70bd77a139))
    - **payments:** Add field manual_retry_allowed in payments response ([#1298](https://github.com/juspay/hyperswitch/pull/1298)) ([`44b8da4`](https://github.com/juspay/hyperswitch/commit/44b8da430c5e5b0114e73b80c5a49d06beebf350))
    - **router:**
      - Add requeue support for payments and fix duplicate entry error in process tracker for requeued payments ([#1567](https://github.com/juspay/hyperswitch/pull/1567)) ([`b967d23`](https://github.com/juspay/hyperswitch/commit/b967d232519b106d88d79da2d6baec550c9256df))
      - Add metrics for webhooks ([#1266](https://github.com/juspay/hyperswitch/pull/1266)) ([`d528132`](https://github.com/juspay/hyperswitch/commit/d528132932266aaa793bfe27fa6f40dcd56a8e6a)) by shashank.attarde@juspay.in
    - Feat: add `merchant_name` field in the response body ([#1280](https://github.com/juspay/hyperswitch/pull/1280)) ([`dd4ba63`](https://github.com/juspay/hyperswitch/commit/dd4ba63cc4940b3e968a2a8eaf841de2ae14b3f8))
    - Add `GenericNotFoundError` error response and `set_key_if_not_exists_with_expiry` Redis command ([#1526](https://github.com/juspay/hyperswitch/pull/1526)) ([`9a88a32`](https://github.com/juspay/hyperswitch/commit/9a88a32d5092cdacacc41bc8ec12ff56d4f53adf))

    ### Bug Fixes

    - **disputes:** Update 4xx error for Files - Delete endpoint ([#1531](https://github.com/juspay/hyperswitch/pull/1531)) ([`eabe16c`](https://github.com/juspay/hyperswitch/commit/eabe16cc8516335b402fdecfd299d26c89cd8ce7))
    - **payment_method:** Do not save card in locker in case of error from connector ([#1341](https://github.com/juspay/hyperswitch/pull/1341)) ([`9794079`](https://github.com/juspay/hyperswitch/commit/9794079c797dcb30edcd88e93e8448948321287c)) by karthikey.hegde@juspay.in
    - Return nick name for each card while listing saved cards ([#1391](https://github.com/juspay/hyperswitch/pull/1391)) ([`4808af3`](https://github.com/juspay/hyperswitch/commit/4808af37503ed9cf506ac16c5d7cc68a79e30050))
    - Add appropriate printable text for Result returned from delete_tokenized_data() ([#1369](https://github.com/juspay/hyperswitch/pull/1369)) ([`cebe993`](https://github.com/juspay/hyperswitch/commit/cebe993660c1afbbd0c442c0811f215286ccff8d))

    ### Refactors

    - **connector:** [ACI] Use verbose names for `InstructionSource` variants ([#1575](https://github.com/juspay/hyperswitch/pull/1575)) ([`df01f8f`](https://github.com/juspay/hyperswitch/commit/df01f8f382ef68ff1798e5c8023f1aef83deeb2b))
    - **payment_methods:** Added clone derivation for PaymentMethodId ([#1568](https://github.com/juspay/hyperswitch/pull/1568)) ([`6739b59`](https://github.com/juspay/hyperswitch/commit/6739b59bc8c94650e398901b402e977de28661e6))
    - **payments_start:** Remove redundant call to fetch payment method data ([#1574](https://github.com/juspay/hyperswitch/pull/1574)) ([`6dd61b6`](https://github.com/juspay/hyperswitch/commit/6dd61b62ef322462e1a592e2dd3ef31683507f65))
    - Add payment id and merchant id to logs ([#1548](https://github.com/juspay/hyperswitch/pull/1548)) ([`9a48c9e`](https://github.com/juspay/hyperswitch/commit/9a48c9ef723f1028bced71396a4f450af5703e82))

    ### Miscellaneous Tasks

    - Update connector creds ([#1597](https://github.com/juspay/hyperswitch/pull/1597)) ([`d5b3f7c`](https://github.com/juspay/hyperswitch/commit/d5b3f7c0301b1cca809b37ce1288c939ee4a7277))

    - - -

    ## 1.0.2 (2023-06-30)

    ### Features

    - **connector:**
      - [Opayo] Add script generated template code ([#1295](https://github.com/juspay/hyperswitch/pull/1295)) ([`60e15dd`](https://github.com/juspay/hyperswitch/commit/60e15ddabbf7ca81ace088a08814c626215301eb))
      - [ACI] implement Card Mandates for ACI ([#1174](https://github.com/juspay/hyperswitch/pull/1174)) ([`15c2a70`](https://github.com/juspay/hyperswitch/commit/15c2a70b427df1c7ec719c2e738f83be1b6a5662))
      - [cryptopay] add new connector cryptopay, authorize, sync, webhook and testcases ([#1511](https://github.com/juspay/hyperswitch/pull/1511)) ([`7bb0aa5`](https://github.com/juspay/hyperswitch/commit/7bb0aa5ceb2e0d12b590602b9ad7c6803e1d5c43))
    - **router:** Add filters for refunds ([#1501](https://github.com/juspay/hyperswitch/pull/1501)) ([`88860b9`](https://github.com/juspay/hyperswitch/commit/88860b9c0be0bc91bcdd6f89b60eb43a18b83b08))

    ### Testing

    - **connector:** Add tests for Paypal, Adyen and Airwallex ([#1290](https://github.com/juspay/hyperswitch/pull/1290)) ([`cd4dbcb`](https://github.com/juspay/hyperswitch/commit/cd4dbcb3f6aba9a4b40f28a1ac5f0bb00a21029e))

    **Full Changelog:** [`v1.0.1...v1.0.2`](https://github.com/juspay/hyperswitch/compare/v1.0.1...v1.0.2)

    - - -

    ## 1.0.1 (2023-06-28)

    ### Features

    - **connector:**
      - Add connector cashtocode ([#1429](https://github.com/juspay/hyperswitch/pull/1429)) ([`784847b`](https://github.com/juspay/hyperswitch/commit/784847b08ca00ee5b77abf6faaeb9673b57adec3))
      - [Adyen] Add support for Samsung Pay ([#1525](https://github.com/juspay/hyperswitch/pull/1525)) ([`33309da`](https://github.com/juspay/hyperswitch/commit/33309daf5ced2197c030d2c51b02a9d9d1878b9f))
      - [Noon] add error response handling in payments response ([#1494](https://github.com/juspay/hyperswitch/pull/1494)) ([`8254555`](https://github.com/juspay/hyperswitch/commit/82545555d79da654575decf5ed02aa6f12df6469))
      - [Stripe] Add support for refund webhooks ([#1488](https://github.com/juspay/hyperswitch/pull/1488)) ([`e6529b6`](https://github.com/juspay/hyperswitch/commit/e6529b6a63760fd78c26084f96aeeff7e6f844dc))
      - [Payme] Add template code for Payme connector ([#1486](https://github.com/juspay/hyperswitch/pull/1486)) ([`5305a7b`](https://github.com/juspay/hyperswitch/commit/5305a7b2f849fc29a786968ba02b9522d82164e4))
      - [Mollie] Implement Sepa Direct Debit ([#1301](https://github.com/juspay/hyperswitch/pull/1301)) ([`b4b6440`](https://github.com/juspay/hyperswitch/commit/b4b6440a9135b75ae76eff1c1bb8c013aa2dd7f3))
      - Add refund and dispute webhooks for Rapyd ([#1313](https://github.com/juspay/hyperswitch/pull/1313)) ([`db011f3`](https://github.com/juspay/hyperswitch/commit/db011f3d7690458c64c8bba75920b0646b502646))
    - **db:** Implement `EphemeralKeyInterface` for `MockDb` ([#1285](https://github.com/juspay/hyperswitch/pull/1285)) ([`8c93904`](https://github.com/juspay/hyperswitch/commit/8c93904c3e34cb7543ce10e022fa5a7f5a10e56f))
    - **router:**
      - Implement `PaymentMethodInterface` for `MockDB` ([#1535](https://github.com/juspay/hyperswitch/pull/1535)) ([`772fc84`](https://github.com/juspay/hyperswitch/commit/772fc8457749ceed121f6f7bd9244e4d8b66350e))
      - Add `connector_transaction_id` in payments response ([#1542](https://github.com/juspay/hyperswitch/pull/1542)) ([`1a8f5ff`](https://github.com/juspay/hyperswitch/commit/1a8f5ff2258a90f9cef5bcf5a1891804250f4560))

    ### Bug Fixes

    - **connector:**
      - [Braintree] Map `SubmittedForSettlement` status to `Pending` instead of `Charged` ([#1508](https://github.com/juspay/hyperswitch/pull/1508)) ([`9cc14b8`](https://github.com/juspay/hyperswitch/commit/9cc14b80445ed6b036e7ebc3ea02371465f20f62))
      - [Cybersource] Throw proper unauthorised message ([#1529](https://github.com/juspay/hyperswitch/pull/1529)) ([`3e284b0`](https://github.com/juspay/hyperswitch/commit/3e284b04b1f02f190cd386f1ee6149bf7b25aa87))
      - [Bluesnap] add cardholder info in bluesnap payment request ([#1540](https://github.com/juspay/hyperswitch/pull/1540)) ([`0bc1e04`](https://github.com/juspay/hyperswitch/commit/0bc1e043fe2ff4e6514ef6c87fab2bb7c0911453))
    - **payment_methods:** Return appropriate error when basilisk locker token expires ([#1517](https://github.com/juspay/hyperswitch/pull/1517)) ([`9969c93`](https://github.com/juspay/hyperswitch/commit/9969c930a9fc0e983f77e38da45710b87e1203d1))
    - **routes:** Register handler for retrieve disput evidence endpoint ([#1516](https://github.com/juspay/hyperswitch/pull/1516)) ([`6bc4188`](https://github.com/juspay/hyperswitch/commit/6bc4188ff981f9539637752464d07e18fba4ba39))
    - Invalidate all cache on invalidate cache route ([#1498](https://github.com/juspay/hyperswitch/pull/1498)) ([`2c6cc6a`](https://github.com/juspay/hyperswitch/commit/2c6cc6ab50b1cc83d14f8e164c5e780392288d5f))
    - Add 3ds card_holder_info and 2 digit expiry year ([#1560](https://github.com/juspay/hyperswitch/pull/1560)) ([`5f83fae`](https://github.com/juspay/hyperswitch/commit/5f83fae3c4b84e0d512a536d936d17c4f44b23ef))
    - Add config create route back ([#1559](https://github.com/juspay/hyperswitch/pull/1559)) ([`379d1d1`](https://github.com/juspay/hyperswitch/commit/379d1d1375783f2c35edbf4dda6bbb0eb9351a3c))

    ### Performance

    - **logging:** Remove redundant heap allocation present in the logging framework ([#1487](https://github.com/juspay/hyperswitch/pull/1487)) ([`b1ed934`](https://github.com/juspay/hyperswitch/commit/b1ed93468cf8c54f2ae53420c0293a2e5a15fca4))

    ### Refactors

    - **mandates:** Refactor mandates to check for misleading error codes in mandates ([#1377](https://github.com/juspay/hyperswitch/pull/1377)) ([`a899c97`](https://github.com/juspay/hyperswitch/commit/a899c9738941fd1a34841369c9a13b2ac49dda9c))

    ### Testing

    - **connector:**
      - [Checkout] Add tests for 3DS and Gpay ([#1267](https://github.com/juspay/hyperswitch/pull/1267)) ([`218803a`](https://github.com/juspay/hyperswitch/commit/218803aaa75e4acdf145872056da76055424a595))
      - [Adyen] Add test for bank debits, bank redirects, and wallets ([#1260](https://github.com/juspay/hyperswitch/pull/1260)) ([`eddcc34`](https://github.com/juspay/hyperswitch/commit/eddcc3455b91569d60ecc955c0ba62d71dc8fefd))
      - [Bambora] Add tests for 3DS ([#1254](https://github.com/juspay/hyperswitch/pull/1254)) ([`295d41a`](https://github.com/juspay/hyperswitch/commit/295d41abba3ff02d7942534163ebc24ae57adf44))
      - [Mollie] Add tests for PayPal, Sofort, Ideal, Giropay and EPS ([#1246](https://github.com/juspay/hyperswitch/pull/1246)) ([`9ea9e55`](https://github.com/juspay/hyperswitch/commit/9ea9e5523b480d862d94cf22b92eb8533f0b8175))
      - Add tests for Globalpay and Bluesnap ([#1281](https://github.com/juspay/hyperswitch/pull/1281)) ([`c5ff6ed`](https://github.com/juspay/hyperswitch/commit/c5ff6ed45b6d053de1b5aa9db918a62887feb417))
      - [Shift4] Add tests for 3DS and Bank Redirect ([#1250](https://github.com/juspay/hyperswitch/pull/1250)) ([`041ecbb`](https://github.com/juspay/hyperswitch/commit/041ecbbcf39bbba5e2c274c7b6a485f3f096aa50))

    ### Miscellaneous Tasks

    - **connector:** [Payme] disable payme connector in code ([#1561](https://github.com/juspay/hyperswitch/pull/1561)) ([`3cd4746`](https://github.com/juspay/hyperswitch/commit/3cd474604d04875a9e39ea0ee520dbb59b130867))

    **Full Changelog:** [`v1.0.0...v1.0.1`](https://github.com/juspay/hyperswitch/compare/v1.0.0...v1.0.1)

    - - -

    ## 1.0.0 (2023-06-23)

    ### Features

    - **connector:** Enforce logging for connector requests ([#1467](https://github.com/juspay/hyperswitch/pull/1467)) ([`e575fde`](https://github.com/juspay/hyperswitch/commit/e575fde6dc22675af18e80b005872dec2f6cc22c))
    - **router:** Add route to invalidate cache entry ([#1100](https://github.com/juspay/hyperswitch/pull/1100)) ([`21f2ccd`](https://github.com/juspay/hyperswitch/commit/21f2ccd47c3627c760ade1b5fe90c3c13a46210e))
    - Fetch merchant key store only once per session ([#1400](https://github.com/juspay/hyperswitch/pull/1400)) ([`d321aa1`](https://github.com/juspay/hyperswitch/commit/d321aa1f7296932074ce86d6d0df97f312777bc7))
    - Add default pm_filters ([#1493](https://github.com/juspay/hyperswitch/pull/1493)) ([`69e9e51`](https://github.com/juspay/hyperswitch/commit/69e9e518f40c4267c1d58b455b83088e431f767f))

    ### Bug Fixes

    - **compatibility:** Add metadata object in both payment_intent and setup_intent request ([#1519](https://github.com/juspay/hyperswitch/pull/1519)) ([`6ec6272`](https://github.com/juspay/hyperswitch/commit/6ec6272f2acae6d5cb5e3120b2dbcc87ae2875ec))
    - **configs:** Remove pix and twint from pm_filters for adyen ([#1509](https://github.com/juspay/hyperswitch/pull/1509)) ([`c1e8ad1`](https://github.com/juspay/hyperswitch/commit/c1e8ad194f45c2d08cb3975237ec4d266cf4ee83))
    - **connector:**
      - [NMI] Fix Psync flow ([#1474](https://github.com/juspay/hyperswitch/pull/1474)) ([`2fdd14c`](https://github.com/juspay/hyperswitch/commit/2fdd14c38292653494c65560fff0aac6fbc6a726))
      - [DummyConnector] change dummy connector names ([#1328](https://github.com/juspay/hyperswitch/pull/1328)) ([`6645c4d`](https://github.com/juspay/hyperswitch/commit/6645c4d123399e2b6615c02932adf4571b8bcd91))
      - [ACI] fix cancel and refund request encoder ([#1507](https://github.com/juspay/hyperswitch/pull/1507)) ([`cf72dcd`](https://github.com/juspay/hyperswitch/commit/cf72dcdbb6d2164b83b22593f4ebd1be9c774b58))
      - Convert state of US and CA in ISO format for cybersource connector ([#1506](https://github.com/juspay/hyperswitch/pull/1506)) ([`4a047ce`](https://github.com/juspay/hyperswitch/commit/4a047ce133661d160c028d502b5f5eb96b7bdb12))
      - [Trustpay] handle errors fields as optional in TrustpayErrorResponse object ([#1514](https://github.com/juspay/hyperswitch/pull/1514)) ([`efe1ed9`](https://github.com/juspay/hyperswitch/commit/efe1ed9b770dc0924cf00f76ed02e8777bea4ed2))
      - [TrustPay] change the request encoding ([#1530](https://github.com/juspay/hyperswitch/pull/1530)) ([`692d370`](https://github.com/juspay/hyperswitch/commit/692d3704976aa80ea10dfc4cea808f8dba59959e))
      - Fix url_encode issue for paypal and payu ([#1534](https://github.com/juspay/hyperswitch/pull/1534)) ([`e296a49`](https://github.com/juspay/hyperswitch/commit/e296a49b623004784cece505ab08b172a5aa796c))
    - **core:** `payment_method_type` not set in the payment attempt when making a recurring mandate payment ([#1415](https://github.com/juspay/hyperswitch/pull/1415)) ([`38b9e59`](https://github.com/juspay/hyperswitch/commit/38b9e59b7511b0486556f9899870d1c9c95c7518))
    - **encryption:** Do not log encrypted binary data ([#1352](https://github.com/juspay/hyperswitch/pull/1352)) ([`b0c103a`](https://github.com/juspay/hyperswitch/commit/b0c103a19304cc21e9988675786c3c17dac9fb63))
    - **errors:** Use `format!()` for `RefundNotPossibleError` ([#1518](https://github.com/juspay/hyperswitch/pull/1518)) ([`1da411e`](https://github.com/juspay/hyperswitch/commit/1da411e67a2e30e773beb87228cd2fb1fd4b1507))
    - **payments:** Fix client secret parsing ([#1358](https://github.com/juspay/hyperswitch/pull/1358)) ([`2b71d4d`](https://github.com/juspay/hyperswitch/commit/2b71d4d8c40c3697e902398fc76bc1256d5b25ee))
    - **process_tracker:** Log and ignore the duplicate entry error ([#1502](https://github.com/juspay/hyperswitch/pull/1502)) ([`424e77c`](https://github.com/juspay/hyperswitch/commit/424e77c912e3f9722660b424581aaf9b132fd3a6))
    - **update_trackers:** Handle preprocessing steps status update ([#1496](https://github.com/juspay/hyperswitch/pull/1496)) ([`b452314`](https://github.com/juspay/hyperswitch/commit/b45231468db1e71a113ecc1f35841e80f82d8b3f))
    - Add requires_customer_action status to payment confirm ([#1500](https://github.com/juspay/hyperswitch/pull/1500)) ([`6944415`](https://github.com/juspay/hyperswitch/commit/6944415da14cda3e9d5fbef62805d7b18d64eacf))
    - Update adyen payment method supported countries and currencies in development.toml ([#1401](https://github.com/juspay/hyperswitch/pull/1401)) ([`5274f53`](https://github.com/juspay/hyperswitch/commit/5274f53dcc250804e59c1c13b2fe71daa36195e7))

    ### Refactors

    - **core:** Rename `MandateTxnType` to `MandateTransactionType` ([#1322](https://github.com/juspay/hyperswitch/pull/1322)) ([`1069172`](https://github.com/juspay/hyperswitch/commit/10691728d2d6926672d12de124237d1842085cc7))
    - **fix:** [Stripe] Fix bug in Stripe ([#1505](https://github.com/juspay/hyperswitch/pull/1505)) ([`957d5e0`](https://github.com/juspay/hyperswitch/commit/957d5e0f62ca43d1df3ee39b88ed6c7f6e92a099))
    - **refunds:** Refactor refunds create to check for unintended 5xx ([#1332](https://github.com/juspay/hyperswitch/pull/1332)) ([`ff17b62`](https://github.com/juspay/hyperswitch/commit/ff17b62dc27092b6e04d19604e02e8f492c19efb))
    - Add serde rename_all for refund enums ([#1520](https://github.com/juspay/hyperswitch/pull/1520)) ([`0c86243`](https://github.com/juspay/hyperswitch/commit/0c8624334c480a42bd5f06fced4f38ab66cdf07f))

    ### Build System / Dependencies

    - **deps:** Bump openssl from 0.10.54 to 0.10.55 ([#1503](https://github.com/juspay/hyperswitch/pull/1503)) ([`c4f9029`](https://github.com/juspay/hyperswitch/commit/c4f9029c8ba3ea2570688e00e551ea979859d3be))

    **Full Changelog:** [`v0.6.0...v1.0.0`](https://github.com/juspay/hyperswitch/compare/v0.6.0...v1.0.0)

    - - -

    ## 0.6.0 (2023-06-20)

    ### Features

    - **compatibility:**
      - Add receipt_ipaddress and user_agent in stripe compatibility ([#1417](https://github.com/juspay/hyperswitch/pull/1417)) ([`de2a6e8`](https://github.com/juspay/hyperswitch/commit/de2a6e86d767e77b7ab15b21832747531231453b))
      - Wallet support compatibility layer ([#1214](https://github.com/juspay/hyperswitch/pull/1214)) ([`3e64321`](https://github.com/juspay/hyperswitch/commit/3e64321bfd25cfeb6b02b70188c8e08b3cd4bfcc))
    - **connector:**
      - [Noon] Add Card Payments, Capture, Void and Refund ([#1207](https://github.com/juspay/hyperswitch/pull/1207)) ([`2761036`](https://github.com/juspay/hyperswitch/commit/27610361b948c56f3422caa7c70beeb9e87bb69c))
      - [Noon] Add Card Mandates and Webhooks Support ([#1243](https://github.com/juspay/hyperswitch/pull/1243)) ([`ba8a17d`](https://github.com/juspay/hyperswitch/commit/ba8a17d66f12fce01fa3a2d50bd9a5591bf8ef2f))
      - [Noon] Add reference id in Order Struct ([#1371](https://github.com/juspay/hyperswitch/pull/1371)) ([`f0cd5ee`](https://github.com/juspay/hyperswitch/commit/f0cd5ee20d6f8a836f7b1f7117c2d0e43014eaba))
      - [Zen] add apple pay redirect flow support for zen connector ([#1383](https://github.com/juspay/hyperswitch/pull/1383)) ([`b3b16fc`](https://github.com/juspay/hyperswitch/commit/b3b16fcf95321f7ade05ed5b6678dcd851ba6ee5))
      - Mask pii information in connector request and response for stripe, bluesnap, checkout, zen ([#1435](https://github.com/juspay/hyperswitch/pull/1435)) ([`5535159`](https://github.com/juspay/hyperswitch/commit/5535159d5c2cc7278c9e189dcf3629efd67e6fb5))
      - Add request & response logs for top 4 connector ([#1427](https://github.com/juspay/hyperswitch/pull/1427)) ([`1e61f39`](https://github.com/juspay/hyperswitch/commit/1e61f396bd02ca66c7448776a5aab045dc06df10))
      - [Noon] Add GooglePay, ApplePay, PayPal Support ([#1450](https://github.com/juspay/hyperswitch/pull/1450)) ([`8ebcc1c`](https://github.com/juspay/hyperswitch/commit/8ebcc1ce39356307667e8c70be0ed5bdf034ed50))
      - [Zen] add google pay redirect flow support ([#1454](https://github.com/juspay/hyperswitch/pull/1454)) ([`3a225b2`](https://github.com/juspay/hyperswitch/commit/3a225b2118c52f7b28a40a87bbcd8b126b01eeef))
    - **core:** Add signature to outgoing webhooks ([#1249](https://github.com/juspay/hyperswitch/pull/1249)) ([`3534cac`](https://github.com/juspay/hyperswitch/commit/3534caca68e18d222c685fa1ea50bc407ee3178e))
    - **db:**
      - Implement `RefundInterface` for `MockDb` ([#1277](https://github.com/juspay/hyperswitch/pull/1277)) ([`10691c5`](https://github.com/juspay/hyperswitch/commit/10691c5fce630d60aade862080d25c62a5cddb44))
      - Implement `DisputeInterface` for `MockDb` ([#1345](https://github.com/juspay/hyperswitch/pull/1345)) ([`e5e39a7`](https://github.com/juspay/hyperswitch/commit/e5e39a74911057849748424dbefda7ac26bab45d))
      - Implement `LockerMockInterface` for `MockDb` ([#1347](https://github.com/juspay/hyperswitch/pull/1347)) ([`1322aa7`](https://github.com/juspay/hyperswitch/commit/1322aa757902662a1bd90cc3f09e887a7fdbf841))
      - Implement `MerchantConnectorAccountInterface` for `MockDb` ([#1248](https://github.com/juspay/hyperswitch/pull/1248)) ([`b002c97`](https://github.com/juspay/hyperswitch/commit/b002c97c9c11f7d725aa7ab5b29d49988baa6aea))
      - Implement `MandateInterface` for `MockDb` ([#1387](https://github.com/juspay/hyperswitch/pull/1387)) ([`2555c37`](https://github.com/juspay/hyperswitch/commit/2555c37adab4b0ab10f3e6d507e1b93b3eab1c67))
    - **headers:** Add optional header masking feature to outbound request ([#1320](https://github.com/juspay/hyperswitch/pull/1320)) ([`fc6acd0`](https://github.com/juspay/hyperswitch/commit/fc6acd04cb28f02a4f52ec77d8ae003957183ff2))
    - **kms:** Reduce redundant kms calls ([#1264](https://github.com/juspay/hyperswitch/pull/1264)) ([`71a17c6`](https://github.com/juspay/hyperswitch/commit/71a17c682e87a708adbea4f2d9f99a4a0172e76e))
    - **logging:** Logging the request payload during `BeginRequest` ([#1247](https://github.com/juspay/hyperswitch/pull/1247)) ([`253eead`](https://github.com/juspay/hyperswitch/commit/253eead301bc919ff18af2ebe0064ca004d9852d))
    - **metrics:**
      - Add flow-specific metrics ([#1259](https://github.com/juspay/hyperswitch/pull/1259)) ([`5e90a36`](https://github.com/juspay/hyperswitch/commit/5e90a369db32b125414c3674404dc34d134bf1da))
      - Add response metrics ([#1263](https://github.com/juspay/hyperswitch/pull/1263)) ([`4ebd26f`](https://github.com/juspay/hyperswitch/commit/4ebd26f27e43dddeae7498d81ed43516f3eb0e61))
    - **order_details:** Adding order_details both inside and outside of metadata, in payments request, for backward compatibility ([#1344](https://github.com/juspay/hyperswitch/pull/1344)) ([`913b833`](https://github.com/juspay/hyperswitch/commit/913b833117e1adb02324d32857dedf050791ec3a))
    - **payment:** Customer ip field inclusion ([#1370](https://github.com/juspay/hyperswitch/pull/1370)) ([`11a827a`](https://github.com/juspay/hyperswitch/commit/11a827a76d9efb81b70b4439a681eb17de73b94f))
    - **response-log:**
      - Add logging to the response ([#1433](https://github.com/juspay/hyperswitch/pull/1433)) ([`96c5efe`](https://github.com/juspay/hyperswitch/commit/96c5efea2b0edc032d7199046650e7b00a276c5e))
      - Add logging to the response for stripe compatibility layer ([#1470](https://github.com/juspay/hyperswitch/pull/1470)) ([`96c71e1`](https://github.com/juspay/hyperswitch/commit/96c71e1b1bbf2b67a6e2c87478b98bcbb7cdb3ef))
    - **router:**
      - Implement `CardsInfoInterface` for `MockDB` ([#1262](https://github.com/juspay/hyperswitch/pull/1262)) ([`cbff605`](https://github.com/juspay/hyperswitch/commit/cbff605f2af257f4f0ba45c1afe276ce902680ab))
      - Add mandate connector to payment data ([#1392](https://github.com/juspay/hyperswitch/pull/1392)) ([`7933e98`](https://github.com/juspay/hyperswitch/commit/7933e98c8cadfa27154b5a7ba5d7d12b33272ec6))
      - [Bluesnap] add kount frms session_id support for bluesnap connector ([#1403](https://github.com/juspay/hyperswitch/pull/1403)) ([`fbaecdc`](https://github.com/juspay/hyperswitch/commit/fbaecdc352e653f81bcc036ce0aabc222c91e92d))
      - Add caching for MerchantKeyStore ([#1409](https://github.com/juspay/hyperswitch/pull/1409)) ([`fda3fb4`](https://github.com/juspay/hyperswitch/commit/fda3fb4d2bc69297a8b8220e44798c4ca9dea9c2))
    - Use subscriber client for subscription in pubsub ([#1297](https://github.com/juspay/hyperswitch/pull/1297)) ([`864d855`](https://github.com/juspay/hyperswitch/commit/864d85534fbc174d8e989493c3231497f5c79fe5))
    - Encrypt PII fields before saving it in the database ([#1043](https://github.com/juspay/hyperswitch/pull/1043)) ([`fa392c4`](https://github.com/juspay/hyperswitch/commit/fa392c40a86b2589a55c3adf1de5b862a544dbe9))
    - Add error type for empty connector list ([#1363](https://github.com/juspay/hyperswitch/pull/1363)) ([`b2da920`](https://github.com/juspay/hyperswitch/commit/b2da9202809089e6725405351f51d81837b08667))
    - Add new error response for 403 ([#1330](https://github.com/juspay/hyperswitch/pull/1330)) ([`49d5ad7`](https://github.com/juspay/hyperswitch/commit/49d5ad7b3c24fc9c9847b473fda370398e3c7e38))
    - Applepay through trustpay ([#1422](https://github.com/juspay/hyperswitch/pull/1422)) ([`8032e02`](https://github.com/juspay/hyperswitch/commit/8032e0290b0a0ee33a640740b3bd4567a939712c))

    ### Bug Fixes

    - **api_models:** Fix bank namings ([#1315](https://github.com/juspay/hyperswitch/pull/1315)) ([`a8f2494`](https://github.com/juspay/hyperswitch/commit/a8f2494a87a7731deb104fe2eda548fbccdac895))
    - **config:** Fix docker compose local setup ([#1372](https://github.com/juspay/hyperswitch/pull/1372)) ([`d21fcc7`](https://github.com/juspay/hyperswitch/commit/d21fcc7bfc3bdf672b9cfbc5a234a3f3d03771c8))
    - **connector:**
      - [Authorizedotnet] Fix webhooks ([#1261](https://github.com/juspay/hyperswitch/pull/1261)) ([`776c833`](https://github.com/juspay/hyperswitch/commit/776c833de706dcd8e93786d1fa294769669303cd))
      - [Checkout] Fix error message in error handling ([#1221](https://github.com/juspay/hyperswitch/pull/1221)) ([`22b2fa3`](https://github.com/juspay/hyperswitch/commit/22b2fa30610ad5ca97cd53df187ccd994411f4e2))
      - [coinbase] remove non-mandatory fields ([#1252](https://github.com/juspay/hyperswitch/pull/1252)) ([`bfd7dad`](https://github.com/juspay/hyperswitch/commit/bfd7dad2f1d694bbdc0a18782732ff95ee7730f6))
      - [Rapyd] Fix payment response structure ([#1258](https://github.com/juspay/hyperswitch/pull/1258)) ([`3af3a3c`](https://github.com/juspay/hyperswitch/commit/3af3a3cb39641633aecc2d4fc120ece13a6ee72a))
      - [Adyen] Address Internal Server Error when calling PSync without redirection ([#1311](https://github.com/juspay/hyperswitch/pull/1311)) ([`b966525`](https://github.com/juspay/hyperswitch/commit/b96652507a6ab37f3c75aeb0cf715fd6454b9f32))
      - [opennode] webhook url fix ([#1364](https://github.com/juspay/hyperswitch/pull/1364)) ([`e484193`](https://github.com/juspay/hyperswitch/commit/e484193101ffdc693044fd43c130b12821256111))
      - [Zen] fix additional base url required for Zen apple pay checkout integration ([#1394](https://github.com/juspay/hyperswitch/pull/1394)) ([`7955007`](https://github.com/juspay/hyperswitch/commit/795500797d1061630b5ca493187a4e19d98d26c0))
      - [Bluesnap] Throw proper error message for redirection scenario ([#1367](https://github.com/juspay/hyperswitch/pull/1367)) ([`4a8de77`](https://github.com/juspay/hyperswitch/commit/4a8de7741d43da07e655bc7382927c68e8ac1eb5))
      - [coinbase][opennode][bitpay] handle error response ([#1406](https://github.com/juspay/hyperswitch/pull/1406)) ([`301c3dc`](https://github.com/juspay/hyperswitch/commit/301c3dc44bb740709a0c5c54ee95fc811c2897ed))
      - [Zen][ACI] Error handling and Mapping ([#1436](https://github.com/juspay/hyperswitch/pull/1436)) ([`8a4f4a4`](https://github.com/juspay/hyperswitch/commit/8a4f4a4c307d75dee8a1fac8f029091a7d49d432))
      - [Bluesnap] fix expiry year ([#1426](https://github.com/juspay/hyperswitch/pull/1426)) ([`92c8222`](https://github.com/juspay/hyperswitch/commit/92c822257e3780fce11f7f0df9a0db48ae1b86e0))
      - [Shift4]Add Refund webhooks ([#1307](https://github.com/juspay/hyperswitch/pull/1307)) ([`1691bea`](https://github.com/juspay/hyperswitch/commit/1691beacc3a1c604ce6a1f4cf236f5f7932ed7ae))
      - [Shift4] validate pretask for threeds cards ([#1428](https://github.com/juspay/hyperswitch/pull/1428)) ([`2c1dcff`](https://github.com/juspay/hyperswitch/commit/2c1dcff046407aa9053b96c549ab578988b5c618))
      - Fix trustpay error response for transaction status api ([#1445](https://github.com/juspay/hyperswitch/pull/1445)) ([`7db94a6`](https://github.com/juspay/hyperswitch/commit/7db94a620882d7b4d14ac97f35f6ced06ae529d7))
      - Fix for sending refund_amount in connectors refund request ([#1278](https://github.com/juspay/hyperswitch/pull/1278)) ([`016857f`](https://github.com/juspay/hyperswitch/commit/016857fff0681058f3321a7952c7bd917442293a))
      - Use reference as payment_id in trustpay ([#1444](https://github.com/juspay/hyperswitch/pull/1444)) ([`3645c49`](https://github.com/juspay/hyperswitch/commit/3645c49b3830e6dc9e23d91b3ac66213727dca9f))
      - Implement ConnectorErrorExt for error_stack::Result<T, ConnectorError> ([#1382](https://github.com/juspay/hyperswitch/pull/1382)) ([`3ef1d29`](https://github.com/juspay/hyperswitch/commit/3ef1d2935e32a8b581e4d2d7f328d970ade4b7f9))
      - [Adyen] fix charged status for Auto capture payment ([#1462](https://github.com/juspay/hyperswitch/pull/1462)) ([`6c818ef`](https://github.com/juspay/hyperswitch/commit/6c818ef3366e9f094d39523334199a9a3abb78e9))
      - [Adyen] fix unit test ([#1469](https://github.com/juspay/hyperswitch/pull/1469)) ([`6e581c6`](https://github.com/juspay/hyperswitch/commit/6e581c6060423af9984375ad4169a1fec94d4585))
      - [Airwallex] Fix refunds ([#1468](https://github.com/juspay/hyperswitch/pull/1468)) ([`1b2841b`](https://github.com/juspay/hyperswitch/commit/1b2841be5997083cd2e414fc698d3d39f9c24c04))
      - [Zen] Convert the amount to base denomination in order_details ([#1477](https://github.com/juspay/hyperswitch/pull/1477)) ([`7ca62d3`](https://github.com/juspay/hyperswitch/commit/7ca62d3c7c04997c7eed6e82ec02dc39ea046b2f))
      - [Shift4] Fix incorrect deserialization of webhook event type ([#1463](https://github.com/juspay/hyperswitch/pull/1463)) ([`b44f35d`](https://github.com/juspay/hyperswitch/commit/b44f35d4d9ddf4fcd725f0e0a5d51fa9eb7f7e3f))
      - [Trustpay] add missing failure status ([#1485](https://github.com/juspay/hyperswitch/pull/1485)) ([`ecf16b0`](https://github.com/juspay/hyperswitch/commit/ecf16b0c7437fefa3550db7275ca2f73d1499b72))
      - [Trustpay] add reason to all the error responses ([#1482](https://github.com/juspay/hyperswitch/pull/1482)) ([`1d216db`](https://github.com/juspay/hyperswitch/commit/1d216db5ceeac3dc61d672de89a921501dcaee45))
    - **core:**
      - Remove `missing_required_field_error` being thrown in `should_add_task_to_process_tracker` function ([#1239](https://github.com/juspay/hyperswitch/pull/1239)) ([`3857d06`](https://github.com/juspay/hyperswitch/commit/3857d06627d4c1b85b2e5b9687d80298acf82c14))
      - Return an empty array when the customer does not have any payment methods ([#1431](https://github.com/juspay/hyperswitch/pull/1431)) ([`6563587`](https://github.com/juspay/hyperswitch/commit/6563587564a6de579888a751b8c21e832060d728))
      - Fix amount capturable in payments response ([#1437](https://github.com/juspay/hyperswitch/pull/1437)) ([`5bc1aab`](https://github.com/juspay/hyperswitch/commit/5bc1aaba5945bd829bc2dffcef59db074fa523a7))
      - Save payment_method_type when creating a record in the payment_method table ([#1378](https://github.com/juspay/hyperswitch/pull/1378)) ([`76cb15e`](https://github.com/juspay/hyperswitch/commit/76cb15e01de748f9328d57968d6ddee9831720aa))
      - Add validation for card expiry month, expiry year and card cvc ([#1416](https://github.com/juspay/hyperswitch/pull/1416)) ([`c40617a`](https://github.com/juspay/hyperswitch/commit/c40617aea66eb3c14ad47efbce28374cd28626e0))
    - **currency:** Add RON and TRY currencies ([#1455](https://github.com/juspay/hyperswitch/pull/1455)) ([`495a98f`](https://github.com/juspay/hyperswitch/commit/495a98f0454787ae322f63f2adc3e3a6b6e0b515))
    - **error:** Propagate MissingRequiredFields api_error ([#1244](https://github.com/juspay/hyperswitch/pull/1244)) ([`798881a`](https://github.com/juspay/hyperswitch/commit/798881ab5b0e7a095daad9e920a29c36961ec13d))
    - **kms:** Add metrics to external_services kms ([#1237](https://github.com/juspay/hyperswitch/pull/1237)) ([`28f0d1f`](https://github.com/juspay/hyperswitch/commit/28f0d1f5351f0d3f6abd982ebe99bc15a74797c2))
    - **list:** Add mandate type in payment_method_list ([#1238](https://github.com/juspay/hyperswitch/pull/1238)) ([`9341191`](https://github.com/juspay/hyperswitch/commit/9341191e39627b661b9d105d65a869e8348c81ed))
    - **locker:** Remove unnecessary assertions for locker_id on BasiliskLocker when saving cards ([#1337](https://github.com/juspay/hyperswitch/pull/1337)) ([`23458bc`](https://github.com/juspay/hyperswitch/commit/23458bc42776e6440e76d324d37f36b65c393451))
    - **logging:** Fix traces export through opentelemetry ([#1355](https://github.com/juspay/hyperswitch/pull/1355)) ([`b2b9dc0`](https://github.com/juspay/hyperswitch/commit/b2b9dc0b58d737ea114d078fe02271a10accaefa))
    - **payments:** Do not delete client secret on payment failure ([#1226](https://github.com/juspay/hyperswitch/pull/1226)) ([`c1b631b`](https://github.com/juspay/hyperswitch/commit/c1b631bd1e0025452f2cf37345996ea789810839))
    - **refund:** Change amount to refund_amount ([#1268](https://github.com/juspay/hyperswitch/pull/1268)) ([`24c3a42`](https://github.com/juspay/hyperswitch/commit/24c3a42898a37dccf3f99a9fcc259127606598dd))
    - **router:**
      - Subscriber return type ([#1292](https://github.com/juspay/hyperswitch/pull/1292)) ([`55bb117`](https://github.com/juspay/hyperswitch/commit/55bb117e1ddc147d7309823dc593bd1a05fe69a9))
      - Hotfixes for stripe webhook event mapping and reference id retrieval ([#1368](https://github.com/juspay/hyperswitch/pull/1368)) ([`5c2232b`](https://github.com/juspay/hyperswitch/commit/5c2232b737f5430a68fdf6cba9aa5f4c1d6cf3e2))
      - [Trustpay] fix email & user-agent information as mandatory fields in trustpay card payment request ([#1414](https://github.com/juspay/hyperswitch/pull/1414)) ([`7ef011a`](https://github.com/juspay/hyperswitch/commit/7ef011ad737257fc83f7a43d16f1bf4ac54336ae))
      - [Trustpay] fix email & user-agent information as mandatory fields in trustpay card payment request ([#1418](https://github.com/juspay/hyperswitch/pull/1418)) ([`c596d12`](https://github.com/juspay/hyperswitch/commit/c596d121a846e6c0fa399b8f28ffe4ab6124651a))
      - Fix payment status updation for 2xx error responses ([#1457](https://github.com/juspay/hyperswitch/pull/1457)) ([`a7ac4af`](https://github.com/juspay/hyperswitch/commit/a7ac4af5d916ff1e7965be35f347ce0e13407747))
    - **router/webhooks:**
      - Use api error response for returning errors from webhooks core ([#1305](https://github.com/juspay/hyperswitch/pull/1305)) ([`cd0cf40`](https://github.com/juspay/hyperswitch/commit/cd0cf40fe29358700f92c1520475934752bb4b30))
      - Correct webhook error mapping and make source verification optional for all connectors ([#1333](https://github.com/juspay/hyperswitch/pull/1333)) ([`7131509`](https://github.com/juspay/hyperswitch/commit/71315097dd01ee675b0e4df3087b930637de416c))
      - Map webhook event type not found errors to 422 ([#1340](https://github.com/juspay/hyperswitch/pull/1340)) ([`61bacd8`](https://github.com/juspay/hyperswitch/commit/61bacd8c9590a78a6d5067e378bfed6301d64d07))
    - **session_token:** Log error only when it occurs ([#1136](https://github.com/juspay/hyperswitch/pull/1136)) ([`ebf3de4`](https://github.com/juspay/hyperswitch/commit/ebf3de41018f131f7501b17936e58c05276ead77))
    - **stripe:** Fix logs on stripe connector integration ([#1448](https://github.com/juspay/hyperswitch/pull/1448)) ([`c42b436`](https://github.com/juspay/hyperswitch/commit/c42b436abe1ed980d9b861dd4ba56324c8361a5a))
    - Remove multiple call to locker ([#1230](https://github.com/juspay/hyperswitch/pull/1230)) ([`b3c6b1f`](https://github.com/juspay/hyperswitch/commit/b3c6b1f0aacb9950d225779aa7de1ac49fe148d2))
    - Populate meta_data in payment_intent ([#1240](https://github.com/juspay/hyperswitch/pull/1240)) ([`1ac3eb0`](https://github.com/juspay/hyperswitch/commit/1ac3eb0a36030412ef51ec2664e8af43c9c2fc54))
    - Merchant webhook config should be looked up in config table instead of redis ([#1241](https://github.com/juspay/hyperswitch/pull/1241)) ([`48e5375`](https://github.com/juspay/hyperswitch/commit/48e537568debccdcd01c78eabce0b480a96beda2))
    - Invalidation of in-memory cache ([#1270](https://github.com/juspay/hyperswitch/pull/1270)) ([`e78b3a6`](https://github.com/juspay/hyperswitch/commit/e78b3a65d45429357adf3534b6028798d1f68620))
    - Customer id is not mandatory during confirm ([#1317](https://github.com/juspay/hyperswitch/pull/1317)) ([`1261791`](https://github.com/juspay/hyperswitch/commit/1261791d9f70794b3d6426ff35f4eb0fc1076be0))
    - Certificate decode failed when creating the session token for applepay ([#1385](https://github.com/juspay/hyperswitch/pull/1385)) ([`8497c55`](https://github.com/juspay/hyperswitch/commit/8497c55283d548c04b3a01560b06d9594e7d634c))
    - Update customer data if passed in payments ([#1402](https://github.com/juspay/hyperswitch/pull/1402)) ([`86f679a`](https://github.com/juspay/hyperswitch/commit/86f679abc1549b59239ece4a1123b60e40c26b96))
    - Fix some fields not being updated during payments create, update and confirm ([#1451](https://github.com/juspay/hyperswitch/pull/1451)) ([`1764085`](https://github.com/juspay/hyperswitch/commit/17640858eabb5d5a56a17c9e0a52e5773a0c592f))

    ### Refactors

    - **api_models:** Follow naming convention for wallets & paylater payment method data enums ([#1338](https://github.com/juspay/hyperswitch/pull/1338)) ([`6c0d136`](https://github.com/juspay/hyperswitch/commit/6c0d136cee106fc25fbcf63e4bbc01b28baa1519))
    - **auth_type:** Updated auth type in `update tracker` and also changed the default flow to `non-3ds` from `3ds` ([#1424](https://github.com/juspay/hyperswitch/pull/1424)) ([`1616051`](https://github.com/juspay/hyperswitch/commit/1616051145c1e276fdd7d0f85cda76baaeaa0023))
    - **compatibility:** Map connector to routing in payments request for backward compatibility ([#1339](https://github.com/juspay/hyperswitch/pull/1339)) ([`166688a`](https://github.com/juspay/hyperswitch/commit/166688a5906a2fcbb034c40a113452f6dc2e7160))
    - **compatibility, connector:** Add holder name and change trust pay merchant_ref id to payment_id ([`d091549`](https://github.com/juspay/hyperswitch/commit/d091549576676c87f855e06678544704339d82e4))
    - **configs:** Make kms module and KmsDecrypt pub ([#1274](https://github.com/juspay/hyperswitch/pull/1274)) ([`f0db993`](https://github.com/juspay/hyperswitch/commit/f0db9937c7b33858a1ff3e17eaecba094ca4c18c))
    - **connector:**
      - Update error handling for Nexinets, Cybersource ([#1151](https://github.com/juspay/hyperswitch/pull/1151)) ([`2ede8ad`](https://github.com/juspay/hyperswitch/commit/2ede8ade8cff56443d8712518c64de7d952f4a0c))
      - [Zen] refactor connector_meta_data for zen connector applepay session data ([#1390](https://github.com/juspay/hyperswitch/pull/1390)) ([`0575b26`](https://github.com/juspay/hyperswitch/commit/0575b26b4fc229e92aef179146dfd561a9ee7f27))
    - **connector_customer:** Incorrect mapping of connector customer ([#1275](https://github.com/juspay/hyperswitch/pull/1275)) ([`ebdfde7`](https://github.com/juspay/hyperswitch/commit/ebdfde75ecc1c39720396ad7c18062f5c108b8d3))
    - **core:**
      - Generate response hash key if not specified in create merchant account request ([#1232](https://github.com/juspay/hyperswitch/pull/1232)) ([`7b74cab`](https://github.com/juspay/hyperswitch/commit/7b74cab385db68e510d2d513083a725a4f945ae3))
      - Add 'redirect_response' field to CompleteAuthorizeData ([#1222](https://github.com/juspay/hyperswitch/pull/1222)) ([`77e60c8`](https://github.com/juspay/hyperswitch/commit/77e60c82fa123ef780485a8507ce779f2f41e166))
      - Use HMAC-SHA512 to calculate payments response hash ([#1302](https://github.com/juspay/hyperswitch/pull/1302)) ([`7032ea8`](https://github.com/juspay/hyperswitch/commit/7032ea849416cb740c892360d21e436d2675fbe4))
      - Accept customer data in customer object ([#1447](https://github.com/juspay/hyperswitch/pull/1447)) ([`cff1ce6`](https://github.com/juspay/hyperswitch/commit/cff1ce61f0347665d18040486cfbbcd93139950b))
      - Move update trackers after build request ([#1472](https://github.com/juspay/hyperswitch/pull/1472)) ([`6114fb6`](https://github.com/juspay/hyperswitch/commit/6114fb634063a9a6d732af38e2a9e343d940a15e))
      - Update trackers for preprocessing steps ([#1481](https://github.com/juspay/hyperswitch/pull/1481)) ([`8fffc16`](https://github.com/juspay/hyperswitch/commit/8fffc161ea909fb29a81090f97ee9f811431d539))
    - **disputes:** Resolve incorrect 5xx error mappings for disputes ([#1360](https://github.com/juspay/hyperswitch/pull/1360)) ([`c9b400e`](https://github.com/juspay/hyperswitch/commit/c9b400e186731b7de6073fece662fd0fcbbfc953))
    - **errors:**
      - Remove RedisErrorExt ([#1389](https://github.com/juspay/hyperswitch/pull/1389)) ([`5d51505`](https://github.com/juspay/hyperswitch/commit/5d515050cf77705e3bf8c4b83f81ee51a8bff052))
      - Refactor `actix_web::ResponseError` for `ApiErrorResponse` ([#1362](https://github.com/juspay/hyperswitch/pull/1362)) ([`02a3ce7`](https://github.com/juspay/hyperswitch/commit/02a3ce74b84e86b0e17f8809c9b7651998a1c864))
    - **fix:**
      - [Stripe] Fix bug in Stripe ([#1412](https://github.com/juspay/hyperswitch/pull/1412)) ([`e48202e`](https://github.com/juspay/hyperswitch/commit/e48202e0a06fa4d61a2637f57830ffa4aae1335d))
      - [Adyen] Fix bug in Adyen ([#1375](https://github.com/juspay/hyperswitch/pull/1375)) ([`d3a6906`](https://github.com/juspay/hyperswitch/commit/d3a69060b4db24fbbfc5c03934684dd8bfd45711))
    - **mca:** Use separate struct for connector metadata ([#1465](https://github.com/juspay/hyperswitch/pull/1465)) ([`8d20578`](https://github.com/juspay/hyperswitch/commit/8d2057844ef4a29474d266d814c8ee01cc557961))
    - **payments:**
      - Attempt to address unintended 5xx and 4xx in payments ([#1376](https://github.com/juspay/hyperswitch/pull/1376)) ([`cf64862`](https://github.com/juspay/hyperswitch/commit/cf64862daca0ad05b7af27646430d12bac71a5ee))
      - Add udf field and remove refactor metadata ([#1466](https://github.com/juspay/hyperswitch/pull/1466)) ([`6419953`](https://github.com/juspay/hyperswitch/commit/641995371db4deba13dc246179d726ed390b6b3e))
    - **process_tracker:** Attempt to identify unintended 5xx in process_tracker ([#1359](https://github.com/juspay/hyperswitch/pull/1359)) ([`d8adf4c`](https://github.com/juspay/hyperswitch/commit/d8adf4c2b542a5cdd7888b956b085a69bd900920))
    - **router:**
      - Router_parameters field inclusion ([#1251](https://github.com/juspay/hyperswitch/pull/1251)) ([`16cd325`](https://github.com/juspay/hyperswitch/commit/16cd32513bc6528e064058907a8c3c848fdba132))
      - Remove `pii-encryption-script` feature and use of timestamps for decryption ([#1350](https://github.com/juspay/hyperswitch/pull/1350)) ([`9f2832f`](https://github.com/juspay/hyperswitch/commit/9f2832f60078b98e6faae34b05b63d2dab6b7969))
      - Infer ip address for online mandates from request headers if absent ([#1419](https://github.com/juspay/hyperswitch/pull/1419)) ([`a1a009d`](https://github.com/juspay/hyperswitch/commit/a1a009d7966d2354d12bba86fbc59c1b853e14a1))
      - Send 200 response for 5xx status codes received from connector ([#1440](https://github.com/juspay/hyperswitch/pull/1440)) ([`1e5d2a2`](https://github.com/juspay/hyperswitch/commit/1e5d2a28f6592106a5924044fc8d6fc49ab20acf))
    - **webhook:** Added the unknown field to the webhook_event_status of every connector ([#1343](https://github.com/juspay/hyperswitch/pull/1343)) ([`65d4a95`](https://github.com/juspay/hyperswitch/commit/65d4a95b59ee950ba67ce5b38688a650c5131149))
    - Make NextAction as enum ([#1234](https://github.com/juspay/hyperswitch/pull/1234)) ([`a359b76`](https://github.com/juspay/hyperswitch/commit/a359b76d09ffc581d5808e3750dac7326c389876))
    - Make bank names optional in payment method data ([#1483](https://github.com/juspay/hyperswitch/pull/1483)) ([`8198559`](https://github.com/juspay/hyperswitch/commit/8198559966313ab147161eb72c07a230ecebb70c))

    ### Testing

    - **connector:**
      - [Stripe] Fix redirection UI tests ([#1215](https://github.com/juspay/hyperswitch/pull/1215)) ([`ea6bce6`](https://github.com/juspay/hyperswitch/commit/ea6bce663dcb084b5990834cb922eec5c626e897))
      - [Globalpay] Fix unit tests ([#1217](https://github.com/juspay/hyperswitch/pull/1217)) ([`71c0d4c`](https://github.com/juspay/hyperswitch/commit/71c0d4c500f7daca7b00f737d714f2d98cc91513))
    - **postman-collection:** Add Github action to run postman collection ([#1272](https://github.com/juspay/hyperswitch/pull/1272)) ([`92c7767`](https://github.com/juspay/hyperswitch/commit/92c776714f63d02055fc46b5b750cee71328f5eb))
    - **selenium:** Read config from `CONNECTOR_AUTH_FILE_PATH` environment variable and fix bugs in UI tests ([#1225](https://github.com/juspay/hyperswitch/pull/1225)) ([`d9a16ed`](https://github.com/juspay/hyperswitch/commit/d9a16ed5abdafa6d48bf30a6ba8c3783bed3dff5))

    ### Documentation

    - **CONTRIBUTING:** Update commit guidelines ([#1351](https://github.com/juspay/hyperswitch/pull/1351)) ([`5d8895c`](https://github.com/juspay/hyperswitch/commit/5d8895c06412ff05d5abbfefaaa4933db853eb13))
    - Add changelog to 0.5.15 ([#1216](https://github.com/juspay/hyperswitch/pull/1216)) ([`0be900d`](https://github.com/juspay/hyperswitch/commit/0be900d2388ad732a40b788223bd48aee9b3aa95))
    - Add `ApplePayRedirectionData` to OpenAPI schema ([#1386](https://github.com/juspay/hyperswitch/pull/1386)) ([`d0d3254`](https://github.com/juspay/hyperswitch/commit/d0d32544c23481a1acd91182055a7a0afb78d723))

    ### Miscellaneous Tasks

    - **common_utils:** Apply the new type pattern for phone numbers ([#1286](https://github.com/juspay/hyperswitch/pull/1286)) ([`98e73e2`](https://github.com/juspay/hyperswitch/commit/98e73e2e90b4c79d0cc6cf8682693c1e5aad50a3))
    - **config:**
      - Add bank config for online_banking_poland, online_banking_slovakia ([#1220](https://github.com/juspay/hyperswitch/pull/1220)) ([`ee5466a`](https://github.com/juspay/hyperswitch/commit/ee5466a3b04f69c92dc5d04faca80d1f04275a9c))
      - Add bank config for przelewy24 ([#1460](https://github.com/juspay/hyperswitch/pull/1460)) ([`3ee97cd`](https://github.com/juspay/hyperswitch/commit/3ee97cda552e0745b8d75daad2e300288673a4d7))
    - **migrations:** Shrink `merchant_id` column of `merchant_key_store` to 64 characters ([#1476](https://github.com/juspay/hyperswitch/pull/1476)) ([`0fdd6ec`](https://github.com/juspay/hyperswitch/commit/0fdd6ecd4ac4bc5e1fc11e5cf79292c99eae71c1))
    - Address Rust 1.70 clippy lints ([#1334](https://github.com/juspay/hyperswitch/pull/1334)) ([`b681f78`](https://github.com/juspay/hyperswitch/commit/b681f78d964d02f80249751cc6fd12e3c85bc4d7))

    ### Build System / Dependencies

    - **deps:**
      - Bump `diesel` from `2.0.3` to `2.1.0` ([#1287](https://github.com/juspay/hyperswitch/pull/1287)) ([`b9ec38a`](https://github.com/juspay/hyperswitch/commit/b9ec38a1b54abbaa90bbc967aa8cdd450f149947))
      - Update dependencies ([#1342](https://github.com/juspay/hyperswitch/pull/1342)) ([`bce01ce`](https://github.com/juspay/hyperswitch/commit/bce01ced11e3869699d454827dc659fc82941951))
    - **docker:** Use `debian:bookworm-slim` as base image for builder and runner stages ([#1473](https://github.com/juspay/hyperswitch/pull/1473)) ([`5eb0333`](https://github.com/juspay/hyperswitch/commit/5eb033336321b5deb197f4416c8409abf99a8421))
    - Unify `sandbox` and `production` cargo features as `release` ([#1356](https://github.com/juspay/hyperswitch/pull/1356)) ([`695d3cd`](https://github.com/juspay/hyperswitch/commit/695d3cdac27448806fcde8cbb9cdc6ba4e7cbe7e))

    **Full Changelog:** [`v0.5.15...v0.6.0`](https://github.com/juspay/hyperswitch/compare/v0.5.15...v0.6.0)

    - - -

    ## 0.5.15 (2023-05-19)

    ### Features

    - **connector:**
      - [Bluesnap] Add support for ApplePay ([#1178](https://github.com/juspay/hyperswitch/pull/1178)) ([`919c03e`](https://github.com/juspay/hyperswitch/commit/919c03e679c4ebbb138509da52a18bface7ba319))
      - Add Interac as Payment Method Type ([#1205](https://github.com/juspay/hyperswitch/pull/1205)) ([`afceda5`](https://github.com/juspay/hyperswitch/commit/afceda55ad9741909e21a3c3956d78b5ba858746))
      - [Authorizedotnet] implement Capture flow and webhooks for Authorizedotnet ([#1171](https://github.com/juspay/hyperswitch/pull/1171)) ([`2d49ce5`](https://github.com/juspay/hyperswitch/commit/2d49ce56de5ed314aa099f3ce4aa569b3e22b561))
    - **db:** Implement `AddressInterface` for `MockDb` ([#968](https://github.com/juspay/hyperswitch/pull/968)) ([`39405bb`](https://github.com/juspay/hyperswitch/commit/39405bb4788bf88d6c8c166281fffc238a589aaa))
    - **documentation:** Add polymorphic `generate_schema` macro ([#1183](https://github.com/juspay/hyperswitch/pull/1183)) ([`53aa5ac`](https://github.com/juspay/hyperswitch/commit/53aa5ac92d0692b753624a4254040f8452def1d2))
    - **email:** Integrate email service using AWS SES ([#1158](https://github.com/juspay/hyperswitch/pull/1158)) ([`07e0fcb`](https://github.com/juspay/hyperswitch/commit/07e0fcbe06107e8be532b4e9a1e1a1ef6efba68e))
    - **frm_routing_algorithm:** Added frm_routing_algorithm to merchant_account table, to be consumed for frm selection ([#1161](https://github.com/juspay/hyperswitch/pull/1161)) ([`ea98145`](https://github.com/juspay/hyperswitch/commit/ea9814531880584435c122b3e32e9883e4518fd2))
    - **payments:** Add support for manual retries in payments confirm call ([#1170](https://github.com/juspay/hyperswitch/pull/1170)) ([`1f52a66`](https://github.com/juspay/hyperswitch/commit/1f52a66452042deb0e3959e839a726f261cce880))
    - **redis_interface:** Implement `MGET` command ([#1206](https://github.com/juspay/hyperswitch/pull/1206)) ([`93dcd98`](https://github.com/juspay/hyperswitch/commit/93dcd98640a31e41f0d66d2ece2396e536adefae))
    - **router:**
      - Implement `ApiKeyInterface` for `MockDb` ([#1101](https://github.com/juspay/hyperswitch/pull/1101)) ([`95c7ca9`](https://github.com/juspay/hyperswitch/commit/95c7ca99d1b5009f4cc8664825c5e63a165006c7))
      - Add mandates list api ([#1143](https://github.com/juspay/hyperswitch/pull/1143)) ([`commit`](https://github.com/juspay/hyperswitch/commit/75ba3ff09f71d1dd295f9dad0060d2620d7b3764))
    - **traces:** Add support for aws xray ([#1194](https://github.com/juspay/hyperswitch/pull/1194)) ([`8947e1c`](https://github.com/juspay/hyperswitch/commit/8947e1c9dba3585c3d998110b53747cbc1007bc2))
    - ACH transfers ([#905](https://github.com/juspay/hyperswitch/pull/905)) ([`23bca66`](https://github.com/juspay/hyperswitch/commit/23bca66b810993895e4054cc4bf3fdcac6b2ed4c))
    - SEPA and BACS bank transfers through stripe ([#930](https://github.com/juspay/hyperswitch/pull/930)) ([`cf00059`](https://github.com/juspay/hyperswitch/commit/cf000599ddaca2646efce0493a013c06fcdf34b8))

    ### Bug Fixes

    - **connector:** [Checkout] Fix incoming webhook event mapping ([#1197](https://github.com/juspay/hyperswitch/pull/1197)) ([`912a108`](https://github.com/juspay/hyperswitch/commit/912a1084846b6dc8e843e852a3b664a4faaf9f00))
    - **core:** Add ephemeral key to payment_create response when customer_id is mentioned ([#1133](https://github.com/juspay/hyperswitch/pull/1133)) ([`f394c4a`](https://github.com/juspay/hyperswitch/commit/f394c4abc071b314798943024ba22d653a6a056e))
    - **mandate:** Throw DuplicateMandate Error if mandate insert fails ([#1201](https://github.com/juspay/hyperswitch/pull/1201)) ([`186bd72`](https://github.com/juspay/hyperswitch/commit/186bd729d672290e0f49eac0cebb3dcb8948f992))
    - **merchant_connector_account:** Add validation for the `disabled` flag ([#1141](https://github.com/juspay/hyperswitch/pull/1141)) ([`600dc33`](https://github.com/juspay/hyperswitch/commit/600dc338673c593c3cbd3ad8dfebe17d4f5c0326))
    - **router:**
      - Aggregate critical hotfixes for v0.5.10 ([#1162](https://github.com/juspay/hyperswitch/pull/1162)) ([`ed22b2a`](https://github.com/juspay/hyperswitch/commit/ed22b2af763425d4e71cccd8da158e5e95722fed))
      - Outgoing webhook api call ([#1193](https://github.com/juspay/hyperswitch/pull/1193)) ([`31a52d8`](https://github.com/juspay/hyperswitch/commit/31a52d8058dbee38cd77de20b7cae7c5d6fb23bf))
      - Add dummy connector url to proxy bypass ([#1186](https://github.com/juspay/hyperswitch/pull/1186)) ([`bc5497f`](https://github.com/juspay/hyperswitch/commit/bc5497f03ab7fde585e7c57815f55cf7b4b8d475))
      - Aggregate hotfixes for v0.5.10 ([#1204](https://github.com/juspay/hyperswitch/pull/1204)) ([`9cc1cee`](https://github.com/juspay/hyperswitch/commit/9cc1ceec6986f5696030d95e6899730807637cd9))
    - **utils:** Fix bug in email validation ([#1180](https://github.com/juspay/hyperswitch/pull/1180)) ([`5e51b6b`](https://github.com/juspay/hyperswitch/commit/5e51b6b16db6830dd5051b43fbd7d43532d9f195))
    - Fix(connector) : Added signifyd to routableconnectors for frm ([#1182](https://github.com/juspay/hyperswitch/pull/1182)) ([`2ce5d5f`](https://github.com/juspay/hyperswitch/commit/2ce5d5ffe4e37de29749fc97b13d2faaec8fcee0))
    - Handle unique constraint violation error gracefully ([#1202](https://github.com/juspay/hyperswitch/pull/1202)) ([`b3fd174`](https://github.com/juspay/hyperswitch/commit/b3fd174d04cdd4b26328d36c4f886e6ef4df830d))

    ### Refactors

    - **mandate:** Allow merchant to pass the mandate details and customer acceptance separately ([#1188](https://github.com/juspay/hyperswitch/pull/1188)) ([`6c41cdb`](https://github.com/juspay/hyperswitch/commit/6c41cdb1c942d3152c73a44b62dd9a02587f6bd8))
    - Use `strum::EnumString` implementation for connector name conversions ([#1052](https://github.com/juspay/hyperswitch/pull/1052)) ([`2809425`](https://github.com/juspay/hyperswitch/commit/28094251546b6067a44df8ae906d9cd04f85e84e))

    ### Documentation

    - Add changelog for v0.5.14 ([#1177](https://github.com/juspay/hyperswitch/pull/1177)) ([`236124d`](https://github.com/juspay/hyperswitch/commit/236124d1993c2a7d52e30441761a3558ad02c973))

    ### Miscellaneous Tasks

    - **CODEOWNERS:** Add hyperswitch-maintainers as default owners for all files ([#1210](https://github.com/juspay/hyperswitch/pull/1210)) ([`985670d`](https://github.com/juspay/hyperswitch/commit/985670da9c90cbc904162d7863c9c508f5cf5e19))
    - **git-cliff:** Simplify `git-cliff` config files ([#1213](https://github.com/juspay/hyperswitch/pull/1213)) ([`bd0069e`](https://github.com/juspay/hyperswitch/commit/bd0069e2a8bd3c3389c92590c688ce945cd7ebec))

    ### Revert

    - **connector:** Fix stripe status to attempt status map ([#1179](https://github.com/juspay/hyperswitch/pull/1179)) ([`bd8868e`](https://github.com/juspay/hyperswitch/commit/bd8868efd00748cf64c46519c4ed7ba04ad06d5e))
    - Fix(connector): Added signifyd to routableconnectors for frm ([#1203](https://github.com/juspay/hyperswitch/pull/1203)) ([`dbc5bc5`](https://github.com/juspay/hyperswitch/commit/dbc5bc538a218ae287e96c44de0223c26c1583f0))

    - - -

    ## 0.5.14 (2023-05-16)

    ### Features

    - **connector:**
      - [Stripe] implement Bancontact Bank Redirect for stripe ([#1169](https://github.com/juspay/hyperswitch/pull/1169)) ([`5b22e96`](https://github.com/juspay/hyperswitch/commit/5b22e967981b604be6070f5b373555756a5c62f7))
      - [Noon] Add script generated template code ([#1164](https://github.com/juspay/hyperswitch/pull/1164)) ([`bfaf75f`](https://github.com/juspay/hyperswitch/commit/bfaf75fca38e535ceb3ea4327e252d807fb61892))
      - [Adyen] implement BACS Direct Debits for Adyen ([#1159](https://github.com/juspay/hyperswitch/pull/1159)) ([`9f47f20`](https://github.com/juspay/hyperswitch/commit/9f47f2070216eb8c64db14eae555073a507cc634))
    - **router:** Add retrieve dispute evidence API ([#1114](https://github.com/juspay/hyperswitch/pull/1114)) ([`354ee01`](https://github.com/juspay/hyperswitch/commit/354ee0137a968862e545d9b437ade27aa0b0f8f3))
    - Add accounts in-memory cache ([#1086](https://github.com/juspay/hyperswitch/pull/1086)) ([`da4d721`](https://github.com/juspay/hyperswitch/commit/da4d721424d329af618a63034aabe2d9248eb041))

    ### Bug Fixes

    - **connector:**
      - [Checkout] Change error handling condition for empty response ([#1168](https://github.com/juspay/hyperswitch/pull/1168)) ([`e3fcfdd`](https://github.com/juspay/hyperswitch/commit/e3fcfdd3377df298058b5e1f69f0e553c09ac603))
      - Change payment method handling in dummy connector ([#1175](https://github.com/juspay/hyperswitch/pull/1175)) ([`32a3722`](https://github.com/juspay/hyperswitch/commit/32a3722f073c3ea22220abfa62034e476ee8acef))

    ### Refactors

    - **connector:** Update error handling for Paypal, Checkout, Mollie to include detailed messages ([#1150](https://github.com/juspay/hyperswitch/pull/1150)) ([`e044c2f`](https://github.com/juspay/hyperswitch/commit/e044c2fd9a4464e59ffc372b9333af6acbc9809a))

    ### Documentation

    - **CHANGELOG:** Add changelog for 0.5.13 ([#1166](https://github.com/juspay/hyperswitch/pull/1166)) ([`94fe1af`](https://github.com/juspay/hyperswitch/commit/94fe1af1b0bce3b4ecaef8665909fc8f5cd4bbbb))

    - - -

    ## 0.5.13 (2023-05-15)

    ### Features

    - **config:** Add API route `set_config` ([#1144](https://github.com/juspay/hyperswitch/pull/1144)) ([`f31926b`](https://github.com/juspay/hyperswitch/commit/f31926b833557f18f93620d34765c90ac16fbeeb))
    - **connector:**
      - Add payment, refund urls for dummy connector ([#1084](https://github.com/juspay/hyperswitch/pull/1084)) ([`fee0e9d`](https://github.com/juspay/hyperswitch/commit/fee0e9dadd2e20c5c75dcee50de0e53f4e5e6deb))
      - [ACI] Implement Trustly Bank Redirect ([#1130](https://github.com/juspay/hyperswitch/pull/1130)) ([`46b40ec`](https://github.com/juspay/hyperswitch/commit/46b40ecce540b61eced7156555c0fcdcec170405))
      - Add multiple dummy connectors and enable them ([#1147](https://github.com/juspay/hyperswitch/pull/1147)) ([`8a35f7c`](https://github.com/juspay/hyperswitch/commit/8a35f7c926f3cbd0d5cd3c2c9470575246985ca3))
      - [ACI] Implement Alipay and MB WAY Wallets ([#1140](https://github.com/juspay/hyperswitch/pull/1140)) ([`d7cfb4a`](https://github.com/juspay/hyperswitch/commit/d7cfb4a179083580a7e195fa07077af23a262ceb))
      - [Stripe] Implement Przelewy24 bank redirect ([#1111](https://github.com/juspay/hyperswitch/pull/1111)) ([`54ff02d`](https://github.com/juspay/hyperswitch/commit/54ff02d9ddb4cbe2f085f894c833b9800ce8d597))
    - **error:**
      - Add feature-gated stacktrace to error received from API ([#1104](https://github.com/juspay/hyperswitch/pull/1104)) ([`bf2352b`](https://github.com/juspay/hyperswitch/commit/bf2352b14ae7d7343474424be0f0a4b0fee1b0f2))
      - Add `DateTimeParsingError` and `EmailParsingError` variants to `ParsingError` enum ([#1146](https://github.com/juspay/hyperswitch/pull/1146)) ([`7eed8e7`](https://github.com/juspay/hyperswitch/commit/7eed8e7f3e84a7ab4ce8bd4b7892a931211dbe3f))
    - **payment_request:** Add field `amount` to `OrderDetails` and make `order_details` a `Vec` in `payments_create` request ([#964](https://github.com/juspay/hyperswitch/pull/964)) ([`60e8c73`](https://github.com/juspay/hyperswitch/commit/60e8c7317a2d1cc99f0179479891565f990df685))
    - **router:**
      - Add payment, refund routes for dummy connector ([#1071](https://github.com/juspay/hyperswitch/pull/1071)) ([`822fc69`](https://github.com/juspay/hyperswitch/commit/822fc695a38560e6ea4ff13bc837d46214ee9249))
      - Add attach dispute evidence api ([#1070](https://github.com/juspay/hyperswitch/pull/1070)) ([`a5756aa`](https://github.com/juspay/hyperswitch/commit/a5756aaecf1b96ef4d04c57592b85f2a20da6639))

    ### Bug Fixes

    - **connector:**
      - [Adyen] fix status mapping for Adyen authorize, capture, refund API ([#1149](https://github.com/juspay/hyperswitch/pull/1149)) ([`2932a5f`](https://github.com/juspay/hyperswitch/commit/2932a5f0ff5aa8dabd69fc683b5c688a20c405f9))
      - Fix Stripe status to attempt status map ([#1132](https://github.com/juspay/hyperswitch/pull/1132)) ([`8b85647`](https://github.com/juspay/hyperswitch/commit/8b85647a169d1d3ea59d2b472eabb99482f71eda))
    - **mandate:** Allow card details to be provided in case of network transaction id ([#1138](https://github.com/juspay/hyperswitch/pull/1138)) ([`cc121d0`](https://github.com/juspay/hyperswitch/commit/cc121d0febcb397a989e512928d33a8cff2fbdee))

    - - -

    ## 0.5.12 (2023-05-11)

    ### Features

    - **Connector:** [ACI] Implement Przelewy24 Bank Redirect ([#1064](https://github.com/juspay/hyperswitch/pull/1064)) ([`cef8914`](https://github.com/juspay/hyperswitch/commit/cef8914372fa051f074e89fc76b76c6aee0d7bca))
    - **connector:**
      - [Iatapay] Implement AccessTokenAuth, Authorize, PSync, Refund, RSync and testcases ([#1034](https://github.com/juspay/hyperswitch/pull/1034)) ([`a2527b5`](https://github.com/juspay/hyperswitch/commit/a2527b5b2af0a72422e1169f0827b6c55e21d673))
      - [bitpay] Add new crypto connector bitpay & testcases for all crypto connectors ([#919](https://github.com/juspay/hyperswitch/pull/919)) ([`f70f10a`](https://github.com/juspay/hyperswitch/commit/f70f10aac58cce805b150badf634271c0f98d478))
      - Add connector nmi with card, applepay and googlepay support ([#771](https://github.com/juspay/hyperswitch/pull/771)) ([`baf5fd9`](https://github.com/juspay/hyperswitch/commit/baf5fd91cf7fbb9f787e1ba137d1a3c597fe44ef))
      - [ACI] Implement Interac Online Bank Redirect ([#1108](https://github.com/juspay/hyperswitch/pull/1108)) ([`0177f1d`](https://github.com/juspay/hyperswitch/commit/0177f1d1b90bfa6bfb817bf282f3fb1f52eae7f6))
    - **pm_list:** Add pm list support for bank_debits ([#1120](https://github.com/juspay/hyperswitch/pull/1120)) ([`dfc6be4`](https://github.com/juspay/hyperswitch/commit/dfc6be4e4f3333ae4639bf4b98c4ec834a66f460))

    ### Bug Fixes

    - **connector:** Fix checkout error response type ([#1124](https://github.com/juspay/hyperswitch/pull/1124)) ([`5fd1614`](https://github.com/juspay/hyperswitch/commit/5fd16146dba52f65f7c5fe26f0a7526875e4e4e2))
    - **connector_customer:** Create connector_customer on requirement basis ([#1097](https://github.com/juspay/hyperswitch/pull/1097)) ([`e833a1d`](https://github.com/juspay/hyperswitch/commit/e833a1ddeeae06cd58cb9d6fc760d8e3b0d82b6b))
    - **google_pay:** Allow custom fields in `GpayTokenParameters` for google pay via stripe ([#1125](https://github.com/juspay/hyperswitch/pull/1125)) ([`f790099`](https://github.com/juspay/hyperswitch/commit/f790099368ed6ed73ecc729cb18b85e0c6b5f809))
    - **mandate:** Only trigger mandate procedure on successful connector call ([#1122](https://github.com/juspay/hyperswitch/pull/1122)) ([`a904d2b`](https://github.com/juspay/hyperswitch/commit/a904d2b4d945c8ecaacae41bf44c6a2ce6ac632e))
    - **payments:** Fix address_insert error propagation in get_address_for_payment_request function ([#1079](https://github.com/juspay/hyperswitch/pull/1079)) ([`da3b520`](https://github.com/juspay/hyperswitch/commit/da3b5201b4e30a6047bbf3069b2542482f8f9e51))
    - **router:** Fix webhooks flow for checkout connector ([#1126](https://github.com/juspay/hyperswitch/pull/1126)) ([`7f3ceb4`](https://github.com/juspay/hyperswitch/commit/7f3ceb42fb95a117a39bc679ce2f7830bffbec54))

    ### Refactors

    - **api_models:**
      - Remove unused mapping of attempt status to intent status ([#1127](https://github.com/juspay/hyperswitch/pull/1127)) ([`45ccc41`](https://github.com/juspay/hyperswitch/commit/45ccc410eacd425c6b68179ffa7b4258ab341e61))
      - Derive serialize on`PaymentsCaptureRequest` struct ([#1129](https://github.com/juspay/hyperswitch/pull/1129)) ([`e779ee7`](https://github.com/juspay/hyperswitch/commit/e779ee78a47e1b6d08c4df4afc3762c33db51eeb))
    - **errors:** Add parsing error types for context info ([#911](https://github.com/juspay/hyperswitch/pull/911)) ([`0d46690`](https://github.com/juspay/hyperswitch/commit/0d466905024018e7ca5a7acc66ee98784337e7d3))

    ### Revert

    - Refactor(merchant_account): add back `api_key` field for backward compatibility ([#761](https://github.com/juspay/hyperswitch/pull/761)) ([#1062](https://github.com/juspay/hyperswitch/pull/1062)) ([`f481abb`](https://github.com/juspay/hyperswitch/commit/f481abb8551f3ec5e495cf9916d9d8a5cecd62da))

    - - -

    ## 0.5.11 (2023-05-10)

    ### Features

    - **Connector:**
      - [Adyen]Implement ACH Direct Debits for Adyen ([#1033](https://github.com/juspay/hyperswitch/pull/1033)) ([`eee55bd`](https://github.com/juspay/hyperswitch/commit/eee55bdfbe67e5f4be7ed7e388f5ed93e70165ff))
      - [Stripe] Implemented Alipay Digital Wallet ([#1048](https://github.com/juspay/hyperswitch/pull/1048)) ([`7c7185b`](https://github.com/juspay/hyperswitch/commit/7c7185bc1a783efe81a994fef179a73313954d9d))
      - [Stripe] Implement Wechatpay Digital Wallet ([#1049](https://github.com/juspay/hyperswitch/pull/1049)) ([`93947ea`](https://github.com/juspay/hyperswitch/commit/93947eaf258ddb74315f4776b2faec87f42e6216))
    - **cards:** Add credit card number validation ([#889](https://github.com/juspay/hyperswitch/pull/889)) ([`d6e71b9`](https://github.com/juspay/hyperswitch/commit/d6e71b959ddbdc99411fc7d669df61f373de4e32))
    - **connector:**
      - Mandates for alternate payment methods via Adyen ([#1046](https://github.com/juspay/hyperswitch/pull/1046)) ([`4403634`](https://github.com/juspay/hyperswitch/commit/4403634dda41b1b7fbbe56ee6177722bcbe2e29b))
      - Add klarna, afterpay support in Nuvei ([#1081](https://github.com/juspay/hyperswitch/pull/1081)) ([`0bb0437`](https://github.com/juspay/hyperswitch/commit/0bb0437b7fca30b9a1d1567ab22afebeb7bce744))
      - Add dispute and refund webhooks for Airwallex ([#1021](https://github.com/juspay/hyperswitch/pull/1021)) ([`8c34114`](https://github.com/juspay/hyperswitch/commit/8c3411413847ac2dda3fef485d1e402a11376780))
      - Add bank redirect support for worldline ([#1060](https://github.com/juspay/hyperswitch/pull/1060)) ([`bc4ac52`](https://github.com/juspay/hyperswitch/commit/bc4ac529aa981150de6882d425bd274bc6272e30))
      - [Adyen] Implement SEPA Direct debits for Adyen ([#1055](https://github.com/juspay/hyperswitch/pull/1055)) ([`7f796a6`](https://github.com/juspay/hyperswitch/commit/7f796a6709e18cc92668e50a044408bad8aeee3d))
    - **refunds:** Add connector field in refund response ([#1059](https://github.com/juspay/hyperswitch/pull/1059)) ([`3fe24b3`](https://github.com/juspay/hyperswitch/commit/3fe24b3255039d6a5dff59203ffcfd024ff0d60b))
    - **router:**
      - Added retrieval flow for connector file uploads and added support for stripe connector ([#990](https://github.com/juspay/hyperswitch/pull/990)) ([`38aa9ea`](https://github.com/juspay/hyperswitch/commit/38aa9eab3f2453593e7b0c3fa63b37f7f2609514))
      - Add disputes block in payments retrieve response ([#1038](https://github.com/juspay/hyperswitch/pull/1038)) ([`1304d91`](https://github.com/juspay/hyperswitch/commit/1304d912e53cf223f8f15760e29b84faafe4f6ea))
    - Allow payment cancels for more statuses ([#1027](https://github.com/juspay/hyperswitch/pull/1027)) ([`a2a6bab`](https://github.com/juspay/hyperswitch/commit/a2a6bab56cc70463d25232ce40ca4f115bee24e0))

    ### Bug Fixes

    - **applepay:** Rename applepay_session_response to lowercase ([#1090](https://github.com/juspay/hyperswitch/pull/1090)) ([`736a236`](https://github.com/juspay/hyperswitch/commit/736a236651523b7f72ff95ad9223f4dda875301a))
    - **router:** Fix recursion bug in straight through algorithm ([#1080](https://github.com/juspay/hyperswitch/pull/1080)) ([`aa610c4`](https://github.com/juspay/hyperswitch/commit/aa610c49f5a24e3e858515d9dfe0872d43251ee5))
    - **tests:** Remove ui tests from ci pipeline ([#1082](https://github.com/juspay/hyperswitch/pull/1082)) ([`2ab7f83`](https://github.com/juspay/hyperswitch/commit/2ab7f83103d0907095e5b15a35f298ae60e6d180))
    - Connector-customer-id missing bug fix ([#1085](https://github.com/juspay/hyperswitch/pull/1085)) ([`c5db5c3`](https://github.com/juspay/hyperswitch/commit/c5db5c37ec8f15e90d56aca59d14331fd8a2ea30))

    ### Refactors

    - **router:** Add `id` field in `MerchantConnectorAccountNotFound` ([#1098](https://github.com/juspay/hyperswitch/pull/1098)) ([`5214e22`](https://github.com/juspay/hyperswitch/commit/5214e22f20c01e7dfb402ae619fdf2e7339d0fe7))

    ### Documentation

    - **changelog:** Adding changelog for v0.5.10 ([#1078](https://github.com/juspay/hyperswitch/pull/1078)) ([`cb77b01`](https://github.com/juspay/hyperswitch/commit/cb77b012a2751f10395c3ff698aed4714a6b4223))

    ### Miscellaneous Tasks

    - **CODEOWNERS:** Update CODEOWNERS ([#1076](https://github.com/juspay/hyperswitch/pull/1076)) ([`1456580`](https://github.com/juspay/hyperswitch/commit/1456580366c618300db4e0746db08a7466e04ea8))

    - - -

    ## 0.5.10 (2023-05-08)

    ### Features

    - **common_utils:**
      - Impl deref for email newtype ([#1073](https://github.com/juspay/hyperswitch/pull/1073)) ([`fa8683a`](https://github.com/juspay/hyperswitch/commit/fa8683a54b0056f4cc31d096765de373f8ae8a43))
      - Impl from for email newtype ([#1074](https://github.com/juspay/hyperswitch/pull/1074)) ([`7c6f0fd`](https://github.com/juspay/hyperswitch/commit/7c6f0fdec5c8f03863d26fc6dabf1fb3225e3d59))
    - **connector:**
      - Add authorize, capture, void, psync, refund, rsync for Forte connector ([#955](https://github.com/juspay/hyperswitch/pull/955)) ([`f0464bc`](https://github.com/juspay/hyperswitch/commit/f0464bc4f584b52c4983df62a28befd60f67cca4))
      - Add dummy connector template code ([#970](https://github.com/juspay/hyperswitch/pull/970)) ([`e5cc0d9`](https://github.com/juspay/hyperswitch/commit/e5cc0d9d45d41c391720ceb3f6c18151ac5a00f2))
      - Add payment routes for dummy connector ([#980](https://github.com/juspay/hyperswitch/pull/980)) ([`4ece376`](https://github.com/juspay/hyperswitch/commit/4ece376b56549b53bd81c16fd9fdebbd0b9b1114))
      - [Bluesnap] add cards 3DS support ([#1057](https://github.com/juspay/hyperswitch/pull/1057)) ([`9c331e4`](https://github.com/juspay/hyperswitch/commit/9c331e411ba524ef41352c1c7c69635492fcec23))
      - Mandates for alternate payment methods via Stripe ([#1041](https://github.com/juspay/hyperswitch/pull/1041)) ([`64721b8`](https://github.com/juspay/hyperswitch/commit/64721b80ae0d276820404ff1208af91303cf1473))
    - **errors:** Add reverse errorswitch trait for foreign errors ([#909](https://github.com/juspay/hyperswitch/pull/909)) ([`ab55d21`](https://github.com/juspay/hyperswitch/commit/ab55d21013a279568379b97821da98457a10754a))

    ### Bug Fixes

    - **common_utils:** Manually implement diesel queryable for email newtype ([#1072](https://github.com/juspay/hyperswitch/pull/1072)) ([`3519649`](https://github.com/juspay/hyperswitch/commit/35196493c4509a6f9f1c202bf8b8a6aa7605346b))
    - **connector:**
      - [worldline] fix worldline unit test ([#1054](https://github.com/juspay/hyperswitch/pull/1054)) ([`3131bc8`](https://github.com/juspay/hyperswitch/commit/3131bc84af008f05508aab9049f6ee492ca89460))
      - [ACI] Add amount currency conversion and update error codes ([#1065](https://github.com/juspay/hyperswitch/pull/1065)) ([`b760cba`](https://github.com/juspay/hyperswitch/commit/b760cba5460395487c63ea4363665b0d7e5a6118))
    - **mandate:**
      - Make payment_method_data optional for mandate scenario ([#1032](https://github.com/juspay/hyperswitch/pull/1032)) ([`9cb3fa2`](https://github.com/juspay/hyperswitch/commit/9cb3fa216ce490d62f99525b23430809b4943dcb))
      - Fix payment_method_data becoming empty when mandate_id is not present ([#1077](https://github.com/juspay/hyperswitch/pull/1077)) ([`5c5c3ef`](https://github.com/juspay/hyperswitch/commit/5c5c3ef3831991ccfefd9b0561f5eac976ed2191))
    - **redis:** Fix recreation on redis connection pool ([#1063](https://github.com/juspay/hyperswitch/pull/1063)) ([`982c27f`](https://github.com/juspay/hyperswitch/commit/982c27fce72074d2644c0a9f229b201b927c55da))
    - Impl `Drop` for `RedisConnectionPool` ([#1051](https://github.com/juspay/hyperswitch/pull/1051)) ([`3d05e50`](https://github.com/juspay/hyperswitch/commit/3d05e50abcb92fe7e6c4472faafc03fb70920048))
    - Throw PreconditionFailed error when routing_algorithm is not configured ([#1017](https://github.com/juspay/hyperswitch/pull/1017)) ([`8853702`](https://github.com/juspay/hyperswitch/commit/8853702f4b98c72655d6e36ed6acc13b7c261ad5))

    ### Refactors

    - **compatibility:** Refactor stripe compatibility routes using `web::resource` ([#1022](https://github.com/juspay/hyperswitch/pull/1022)) ([`92ae2d9`](https://github.com/juspay/hyperswitch/commit/92ae2d92f18577d5cc88805340fa63c5e50dbc37))
    - **router:**
      - Nest the straight through algorithm column in payment attempt ([#1040](https://github.com/juspay/hyperswitch/pull/1040)) ([`64fa21e`](https://github.com/juspay/hyperswitch/commit/64fa21eb4fb265e122f97aaae7445fabd571be23))
      - Add the `connector_label` field to `DuplicateMerchantConnectorAccount` error message ([#1044](https://github.com/juspay/hyperswitch/pull/1044)) ([`b3772f8`](https://github.com/juspay/hyperswitch/commit/b3772f8ef13a565730ec229b612c10ed68bb3c4b))
      - Include payment method type in connector choice for session flow ([#1036](https://github.com/juspay/hyperswitch/pull/1036)) ([`73b8988`](https://github.com/juspay/hyperswitch/commit/73b8988322e3d15f90b2c4ca776d135d23e97710))
    - Use newtype pattern for email addresses ([#819](https://github.com/juspay/hyperswitch/pull/819)) ([`b8e2b1c`](https://github.com/juspay/hyperswitch/commit/b8e2b1c5f42dcd41a3d02e0d2422e1407b6a41de))

    - - -

    ## 0.5.9 (2023-05-04)

    ### Features

    - **api_models:** Derive `Serialize`, `Eq`, `PartialEq`, `strum::Display` on `RefundStatus` ([#989](https://github.com/juspay/hyperswitch/pull/989)) ([`22a5372`](https://github.com/juspay/hyperswitch/commit/22a5372481bbf854cffb8b683606cdf0644a5f54))
    - **cards:** Validate card security code and expiration ([#874](https://github.com/juspay/hyperswitch/pull/874)) ([`0b7bc7b`](https://github.com/juspay/hyperswitch/commit/0b7bc7bcd23498485c831d1c78187c433b8bb3c7))
    - **connector:**
      - [ACI] Add banking redirect support for EPS, Giropay, iDEAL, and Sofortueberweisung ([#890](https://github.com/juspay/hyperswitch/pull/890)) ([`c86f2c0`](https://github.com/juspay/hyperswitch/commit/c86f2c045e3cc614e5f68d84b5055a1b0e222f67))
      - Add dispute webhooks for Stripe ([#918](https://github.com/juspay/hyperswitch/pull/918)) ([`0df2244`](https://github.com/juspay/hyperswitch/commit/0df224479416533579dd6d96e7f0dd9c246b739c))
      - Add Cards(3ds & non3ds),bank_redirects ,wallets(Paypal,Applepay) and Mandates support to nexinets ([#898](https://github.com/juspay/hyperswitch/pull/898)) ([`eea05f5`](https://github.com/juspay/hyperswitch/commit/eea05f5c3196d68cf9cd306419ac55003cebf002))
    - **pm_list:** Add available capture methods filter ([#999](https://github.com/juspay/hyperswitch/pull/999)) ([`36cc13d`](https://github.com/juspay/hyperswitch/commit/36cc13d44bb61b840195e1a24f1bebdb0115d13b))
    - **router:** Added support for optional defend dispute api call and added evidence submission flow for checkout connector ([#979](https://github.com/juspay/hyperswitch/pull/979)) ([`4728d94`](https://github.com/juspay/hyperswitch/commit/4728d946e24c2c548e7cdc23c34238ff028f1076))
    - PG Agnostic mandate using network_txns_id (Adyen, Authorizedotnet, Stripe) ([#855](https://github.com/juspay/hyperswitch/pull/855)) ([`ed99655`](https://github.com/juspay/hyperswitch/commit/ed99655ebc11d53f4b2ffcb8c0eb9ef6b56f32c4))
    - Expire client secret after a merchant configurable intent fufliment time ([#956](https://github.com/juspay/hyperswitch/pull/956)) ([`03a9643`](https://github.com/juspay/hyperswitch/commit/03a96432a9d9874d2232d75206f7bc605f1170f3))

    ### Bug Fixes

    - **refund_list:** Updated refund list response status code when no refunds found. ([#974](https://github.com/juspay/hyperswitch/pull/974)) ([`4e0489c`](https://github.com/juspay/hyperswitch/commit/4e0489cf1cb7c17e55cffabeb0067c380ba41ff4))
    - **refund_sync:** Add validation for missing `connector_refund_id` ([#1013](https://github.com/juspay/hyperswitch/pull/1013)) ([`4397c8e`](https://github.com/juspay/hyperswitch/commit/4397c8e19977974510f7c24daa8c3ef7f2ab907b))
    - **storage_models:** Fix incorrect field order in `MerchantConnectorAccount` ([#976](https://github.com/juspay/hyperswitch/pull/976)) ([`c9e8a9b`](https://github.com/juspay/hyperswitch/commit/c9e8a9b4b721612ff2c771f4849fbad0c18bb7f2))
    - Fix internal server errors on merchant connector account creation ([#1026](https://github.com/juspay/hyperswitch/pull/1026)) ([`c31b4b4`](https://github.com/juspay/hyperswitch/commit/c31b4b41c22c9c622d75f0f8421ec67a416d5b70))
    - Remove old data while deserialization error from cache ([#1010](https://github.com/juspay/hyperswitch/pull/1010)) ([`23b5647`](https://github.com/juspay/hyperswitch/commit/23b5647290a7baa12107abd88359507aa3c31444))
    - Passing connector_name instead of ConnectorCallType ([#1050](https://github.com/juspay/hyperswitch/pull/1050)) ([`c888635`](https://github.com/juspay/hyperswitch/commit/c888635166be08e826f8a21f5c0c3262cc0918f9))

    ### Refactors

    - **config:** Add independent toggles for enabling traces and metrics ([#1020](https://github.com/juspay/hyperswitch/pull/1020)) ([`af71828`](https://github.com/juspay/hyperswitch/commit/af71828e351918fe6a97b52969db4abd331f6e5b))
    - **stripe:** Return all the missing fields in a request ([#935](https://github.com/juspay/hyperswitch/pull/935)) ([`e9fc34f`](https://github.com/juspay/hyperswitch/commit/e9fc34ff626c13ec117f4ec9b091a69892bddf4f))
    - Use `CountryAlpha2` instead of `CountryCode` for country codes ([#904](https://github.com/juspay/hyperswitch/pull/904)) ([`2cff019`](https://github.com/juspay/hyperswitch/commit/2cff019a1be669e5b1cd44d5513463671f386f4c))

    ### Documentation

    - **README:** Remove redundant "more" in FAQs ([#1031](https://github.com/juspay/hyperswitch/pull/1031)) ([`9cbda83`](https://github.com/juspay/hyperswitch/commit/9cbda838171331598018a640551495014bc364a2))

    ### Miscellaneous Tasks

    - Add `git-cliff` configs for generating changelogs and release notes ([#1047](https://github.com/juspay/hyperswitch/pull/1047)) ([`68360d4`](https://github.com/juspay/hyperswitch/commit/68360d4d6a31d8d7361c83021ca3049780d6d0a3))

    ### Build System / Dependencies

    - **deps:** Make AWS dependencies optional ([#1030](https://github.com/juspay/hyperswitch/pull/1030)) ([`a4f6f3f`](https://github.com/juspay/hyperswitch/commit/a4f6f3fdaa23f7bd849eb44971de8311f9363ac3))

    - - -

    ## 0.5.8 (2023-04-25)

    ### Chores

    *  fix error message for deserialization ([#885](https://github.com/juspay/orca/pull/885)) ([e4d0dd0a](https://github.com/juspay/orca/commit/e4d0dd0a3885151a8e28a0246e67523f90f53076))

    ### Continuous Integration

    * **connector-sanity-tests:**  run tests on being queued for merge ([#960](https://github.com/juspay/orca/pull/960)) ([067dc709](https://github.com/juspay/orca/commit/067dc709360394b062c217ca3a27e011bfbac215))
    * **manual-release:**  fix `EXTRA_FEATURES` not being passed correctly ([#912](https://github.com/juspay/orca/pull/912)) ([9c9c52f9](https://github.com/juspay/orca/commit/9c9c52f9af74ebc7e835a5750dd05967b39a0ade))

    ### Documentation Changes

    * **dashboard:**  add button that links to dashboard ([#934](https://github.com/juspay/orca/pull/934)) ([96f9e806](https://github.com/juspay/orca/commit/96f9e8068bfae0dd8479f69d4add675f1aaad991))

    ### New Features

    * **connector:**
      *  add 3ds for Bambora and Support Html 3ds response ([#817](https://github.com/juspay/orca/pull/817)) ([20bea23b](https://github.com/juspay/orca/commit/20bea23b75c30b27f5beda78ac2ffa8302c6e6a8))
      *  [Nuvei] add support for bank redirect Eps, Sofort, Giropay, Ideal ([#870](https://github.com/juspay/orca/pull/870)) ([c1a25b30](https://github.com/juspay/orca/commit/c1a25b30bd88ab4ad4f40866a16ba5651d711ee3))
      *  [Checkout] add GooglePay, ApplePay and Webhooks support  ([#875](https://github.com/juspay/orca/pull/875)) ([3fce1407](https://github.com/juspay/orca/commit/3fce1407039c060712465cf4a696f8ed23f3bffb))
    * **router:**
      *  added dispute accept api, file module apis and dispute evidence submission api  ([#900](https://github.com/juspay/orca/pull/900)) ([bdf1e514](https://github.com/juspay/orca/commit/bdf1e5147e710876a62c7377471144175e6c823d))
      *  add new payment methods for Bank redirects, BNPL and wallet ([#864](https://github.com/juspay/orca/pull/864)) ([304081cb](https://github.com/juspay/orca/commit/304081cbadf86bbd5a20d69b96a79d6cd647024c))
    * **compatibility:**  add refund retrieve endpoint which accepts gateway creds ([#958](https://github.com/juspay/orca/pull/958)) ([bcbf4c88](https://github.com/juspay/orca/commit/bcbf4c882c248d08d3d0733299c7220597d669e3))
    * **Core:**  gracefully shutdown router/scheduler if Redis is unavailable ([#891](https://github.com/juspay/orca/pull/891)) ([13185999](https://github.com/juspay/orca/commit/13185999d5c03dfa9c1f9d72bff6b798c4b80be5))
    * **core:**  [Stripe] add bank debits payment method to stripe ([#906](https://github.com/juspay/orca/pull/906)) ([f624eb52](https://github.com/juspay/orca/commit/f624eb52d61561c365cce21e58b08281d096d904))
    *  support gpay and applepay session response for all connectors ([#839](https://github.com/juspay/orca/pull/839)) ([d23e14c5](https://github.com/juspay/orca/commit/d23e14c57a1defe46416130bda4845973b62a54d))
    *  add relevant ids for payment calls & make json logs  ([#908](https://github.com/juspay/orca/pull/908)) ([93b69e74](https://github.com/juspay/orca/commit/93b69e74b40592b241c6ade1b51e2dd49b25a45d))
    *  [Bluesnap] add GooglePay, ApplePay support (#985) (897250e)
    *  [Zen] add Cards 3DS, Non-3DS, GooglePay, ApplePay and Webhooks support (#962) (71c39b)


    ### Bug Fixes

    *  different parent payment method token for different payment me… ([#982](https://github.com/juspay/orca/pull/982)) ([2f378345](https://github.com/juspay/orca/commit/2f378345aab58113620c11a18455f118e136a0c1))
    * **config:**  fix Tempo config for Tempo 2.0 ([#959](https://github.com/juspay/orca/pull/959)) ([811cd523](https://github.com/juspay/orca/commit/811cd523c20343761ee5b420d0fcab59be39c56d))
    * **stripe:**  add setup intent sync for stripe ([#953](https://github.com/juspay/orca/pull/953)) ([ab7fc23a](https://github.com/juspay/orca/commit/ab7fc23a7b7a2453ac41466f428d9c0df504968b))
    * **connector:**
      *  fix adyen unit test ([#957](https://github.com/juspay/orca/pull/957)) ([85c76290](https://github.com/juspay/orca/commit/85c7629061ebbe5c9e0393f138af9b8876c3643d))
      *  [coinbase] update cancel status on user cancelling the payment ([#922](https://github.com/juspay/orca/pull/922)) ([22cee8cd](https://github.com/juspay/orca/commit/22cee8cdd9567545cd61587a8158aca754d77e0a))
      *  fix adyen unit test ([#931](https://github.com/juspay/orca/pull/931)) ([afeb8319](https://github.com/juspay/orca/commit/afeb83194f0772e7550c5d4a6ed4ba16216d2a28))
    * **connector-template:**  Address unused import and mismatched types in connector-template ([#910](https://github.com/juspay/orca/pull/910)) ([891683e0](https://github.com/juspay/orca/commit/891683e060d1fdda32405cfd06d737b2416acdcc))

    ### Other Changes

    * **try_local_system:**  replace Postman collection links with development collection ([#937](https://github.com/juspay/orca/pull/937)) ([ccc0c3f9](https://github.com/juspay/orca/commit/ccc0c3f96021b25ce5de700cf584d688096a9bca))
    * **pr-template:**  add API contract changes and update contributing docs with recent labels ([#936](https://github.com/juspay/orca/pull/936)) ([3e2a7eae](https://github.com/juspay/orca/commit/3e2a7eaed2e830b419964e486757c022a0ebca63))
    * **errors:**  make StorageErrorExt generic on errors ([#928](https://github.com/juspay/orca/pull/928)) ([e161d92c](https://github.com/juspay/orca/commit/e161d92c58c85127c73fc150f88d1f58b2275da5))

    ### Refactors

    * **db:**  remove `connector_transaction_id` from PaymentAttemptNew ([#949](https://github.com/juspay/orca/pull/949)) ([57327b82](https://github.com/juspay/orca/commit/57327b829776c58fa6c3569c5546c4706d2c66af))
    * **api_keys:**  use `merchant_id` and `key_id` to query the table ([#939](https://github.com/juspay/orca/pull/939)) ([40898c0a](https://github.com/juspay/orca/commit/40898c0ac9199258fbc6e8e12950d4fa54ec3339))

    - - -

    ## 0.5.7 (2023-04-18)

    ### New Features

    * **connector:**
      *  [Shift4] add support for card 3DS payment (#828) (29999fe5)
      *  [Nuvei] add support for card mandates (#818) (298a0a49)
    * **bank_redirects:**  modify api contract for sofort (#880) (fc2e4514)
      *  add template code for connector forte (#854) (7a581a6)
      *  add template code for connector nexinets (#852) (dee5f61)

    ### Bug Fixes

    * **connector:**  [coinbase] make metadata as option parameter (#887) (f5728955)
    *  Update events table after notifying merchant (#871) (013026)
    * **stripe:**  remove cancel reason validation for stripe (#876) (fa44c1f6)

    ### Enhancement

    * **payments:**  make TokenizationAction clonable (#895)

    ### Integration

    *  Frm integration with hyperswitch (#857)

    ### Refactors

    *  use lowercase names for run environment and config files (#801) (ffaa8da0)
    *  derive `Serialize` and `Deserialize` to `Country` enum (#882) (456c16fb)
    * **storage_models, errors:**  impl StorageErrorExt for error_stack::Result<T, errors::StorageError> (#886) (b4020294)
    * **router:**  KMS decrypt secrets when kms feature is enabled  (#868) (8905e663)

    - - -

    ## 0.5.6 2023-04-14

    ### Build System / Dependencies

    * **deps:**  bump `fred` from `5.2.0` to `6.0.0` (#869) (01bc162d)

    ### Continuous Integration

    * **manual_release:**  add `multiple_mca` feature in ci (#872) (aebb4dca)

    ### New Features

    * **core:**  add backwards compatibility for multiple mca (#866) (cf902f19)
    * **router:**
      *  added dispute retrieve and dispute list apis (#842) (acab7671)
      *  separate straight through algorithm in separate column in payment attempt (#863) (01f86c49)
    * **connector:**
      *  [Airwallex] add multiple redirect support for 3DS (#811) (d1d58e33)
      *  [Worldpay] add support for webhook (#820) (23511166)
      *  [Coinbase] [Opennode] Add support for crypto payments via PG redirection (#834) (b3d14737)
    *  multiple connector account support for the same `country` (#816) (6188d515)
    *  connector tokenization flow (#750) (29da1dfa)
    * **process_tracker:**  changing runner selection to dyn dispatch (#853) (18b84c42)

    ### Bug Fixes

    * **merchant_account:**  change `primary_business_details` to vec in update (#877) (396d24fe)
    *  redis deserialization issue in tokenization call (#878) (5e9d7d6b)
    *  duplication check fix in basilisk-hs (#881) (b12762e7)

    ### Refactors

    * **Tokenization:**  remove ConnectorCallType from tokenization call (#862) (0d047e08)
    * **router_env:**  improve logging setup (#847) (1b94d25f)
    * **refund_type:** Feat/add copy derive (#849) (ccf03273)

    - - -

    ## 0.5.5 (2023-04-10)

    ### New Features

    * **api_models:**  derive `strum::Display` for `RefundStatus` (#846) (4524d4f5)
    *  allow (de)serializing countries to/from alpha-2, alpha-3 and numeric country codes (#836) (899767cf)
    * **connector:**  add authorize, capture, void, psync, refund, rsync for PayPal connector (#747) (36049c13)

    ### Bug Fixes

    *  Add locker sign keyid in env (#844) (70dff140)

    ### Other Changes

    * **common_utils:**  put the async ext trait behind a feature (#835) (de29eb68)
    *  update ci workflows for common_enums crate (#843) (45111337)

    ### Refactors

    * **scheduler:**  remove scheduler options & adding graceful shutdown to producer (#840) (11df8436)
    * **router:**  refactor amount in PaymentsCaptureData from Option<i64> to i64 (#821) (b8bcba4e)

    - - -

    ## 0.5.4 (2023-04-04)

    ### New Features

    * **request:**  add `RequestBuilder` method to attach default request headers (#826) (6f61f830)
    * **middleware:**  add middleware to attach default response headers (#824) (6d7b11a0)
    * **core:**  added multiple payment_attempt support for payment_intent (#439) (35d3e277)
    * **router:**  added incoming dispute webhooks flow (#769) (a733eafb)

    ### Bug Fixes

    * **cards_info:**  add extra columns to cards_info struct (#813) (442bed0f)
    * **connector:**  [Mollie] remove unsupported implementation of Void flow from mollie connector (#808) (eee8304b)

    ### Other Changes

    * **common_utils:**  put the signals module behind a feature flag (#814) (fb4ec431)
    * **core:**  replace string with enum for country (#735) (e18bfb2a)
    * **api_models:**  put the errors module behind a feature flag (#815) (f14f87a1)
    * **storage_models:**  delete client secret when status is succeeded, failed, cancelled (#724) (a05059b7)
    ### Refactors

    * **drainer, router:**  KMS decrypt database password when `kms` feature is enabled (#733) (9d6e4ee3)

    - - -

    ## 0.5.3 (2023-03-29)

    ### Documentation Changes

    * **rfc:**  add rfc template & first RFC (#806) (01a5e0a0)

    ### New Features

    *  cards info api (#749) (b15b8f7b)
    * **connector:**  [Nuvei] add webhook support (#795) (20b4372b)

    ### Bug Fixes

    * **compatibility:**  add last_payment_error in stripe payment response (#803) (97b95f0e)

    ### Refactors

    * **api_models:**  enhance accepted countries/currencies types (#807) (f9ef3135)
    * **services:**   make AppState impl generic using AppStateInfo (#805) (642c3f3a)

    - - -

    ## 0.5.2 (2023-03-24)

    ### Chores

    *  prepare for building production Docker images (#794) (6ddc30eb)

    ### Bug Fixes

    * **connector:**  [Airwallex] Change Session Token to Init Payment (#798) (a3c00339)

    ### Other Changes

    * **router:**  change MAX_ID_LENGTH to 64 (#792) (346bd954)

    ### Refactors

    *  extract kms module to `external_services` crate (#793) (029e3894)

    - - -

    ## 0.5.1 (2023-03-21)

    ### Documentation Changes

    * **try_local_system:**
      *  add Ubuntu on WSL2 setup instructions (#767) (1d2166cf)
      *  add API key creation step (#765) (4b268068)

    ### New Features

    * **pm_list:**  handle client secret check (#759) (82344fc4)
    *  add in-memory cache support for config table (#751) (abedaae4)
    *  compile time optimization (#775) (5b5557b7)
    * **router:**
      *  add support for stateful straight through routing (#752) (568bf01a)
      *  adding metrics for tracking behavior throughout the `router` crate  (#768) (d302b286)
    * **router_env:**
      *  making metric flow as a trait for extensibility (#797) (df699e2b)
    * **core:**  accept gateway credentials in the request body in payments and refunds (#766) (cb188f92)
    * **connector:**
      *  Add support to provide connector_payment_meta for capture and void request (#770) (6c008ae6)
      *  [Trustpay] add webhooks (payment and refund events) (#746) (853dfa16)

    ### Bug Fixes

    *  process delete response from basilisk-v3 as plaintext instead of JWE (#791) (699ca4f)
    * **storage:**  add serialization for primitivedatetime for diesel structs (#764) (f27732a6)

    ### Refactors

    *  get connection pool based on olap/oltp features (#743) (a392fb16)

    - - -

    ## 0.5.0 (2023-03-21)

    ### Build System / Dependencies

    * **deps:**  update deps (#734) (16bc886c)

    ### Chores

    * **merchant_account:**  remove `api_key` field (#713) (230fcdd4)
    * **config:**  move connector base URLs under the `[connectors]` table (#723) (df8c8b5a)
    *  address Rust 1.68 clippy lints (#728) (1ffabb40)

    ### Continuous Integration

    * **release:**  specify `fetch-depth` for code checkout and use official Docker GitHub actions (#722) (c451368f)

    ### Documentation Changes

    *  Update naming conventions and added examples (#709) (98415193)
    * **openapi:**  document path parameters for API keys endpoints (#702) (9062dc80)

    ### New Features

    * **connector:**
      *  [Mollie]: add authorize, void, refund, psync, rsync support for mollie connector (#740) (168fa32)
      *  [worldline] add webhook support for connector (#721) (13a8ce8e)
      *  [Trustpay] add authorize (cards 3ds, no3ds and bank redirects), refund, psync, rsync (#717) (e102cae7)
      *  [Fiserv] add Refunds, Cancel and Wallets flow along with Unit Tests (#593) (cd1c5409)
      *  Add support for complete authorize payment after 3DS redirection (#741) (ec2b1b18)
    *  removing unnecessary logs from console (#753) (1021d1ae)
    *  Time based deletion of temp card (#729) (db3d3164)
    *  populate fields from payment attempt in payment list (#736) (b5b3d57c)
    *  add generic in-memory cache interface (#737) (7f5e5d86)
    *  Add HSTS headers to response (#725) (7ed665ec)
    *  cache reverse lookup fetches on redis (#719) (1a27faca)
    * **compatibility:**  add webhook support for stripe compatibility (#710) (79160504)

    ### Bug Fixes

    * **docker-compose:**  remove port for hyperswitch-server-init in docker-compose.yml (#763) (20b93276)
    *  fixing docker compose setup & adding redisinsight (#748) (5c9bec9f)
    * **kms:**  log KMS SDK errors using the `Debug` impl (#720) (468aa87f)
    * **errors:**
      *  Replace PaymentMethod with PaymentModethodData in test.rs (#716) (763ee094)
      *  use `Debug` impl instead of `Display` for error types wrapping `error_stack::Report` (#714) (45484752)

    ### Other Changes

    *  card_fingerprint not sent by basilisk_hs (#754) (5ae2f63f)

    ### Refactors

    * **merchant_account:**  add back `api_key` field for backward compatibility (#761) (661dd48a)
    * **connector:**  update add_connector script (#762) (78794ed6)
    * **metrics:**  use macros for constructing counter and histogram metrics (#755) (58106d91)
    * **kms:**  share a KMS client for all KMS operations (#744) (a3ff2e8d)
    *  Basilisk hs integration (#704) (585618e5)
    *  Add service_name to get and delete request (#738) (8b7ae9c3)
    *  Add secret to metadata (#706) (d36afbed)
    * **client:**
      *  simplify HTTP client construction (#731) (1756d1c4)
      *  remove dependence on `ROUTER_HTTP_PROXY` and `ROUTER_HTTPS_PROXY` env vars (#730) (c085e460)
    * **authentication:**  authenticate merchant by API keys from API keys table (#712) (afd08d42)
    * **api_keys:**  use a KMS encrypted API key hashing key and remove key ID prefix from plaintext API keys (#639) (3a3b33ac)

    ### Tests

    * **masking:**  add suitable feature gates for basic tests (#745) (4859b6e4)

    - - -

    ## 0.3.0 (2023-03-05)

    ### Chores
    * **connectors:**  log connector request and response at debug level (#624) (6a487b19)

    ### Continuous Integration

    * **workflow:** adding build only sandbox feature to reduce build time (#664) (d1c9305e)
    * **workflow:** run cargo hack only for code changes (#663) (f931c427)

    ### Documentation Changes

    * **openapi:**  document security schemes (#676) (c5fda7ac)

    ### New Features

    * **session_token:**  create session token only if pmt is enabled (#703) (e1afeb64)
    * **router:**
      *  serve OpenAPI docs at `/docs` (#698) (ed2907e1)
      *  added incoming refund webhooks flow (#683) (f12abbce)
    * **list:**  global filter mapping for payment methods via card network (#694) (adca6bca)
    *  store card network for cards (#687) (bfca26d9)
    *  add support for `ANG` currency (#681) (03096eff)
    *  Add bank redirect mapping to adyen and stripe (#680) (e6f627d9)
    *  api contract change for wallet (#628) (ff86417e)
    *  Add support for a redis pubsub interface (#614) (aaf37250)
    *  initial `nix` setup using `cargo2nix` (#599) (73d0538d)
    * **connector:**
      *  [Bambora] Add support for cards Authorize, psync, capture, void, refund, Rsync (#677) (0de5d441)
      *  [MultiSafePay] Add support for cards Authorize, psync, capture, void, refund, Rsync  (#658) (79aa8f3d)
      *  [Dlocal] Add support for authorize, capture, void, refund, psync, rsync (#650) (7792de55)
    * **pm_list:**  support for sending bank names (#678) (576f8e1f)
    * **card_network:**  add additional enum variants in card network (#671) (db8bc164)
    * **stripe:**
      *  eps, giropay and ideal using stripe (#529) (028e1401)
      *  get error message for failed redirect payments (#615) (12f25f05)

    ### Bug Fixes

    *  Populate amount_captured in case of success (#700) (d622b743)
    *  Error Mapping for Bluensap & Card Number for Airwallex (#686) (35a74baf)
    *  add currency in verify request data (#619) (32de632d)
    *  add zero-padded formatting for error code (#627) (63f9b612)
    *  check if bank_pm exists and then send request (#679) (76a9b557)
    * **connector:**
      *  convert cents to dollar before sending to connector (#699) (3e883192)
      *  fix wordline card number validation issue (#695) (1a875348)
      *  fix wordline tests and visa card issuer support (#688) (d0c9dded)
    * **adyen:**  adyen psync fail fix (#691) (2e99152d)
    * **customer:**  populate email from customer table if not present in request (#692) (cf71d7aa)
    * **list:**
      *  remove enabled payment methods from list customer payment method (#689) (5c29f37a)
      *  fix card network filtering (#684) (718c8a42)
      *  adding config changes for filtering `pm` based on countries & currencies (#669) (060c5419)
    * **compatibility:**
      *  change next_action type and customer request type (#675) (7f22c22c)
      *  map stripe country_code to payment_request country code (#667) (7044b80b)
    * **core:**  send metadata in payments response (#670) (b80f19e2)
    * **router:**  allow setup future usage to be updated in payment update and confirm requests (#610) (7fd82211)

    ### Other Changes

    * **stripe:**  send statement descriptor to stripe (#707) (641c4d6d)
    *  use connector error handler for 500 error messages. (#696) (9fe20932)
    *  populate failed status and add bank_redirect (#674)
    * **refunds:**  skip validate refunds for card (#672) (5cdbef04)
    * **router/webhooks:**  expose additional incoming request details to webhooks flow (#637) (1b3b7f5b)
    * **braintree:**  create basic auth for braintree (#602) (c47619b5)

    ### Refactors

    *  add better log to parse struct (#621) (275155a8)
    *  Pass country and currency as json format in MCA (#523) (d27e6be5)
    *  use simple uuid instead of hyphens (#605) (c467a47a)
    *  add payment_issuer and payment_experience in pa (#491) (66563595)
    * **router:**  remove foreign wrapper type (#616) (7bd2008a)
    * **core:**
      *  add payment method list route to payment_methods (#682) (5449ce46)
      *  make attempt id as mandatory in router_data (#604) (626e467e)
    * **pm_list:**
      *  pm_list for bank redirects (#685) (2701cceb)
      *  modify pm list to support new api contract (#657) (a2616d87)
    * **connector:**  remove `peek()` on PII info (#642) (46f77d07)
    * **connector-template:**  raise errors instead of using `todo!()` (#620) (b1a6be5a)
    * **redirection:**  `From` impl for redirection data for ease of use (#613) (e8255b4a)

    - - -

    ## 0.3.0 (2023-02-25)

    ### Build System / Dependencies

    * **docker-compose:**  increase docker health check interval for hyperswitch-server (#534)

    ### Chores

    * **release:**  port release bug fixes to main branch (#612) (a8d6ce83)

    ### Continuous Integration

    *  run CI checks on merge queue events (#530) (c7b9e9c1)

    ### Documentation Changes

    * **add_connector:**  fix typo (#584) (a4f3abf3)

    ### New Features

    * **router:**
      *  include eligible connectors list in list payment methods (#644) (92771b3b)
      *  API endpoints for managing API keys (#511) (1bdc8955)
    * **connector:**
      *  [Airwallex] add authorize, capture, void, psync, Webhooks support (#646) (6a67dd8b)
      *  [Bluesnap] add authorize, capture, void, refund, psync, rsync and Webhooks support (#649) (7efdc3c5)
      *  add authorize, capture, void, refund, psync support for Nuvei (#645) (03a9f5a9)
    *  Added applepay feature (#636) (1e84c07c)
    *  add `track_caller` to functions that perform `change_context` (#592) (8d2e573a)
    * Redis cache for MCA fetch and update (#515) (963cb528)
    * **api_models:**  add error structs (#532) (d107b44f)

    ### Bug Fixes

    * **connector:**  update Bluesnap in routable connectors  (#654) (64cb2ffc)
    *  allow errors with status code 200 to pass (#601) (8a8767e9)
    *  don't call connector if connector transaction id doesn't exist (#525) (326d6beb)
    *  throw 500 error when redis goes down (#531) (aafb115a)
    * **router:**
      *  allow setup future usage to be updated in payment update and confirm requests (#610) (#638) (6c128f82)
      *  feature gate openssl deps for basilisk feature (#536) (e4956820)
    * **checkout:**  Error Response when wrong api key is passed (#596) (55b6d88a)
    * **core:**  use guard for access token result (#522) (903b4521)

    ### Other Changes

    * **router:**
      *  webhooks enhancement (#637) (#641) (3bc9feb0)
      *  api keys path params (#609) (effa7a00)

    ### Refactors

    * **router:**
      *  update payments api contract to accept a list of connectors (#643) (8f1f626c)
      *  api-key routes refactoring (#600) (e6408276)
      *  appstate as trait in authentication (#588) (eaf98e66)
    * **compatibility:**  add additional fields to stripe payment and refund response types (#618) (2ea09e34)
    *  Throw 500 error on database connection error instead of panic (#527) (f1e3bf48)
    *  send full payment object for payment sync (#526) (6c2a1fea)
    * **middleware:**  change visibility to `pub` (#587) (4884a24d)

    - - -

    ## 0.2.1 (2023-02-17)

    ### Fixes
    - fix payment_status not updated when adding payment method ([#446])
    - Decide connector only when the payment method is confirm ([10ea4919ba07d3198a6bbe3f3d4d817a23605924](https://github.com/juspay/hyperswitch/commit/10ea4919ba07d3198a6bbe3f3d4d817a23605924))
    - Fix panics caused with empty diesel updates ([448595498114cd15158b4a78fc32d8e6dc1b67ee](https://github.com/juspay/hyperswitch/commit/448595498114cd15158b4a78fc32d8e6dc1b67ee))

    - - -

    ## 0.2.0 (2023-01-23) - Initial Release

    ### Supported Connectors

    - [ACI](https://www.aciworldwide.com/)
    - [Adyen](https://www.adyen.com/)
    - [Authorize.net](https://www.authorize.net/)
    - [Braintree](https://www.braintreepayments.com/)
    - [Checkout.com](https://www.checkout.com/)
    - [Cybersource](https://www.cybersource.com)
    - [Fiserv](https://www.fiserv.com/)
    - [Global Payments](https://www.globalpayments.com)
    - [Klarna](https://www.klarna.com/)
    - [PayU](https://payu.in/)
    - [Rapyd](https://www.rapyd.net/)
    - [Shift4](https://www.shift4.com/)
    - [Stripe](https://stripe.com/)
    - [Wordline](https://worldline.com/)


    ### Supported Payment Methods

    - Cards No 3DS
    - Cards 3DS*
    - [Apple Pay](https://www.apple.com/apple-pay/)*
    - [Google Pay](https://pay.google.com)*
    - [Klarna](https://www.klarna.com/)*
    - [PayPal](https://www.paypal.com/)*

    ### Supported Payment Functionalities

    - Payments (Authorize/Sync/Capture/Cancel)
    - Refunds (Execute/Sync)
    - Saved Cards
    - Mandates (No 3DS)*
    - Customers
    - Merchants
    - ConnectorAccounts

    \* May not be supported on all connectors
  Cargo.lock: |
    # This file is automatically @generated by Cargo.
    # It is not intended for manual editing.
    version = 3

    [[package]]
    name = "actix-codec"
    version = "0.5.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5f7b0a21988c1bf877cf4759ef5ddaac04c1c9fe808c9142ecb78ba97d97a28a"
    dependencies = [
     "bitflags 2.5.0",
     "bytes 1.6.0",
     "futures-core",
     "futures-sink",
     "memchr",
     "pin-project-lite",
     "tokio 1.37.0",
     "tokio-util",
     "tracing",
    ]

    [[package]]
    name = "actix-cors"
    version = "0.6.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0346d8c1f762b41b458ed3145eea914966bb9ad20b9be0d6d463b20d45586370"
    dependencies = [
     "actix-utils",
     "actix-web",
     "derive_more",
     "futures-util",
     "log",
     "once_cell",
     "smallvec 1.13.2",
    ]

    [[package]]
    name = "actix-http"
    version = "3.6.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d223b13fd481fc0d1f83bb12659ae774d9e3601814c68a0bc539731698cca743"
    dependencies = [
     "actix-codec",
     "actix-rt",
     "actix-service",
     "actix-tls",
     "actix-utils",
     "ahash 0.8.11",
     "base64 0.21.7",
     "bitflags 2.5.0",
     "brotli",
     "bytes 1.6.0",
     "bytestring",
     "derive_more",
     "encoding_rs",
     "flate2",
     "futures-core",
     "h2 0.3.25",
     "http 0.2.12",
     "httparse",
     "httpdate",
     "itoa",
     "language-tags",
     "local-channel",
     "mime",
     "percent-encoding",
     "pin-project-lite",
     "rand",
     "sha1",
     "smallvec 1.13.2",
     "tokio 1.37.0",
     "tokio-util",
     "tracing",
     "zstd",
    ]

    [[package]]
    name = "actix-macros"
    version = "0.2.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e01ed3140b2f8d422c68afa1ed2e85d996ea619c988ac834d255db32138655cb"
    dependencies = [
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "actix-multipart"
    version = "0.6.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3b960e2aea75f49c8f069108063d12a48d329fc8b60b786dfc7552a9d5918d2d"
    dependencies = [
     "actix-multipart-derive",
     "actix-utils",
     "actix-web",
     "bytes 1.6.0",
     "derive_more",
     "futures-core",
     "futures-util",
     "httparse",
     "local-waker",
     "log",
     "memchr",
     "mime",
     "serde",
     "serde_json",
     "serde_plain",
     "tempfile",
     "tokio 1.37.0",
    ]

    [[package]]
    name = "actix-multipart-derive"
    version = "0.6.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0a0a77f836d869f700e5b47ac7c3c8b9c8bc82e4aec861954c6198abee3ebd4d"
    dependencies = [
     "darling 0.20.8",
     "parse-size",
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "actix-router"
    version = "0.5.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d22475596539443685426b6bdadb926ad0ecaefdfc5fb05e5e3441f15463c511"
    dependencies = [
     "bytestring",
     "http 0.2.12",
     "regex",
     "serde",
     "tracing",
    ]

    [[package]]
    name = "actix-rt"
    version = "2.9.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "28f32d40287d3f402ae0028a9d54bef51af15c8769492826a69d28f81893151d"
    dependencies = [
     "actix-macros",
     "futures-core",
     "tokio 1.37.0",
    ]

    [[package]]
    name = "actix-server"
    version = "2.3.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3eb13e7eef0423ea6eab0e59f6c72e7cb46d33691ad56a726b3cd07ddec2c2d4"
    dependencies = [
     "actix-rt",
     "actix-service",
     "actix-utils",
     "futures-core",
     "futures-util",
     "mio 0.8.11",
     "socket2",
     "tokio 1.37.0",
     "tracing",
    ]

    [[package]]
    name = "actix-service"
    version = "2.0.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3b894941f818cfdc7ccc4b9e60fa7e53b5042a2e8567270f9147d5591893373a"
    dependencies = [
     "futures-core",
     "paste",
     "pin-project-lite",
    ]

    [[package]]
    name = "actix-tls"
    version = "3.3.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d4cce60a2f2b477bc72e5cde0af1812a6e82d8fd85b5570a5dcf2a5bf2c5be5f"
    dependencies = [
     "actix-rt",
     "actix-service",
     "actix-utils",
     "futures-core",
     "http 0.2.12",
     "http 1.1.0",
     "impl-more",
     "pin-project-lite",
     "rustls-pki-types",
     "tokio 1.37.0",
     "tokio-rustls 0.23.4",
     "tokio-rustls 0.25.0",
     "tokio-util",
     "tracing",
     "webpki-roots 0.22.6",
    ]

    [[package]]
    name = "actix-utils"
    version = "3.0.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "88a1dcdff1466e3c2488e1cb5c36a71822750ad43839937f85d2f4d9f8b705d8"
    dependencies = [
     "local-waker",
     "pin-project-lite",
    ]

    [[package]]
    name = "actix-web"
    version = "4.5.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "43a6556ddebb638c2358714d853257ed226ece6023ef9364f23f0c70737ea984"
    dependencies = [
     "actix-codec",
     "actix-http",
     "actix-macros",
     "actix-router",
     "actix-rt",
     "actix-server",
     "actix-service",
     "actix-tls",
     "actix-utils",
     "actix-web-codegen",
     "ahash 0.8.11",
     "bytes 1.6.0",
     "bytestring",
     "cfg-if 1.0.0",
     "cookie 0.16.2",
     "derive_more",
     "encoding_rs",
     "futures-core",
     "futures-util",
     "itoa",
     "language-tags",
     "log",
     "mime",
     "once_cell",
     "pin-project-lite",
     "regex",
     "serde",
     "serde_json",
     "serde_urlencoded",
     "smallvec 1.13.2",
     "socket2",
     "time",
     "url",
    ]

    [[package]]
    name = "actix-web-codegen"
    version = "4.2.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "eb1f50ebbb30eca122b188319a4398b3f7bb4a8cdf50ecfb73bfc6a3c3ce54f5"
    dependencies = [
     "actix-router",
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "addr2line"
    version = "0.21.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8a30b2e23b9e17a9f90641c7ab1549cd9b44f296d3ccbf309d2863cfe398a0cb"
    dependencies = [
     "gimli",
    ]

    [[package]]
    name = "adler"
    version = "1.0.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe"

    [[package]]
    name = "ahash"
    version = "0.7.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "891477e0c6a8957309ee5c45a6368af3ae14bb510732d2684ffa19af310920f9"
    dependencies = [
     "getrandom",
     "once_cell",
     "version_check",
    ]

    [[package]]
    name = "ahash"
    version = "0.8.11"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011"
    dependencies = [
     "cfg-if 1.0.0",
     "getrandom",
     "once_cell",
     "version_check",
     "zerocopy",
    ]

    [[package]]
    name = "aho-corasick"
    version = "1.1.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916"
    dependencies = [
     "memchr",
    ]

    [[package]]
    name = "alloc-no-stdlib"
    version = "2.0.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "cc7bb162ec39d46ab1ca8c77bf72e890535becd1751bb45f64c597edb4c8c6b3"

    [[package]]
    name = "alloc-stdlib"
    version = "0.2.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "94fb8275041c72129eb51b7d0322c29b8387a0386127718b096429201a5d6ece"
    dependencies = [
     "alloc-no-stdlib",
    ]

    [[package]]
    name = "allocator-api2"
    version = "0.2.16"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0942ffc6dcaadf03badf6e6a2d0228460359d5e34b57ccdc720b7382dfbd5ec5"

    [[package]]
    name = "analytics"
    version = "0.1.0"
    dependencies = [
     "actix-web",
     "api_models",
     "async-trait",
     "aws-config 1.1.9",
     "aws-sdk-lambda",
     "aws-smithy-types 1.1.8",
     "bigdecimal",
     "common_enums",
     "common_utils",
     "diesel_models",
     "error-stack",
     "futures 0.3.30",
     "hyperswitch_domain_models",
     "hyperswitch_interfaces",
     "masking",
     "once_cell",
     "opensearch",
     "reqwest",
     "router_env",
     "serde",
     "serde_json",
     "sqlx",
     "storage_impl",
     "strum 0.26.2",
     "thiserror",
     "time",
     "tokio 1.37.0",
    ]

    [[package]]
    name = "android-tzdata"
    version = "0.1.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0"

    [[package]]
    name = "android_system_properties"
    version = "0.1.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311"
    dependencies = [
     "libc",
    ]

    [[package]]
    name = "anes"
    version = "0.1.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4b46cbb362ab8752921c97e041f5e366ee6297bd428a31275b9fcf1e380f7299"

    [[package]]
    name = "anstream"
    version = "0.6.14"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "418c75fa768af9c03be99d17643f93f79bbba589895012a80e3452a19ddda15b"
    dependencies = [
     "anstyle",
     "anstyle-parse",
     "anstyle-query",
     "anstyle-wincon",
     "colorchoice",
     "is_terminal_polyfill",
     "utf8parse",
    ]

    [[package]]
    name = "anstyle"
    version = "1.0.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8901269c6307e8d93993578286ac0edf7f195079ffff5ebdeea6a59ffb7e36bc"

    [[package]]
    name = "anstyle-parse"
    version = "0.2.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c03a11a9034d92058ceb6ee011ce58af4a9bf61491aa7e1e59ecd24bd40d22d4"
    dependencies = [
     "utf8parse",
    ]

    [[package]]
    name = "anstyle-query"
    version = "1.1.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ad186efb764318d35165f1758e7dcef3b10628e26d41a44bc5550652e6804391"
    dependencies = [
     "windows-sys 0.52.0",
    ]

    [[package]]
    name = "anstyle-wincon"
    version = "3.0.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "61a38449feb7068f52bb06c12759005cf459ee52bb4adc1d5a7c4322d716fb19"
    dependencies = [
     "anstyle",
     "windows-sys 0.52.0",
    ]

    [[package]]
    name = "anyhow"
    version = "1.0.81"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0952808a6c2afd1aa8947271f3a60f1a6763c7b912d210184c5149b5cf147247"

    [[package]]
    name = "api_models"
    version = "0.1.0"
    dependencies = [
     "actix-web",
     "cards",
     "common_enums",
     "common_utils",
     "error-stack",
     "euclid",
     "indexmap 2.3.0",
     "masking",
     "mime",
     "nutype",
     "reqwest",
     "router_derive",
     "rustc-hash",
     "serde",
     "serde_json",
     "strum 0.26.2",
     "time",
     "url",
     "utoipa",
    ]

    [[package]]
    name = "arc-swap"
    version = "1.7.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "69f7f8c3906b62b754cd5326047894316021dcfe5a194c8ea52bdd94934a3457"

    [[package]]
    name = "argon2"
    version = "0.5.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3c3610892ee6e0cbce8ae2700349fcf8f98adb0dbfbee85aec3c9179d29cc072"
    dependencies = [
     "base64ct",
     "blake2",
     "cpufeatures",
     "password-hash",
    ]

    [[package]]
    name = "arrayref"
    version = "0.3.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6b4930d2cb77ce62f89ee5d5289b4ac049559b1c45539271f5ed4fdc7db34545"

    [[package]]
    name = "arrayvec"
    version = "0.7.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "96d30a06541fbafbc7f82ed10c06164cfbd2c401138f6addd8404629c4b16711"

    [[package]]
    name = "asn1-rs"
    version = "0.6.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "22ad1373757efa0f70ec53939aabc7152e1591cb485208052993070ac8d2429d"
    dependencies = [
     "asn1-rs-derive",
     "asn1-rs-impl",
     "displaydoc",
     "nom",
     "num-traits",
     "rusticata-macros",
     "thiserror",
     "time",
    ]

    [[package]]
    name = "asn1-rs-derive"
    version = "0.5.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7378575ff571966e99a744addeff0bff98b8ada0dedf1956d59e634db95eaac1"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 2.0.57",
     "synstructure 0.13.1",
    ]

    [[package]]
    name = "asn1-rs-impl"
    version = "0.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7b18050c2cd6fe86c3a76584ef5e0baf286d038cda203eb6223df2cc413565f7"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "assert-json-diff"
    version = "2.0.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "47e4f2b81832e72834d7518d8487a0396a28cc408186a2e8854c0f98011faf12"
    dependencies = [
     "serde",
     "serde_json",
    ]

    [[package]]
    name = "async-bb8-diesel"
    version = "0.1.0"
    source = "git+https://github.com/jarnura/async-bb8-diesel?rev=53b4ab901aab7635c8215fd1c2d542c8db443094#53b4ab901aab7635c8215fd1c2d542c8db443094"
    dependencies = [
     "async-trait",
     "bb8",
     "diesel",
     "thiserror",
     "tokio 1.37.0",
     "tracing",
    ]

    [[package]]
    name = "async-compression"
    version = "0.4.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a116f46a969224200a0a97f29cfd4c50e7534e4b4826bd23ea2c3c533039c82c"
    dependencies = [
     "flate2",
     "futures-core",
     "memchr",
     "pin-project-lite",
     "tokio 1.37.0",
    ]

    [[package]]
    name = "async-lock"
    version = "2.8.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "287272293e9d8c41773cec55e365490fe034813a2f172f502d6ddcf75b2f582b"
    dependencies = [
     "event-listener",
    ]

    [[package]]
    name = "async-stream"
    version = "0.3.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "cd56dd203fef61ac097dd65721a419ddccb106b2d2b70ba60a6b529f03961a51"
    dependencies = [
     "async-stream-impl",
     "futures-core",
     "pin-project-lite",
    ]

    [[package]]
    name = "async-stream-impl"
    version = "0.3.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "16e62a023e7c117e27523144c5d2459f4397fcc3cab0085af8e2224f643a0193"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "async-trait"
    version = "0.1.79"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a507401cad91ec6a857ed5513a2073c82a9b9048762b885bb98655b306964681"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "atoi"
    version = "2.0.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f28d99ec8bfea296261ca1af174f24225171fea9664ba9003cbebee704810528"
    dependencies = [
     "num-traits",
    ]

    [[package]]
    name = "atomic"
    version = "0.5.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c59bdb34bc650a32731b31bd8f0829cc15d24a708ee31559e0bb34f2bc320cba"

    [[package]]
    name = "atomic-write-file"
    version = "0.1.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a8204db279bf648d64fe845bd8840f78b39c8132ed4d6a4194c3b10d4b4cfb0b"
    dependencies = [
     "nix",
     "rand",
    ]

    [[package]]
    name = "autocfg"
    version = "1.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f1fdabc7756949593fe60f30ec81974b613357de856987752631dea1e3394c80"

    [[package]]
    name = "awc"
    version = "3.4.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "68c09cc97310b926f01621faee652f3d1b0962545a3cec6c9ac07def9ea36c2c"
    dependencies = [
     "actix-codec",
     "actix-http",
     "actix-rt",
     "actix-service",
     "actix-tls",
     "actix-utils",
     "base64 0.21.7",
     "bytes 1.6.0",
     "cfg-if 1.0.0",
     "cookie 0.16.2",
     "derive_more",
     "futures-core",
     "futures-util",
     "h2 0.3.25",
     "http 0.2.12",
     "itoa",
     "log",
     "mime",
     "percent-encoding",
     "pin-project-lite",
     "rand",
     "rustls 0.20.9",
     "serde",
     "serde_json",
     "serde_urlencoded",
     "tokio 1.37.0",
    ]

    [[package]]
    name = "aws-config"
    version = "0.55.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "bcdcf0d683fe9c23d32cf5b53c9918ea0a500375a9fb20109802552658e576c9"
    dependencies = [
     "aws-credential-types 0.55.3",
     "aws-http",
     "aws-sdk-sso 0.28.0",
     "aws-sdk-sts 0.28.0",
     "aws-smithy-async 0.55.3",
     "aws-smithy-client",
     "aws-smithy-http 0.55.3",
     "aws-smithy-http-tower",
     "aws-smithy-json 0.55.3",
     "aws-smithy-types 0.55.3",
     "aws-types 0.55.3",
     "bytes 1.6.0",
     "fastrand 1.9.0",
     "hex",
     "http 0.2.12",
     "hyper 0.14.28",
     "ring 0.16.20",
     "time",
     "tokio 1.37.0",
     "tower",
     "tracing",
     "zeroize",
    ]

    [[package]]
    name = "aws-config"
    version = "1.1.9"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "297b64446175a73987cedc3c438d79b2a654d0fff96f65ff530fbe039347644c"
    dependencies = [
     "aws-credential-types 1.1.8",
     "aws-runtime",
     "aws-sdk-sso 1.18.0",
     "aws-sdk-ssooidc",
     "aws-sdk-sts 1.18.0",
     "aws-smithy-async 1.2.0",
     "aws-smithy-http 0.60.7",
     "aws-smithy-json 0.60.7",
     "aws-smithy-runtime",
     "aws-smithy-runtime-api",
     "aws-smithy-types 1.1.8",
     "aws-types 1.1.8",
     "bytes 1.6.0",
     "fastrand 2.0.2",
     "hex",
     "http 0.2.12",
     "hyper 0.14.28",
     "ring 0.17.8",
     "time",
     "tokio 1.37.0",
     "tracing",
     "url",
     "zeroize",
    ]

    [[package]]
    name = "aws-credential-types"
    version = "0.55.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1fcdb2f7acbc076ff5ad05e7864bdb191ca70a6fd07668dc3a1a8bcd051de5ae"
    dependencies = [
     "aws-smithy-async 0.55.3",
     "aws-smithy-types 0.55.3",
     "fastrand 1.9.0",
     "tokio 1.37.0",
     "tracing",
     "zeroize",
    ]

    [[package]]
    name = "aws-credential-types"
    version = "1.1.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "fa8587ae17c8e967e4b05a62d495be2fb7701bec52a97f7acfe8a29f938384c8"
    dependencies = [
     "aws-smithy-async 1.2.0",
     "aws-smithy-runtime-api",
     "aws-smithy-types 1.1.8",
     "zeroize",
    ]

    [[package]]
    name = "aws-endpoint"
    version = "0.55.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8cce1c41a6cfaa726adee9ebb9a56fcd2bbfd8be49fd8a04c5e20fd968330b04"
    dependencies = [
     "aws-smithy-http 0.55.3",
     "aws-smithy-types 0.55.3",
     "aws-types 0.55.3",
     "http 0.2.12",
     "regex",
     "tracing",
    ]

    [[package]]
    name = "aws-http"
    version = "0.55.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "aadbc44e7a8f3e71c8b374e03ecd972869eb91dd2bc89ed018954a52ba84bc44"
    dependencies = [
     "aws-credential-types 0.55.3",
     "aws-smithy-http 0.55.3",
     "aws-smithy-types 0.55.3",
     "aws-types 0.55.3",
     "bytes 1.6.0",
     "http 0.2.12",
     "http-body 0.4.6",
     "lazy_static",
     "percent-encoding",
     "pin-project-lite",
     "tracing",
    ]

    [[package]]
    name = "aws-runtime"
    version = "1.1.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b13dc54b4b49f8288532334bba8f87386a40571c47c37b1304979b556dc613c8"
    dependencies = [
     "aws-credential-types 1.1.8",
     "aws-sigv4 1.2.0",
     "aws-smithy-async 1.2.0",
     "aws-smithy-eventstream 0.60.4",
     "aws-smithy-http 0.60.7",
     "aws-smithy-runtime-api",
     "aws-smithy-types 1.1.8",
     "aws-types 1.1.8",
     "bytes 1.6.0",
     "fastrand 2.0.2",
     "http 0.2.12",
     "http-body 0.4.6",
     "percent-encoding",
     "pin-project-lite",
     "tracing",
     "uuid",
    ]

    [[package]]
    name = "aws-sdk-kms"
    version = "0.28.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "545335abd7c6ef7285d2972a67b9f8279ff5fec8bbb3ffc637fa436ba1e6e434"
    dependencies = [
     "aws-credential-types 0.55.3",
     "aws-endpoint",
     "aws-http",
     "aws-sig-auth",
     "aws-smithy-async 0.55.3",
     "aws-smithy-client",
     "aws-smithy-http 0.55.3",
     "aws-smithy-http-tower",
     "aws-smithy-json 0.55.3",
     "aws-smithy-types 0.55.3",
     "aws-types 0.55.3",
     "bytes 1.6.0",
     "http 0.2.12",
     "regex",
     "tokio-stream",
     "tower",
     "tracing",
    ]

    [[package]]
    name = "aws-sdk-lambda"
    version = "1.18.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a0c5446405655a27f8f98974668f6e10b6740902afd5ab56045b464b9b9a845a"
    dependencies = [
     "aws-credential-types 1.1.8",
     "aws-runtime",
     "aws-smithy-async 1.2.0",
     "aws-smithy-eventstream 0.60.4",
     "aws-smithy-http 0.60.7",
     "aws-smithy-json 0.60.7",
     "aws-smithy-runtime",
     "aws-smithy-runtime-api",
     "aws-smithy-types 1.1.8",
     "aws-types 1.1.8",
     "bytes 1.6.0",
     "http 0.2.12",
     "once_cell",
     "regex-lite",
     "tracing",
    ]

    [[package]]
    name = "aws-sdk-s3"
    version = "0.28.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "fba197193cbb4bcb6aad8d99796b2291f36fa89562ded5d4501363055b0de89f"
    dependencies = [
     "aws-credential-types 0.55.3",
     "aws-endpoint",
     "aws-http",
     "aws-sig-auth",
     "aws-sigv4 0.55.3",
     "aws-smithy-async 0.55.3",
     "aws-smithy-checksums",
     "aws-smithy-client",
     "aws-smithy-eventstream 0.55.3",
     "aws-smithy-http 0.55.3",
     "aws-smithy-http-tower",
     "aws-smithy-json 0.55.3",
     "aws-smithy-types 0.55.3",
     "aws-smithy-xml 0.55.3",
     "aws-types 0.55.3",
     "bytes 1.6.0",
     "http 0.2.12",
     "http-body 0.4.6",
     "once_cell",
     "percent-encoding",
     "regex",
     "tokio-stream",
     "tower",
     "tracing",
     "url",
    ]

    [[package]]
    name = "aws-sdk-sesv2"
    version = "0.28.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4891169a246b580136f4d3682c11a68b710bdc1027dd7774023fa651a87f10b6"
    dependencies = [
     "aws-credential-types 0.55.3",
     "aws-endpoint",
     "aws-http",
     "aws-sig-auth",
     "aws-smithy-async 0.55.3",
     "aws-smithy-client",
     "aws-smithy-http 0.55.3",
     "aws-smithy-http-tower",
     "aws-smithy-json 0.55.3",
     "aws-smithy-types 0.55.3",
     "aws-types 0.55.3",
     "bytes 1.6.0",
     "http 0.2.12",
     "regex",
     "tokio-stream",
     "tower",
     "tracing",
    ]

    [[package]]
    name = "aws-sdk-sso"
    version = "0.28.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c8b812340d86d4a766b2ca73f740dfd47a97c2dff0c06c8517a16d88241957e4"
    dependencies = [
     "aws-credential-types 0.55.3",
     "aws-endpoint",
     "aws-http",
     "aws-sig-auth",
     "aws-smithy-async 0.55.3",
     "aws-smithy-client",
     "aws-smithy-http 0.55.3",
     "aws-smithy-http-tower",
     "aws-smithy-json 0.55.3",
     "aws-smithy-types 0.55.3",
     "aws-types 0.55.3",
     "bytes 1.6.0",
     "http 0.2.12",
     "regex",
     "tokio-stream",
     "tower",
     "tracing",
    ]

    [[package]]
    name = "aws-sdk-sso"
    version = "1.18.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "019a07902c43b03167ea5df0182f0cb63fae89f9a9682c44d18cf2e4a042cb34"
    dependencies = [
     "aws-credential-types 1.1.8",
     "aws-runtime",
     "aws-smithy-async 1.2.0",
     "aws-smithy-http 0.60.7",
     "aws-smithy-json 0.60.7",
     "aws-smithy-runtime",
     "aws-smithy-runtime-api",
     "aws-smithy-types 1.1.8",
     "aws-types 1.1.8",
     "bytes 1.6.0",
     "http 0.2.12",
     "once_cell",
     "regex-lite",
     "tracing",
    ]

    [[package]]
    name = "aws-sdk-ssooidc"
    version = "1.18.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "04c46ee08a48a7f4eaa4ad201dcc1dd537b49c50859d14d4510e00ad9d3f9af2"
    dependencies = [
     "aws-credential-types 1.1.8",
     "aws-runtime",
     "aws-smithy-async 1.2.0",
     "aws-smithy-http 0.60.7",
     "aws-smithy-json 0.60.7",
     "aws-smithy-runtime",
     "aws-smithy-runtime-api",
     "aws-smithy-types 1.1.8",
     "aws-types 1.1.8",
     "bytes 1.6.0",
     "http 0.2.12",
     "once_cell",
     "regex-lite",
     "tracing",
    ]

    [[package]]
    name = "aws-sdk-sts"
    version = "0.28.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "265fac131fbfc188e5c3d96652ea90ecc676a934e3174eaaee523c6cec040b3b"
    dependencies = [
     "aws-credential-types 0.55.3",
     "aws-endpoint",
     "aws-http",
     "aws-sig-auth",
     "aws-smithy-async 0.55.3",
     "aws-smithy-client",
     "aws-smithy-http 0.55.3",
     "aws-smithy-http-tower",
     "aws-smithy-json 0.55.3",
     "aws-smithy-query 0.55.3",
     "aws-smithy-types 0.55.3",
     "aws-smithy-xml 0.55.3",
     "aws-types 0.55.3",
     "bytes 1.6.0",
     "http 0.2.12",
     "regex",
     "tower",
     "tracing",
    ]

    [[package]]
    name = "aws-sdk-sts"
    version = "1.18.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f752ac730125ca6017f72f9db5ec1772c9ecc664f87aa7507a7d81b023c23713"
    dependencies = [
     "aws-credential-types 1.1.8",
     "aws-runtime",
     "aws-smithy-async 1.2.0",
     "aws-smithy-http 0.60.7",
     "aws-smithy-json 0.60.7",
     "aws-smithy-query 0.60.7",
     "aws-smithy-runtime",
     "aws-smithy-runtime-api",
     "aws-smithy-types 1.1.8",
     "aws-smithy-xml 0.60.7",
     "aws-types 1.1.8",
     "http 0.2.12",
     "once_cell",
     "regex-lite",
     "tracing",
    ]

    [[package]]
    name = "aws-sig-auth"
    version = "0.55.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3b94acb10af0c879ecd5c7bdf51cda6679a0a4f4643ce630905a77673bfa3c61"
    dependencies = [
     "aws-credential-types 0.55.3",
     "aws-sigv4 0.55.3",
     "aws-smithy-eventstream 0.55.3",
     "aws-smithy-http 0.55.3",
     "aws-types 0.55.3",
     "http 0.2.12",
     "tracing",
    ]

    [[package]]
    name = "aws-sigv4"
    version = "0.55.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9d2ce6f507be68e968a33485ced670111d1cbad161ddbbab1e313c03d37d8f4c"
    dependencies = [
     "aws-smithy-eventstream 0.55.3",
     "aws-smithy-http 0.55.3",
     "bytes 1.6.0",
     "form_urlencoded",
     "hex",
     "hmac",
     "http 0.2.12",
     "once_cell",
     "percent-encoding",
     "regex",
     "sha2",
     "time",
     "tracing",
    ]

    [[package]]
    name = "aws-sigv4"
    version = "1.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "11d6f29688a4be9895c0ba8bef861ad0c0dac5c15e9618b9b7a6c233990fc263"
    dependencies = [
     "aws-credential-types 1.1.8",
     "aws-smithy-eventstream 0.60.4",
     "aws-smithy-http 0.60.7",
     "aws-smithy-runtime-api",
     "aws-smithy-types 1.1.8",
     "bytes 1.6.0",
     "form_urlencoded",
     "hex",
     "hmac",
     "http 0.2.12",
     "http 1.1.0",
     "once_cell",
     "percent-encoding",
     "sha2",
     "time",
     "tracing",
    ]

    [[package]]
    name = "aws-smithy-async"
    version = "0.55.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "13bda3996044c202d75b91afeb11a9afae9db9a721c6a7a427410018e286b880"
    dependencies = [
     "futures-util",
     "pin-project-lite",
     "tokio 1.37.0",
     "tokio-stream",
    ]

    [[package]]
    name = "aws-smithy-async"
    version = "1.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f7a41ccd6b74401a49ca828617049e5c23d83163d330a4f90a8081aadee0ac45"
    dependencies = [
     "futures-util",
     "pin-project-lite",
     "tokio 1.37.0",
    ]

    [[package]]
    name = "aws-smithy-checksums"
    version = "0.55.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "07ed8b96d95402f3f6b8b57eb4e0e45ee365f78b1a924faf20ff6e97abf1eae6"
    dependencies = [
     "aws-smithy-http 0.55.3",
     "aws-smithy-types 0.55.3",
     "bytes 1.6.0",
     "crc32c",
     "crc32fast",
     "hex",
     "http 0.2.12",
     "http-body 0.4.6",
     "md-5",
     "pin-project-lite",
     "sha1",
     "sha2",
     "tracing",
    ]

    [[package]]
    name = "aws-smithy-client"
    version = "0.55.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0a86aa6e21e86c4252ad6a0e3e74da9617295d8d6e374d552be7d3059c41cedd"
    dependencies = [
     "aws-smithy-async 0.55.3",
     "aws-smithy-http 0.55.3",
     "aws-smithy-http-tower",
     "aws-smithy-types 0.55.3",
     "bytes 1.6.0",
     "fastrand 1.9.0",
     "http 0.2.12",
     "http-body 0.4.6",
     "hyper 0.14.28",
     "hyper-rustls 0.23.2",
     "lazy_static",
     "pin-project-lite",
     "rustls 0.20.9",
     "tokio 1.37.0",
     "tower",
     "tracing",
    ]

    [[package]]
    name = "aws-smithy-eventstream"
    version = "0.55.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "460c8da5110835e3d9a717c61f5556b20d03c32a1dec57f8fc559b360f733bb8"
    dependencies = [
     "aws-smithy-types 0.55.3",
     "bytes 1.6.0",
     "crc32fast",
    ]

    [[package]]
    name = "aws-smithy-eventstream"
    version = "0.60.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e6363078f927f612b970edf9d1903ef5cef9a64d1e8423525ebb1f0a1633c858"
    dependencies = [
     "aws-smithy-types 1.1.8",
     "bytes 1.6.0",
     "crc32fast",
    ]

    [[package]]
    name = "aws-smithy-http"
    version = "0.55.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "2b3b693869133551f135e1f2c77cb0b8277d9e3e17feaf2213f735857c4f0d28"
    dependencies = [
     "aws-smithy-eventstream 0.55.3",
     "aws-smithy-types 0.55.3",
     "bytes 1.6.0",
     "bytes-utils",
     "futures-core",
     "http 0.2.12",
     "http-body 0.4.6",
     "hyper 0.14.28",
     "once_cell",
     "percent-encoding",
     "pin-project-lite",
     "pin-utils",
     "tokio 1.37.0",
     "tokio-util",
     "tracing",
    ]

    [[package]]
    name = "aws-smithy-http"
    version = "0.60.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3f10fa66956f01540051b0aa7ad54574640f748f9839e843442d99b970d3aff9"
    dependencies = [
     "aws-smithy-eventstream 0.60.4",
     "aws-smithy-runtime-api",
     "aws-smithy-types 1.1.8",
     "bytes 1.6.0",
     "bytes-utils",
     "futures-core",
     "http 0.2.12",
     "http-body 0.4.6",
     "once_cell",
     "percent-encoding",
     "pin-project-lite",
     "pin-utils",
     "tracing",
    ]

    [[package]]
    name = "aws-smithy-http-tower"
    version = "0.55.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3ae4f6c5798a247fac98a867698197d9ac22643596dc3777f0c76b91917616b9"
    dependencies = [
     "aws-smithy-http 0.55.3",
     "aws-smithy-types 0.55.3",
     "bytes 1.6.0",
     "http 0.2.12",
     "http-body 0.4.6",
     "pin-project-lite",
     "tower",
     "tracing",
    ]

    [[package]]
    name = "aws-smithy-json"
    version = "0.55.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "23f9f42fbfa96d095194a632fbac19f60077748eba536eb0b9fecc28659807f8"
    dependencies = [
     "aws-smithy-types 0.55.3",
    ]

    [[package]]
    name = "aws-smithy-json"
    version = "0.60.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4683df9469ef09468dad3473d129960119a0d3593617542b7d52086c8486f2d6"
    dependencies = [
     "aws-smithy-types 1.1.8",
    ]

    [[package]]
    name = "aws-smithy-query"
    version = "0.55.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "98819eb0b04020a1c791903533b638534ae6c12e2aceda3e6e6fba015608d51d"
    dependencies = [
     "aws-smithy-types 0.55.3",
     "urlencoding",
    ]

    [[package]]
    name = "aws-smithy-query"
    version = "0.60.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f2fbd61ceb3fe8a1cb7352e42689cec5335833cd9f94103a61e98f9bb61c64bb"
    dependencies = [
     "aws-smithy-types 1.1.8",
     "urlencoding",
    ]

    [[package]]
    name = "aws-smithy-runtime"
    version = "1.1.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ec81002d883e5a7fd2bb063d6fb51c4999eb55d404f4fff3dd878bf4733b9f01"
    dependencies = [
     "aws-smithy-async 1.2.0",
     "aws-smithy-http 0.60.7",
     "aws-smithy-runtime-api",
     "aws-smithy-types 1.1.8",
     "bytes 1.6.0",
     "fastrand 2.0.2",
     "h2 0.3.25",
     "http 0.2.12",
     "http-body 0.4.6",
     "hyper 0.14.28",
     "hyper-rustls 0.24.2",
     "once_cell",
     "pin-project-lite",
     "pin-utils",
     "rustls 0.21.10",
     "tokio 1.37.0",
     "tracing",
    ]

    [[package]]
    name = "aws-smithy-runtime-api"
    version = "1.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9acb931e0adaf5132de878f1398d83f8677f90ba70f01f65ff87f6d7244be1c5"
    dependencies = [
     "aws-smithy-async 1.2.0",
     "aws-smithy-types 1.1.8",
     "bytes 1.6.0",
     "http 0.2.12",
     "http 1.1.0",
     "pin-project-lite",
     "tokio 1.37.0",
     "tracing",
     "zeroize",
    ]

    [[package]]
    name = "aws-smithy-types"
    version = "0.55.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "16a3d0bf4f324f4ef9793b86a1701d9700fbcdbd12a846da45eed104c634c6e8"
    dependencies = [
     "base64-simd",
     "itoa",
     "num-integer",
     "ryu",
     "time",
    ]

    [[package]]
    name = "aws-smithy-types"
    version = "1.1.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "abe14dceea1e70101d38fbf2a99e6a34159477c0fb95e68e05c66bd7ae4c3729"
    dependencies = [
     "base64-simd",
     "bytes 1.6.0",
     "bytes-utils",
     "futures-core",
     "http 0.2.12",
     "http-body 0.4.6",
     "itoa",
     "num-integer",
     "pin-project-lite",
     "pin-utils",
     "ryu",
     "serde",
     "time",
     "tokio 1.37.0",
     "tokio-util",
    ]

    [[package]]
    name = "aws-smithy-xml"
    version = "0.55.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b1b9d12875731bd07e767be7baad95700c3137b56730ec9ddeedb52a5e5ca63b"
    dependencies = [
     "xmlparser",
    ]

    [[package]]
    name = "aws-smithy-xml"
    version = "0.60.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "872c68cf019c0e4afc5de7753c4f7288ce4b71663212771bf5e4542eb9346ca9"
    dependencies = [
     "xmlparser",
    ]

    [[package]]
    name = "aws-types"
    version = "0.55.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6dd209616cc8d7bfb82f87811a5c655dc97537f592689b18743bddf5dc5c4829"
    dependencies = [
     "aws-credential-types 0.55.3",
     "aws-smithy-async 0.55.3",
     "aws-smithy-client",
     "aws-smithy-http 0.55.3",
     "aws-smithy-types 0.55.3",
     "http 0.2.12",
     "rustc_version 0.4.0",
     "tracing",
    ]

    [[package]]
    name = "aws-types"
    version = "1.1.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0dbf2f3da841a8930f159163175cf6a3d16ddde517c1b0fba7aa776822800f40"
    dependencies = [
     "aws-credential-types 1.1.8",
     "aws-smithy-async 1.2.0",
     "aws-smithy-runtime-api",
     "aws-smithy-types 1.1.8",
     "http 0.2.12",
     "rustc_version 0.4.0",
     "tracing",
    ]

    [[package]]
    name = "axum"
    version = "0.6.20"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3b829e4e32b91e643de6eafe82b1d90675f5874230191a4ffbc1b336dec4d6bf"
    dependencies = [
     "async-trait",
     "axum-core",
     "bitflags 1.3.2",
     "bytes 1.6.0",
     "futures-util",
     "http 0.2.12",
     "http-body 0.4.6",
     "hyper 0.14.28",
     "itoa",
     "matchit",
     "memchr",
     "mime",
     "percent-encoding",
     "pin-project-lite",
     "rustversion",
     "serde",
     "sync_wrapper",
     "tower",
     "tower-layer",
     "tower-service",
    ]

    [[package]]
    name = "axum-core"
    version = "0.3.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "759fa577a247914fd3f7f76d62972792636412fbfd634cd452f6a385a74d2d2c"
    dependencies = [
     "async-trait",
     "bytes 1.6.0",
     "futures-util",
     "http 0.2.12",
     "http-body 0.4.6",
     "mime",
     "rustversion",
     "tower-layer",
     "tower-service",
    ]

    [[package]]
    name = "backtrace"
    version = "0.3.71"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "26b05800d2e817c8b3b4b54abd461726265fa9789ae34330622f2db9ee696f9d"
    dependencies = [
     "addr2line",
     "cc",
     "cfg-if 1.0.0",
     "libc",
     "miniz_oxide",
     "object",
     "rustc-demangle",
    ]

    [[package]]
    name = "base16ct"
    version = "0.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4c7f02d4ea65f2c1853089ffd8d2787bdbc63de2f0d29dedbcf8ccdfa0ccd4cf"

    [[package]]
    name = "base32"
    version = "0.4.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "23ce669cd6c8588f79e15cf450314f9638f967fc5770ff1c7c1deb0925ea7cfa"

    [[package]]
    name = "base62"
    version = "2.0.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f879ef8fc74665ed7f0e6127cb106315888fc2744f68e14b74f83edbb2a08992"

    [[package]]
    name = "base64"
    version = "0.13.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9e1b586273c5702936fe7b7d6896644d8be71e6314cfe09d3167c95f712589e8"

    [[package]]
    name = "base64"
    version = "0.21.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567"

    [[package]]
    name = "base64"
    version = "0.22.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9475866fec1451be56a3c2400fd081ff546538961565ccb5b7142cbd22bc7a51"

    [[package]]
    name = "base64-simd"
    version = "0.8.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "339abbe78e73178762e23bea9dfd08e697eb3f3301cd4be981c0f78ba5859195"
    dependencies = [
     "outref",
     "vsimd",
    ]

    [[package]]
    name = "base64ct"
    version = "1.6.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8c3c1a368f70d6cf7302d78f8f7093da241fb8e8807c05cc9e51a125895a6d5b"

    [[package]]
    name = "bb8"
    version = "0.8.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "df7c2093d15d6a1d33b1f972e1c5ea3177748742b97a5f392aa83a65262c6780"
    dependencies = [
     "async-trait",
     "futures-channel",
     "futures-util",
     "parking_lot 0.12.1",
     "tokio 1.37.0",
    ]

    [[package]]
    name = "bigdecimal"
    version = "0.3.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a6773ddc0eafc0e509fb60e48dff7f450f8e674a0686ae8605e8d9901bd5eefa"
    dependencies = [
     "num-bigint",
     "num-integer",
     "num-traits",
     "serde",
    ]

    [[package]]
    name = "bincode"
    version = "1.3.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b1f45e9417d87227c7a56d22e471c6206462cba514c7590c09aff4cf6d1ddcad"
    dependencies = [
     "serde",
    ]

    [[package]]
    name = "bit-set"
    version = "0.5.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0700ddab506f33b20a03b13996eccd309a48e5ff77d0d95926aa0210fb4e95f1"
    dependencies = [
     "bit-vec",
    ]

    [[package]]
    name = "bit-vec"
    version = "0.6.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "349f9b6a179ed607305526ca489b34ad0a41aed5f7980fa90eb03160b69598fb"

    [[package]]
    name = "bitflags"
    version = "1.3.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a"

    [[package]]
    name = "bitflags"
    version = "2.5.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "cf4b9d6a944f767f8e5e0db018570623c85f3d925ac718db4e06d0187adb21c1"
    dependencies = [
     "serde",
    ]

    [[package]]
    name = "bitvec"
    version = "1.0.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1bc2832c24239b0141d5674bb9174f9d68a8b5b3f2753311927c172ca46f7e9c"
    dependencies = [
     "funty",
     "radium",
     "tap",
     "wyz",
    ]

    [[package]]
    name = "blake2"
    version = "0.10.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "46502ad458c9a52b69d4d4d32775c788b7a1b85e8bc9d482d92250fc0e3f8efe"
    dependencies = [
     "digest",
    ]

    [[package]]
    name = "blake3"
    version = "1.5.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "30cca6d3674597c30ddf2c587bf8d9d65c9a84d2326d941cc79c9842dfe0ef52"
    dependencies = [
     "arrayref",
     "arrayvec",
     "cc",
     "cfg-if 1.0.0",
     "constant_time_eq 0.3.0",
     "serde",
    ]

    [[package]]
    name = "block-buffer"
    version = "0.10.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71"
    dependencies = [
     "generic-array",
    ]

    [[package]]
    name = "borsh"
    version = "1.3.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f58b559fd6448c6e2fd0adb5720cd98a2506594cafa4737ff98c396f3e82f667"
    dependencies = [
     "borsh-derive",
     "cfg_aliases",
    ]

    [[package]]
    name = "borsh-derive"
    version = "1.3.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7aadb5b6ccbd078890f6d7003694e33816e6b784358f18e15e7e6d9f065a57cd"
    dependencies = [
     "once_cell",
     "proc-macro-crate 3.1.0",
     "proc-macro2",
     "quote",
     "syn 2.0.57",
     "syn_derive",
    ]

    [[package]]
    name = "brotli"
    version = "3.5.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d640d25bc63c50fb1f0b545ffd80207d2e10a4c965530809b40ba3386825c391"
    dependencies = [
     "alloc-no-stdlib",
     "alloc-stdlib",
     "brotli-decompressor",
    ]

    [[package]]
    name = "brotli-decompressor"
    version = "2.5.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4e2e4afe60d7dd600fdd3de8d0f08c2b7ec039712e3b6137ff98b7004e82de4f"
    dependencies = [
     "alloc-no-stdlib",
     "alloc-stdlib",
    ]

    [[package]]
    name = "bstr"
    version = "1.9.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "05efc5cfd9110c8416e471df0e96702d58690178e206e61b7173706673c93706"
    dependencies = [
     "memchr",
     "serde",
    ]

    [[package]]
    name = "bumpalo"
    version = "3.14.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7f30e7476521f6f8af1a1c4c0b8cc94f0bee37d91763d0ca2665f299b6cd8aec"

    [[package]]
    name = "bytecheck"
    version = "0.6.12"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "23cdc57ce23ac53c931e88a43d06d070a6fd142f2617be5855eb75efc9beb1c2"
    dependencies = [
     "bytecheck_derive",
     "ptr_meta",
     "simdutf8",
    ]

    [[package]]
    name = "bytecheck_derive"
    version = "0.6.12"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3db406d29fbcd95542e92559bed4d8ad92636d1ca8b3b72ede10b4bcc010e659"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 1.0.109",
    ]

    [[package]]
    name = "bytecount"
    version = "0.6.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e1e5f035d16fc623ae5f74981db80a439803888314e3a555fd6f04acd51a3205"

    [[package]]
    name = "bytemuck"
    version = "1.15.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5d6d68c57235a3a081186990eca2867354726650f42f7516ca50c28d6281fd15"

    [[package]]
    name = "byteorder"
    version = "1.5.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b"

    [[package]]
    name = "bytes"
    version = "0.4.12"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "206fdffcfa2df7cbe15601ef46c813fce0965eb3286db6b56c583b814b51c81c"
    dependencies = [
     "byteorder",
     "iovec",
    ]

    [[package]]
    name = "bytes"
    version = "1.6.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "514de17de45fdb8dc022b1a7975556c53c86f9f0aa5f534b98977b171857c2c9"

    [[package]]
    name = "bytes-utils"
    version = "0.1.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7dafe3a8757b027e2be6e4e5601ed563c55989fcf1546e933c66c8eb3a058d35"
    dependencies = [
     "bytes 1.6.0",
     "either",
    ]

    [[package]]
    name = "bytestring"
    version = "1.3.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "74d80203ea6b29df88012294f62733de21cfeab47f17b41af3a38bc30a03ee72"
    dependencies = [
     "bytes 1.6.0",
    ]

    [[package]]
    name = "camino"
    version = "1.1.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c59e92b5a388f549b863a7bea62612c09f24c8393560709a54558a9abdfb3b9c"
    dependencies = [
     "serde",
    ]

    [[package]]
    name = "cards"
    version = "0.1.0"
    dependencies = [
     "common_utils",
     "error-stack",
     "masking",
     "router_env",
     "serde",
     "serde_json",
     "thiserror",
     "time",
    ]

    [[package]]
    name = "cargo-platform"
    version = "0.1.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "694c8807f2ae16faecc43dc17d74b3eb042482789fd0eb64b39a2e04e087053f"
    dependencies = [
     "serde",
    ]

    [[package]]
    name = "cargo_metadata"
    version = "0.14.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4acbb09d9ee8e23699b9634375c72795d095bf268439da88562cf9b501f181fa"
    dependencies = [
     "camino",
     "cargo-platform",
     "semver 1.0.22",
     "serde",
     "serde_json",
    ]

    [[package]]
    name = "cargo_metadata"
    version = "0.18.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "2d886547e41f740c616ae73108f6eb70afe6d940c7bc697cb30f13daec073037"
    dependencies = [
     "camino",
     "cargo-platform",
     "semver 1.0.22",
     "serde",
     "serde_json",
     "thiserror",
    ]

    [[package]]
    name = "cast"
    version = "0.3.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5"

    [[package]]
    name = "cc"
    version = "1.0.90"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8cd6604a82acf3039f1144f54b8eb34e91ffba622051189e71b781822d5ee1f5"
    dependencies = [
     "jobserver",
     "libc",
    ]

    [[package]]
    name = "cfb"
    version = "0.7.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d38f2da7a0a2c4ccf0065be06397cc26a81f4e528be095826eee9d4adbb8c60f"
    dependencies = [
     "byteorder",
     "fnv",
     "uuid",
    ]

    [[package]]
    name = "cfg-if"
    version = "0.1.10"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822"

    [[package]]
    name = "cfg-if"
    version = "1.0.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd"

    [[package]]
    name = "cfg_aliases"
    version = "0.1.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "fd16c4719339c4530435d38e511904438d07cce7950afa3718a84ac36c10e89e"

    [[package]]
    name = "chrono"
    version = "0.4.35"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8eaf5903dcbc0a39312feb77df2ff4c76387d591b9fc7b04a238dcf8bb62639a"
    dependencies = [
     "android-tzdata",
     "iana-time-zone",
     "js-sys",
     "num-traits",
     "serde",
     "wasm-bindgen",
     "windows-targets 0.52.4",
    ]

    [[package]]
    name = "chrono-tz"
    version = "0.8.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d59ae0466b83e838b81a54256c39d5d7c20b9d7daa10510a242d9b75abd5936e"
    dependencies = [
     "chrono",
     "chrono-tz-build",
     "phf",
    ]

    [[package]]
    name = "chrono-tz-build"
    version = "0.2.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "433e39f13c9a060046954e0592a8d0a4bcb1040125cbf91cb8ee58964cfb350f"
    dependencies = [
     "parse-zoneinfo",
     "phf",
     "phf_codegen",
    ]

    [[package]]
    name = "ciborium"
    version = "0.2.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "42e69ffd6f0917f5c029256a24d0161db17cea3997d185db0d35926308770f0e"
    dependencies = [
     "ciborium-io",
     "ciborium-ll",
     "serde",
    ]

    [[package]]
    name = "ciborium-io"
    version = "0.2.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "05afea1e0a06c9be33d539b876f1ce3692f4afea2cb41f740e7743225ed1c757"

    [[package]]
    name = "ciborium-ll"
    version = "0.2.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "57663b653d948a338bfb3eeba9bb2fd5fcfaecb9e199e87e1eda4d9e8b240fd9"
    dependencies = [
     "ciborium-io",
     "half",
    ]

    [[package]]
    name = "clap"
    version = "4.4.18"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1e578d6ec4194633722ccf9544794b71b1385c3c027efe0c55db226fc880865c"
    dependencies = [
     "clap_builder",
     "clap_derive",
    ]

    [[package]]
    name = "clap_builder"
    version = "4.4.18"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4df4df40ec50c46000231c914968278b1eb05098cf8f1b3a518a95030e71d1c7"
    dependencies = [
     "anstream",
     "anstyle",
     "clap_lex",
     "strsim",
    ]

    [[package]]
    name = "clap_derive"
    version = "4.4.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "cf9804afaaf59a91e75b022a30fb7229a7901f60c755489cc61c9b423b836442"
    dependencies = [
     "heck",
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "clap_lex"
    version = "0.6.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "702fc72eb24e5a1e48ce58027a675bc24edd52096d5397d4aea7c6dd9eca0bd1"

    [[package]]
    name = "cloudabi"
    version = "0.0.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ddfc5b9aa5d4507acaf872de71051dfd0e309860e88966e1051e462a077aac4f"
    dependencies = [
     "bitflags 1.3.2",
    ]

    [[package]]
    name = "colorchoice"
    version = "1.0.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0b6a852b24ab71dffc585bcb46eaf7959d175cb865a7152e35b348d1b2960422"

    [[package]]
    name = "common_enums"
    version = "0.1.0"
    dependencies = [
     "diesel",
     "router_derive",
     "serde",
     "serde_json",
     "strum 0.26.2",
     "thiserror",
     "utoipa",
    ]

    [[package]]
    name = "common_utils"
    version = "0.1.0"
    dependencies = [
     "async-trait",
     "base64 0.22.0",
     "blake3",
     "bytes 1.6.0",
     "common_enums",
     "diesel",
     "error-stack",
     "fake",
     "futures 0.3.30",
     "globset",
     "hex",
     "http 0.2.12",
     "masking",
     "md5",
     "nanoid",
     "nutype",
     "once_cell",
     "phonenumber",
     "proptest",
     "quick-xml 0.31.0",
     "rand",
     "regex",
     "reqwest",
     "ring 0.17.8",
     "router_env",
     "rust_decimal",
     "rustc-hash",
     "semver 1.0.22",
     "serde",
     "serde_json",
     "serde_urlencoded",
     "signal-hook",
     "signal-hook-tokio",
     "strum 0.26.2",
     "test-case",
     "thiserror",
     "time",
     "tokio 1.37.0",
     "url",
     "utoipa",
     "uuid",
    ]

    [[package]]
    name = "config"
    version = "0.14.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7328b20597b53c2454f0b1919720c25c7339051c02b72b7e05409e00b14132be"
    dependencies = [
     "async-trait",
     "convert_case 0.6.0",
     "json5",
     "lazy_static",
     "nom",
     "pathdiff",
     "ron",
     "rust-ini",
     "serde",
     "serde_json",
     "toml 0.8.12",
     "yaml-rust",
    ]

    [[package]]
    name = "config_importer"
    version = "0.1.0"
    dependencies = [
     "anyhow",
     "clap",
     "indexmap 2.3.0",
     "serde",
     "serde_json",
     "toml 0.8.12",
    ]

    [[package]]
    name = "connector_configs"
    version = "0.1.0"
    dependencies = [
     "api_models",
     "serde",
     "serde_with",
     "toml 0.8.12",
     "utoipa",
    ]

    [[package]]
    name = "const-oid"
    version = "0.9.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c2459377285ad874054d797f3ccebf984978aa39129f6eafde5cdc8315b612f8"

    [[package]]
    name = "const-random"
    version = "0.1.18"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "87e00182fe74b066627d63b85fd550ac2998d4b0bd86bfed477a0ae4c7c71359"
    dependencies = [
     "const-random-macro",
    ]

    [[package]]
    name = "const-random-macro"
    version = "0.1.16"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f9d839f2a20b0aee515dc581a6172f2321f96cab76c1a38a4c584a194955390e"
    dependencies = [
     "getrandom",
     "once_cell",
     "tiny-keccak",
    ]

    [[package]]
    name = "constant_time_eq"
    version = "0.2.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "21a53c0a4d288377e7415b53dcfc3c04da5cdc2cc95c8d5ac178b58f0b861ad6"

    [[package]]
    name = "constant_time_eq"
    version = "0.3.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f7144d30dcf0fafbce74250a3963025d8d52177934239851c917d29f1df280c2"

    [[package]]
    name = "convert_case"
    version = "0.4.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6245d59a3e82a7fc217c5828a6692dbc6dfb63a0c8c90495621f7b9d79704a0e"

    [[package]]
    name = "convert_case"
    version = "0.6.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ec182b0ca2f35d8fc196cf3404988fd8b8c739a4d270ff118a398feb0cbec1ca"
    dependencies = [
     "unicode-segmentation",
    ]

    [[package]]
    name = "cookie"
    version = "0.16.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e859cd57d0710d9e06c381b550c06e76992472a8c6d527aecd2fc673dcc231fb"
    dependencies = [
     "percent-encoding",
     "time",
     "version_check",
    ]

    [[package]]
    name = "cookie"
    version = "0.18.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4ddef33a339a91ea89fb53151bd0a4689cfce27055c291dfa69945475d22c747"
    dependencies = [
     "time",
     "version_check",
    ]

    [[package]]
    name = "cookie-factory"
    version = "0.3.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9885fa71e26b8ab7855e2ec7cae6e9b380edff76cd052e07c683a0319d51b3a2"
    dependencies = [
     "futures 0.3.30",
    ]

    [[package]]
    name = "core-foundation"
    version = "0.9.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "91e195e091a93c46f7102ec7818a2aa394e1e1771c3ab4825963fa03e45afb8f"
    dependencies = [
     "core-foundation-sys",
     "libc",
    ]

    [[package]]
    name = "core-foundation-sys"
    version = "0.8.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "06ea2b9bc92be3c2baa9334a323ebca2d6f074ff852cd1d7b11064035cd3868f"

    [[package]]
    name = "cpufeatures"
    version = "0.2.12"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "53fe5e26ff1b7aef8bca9c6080520cfb8d9333c7568e1829cef191a9723e5504"
    dependencies = [
     "libc",
    ]

    [[package]]
    name = "crc"
    version = "3.0.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "86ec7a15cbe22e59248fc7eadb1907dab5ba09372595da4d73dd805ed4417dfe"
    dependencies = [
     "crc-catalog",
    ]

    [[package]]
    name = "crc-catalog"
    version = "2.4.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "19d374276b40fb8bbdee95aef7c7fa6b5316ec764510eb64b8dd0e2ed0d7e7f5"

    [[package]]
    name = "crc16"
    version = "0.4.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "338089f42c427b86394a5ee60ff321da23a5c89c9d89514c829687b26359fcff"

    [[package]]
    name = "crc32c"
    version = "0.6.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "89254598aa9b9fa608de44b3ae54c810f0f06d755e24c50177f1f8f31ff50ce2"
    dependencies = [
     "rustc_version 0.4.0",
    ]

    [[package]]
    name = "crc32fast"
    version = "1.4.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b3855a8a784b474f333699ef2bbca9db2c4a1f6d9088a90a2d25b1eb53111eaa"
    dependencies = [
     "cfg-if 1.0.0",
    ]

    [[package]]
    name = "criterion"
    version = "0.5.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f2b12d017a929603d80db1831cd3a24082f8137ce19c69e6447f54f5fc8d692f"
    dependencies = [
     "anes",
     "cast",
     "ciborium",
     "clap",
     "criterion-plot",
     "is-terminal",
     "itertools 0.10.5",
     "num-traits",
     "once_cell",
     "oorandom",
     "plotters",
     "rayon",
     "regex",
     "serde",
     "serde_derive",
     "serde_json",
     "tinytemplate",
     "walkdir",
    ]

    [[package]]
    name = "criterion-plot"
    version = "0.5.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6b50826342786a51a89e2da3a28f1c32b06e387201bc2d19791f622c673706b1"
    dependencies = [
     "cast",
     "itertools 0.10.5",
    ]

    [[package]]
    name = "crossbeam-channel"
    version = "0.5.12"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ab3db02a9c5b5121e1e42fbdb1aeb65f5e02624cc58c43f2884c6ccac0b82f95"
    dependencies = [
     "crossbeam-utils 0.8.19",
    ]

    [[package]]
    name = "crossbeam-deque"
    version = "0.7.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c20ff29ded3204c5106278a81a38f4b482636ed4fa1e6cfbeef193291beb29ed"
    dependencies = [
     "crossbeam-epoch 0.8.2",
     "crossbeam-utils 0.7.2",
     "maybe-uninit",
    ]

    [[package]]
    name = "crossbeam-deque"
    version = "0.8.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d"
    dependencies = [
     "crossbeam-epoch 0.9.18",
     "crossbeam-utils 0.8.19",
    ]

    [[package]]
    name = "crossbeam-epoch"
    version = "0.8.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "058ed274caafc1f60c4997b5fc07bf7dc7cca454af7c6e81edffe5f33f70dace"
    dependencies = [
     "autocfg",
     "cfg-if 0.1.10",
     "crossbeam-utils 0.7.2",
     "lazy_static",
     "maybe-uninit",
     "memoffset",
     "scopeguard",
    ]

    [[package]]
    name = "crossbeam-epoch"
    version = "0.9.18"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e"
    dependencies = [
     "crossbeam-utils 0.8.19",
    ]

    [[package]]
    name = "crossbeam-queue"
    version = "0.2.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "774ba60a54c213d409d5353bda12d49cd68d14e45036a285234c8d6f91f92570"
    dependencies = [
     "cfg-if 0.1.10",
     "crossbeam-utils 0.7.2",
     "maybe-uninit",
    ]

    [[package]]
    name = "crossbeam-queue"
    version = "0.3.11"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "df0346b5d5e76ac2fe4e327c5fd1118d6be7c51dfb18f9b7922923f287471e35"
    dependencies = [
     "crossbeam-utils 0.8.19",
    ]

    [[package]]
    name = "crossbeam-utils"
    version = "0.7.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c3c7c73a2d1e9fc0886a08b93e98eb643461230d5f1925e4036204d5f2e261a8"
    dependencies = [
     "autocfg",
     "cfg-if 0.1.10",
     "lazy_static",
    ]

    [[package]]
    name = "crossbeam-utils"
    version = "0.8.19"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "248e3bacc7dc6baa3b21e405ee045c3047101a49145e7e9eca583ab4c2ca5345"

    [[package]]
    name = "crunchy"
    version = "0.2.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7"

    [[package]]
    name = "crypto-bigint"
    version = "0.5.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0dc92fb57ca44df6db8059111ab3af99a63d5d0f8375d9972e319a379c6bab76"
    dependencies = [
     "generic-array",
     "rand_core",
     "subtle",
     "zeroize",
    ]

    [[package]]
    name = "crypto-common"
    version = "0.1.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3"
    dependencies = [
     "generic-array",
     "typenum",
    ]

    [[package]]
    name = "csv"
    version = "1.3.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ac574ff4d437a7b5ad237ef331c17ccca63c46479e5b5453eb8e10bb99a759fe"
    dependencies = [
     "csv-core",
     "itoa",
     "ryu",
     "serde",
    ]

    [[package]]
    name = "csv-core"
    version = "0.1.11"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5efa2b3d7902f4b634a20cae3c9c4e6209dc4779feb6863329607560143efa70"
    dependencies = [
     "memchr",
    ]

    [[package]]
    name = "currency_conversion"
    version = "0.1.0"
    dependencies = [
     "common_enums",
     "rust_decimal",
     "rusty-money",
     "serde",
     "thiserror",
    ]

    [[package]]
    name = "curve25519-dalek"
    version = "4.1.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "97fb8b7c4503de7d6ae7b42ab72a5a59857b4c937ec27a3d4539dba95b5ab2be"
    dependencies = [
     "cfg-if 1.0.0",
     "cpufeatures",
     "curve25519-dalek-derive",
     "digest",
     "fiat-crypto",
     "rustc_version 0.4.0",
     "subtle",
     "zeroize",
    ]

    [[package]]
    name = "curve25519-dalek-derive"
    version = "0.1.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f46882e17999c6cc590af592290432be3bce0428cb0d5f8b6715e4dc7b383eb3"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "darling"
    version = "0.14.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7b750cb3417fd1b327431a470f388520309479ab0bf5e323505daf0290cd3850"
    dependencies = [
     "darling_core 0.14.4",
     "darling_macro 0.14.4",
    ]

    [[package]]
    name = "darling"
    version = "0.20.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "54e36fcd13ed84ffdfda6f5be89b31287cbb80c439841fe69e04841435464391"
    dependencies = [
     "darling_core 0.20.8",
     "darling_macro 0.20.8",
    ]

    [[package]]
    name = "darling_core"
    version = "0.14.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "109c1ca6e6b7f82cc233a97004ea8ed7ca123a9af07a8230878fcfda9b158bf0"
    dependencies = [
     "fnv",
     "ident_case",
     "proc-macro2",
     "quote",
     "strsim",
     "syn 1.0.109",
    ]

    [[package]]
    name = "darling_core"
    version = "0.20.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9c2cf1c23a687a1feeb728783b993c4e1ad83d99f351801977dd809b48d0a70f"
    dependencies = [
     "fnv",
     "ident_case",
     "proc-macro2",
     "quote",
     "strsim",
     "syn 2.0.57",
    ]

    [[package]]
    name = "darling_macro"
    version = "0.14.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a4aab4dbc9f7611d8b55048a3a16d2d010c2c8334e46304b40ac1cc14bf3b48e"
    dependencies = [
     "darling_core 0.14.4",
     "quote",
     "syn 1.0.109",
    ]

    [[package]]
    name = "darling_macro"
    version = "0.20.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a668eda54683121533a393014d8692171709ff57a7d61f187b6e782719f8933f"
    dependencies = [
     "darling_core 0.20.8",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "dashmap"
    version = "5.5.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "978747c1d849a7d2ee5e8adc0159961c48fb7e5db2f06af6723b80123bb53856"
    dependencies = [
     "cfg-if 1.0.0",
     "hashbrown 0.14.3",
     "lock_api 0.4.11",
     "once_cell",
     "parking_lot_core 0.9.9",
    ]

    [[package]]
    name = "data-encoding"
    version = "2.5.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7e962a19be5cfc3f3bf6dd8f61eb50107f356ad6270fbb3ed41476571db78be5"

    [[package]]
    name = "deadpool"
    version = "0.10.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "fb84100978c1c7b37f09ed3ce3e5f843af02c2a2c431bae5b19230dad2c1b490"
    dependencies = [
     "async-trait",
     "deadpool-runtime",
     "num_cpus",
     "tokio 1.37.0",
    ]

    [[package]]
    name = "deadpool-runtime"
    version = "0.1.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "63dfa964fe2a66f3fde91fc70b267fe193d822c7e603e2a675a49a7f46ad3f49"

    [[package]]
    name = "der"
    version = "0.7.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "fffa369a668c8af7dbf8b5e56c9f744fbd399949ed171606040001947de40b1c"
    dependencies = [
     "const-oid",
     "pem-rfc7468",
     "zeroize",
    ]

    [[package]]
    name = "der-parser"
    version = "9.0.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5cd0a5c643689626bec213c4d8bd4d96acc8ffdb4ad4bb6bc16abf27d5f4b553"
    dependencies = [
     "asn1-rs",
     "displaydoc",
     "nom",
     "num-bigint",
     "num-traits",
     "rusticata-macros",
    ]

    [[package]]
    name = "deranged"
    version = "0.3.11"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4"
    dependencies = [
     "powerfmt",
     "serde",
    ]

    [[package]]
    name = "derive_builder"
    version = "0.12.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8d67778784b508018359cbc8696edb3db78160bab2c2a28ba7f56ef6932997f8"
    dependencies = [
     "derive_builder_macro",
    ]

    [[package]]
    name = "derive_builder_core"
    version = "0.12.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c11bdc11a0c47bc7d37d582b5285da6849c96681023680b906673c5707af7b0f"
    dependencies = [
     "darling 0.14.4",
     "proc-macro2",
     "quote",
     "syn 1.0.109",
    ]

    [[package]]
    name = "derive_builder_macro"
    version = "0.12.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ebcda35c7a396850a55ffeac740804b40ffec779b98fffbb1738f4033f0ee79e"
    dependencies = [
     "derive_builder_core",
     "syn 1.0.109",
    ]

    [[package]]
    name = "derive_deref"
    version = "1.1.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "dcdbcee2d9941369faba772587a565f4f534e42cb8d17e5295871de730163b2b"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 1.0.109",
    ]

    [[package]]
    name = "derive_more"
    version = "0.99.17"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4fb810d30a7c1953f91334de7244731fc3f3c10d7fe163338a35b9f640960321"
    dependencies = [
     "convert_case 0.4.0",
     "proc-macro2",
     "quote",
     "rustc_version 0.4.0",
     "syn 1.0.109",
    ]

    [[package]]
    name = "deunicode"
    version = "1.4.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b6e854126756c496b8c81dec88f9a706b15b875c5849d4097a3854476b9fdf94"

    [[package]]
    name = "diesel"
    version = "2.1.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ff236accb9a5069572099f0b350a92e9560e8e63a9b8d546162f4a5e03026bb2"
    dependencies = [
     "bitflags 2.5.0",
     "byteorder",
     "diesel_derives",
     "itoa",
     "pq-sys",
     "r2d2",
     "serde_json",
     "time",
    ]

    [[package]]
    name = "diesel_derives"
    version = "2.1.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "14701062d6bed917b5c7103bdffaee1e4609279e240488ad24e7bd979ca6866c"
    dependencies = [
     "diesel_table_macro_syntax",
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "diesel_migrations"
    version = "2.1.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6036b3f0120c5961381b570ee20a02432d7e2d27ea60de9578799cf9156914ac"
    dependencies = [
     "diesel",
     "migrations_internals",
     "migrations_macros",
    ]

    [[package]]
    name = "diesel_models"
    version = "0.1.0"
    dependencies = [
     "async-bb8-diesel",
     "common_enums",
     "common_utils",
     "diesel",
     "error-stack",
     "masking",
     "router_derive",
     "router_env",
     "rustc-hash",
     "serde",
     "serde_json",
     "strum 0.26.2",
     "thiserror",
     "time",
    ]

    [[package]]
    name = "diesel_table_macro_syntax"
    version = "0.1.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "fc5557efc453706fed5e4fa85006fe9817c224c3f480a34c7e5959fd700921c5"
    dependencies = [
     "syn 2.0.57",
    ]

    [[package]]
    name = "digest"
    version = "0.10.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292"
    dependencies = [
     "block-buffer",
     "const-oid",
     "crypto-common",
     "subtle",
    ]

    [[package]]
    name = "displaydoc"
    version = "0.2.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "487585f4d0c6655fe74905e2504d8ad6908e4db67f744eb140876906c2f3175d"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "dlv-list"
    version = "0.5.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "442039f5147480ba31067cb00ada1adae6892028e40e45fc5de7b7df6dcc1b5f"
    dependencies = [
     "const-random",
    ]

    [[package]]
    name = "dot-generator"
    version = "0.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0aaac7ada45f71873ebce336491d1c1bc4a7c8042c7cea978168ad59e805b871"
    dependencies = [
     "dot-structures",
    ]

    [[package]]
    name = "dot-structures"
    version = "0.1.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "675e35c02a51bb4d4618cb4885b3839ce6d1787c97b664474d9208d074742e20"

    [[package]]
    name = "dotenvy"
    version = "0.15.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1aaf95b3e5c8f23aa320147307562d361db0ae0d51242340f558153b4eb2439b"

    [[package]]
    name = "drainer"
    version = "0.1.0"
    dependencies = [
     "actix-web",
     "async-bb8-diesel",
     "async-trait",
     "bb8",
     "clap",
     "common_utils",
     "config",
     "diesel",
     "diesel_models",
     "error-stack",
     "external_services",
     "hyperswitch_interfaces",
     "masking",
     "mime",
     "once_cell",
     "redis_interface",
     "reqwest",
     "router_env",
     "serde",
     "serde_json",
     "serde_path_to_error",
     "thiserror",
     "tokio 1.37.0",
    ]

    [[package]]
    name = "dyn-clone"
    version = "1.0.17"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0d6ef0072f8a535281e4876be788938b528e9a1d43900b82c2569af7da799125"

    [[package]]
    name = "ecdsa"
    version = "0.16.9"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ee27f32b5c5292967d2d4a9d7f1e0b0aed2c15daded5a60300e4abb9d8020bca"
    dependencies = [
     "der",
     "digest",
     "elliptic-curve",
     "rfc6979",
     "signature",
     "spki",
    ]

    [[package]]
    name = "ed25519"
    version = "2.2.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "115531babc129696a58c64a4fef0a8bf9e9698629fb97e9e40767d235cfbcd53"
    dependencies = [
     "pkcs8",
     "signature",
    ]

    [[package]]
    name = "ed25519-dalek"
    version = "2.1.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4a3daa8e81a3963a60642bcc1f90a670680bd4a77535faa384e9d1c79d620871"
    dependencies = [
     "curve25519-dalek",
     "ed25519",
     "serde",
     "sha2",
     "subtle",
     "zeroize",
    ]

    [[package]]
    name = "either"
    version = "1.10.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "11157ac094ffbdde99aa67b23417ebdd801842852b500e395a45a9c0aac03e4a"
    dependencies = [
     "serde",
    ]

    [[package]]
    name = "elliptic-curve"
    version = "0.13.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b5e6043086bf7973472e0c7dff2142ea0b680d30e18d9cc40f267efbf222bd47"
    dependencies = [
     "base16ct",
     "crypto-bigint",
     "digest",
     "ff",
     "generic-array",
     "group",
     "hkdf",
     "pem-rfc7468",
     "pkcs8",
     "rand_core",
     "sec1",
     "subtle",
     "zeroize",
    ]

    [[package]]
    name = "encoding_rs"
    version = "0.8.33"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7268b386296a025e474d5140678f75d6de9493ae55a5d709eeb9dd08149945e1"
    dependencies = [
     "cfg-if 1.0.0",
    ]

    [[package]]
    name = "equivalent"
    version = "1.0.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5"

    [[package]]
    name = "erased-serde"
    version = "0.3.31"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6c138974f9d5e7fe373eb04df7cae98833802ae4b11c24ac7039a21d5af4b26c"
    dependencies = [
     "serde",
    ]

    [[package]]
    name = "erased-serde"
    version = "0.4.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "2b73807008a3c7f171cc40312f37d95ef0396e048b5848d775f54b1a4dd4a0d3"
    dependencies = [
     "serde",
    ]

    [[package]]
    name = "errno"
    version = "0.3.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a258e46cdc063eb8519c00b9fc845fc47bcfca4130e2f08e88665ceda8474245"
    dependencies = [
     "libc",
     "windows-sys 0.52.0",
    ]

    [[package]]
    name = "error-chain"
    version = "0.12.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "2d2f06b9cac1506ece98fe3231e3cc9c4410ec3d5b1f24ae1c8946f0742cdefc"
    dependencies = [
     "version_check",
    ]

    [[package]]
    name = "error-stack"
    version = "0.4.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "27a72baa257b5e0e2de241967bc5ee8f855d6072351042688621081d66b2a76b"
    dependencies = [
     "anyhow",
     "rustc_version 0.4.0",
     "serde",
    ]

    [[package]]
    name = "etcetera"
    version = "0.8.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "136d1b5283a1ab77bd9257427ffd09d8667ced0570b6f938942bc7568ed5b943"
    dependencies = [
     "cfg-if 1.0.0",
     "home",
     "windows-sys 0.48.0",
    ]

    [[package]]
    name = "euclid"
    version = "0.1.0"
    dependencies = [
     "common_enums",
     "common_utils",
     "criterion",
     "euclid_macros",
     "hyperswitch_constraint_graph",
     "nom",
     "once_cell",
     "rustc-hash",
     "serde",
     "serde_json",
     "strum 0.26.2",
     "thiserror",
     "utoipa",
    ]

    [[package]]
    name = "euclid_macros"
    version = "0.1.0"
    dependencies = [
     "proc-macro2",
     "quote",
     "rustc-hash",
     "strum 0.26.2",
     "syn 2.0.57",
    ]

    [[package]]
    name = "euclid_wasm"
    version = "0.1.0"
    dependencies = [
     "api_models",
     "common_enums",
     "connector_configs",
     "currency_conversion",
     "euclid",
     "getrandom",
     "hyperswitch_constraint_graph",
     "kgraph_utils",
     "once_cell",
     "ron-parser",
     "serde",
     "serde-wasm-bindgen 0.6.5",
     "strum 0.26.2",
     "wasm-bindgen",
    ]

    [[package]]
    name = "event-listener"
    version = "2.5.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0206175f82b8d6bf6652ff7d71a1e27fd2e4efde587fd368662814d6ec1d9ce0"

    [[package]]
    name = "events"
    version = "0.1.0"
    dependencies = [
     "error-stack",
     "masking",
     "router_env",
     "serde",
     "serde_json",
     "thiserror",
     "time",
    ]

    [[package]]
    name = "external_services"
    version = "0.1.0"
    dependencies = [
     "async-trait",
     "aws-config 0.55.3",
     "aws-sdk-kms",
     "aws-sdk-s3",
     "aws-sdk-sesv2",
     "aws-sdk-sts 0.28.0",
     "aws-smithy-client",
     "base64 0.22.0",
     "common_utils",
     "dyn-clone",
     "error-stack",
     "hex",
     "hyper 0.14.28",
     "hyper-proxy",
     "hyperswitch_interfaces",
     "masking",
     "once_cell",
     "router_env",
     "serde",
     "thiserror",
     "tokio 1.37.0",
     "vaultrs",
    ]

    [[package]]
    name = "fake"
    version = "2.9.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1c25829bde82205da46e1823b2259db6273379f626fc211f126f65654a2669be"
    dependencies = [
     "deunicode",
     "rand",
    ]

    [[package]]
    name = "fantoccini"
    version = "0.19.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "65f0fbe245d714b596ba5802b46f937f5ce68dcae0f32f9a70b5c3b04d3c6f64"
    dependencies = [
     "base64 0.13.1",
     "cookie 0.16.2",
     "futures-core",
     "futures-util",
     "http 0.2.12",
     "hyper 0.14.28",
     "hyper-rustls 0.23.2",
     "mime",
     "serde",
     "serde_json",
     "time",
     "tokio 1.37.0",
     "url",
     "webdriver",
    ]

    [[package]]
    name = "fastrand"
    version = "1.9.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e51093e27b0797c359783294ca4f0a911c270184cb10f85783b118614a1501be"
    dependencies = [
     "instant",
    ]

    [[package]]
    name = "fastrand"
    version = "2.0.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "658bd65b1cf4c852a3cc96f18a8ce7b5640f6b703f905c7d74532294c2a63984"

    [[package]]
    name = "fdeflate"
    version = "0.3.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4f9bfee30e4dedf0ab8b422f03af778d9612b63f502710fc500a334ebe2de645"
    dependencies = [
     "simd-adler32",
    ]

    [[package]]
    name = "ff"
    version = "0.13.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ded41244b729663b1e574f1b4fb731469f69f79c17667b5d776b16cda0479449"
    dependencies = [
     "rand_core",
     "subtle",
    ]

    [[package]]
    name = "fiat-crypto"
    version = "0.2.9"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "28dea519a9695b9977216879a3ebfddf92f1c08c05d984f8996aecd6ecdc811d"

    [[package]]
    name = "finl_unicode"
    version = "1.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8fcfdc7a0362c9f4444381a9e697c79d435fe65b52a37466fc2c1184cee9edc6"

    [[package]]
    name = "flate2"
    version = "1.0.28"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "46303f565772937ffe1d394a4fac6f411c6013172fadde9dcdb1e147a086940e"
    dependencies = [
     "crc32fast",
     "miniz_oxide",
    ]

    [[package]]
    name = "float-cmp"
    version = "0.9.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "98de4bbd547a563b716d8dfa9aad1cb19bfab00f4fa09a6a4ed21dbcf44ce9c4"
    dependencies = [
     "num-traits",
    ]

    [[package]]
    name = "flume"
    version = "0.11.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "55ac459de2512911e4b674ce33cf20befaba382d05b62b008afc1c8b57cbf181"
    dependencies = [
     "futures-core",
     "futures-sink",
     "spin 0.9.8",
    ]

    [[package]]
    name = "fnv"
    version = "1.0.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1"

    [[package]]
    name = "foreign-types"
    version = "0.3.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1"
    dependencies = [
     "foreign-types-shared",
    ]

    [[package]]
    name = "foreign-types-shared"
    version = "0.1.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b"

    [[package]]
    name = "form_urlencoded"
    version = "1.2.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456"
    dependencies = [
     "percent-encoding",
    ]

    [[package]]
    name = "fred"
    version = "7.1.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b99c2b48934cd02a81032dd7428b7ae831a27794275bc94eba367418db8a9e55"
    dependencies = [
     "arc-swap",
     "async-trait",
     "bytes 1.6.0",
     "bytes-utils",
     "float-cmp",
     "futures 0.3.30",
     "lazy_static",
     "log",
     "parking_lot 0.12.1",
     "rand",
     "redis-protocol",
     "semver 1.0.22",
     "socket2",
     "tokio 1.37.0",
     "tokio-stream",
     "tokio-util",
     "tracing",
     "tracing-futures",
     "url",
     "urlencoding",
    ]

    [[package]]
    name = "fuchsia-zircon"
    version = "0.3.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "2e9763c69ebaae630ba35f74888db465e49e259ba1bc0eda7d06f4a067615d82"
    dependencies = [
     "bitflags 1.3.2",
     "fuchsia-zircon-sys",
    ]

    [[package]]
    name = "fuchsia-zircon-sys"
    version = "0.3.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7"

    [[package]]
    name = "funty"
    version = "2.0.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e6d5a32815ae3f33302d95fdcb2ce17862f8c65363dcfd29360480ba1001fc9c"

    [[package]]
    name = "futures"
    version = "0.1.31"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3a471a38ef8ed83cd6e40aa59c1ffe17db6855c18e3604d9c4ed8c08ebc28678"

    [[package]]
    name = "futures"
    version = "0.3.30"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "645c6916888f6cb6350d2550b80fb63e734897a8498abe35cfb732b6487804b0"
    dependencies = [
     "futures-channel",
     "futures-core",
     "futures-executor",
     "futures-io",
     "futures-sink",
     "futures-task",
     "futures-util",
    ]

    [[package]]
    name = "futures-channel"
    version = "0.3.30"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "eac8f7d7865dcb88bd4373ab671c8cf4508703796caa2b1985a9ca867b3fcb78"
    dependencies = [
     "futures-core",
     "futures-sink",
    ]

    [[package]]
    name = "futures-core"
    version = "0.3.30"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "dfc6580bb841c5a68e9ef15c77ccc837b40a7504914d52e47b8b0e9bbda25a1d"

    [[package]]
    name = "futures-executor"
    version = "0.3.30"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a576fc72ae164fca6b9db127eaa9a9dda0d61316034f33a0a0d4eda41f02b01d"
    dependencies = [
     "futures-core",
     "futures-task",
     "futures-util",
    ]

    [[package]]
    name = "futures-intrusive"
    version = "0.5.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1d930c203dd0b6ff06e0201a4a2fe9149b43c684fd4420555b26d21b1a02956f"
    dependencies = [
     "futures-core",
     "lock_api 0.4.11",
     "parking_lot 0.12.1",
    ]

    [[package]]
    name = "futures-io"
    version = "0.3.30"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a44623e20b9681a318efdd71c299b6b222ed6f231972bfe2f224ebad6311f0c1"

    [[package]]
    name = "futures-macro"
    version = "0.3.30"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "87750cf4b7a4c0625b1529e4c543c2182106e4dedc60a2a6455e00d212c489ac"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "futures-sink"
    version = "0.3.30"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9fb8e00e87438d937621c1c6269e53f536c14d3fbd6a042bb24879e57d474fb5"

    [[package]]
    name = "futures-task"
    version = "0.3.30"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "38d84fa142264698cdce1a9f9172cf383a0c82de1bddcf3092901442c4097004"

    [[package]]
    name = "futures-util"
    version = "0.3.30"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48"
    dependencies = [
     "futures-channel",
     "futures-core",
     "futures-io",
     "futures-macro",
     "futures-sink",
     "futures-task",
     "memchr",
     "pin-project-lite",
     "pin-utils",
     "slab",
    ]

    [[package]]
    name = "generic-array"
    version = "0.14.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a"
    dependencies = [
     "typenum",
     "version_check",
     "zeroize",
    ]

    [[package]]
    name = "gethostname"
    version = "0.4.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0176e0459c2e4a1fe232f984bca6890e681076abb9934f6cea7c326f3fc47818"
    dependencies = [
     "libc",
     "windows-targets 0.48.5",
    ]

    [[package]]
    name = "getrandom"
    version = "0.2.12"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "190092ea657667030ac6a35e305e62fc4dd69fd98ac98631e5d3a2b1575a12b5"
    dependencies = [
     "cfg-if 1.0.0",
     "js-sys",
     "libc",
     "wasi",
     "wasm-bindgen",
    ]

    [[package]]
    name = "gimli"
    version = "0.28.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4271d37baee1b8c7e4b708028c57d816cf9d2434acb33a549475f78c181f6253"

    [[package]]
    name = "git2"
    version = "0.18.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "232e6a7bfe35766bf715e55a88b39a700596c0ccfd88cd3680b4cdb40d66ef70"
    dependencies = [
     "bitflags 2.5.0",
     "libc",
     "libgit2-sys",
     "log",
     "url",
    ]

    [[package]]
    name = "glob"
    version = "0.3.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b"

    [[package]]
    name = "globset"
    version = "0.4.14"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "57da3b9b5b85bd66f31093f8c408b90a74431672542466497dcbdfdc02034be1"
    dependencies = [
     "aho-corasick",
     "bstr",
     "log",
     "regex-automata 0.4.6",
     "regex-syntax 0.8.3",
    ]

    [[package]]
    name = "globwalk"
    version = "0.8.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "93e3af942408868f6934a7b85134a3230832b9977cf66125df2f9edcfce4ddcc"
    dependencies = [
     "bitflags 1.3.2",
     "ignore",
     "walkdir",
    ]

    [[package]]
    name = "graphviz-rust"
    version = "0.6.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "27dafd1ac303e0dfb347a3861d9ac440859bab26ec2f534bbceb262ea492a1e0"
    dependencies = [
     "dot-generator",
     "dot-structures",
     "into-attr",
     "into-attr-derive",
     "pest",
     "pest_derive",
     "rand",
     "tempfile",
    ]

    [[package]]
    name = "group"
    version = "0.13.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f0f9ef7462f7c099f518d754361858f86d8a07af53ba9af0fe635bbccb151a63"
    dependencies = [
     "ff",
     "rand_core",
     "subtle",
    ]

    [[package]]
    name = "h2"
    version = "0.3.25"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4fbd2820c5e49886948654ab546d0688ff24530286bdcf8fca3cefb16d4618eb"
    dependencies = [
     "bytes 1.6.0",
     "fnv",
     "futures-core",
     "futures-sink",
     "futures-util",
     "http 0.2.12",
     "indexmap 2.3.0",
     "slab",
     "tokio 1.37.0",
     "tokio-util",
     "tracing",
    ]

    [[package]]
    name = "h2"
    version = "0.4.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "51ee2dd2e4f378392eeff5d51618cd9a63166a2513846bbc55f21cfacd9199d4"
    dependencies = [
     "bytes 1.6.0",
     "fnv",
     "futures-core",
     "futures-sink",
     "futures-util",
     "http 1.1.0",
     "indexmap 2.3.0",
     "slab",
     "tokio 1.37.0",
     "tokio-util",
     "tracing",
    ]

    [[package]]
    name = "half"
    version = "2.4.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b5eceaaeec696539ddaf7b333340f1af35a5aa87ae3e4f3ead0532f72affab2e"
    dependencies = [
     "cfg-if 1.0.0",
     "crunchy",
    ]

    [[package]]
    name = "hashbrown"
    version = "0.12.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888"
    dependencies = [
     "ahash 0.7.8",
    ]

    [[package]]
    name = "hashbrown"
    version = "0.13.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "43a3c133739dddd0d2990f9a4bdf8eb4b21ef50e4851ca85ab661199821d510e"

    [[package]]
    name = "hashbrown"
    version = "0.14.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "290f1a1d9242c78d09ce40a5e87e7554ee637af1351968159f4952f028f75604"
    dependencies = [
     "ahash 0.8.11",
     "allocator-api2",
    ]

    [[package]]
    name = "hashlink"
    version = "0.8.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e8094feaf31ff591f651a2664fb9cfd92bba7a60ce3197265e9482ebe753c8f7"
    dependencies = [
     "hashbrown 0.14.3",
    ]

    [[package]]
    name = "headers"
    version = "0.3.9"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "06683b93020a07e3dbcf5f8c0f6d40080d725bea7936fc01ad345c01b97dc270"
    dependencies = [
     "base64 0.21.7",
     "bytes 1.6.0",
     "headers-core",
     "http 0.2.12",
     "httpdate",
     "mime",
     "sha1",
    ]

    [[package]]
    name = "headers-core"
    version = "0.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e7f66481bfee273957b1f20485a4ff3362987f85b2c236580d81b4eb7a326429"
    dependencies = [
     "http 0.2.12",
    ]

    [[package]]
    name = "heck"
    version = "0.4.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8"
    dependencies = [
     "unicode-segmentation",
    ]

    [[package]]
    name = "hermit-abi"
    version = "0.3.9"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024"

    [[package]]
    name = "hex"
    version = "0.4.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70"

    [[package]]
    name = "hkdf"
    version = "0.12.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7b5f8eb2ad728638ea2c7d47a21db23b7b58a72ed6a38256b8a1849f15fbbdf7"
    dependencies = [
     "hmac",
    ]

    [[package]]
    name = "hmac"
    version = "0.12.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6c49c37c09c17a53d937dfbb742eb3a961d65a994e6bcdcf37e7399d0cc8ab5e"
    dependencies = [
     "digest",
    ]

    [[package]]
    name = "home"
    version = "0.5.9"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5"
    dependencies = [
     "windows-sys 0.52.0",
    ]

    [[package]]
    name = "hsdev"
    version = "0.1.0"
    dependencies = [
     "clap",
     "diesel",
     "diesel_migrations",
     "serde",
     "toml 0.5.11",
    ]

    [[package]]
    name = "http"
    version = "0.2.12"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "601cbb57e577e2f5ef5be8e7b83f0f63994f25aa94d673e54a92d5c516d101f1"
    dependencies = [
     "bytes 1.6.0",
     "fnv",
     "itoa",
    ]

    [[package]]
    name = "http"
    version = "1.1.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "21b9ddb458710bc376481b842f5da65cdf31522de232c1ca8146abce2a358258"
    dependencies = [
     "bytes 1.6.0",
     "fnv",
     "itoa",
    ]

    [[package]]
    name = "http-body"
    version = "0.4.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7ceab25649e9960c0311ea418d17bee82c0dcec1bd053b5f9a66e265a693bed2"
    dependencies = [
     "bytes 1.6.0",
     "http 0.2.12",
     "pin-project-lite",
    ]

    [[package]]
    name = "http-body"
    version = "1.0.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1cac85db508abc24a2e48553ba12a996e87244a0395ce011e62b37158745d643"
    dependencies = [
     "bytes 1.6.0",
     "http 1.1.0",
    ]

    [[package]]
    name = "http-body-util"
    version = "0.1.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0475f8b2ac86659c21b64320d5d653f9efe42acd2a4e560073ec61a155a34f1d"
    dependencies = [
     "bytes 1.6.0",
     "futures-core",
     "http 1.1.0",
     "http-body 1.0.0",
     "pin-project-lite",
    ]

    [[package]]
    name = "httparse"
    version = "1.8.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d897f394bad6a705d5f4104762e116a75639e470d80901eed05a860a95cb1904"

    [[package]]
    name = "httpdate"
    version = "1.0.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "df3b46402a9d5adb4c86a0cf463f42e19994e3ee891101b1841f30a545cb49a9"

    [[package]]
    name = "humansize"
    version = "2.1.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6cb51c9a029ddc91b07a787f1d86b53ccfa49b0e86688c946ebe8d3555685dd7"
    dependencies = [
     "libm",
    ]

    [[package]]
    name = "hyper"
    version = "0.14.28"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "bf96e135eb83a2a8ddf766e426a841d8ddd7449d5f00d34ea02b41d2f19eef80"
    dependencies = [
     "bytes 1.6.0",
     "futures-channel",
     "futures-core",
     "futures-util",
     "h2 0.3.25",
     "http 0.2.12",
     "http-body 0.4.6",
     "httparse",
     "httpdate",
     "itoa",
     "pin-project-lite",
     "socket2",
     "tokio 1.37.0",
     "tower-service",
     "tracing",
     "want",
    ]

    [[package]]
    name = "hyper"
    version = "1.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "186548d73ac615b32a73aafe38fb4f56c0d340e110e5a200bcadbaf2e199263a"
    dependencies = [
     "bytes 1.6.0",
     "futures-channel",
     "futures-util",
     "h2 0.4.3",
     "http 1.1.0",
     "http-body 1.0.0",
     "httparse",
     "httpdate",
     "itoa",
     "pin-project-lite",
     "smallvec 1.13.2",
     "tokio 1.37.0",
     "want",
    ]

    [[package]]
    name = "hyper-proxy"
    version = "0.9.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ca815a891b24fdfb243fa3239c86154392b0953ee584aa1a2a1f66d20cbe75cc"
    dependencies = [
     "bytes 1.6.0",
     "futures 0.3.30",
     "headers",
     "http 0.2.12",
     "hyper 0.14.28",
     "hyper-tls",
     "native-tls",
     "tokio 1.37.0",
     "tokio-native-tls",
     "tower-service",
    ]

    [[package]]
    name = "hyper-rustls"
    version = "0.23.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1788965e61b367cd03a62950836d5cd41560c3577d90e40e0819373194d1661c"
    dependencies = [
     "http 0.2.12",
     "hyper 0.14.28",
     "log",
     "rustls 0.20.9",
     "rustls-native-certs",
     "tokio 1.37.0",
     "tokio-rustls 0.23.4",
    ]

    [[package]]
    name = "hyper-rustls"
    version = "0.24.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ec3efd23720e2049821a693cbc7e65ea87c72f1c58ff2f9522ff332b1491e590"
    dependencies = [
     "futures-util",
     "http 0.2.12",
     "hyper 0.14.28",
     "log",
     "rustls 0.21.10",
     "rustls-native-certs",
     "tokio 1.37.0",
     "tokio-rustls 0.24.1",
    ]

    [[package]]
    name = "hyper-timeout"
    version = "0.4.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "bbb958482e8c7be4bc3cf272a766a2b0bf1a6755e7a6ae777f017a31d11b13b1"
    dependencies = [
     "hyper 0.14.28",
     "pin-project-lite",
     "tokio 1.37.0",
     "tokio-io-timeout",
    ]

    [[package]]
    name = "hyper-tls"
    version = "0.5.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d6183ddfa99b85da61a140bea0efc93fdf56ceaa041b37d553518030827f9905"
    dependencies = [
     "bytes 1.6.0",
     "hyper 0.14.28",
     "native-tls",
     "tokio 1.37.0",
     "tokio-native-tls",
    ]

    [[package]]
    name = "hyper-util"
    version = "0.1.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ca38ef113da30126bbff9cd1705f9273e15d45498615d138b0c20279ac7a76aa"
    dependencies = [
     "bytes 1.6.0",
     "futures-util",
     "http 1.1.0",
     "http-body 1.0.0",
     "hyper 1.2.0",
     "pin-project-lite",
     "socket2",
     "tokio 1.37.0",
    ]

    [[package]]
    name = "hyperswitch_connectors"
    version = "0.1.0"
    dependencies = [
     "api_models",
     "async-trait",
     "base64 0.22.0",
     "cards",
     "common_enums",
     "common_utils",
     "error-stack",
     "hyperswitch_domain_models",
     "hyperswitch_interfaces",
     "masking",
     "ring 0.17.8",
     "router_env",
     "serde",
     "serde_json",
     "strum 0.26.2",
     "time",
     "url",
     "uuid",
    ]

    [[package]]
    name = "hyperswitch_constraint_graph"
    version = "0.1.0"
    dependencies = [
     "erased-serde 0.3.31",
     "graphviz-rust",
     "rustc-hash",
     "serde",
     "strum 0.25.0",
     "thiserror",
    ]

    [[package]]
    name = "hyperswitch_domain_models"
    version = "0.1.0"
    dependencies = [
     "actix-web",
     "api_models",
     "async-trait",
     "cards",
     "common_enums",
     "common_utils",
     "diesel_models",
     "error-stack",
     "futures 0.3.30",
     "http 0.2.12",
     "masking",
     "mime",
     "router_derive",
     "router_env",
     "rustc-hash",
     "serde",
     "serde_json",
     "serde_with",
     "thiserror",
     "time",
     "url",
     "utoipa",
    ]

    [[package]]
    name = "hyperswitch_interfaces"
    version = "0.1.0"
    dependencies = [
     "actix-web",
     "api_models",
     "async-trait",
     "bytes 1.6.0",
     "common_enums",
     "common_utils",
     "dyn-clone",
     "error-stack",
     "http 0.2.12",
     "hyperswitch_domain_models",
     "masking",
     "mime",
     "once_cell",
     "reqwest",
     "router_derive",
     "router_env",
     "serde",
     "serde_json",
     "strum 0.26.2",
     "thiserror",
     "time",
    ]

    [[package]]
    name = "iana-time-zone"
    version = "0.1.60"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e7ffbb5a1b541ea2561f8c41c087286cc091e21e556a4f09a8f6cbf17b69b141"
    dependencies = [
     "android_system_properties",
     "core-foundation-sys",
     "iana-time-zone-haiku",
     "js-sys",
     "wasm-bindgen",
     "windows-core",
    ]

    [[package]]
    name = "iana-time-zone-haiku"
    version = "0.1.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f"
    dependencies = [
     "cc",
    ]

    [[package]]
    name = "ident_case"
    version = "1.0.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39"

    [[package]]
    name = "idna"
    version = "0.5.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "634d9b1461af396cad843f47fdba5597a4f9e6ddd4bfb6ff5d85028c25cb12f6"
    dependencies = [
     "unicode-bidi",
     "unicode-normalization",
    ]

    [[package]]
    name = "ignore"
    version = "0.4.22"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b46810df39e66e925525d6e38ce1e7f6e1d208f72dc39757880fcb66e2c58af1"
    dependencies = [
     "crossbeam-deque 0.8.5",
     "globset",
     "log",
     "memchr",
     "regex-automata 0.4.6",
     "same-file",
     "walkdir",
     "winapi-util",
    ]

    [[package]]
    name = "image"
    version = "0.25.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "fd54d660e773627692c524beaad361aca785a4f9f5730ce91f42aabe5bce3d11"
    dependencies = [
     "bytemuck",
     "byteorder",
     "num-traits",
     "png",
    ]

    [[package]]
    name = "impl-more"
    version = "0.1.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "206ca75c9c03ba3d4ace2460e57b189f39f43de612c2f85836e65c929701bb2d"

    [[package]]
    name = "indexmap"
    version = "1.9.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99"
    dependencies = [
     "autocfg",
     "hashbrown 0.12.3",
     "serde",
    ]

    [[package]]
    name = "indexmap"
    version = "2.3.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "de3fc2e30ba82dd1b3911c8de1ffc143c74a914a14e99514d7637e3099df5ea0"
    dependencies = [
     "equivalent",
     "hashbrown 0.14.3",
     "serde",
    ]

    [[package]]
    name = "infer"
    version = "0.15.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "cb33622da908807a06f9513c19b3c1ad50fab3e4137d82a78107d502075aa199"
    dependencies = [
     "cfb",
    ]

    [[package]]
    name = "instant"
    version = "0.1.12"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7a5bbe824c507c5da5956355e86a746d82e0e1464f65d862cc5e71da70e94b2c"
    dependencies = [
     "cfg-if 1.0.0",
    ]

    [[package]]
    name = "into-attr"
    version = "0.1.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "18b48c537e49a709e678caec3753a7dba6854661a1eaa27675024283b3f8b376"
    dependencies = [
     "dot-structures",
    ]

    [[package]]
    name = "into-attr-derive"
    version = "0.2.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ecac7c1ae6cd2c6a3a64d1061a8bdc7f52ff62c26a831a2301e54c1b5d70d5b1"
    dependencies = [
     "dot-generator",
     "dot-structures",
     "into-attr",
     "quote",
     "syn 1.0.109",
    ]

    [[package]]
    name = "iovec"
    version = "0.1.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b2b3ea6ff95e175473f8ffe6a7eb7c00d054240321b84c57051175fe3c1e075e"
    dependencies = [
     "libc",
    ]

    [[package]]
    name = "ipnet"
    version = "2.9.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8f518f335dce6725a761382244631d86cf0ccb2863413590b31338feb467f9c3"

    [[package]]
    name = "is-terminal"
    version = "0.4.12"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f23ff5ef2b80d608d61efee834934d862cd92461afc0560dedf493e4c033738b"
    dependencies = [
     "hermit-abi",
     "libc",
     "windows-sys 0.52.0",
    ]

    [[package]]
    name = "is_terminal_polyfill"
    version = "1.70.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f8478577c03552c21db0e2724ffb8986a5ce7af88107e6be5d2ee6e158c12800"

    [[package]]
    name = "iso_country"
    version = "0.1.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "20633e788d3948ea7336861fdb09ec247f5dae4267e8f0743fa97de26c28624d"
    dependencies = [
     "lazy_static",
    ]

    [[package]]
    name = "iso_currency"
    version = "0.4.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "33f07181be95c82347a07cf4caf43d2acd8a7e8d08ef1db75e10ed5a9aec3c1b"
    dependencies = [
     "iso_country",
    ]

    [[package]]
    name = "isocountry"
    version = "0.3.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1ea1dc4bf0fb4904ba83ffdb98af3d9c325274e92e6e295e4151e86c96363e04"
    dependencies = [
     "serde",
     "thiserror",
    ]

    [[package]]
    name = "itertools"
    version = "0.10.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473"
    dependencies = [
     "either",
    ]

    [[package]]
    name = "itertools"
    version = "0.11.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b1c173a5686ce8bfa551b3563d0c2170bf24ca44da99c7ca4bfdab5418c3fe57"
    dependencies = [
     "either",
    ]

    [[package]]
    name = "itertools"
    version = "0.12.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ba291022dbbd398a455acf126c1e341954079855bc60dfdda641363bd6922569"
    dependencies = [
     "either",
    ]

    [[package]]
    name = "itoa"
    version = "1.0.11"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b"

    [[package]]
    name = "jobserver"
    version = "0.1.28"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ab46a6e9526ddef3ae7f787c06f0f2600639ba80ea3eade3d8e670a2230f51d6"
    dependencies = [
     "libc",
    ]

    [[package]]
    name = "josekit"
    version = "0.8.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0953340cf63354cec4a385f1fbcb3f409a5823778cae236078892f6030ed4565"
    dependencies = [
     "anyhow",
     "base64 0.21.7",
     "flate2",
     "once_cell",
     "openssl",
     "regex",
     "serde",
     "serde_json",
     "thiserror",
     "time",
    ]

    [[package]]
    name = "js-sys"
    version = "0.3.69"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "29c15563dc2726973df627357ce0c9ddddbea194836909d655df6a75d2cf296d"
    dependencies = [
     "wasm-bindgen",
    ]

    [[package]]
    name = "json5"
    version = "0.4.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "96b0db21af676c1ce64250b5f40f3ce2cf27e4e47cb91ed91eb6fe9350b430c1"
    dependencies = [
     "pest",
     "pest_derive",
     "serde",
    ]

    [[package]]
    name = "jsonwebtoken"
    version = "9.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5c7ea04a7c5c055c175f189b6dc6ba036fd62306b58c66c9f6389036c503a3f4"
    dependencies = [
     "base64 0.21.7",
     "js-sys",
     "pem",
     "ring 0.17.8",
     "serde",
     "serde_json",
     "simple_asn1",
    ]

    [[package]]
    name = "kernel32-sys"
    version = "0.2.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d"
    dependencies = [
     "winapi 0.2.8",
     "winapi-build",
    ]

    [[package]]
    name = "kgraph_utils"
    version = "0.1.0"
    dependencies = [
     "api_models",
     "common_enums",
     "common_utils",
     "criterion",
     "euclid",
     "hyperswitch_constraint_graph",
     "masking",
     "serde",
     "serde_json",
     "strum 0.26.2",
     "thiserror",
    ]

    [[package]]
    name = "kinded"
    version = "0.3.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ce4bdbb2f423660b19f0e9f7115182214732d8dd5f840cd0a3aee3e22562f34c"
    dependencies = [
     "kinded_macros",
    ]

    [[package]]
    name = "kinded_macros"
    version = "0.3.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a13b4ddc5dcb32f45dac3d6f606da2a52fdb9964a18427e63cd5ef6c0d13288d"
    dependencies = [
     "convert_case 0.6.0",
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "language-tags"
    version = "0.3.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d4345964bb142484797b161f473a503a434de77149dd8c7427788c6e13379388"

    [[package]]
    name = "lazy_static"
    version = "1.4.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646"
    dependencies = [
     "spin 0.5.2",
    ]

    [[package]]
    name = "libc"
    version = "0.2.153"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9c198f91728a82281a64e1f4f9eeb25d82cb32a5de251c6bd1b5154d63a8e7bd"

    [[package]]
    name = "libgit2-sys"
    version = "0.16.2+1.7.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ee4126d8b4ee5c9d9ea891dd875cfdc1e9d0950437179104b183d7d8a74d24e8"
    dependencies = [
     "cc",
     "libc",
     "libz-sys",
     "pkg-config",
    ]

    [[package]]
    name = "libm"
    version = "0.2.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4ec2a862134d2a7d32d7983ddcdd1c4923530833c9f2ea1a44fc5fa473989058"

    [[package]]
    name = "libmimalloc-sys"
    version = "0.1.35"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3979b5c37ece694f1f5e51e7ecc871fdb0f517ed04ee45f88d15d6d553cb9664"
    dependencies = [
     "cc",
     "libc",
    ]

    [[package]]
    name = "libsqlite3-sys"
    version = "0.27.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "cf4e226dcd58b4be396f7bd3c20da8fdee2911400705297ba7d2d7cc2c30f716"
    dependencies = [
     "cc",
     "pkg-config",
     "vcpkg",
    ]

    [[package]]
    name = "libyml"
    version = "0.0.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "64804cc6a5042d4f05379909ba25b503ec04e2c082151d62122d5dcaa274b961"

    [[package]]
    name = "libz-sys"
    version = "1.1.16"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5e143b5e666b2695d28f6bca6497720813f699c9602dd7f5cac91008b8ada7f9"
    dependencies = [
     "cc",
     "libc",
     "pkg-config",
     "vcpkg",
    ]

    [[package]]
    name = "linked-hash-map"
    version = "0.5.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0717cef1bc8b636c6e1c1bbdefc09e6322da8a9321966e8928ef80d20f7f770f"

    [[package]]
    name = "linux-raw-sys"
    version = "0.4.13"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "01cda141df6706de531b6c46c3a33ecca755538219bd484262fa09410c13539c"

    [[package]]
    name = "local-channel"
    version = "0.1.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b6cbc85e69b8df4b8bb8b89ec634e7189099cea8927a276b7384ce5488e53ec8"
    dependencies = [
     "futures-core",
     "futures-sink",
     "local-waker",
    ]

    [[package]]
    name = "local-waker"
    version = "0.1.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4d873d7c67ce09b42110d801813efbc9364414e356be9935700d368351657487"

    [[package]]
    name = "lock_api"
    version = "0.3.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c4da24a77a3d8a6d4862d95f72e6fdb9c09a643ecdb402d754004a557f2bec75"
    dependencies = [
     "scopeguard",
    ]

    [[package]]
    name = "lock_api"
    version = "0.4.11"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3c168f8615b12bc01f9c17e2eb0cc07dcae1940121185446edc3744920e8ef45"
    dependencies = [
     "autocfg",
     "scopeguard",
    ]

    [[package]]
    name = "log"
    version = "0.4.22"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24"

    [[package]]
    name = "lru-cache"
    version = "0.1.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "31e24f1ad8321ca0e8a1e0ac13f23cb668e6f5466c2c57319f6a5cf1cc8e3b1c"
    dependencies = [
     "linked-hash-map",
    ]

    [[package]]
    name = "masking"
    version = "0.1.0"
    dependencies = [
     "bytes 1.6.0",
     "diesel",
     "erased-serde 0.4.4",
     "serde",
     "serde_json",
     "subtle",
     "time",
     "url",
     "zeroize",
    ]

    [[package]]
    name = "matchers"
    version = "0.1.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558"
    dependencies = [
     "regex-automata 0.1.10",
    ]

    [[package]]
    name = "matchit"
    version = "0.7.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0e7465ac9959cc2b1404e8e2367b43684a6d13790fe23056cc8c6c5a6b7bcb94"

    [[package]]
    name = "maud"
    version = "0.26.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "df518b75016b4289cdddffa1b01f2122f4a49802c93191f3133f6dc2472ebcaa"
    dependencies = [
     "actix-web",
     "futures-util",
     "itoa",
     "maud_macros",
    ]

    [[package]]
    name = "maud_macros"
    version = "0.26.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "fa453238ec218da0af6b11fc5978d3b5c3a45ed97b722391a2a11f3306274e18"
    dependencies = [
     "proc-macro-error",
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "maybe-uninit"
    version = "2.0.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "60302e4db3a61da70c0cb7991976248362f30319e88850c487b9b95bbf059e00"

    [[package]]
    name = "md-5"
    version = "0.10.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d89e7ee0cfbedfc4da3340218492196241d89eefb6dab27de5df917a6d2e78cf"
    dependencies = [
     "cfg-if 1.0.0",
     "digest",
    ]

    [[package]]
    name = "md5"
    version = "0.7.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "490cc448043f947bae3cbee9c203358d62dbee0db12107a74be5c30ccfd09771"

    [[package]]
    name = "memchr"
    version = "2.7.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3"

    [[package]]
    name = "memoffset"
    version = "0.5.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "043175f069eda7b85febe4a74abbaeff828d9f8b448515d3151a14a3542811aa"
    dependencies = [
     "autocfg",
    ]

    [[package]]
    name = "migrations_internals"
    version = "2.1.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0f23f71580015254b020e856feac3df5878c2c7a8812297edd6c0a485ac9dada"
    dependencies = [
     "serde",
     "toml 0.7.8",
    ]

    [[package]]
    name = "migrations_macros"
    version = "2.1.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "cce3325ac70e67bbab5bd837a31cae01f1a6db64e0e744a33cb03a543469ef08"
    dependencies = [
     "migrations_internals",
     "proc-macro2",
     "quote",
    ]

    [[package]]
    name = "mimalloc"
    version = "0.1.39"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "fa01922b5ea280a911e323e4d2fd24b7fe5cc4042e0d2cda3c40775cdc4bdc9c"
    dependencies = [
     "libmimalloc-sys",
    ]

    [[package]]
    name = "mime"
    version = "0.3.17"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a"

    [[package]]
    name = "mime_guess"
    version = "2.0.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4192263c238a5f0d0c6bfd21f336a313a4ce1c450542449ca191bb657b4642ef"
    dependencies = [
     "mime",
     "unicase",
    ]

    [[package]]
    name = "minimal-lexical"
    version = "0.2.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a"

    [[package]]
    name = "miniz_oxide"
    version = "0.7.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9d811f3e15f28568be3407c8e7fdb6514c1cda3cb30683f15b6a1a1dc4ea14a7"
    dependencies = [
     "adler",
     "simd-adler32",
    ]

    [[package]]
    name = "mio"
    version = "0.6.23"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4afd66f5b91bf2a3bc13fad0e21caedac168ca4c707504e75585648ae80e4cc4"
    dependencies = [
     "cfg-if 0.1.10",
     "fuchsia-zircon",
     "fuchsia-zircon-sys",
     "iovec",
     "kernel32-sys",
     "libc",
     "log",
     "miow",
     "net2",
     "slab",
     "winapi 0.2.8",
    ]

    [[package]]
    name = "mio"
    version = "0.8.11"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a4a650543ca06a924e8b371db273b2756685faae30f8487da1b56505a8f78b0c"
    dependencies = [
     "libc",
     "log",
     "wasi",
     "windows-sys 0.48.0",
    ]

    [[package]]
    name = "mio-uds"
    version = "0.6.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "afcb699eb26d4332647cc848492bbc15eafb26f08d0304550d5aa1f612e066f0"
    dependencies = [
     "iovec",
     "libc",
     "mio 0.6.23",
    ]

    [[package]]
    name = "miow"
    version = "0.2.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ebd808424166322d4a38da87083bfddd3ac4c131334ed55856112eb06d46944d"
    dependencies = [
     "kernel32-sys",
     "net2",
     "winapi 0.2.8",
     "ws2_32-sys",
    ]

    [[package]]
    name = "moka"
    version = "0.12.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b1911e88d5831f748a4097a43862d129e3c6fca831eecac9b8db6d01d93c9de2"
    dependencies = [
     "async-lock",
     "async-trait",
     "crossbeam-channel",
     "crossbeam-epoch 0.9.18",
     "crossbeam-utils 0.8.19",
     "futures-util",
     "once_cell",
     "parking_lot 0.12.1",
     "quanta",
     "rustc_version 0.4.0",
     "skeptic",
     "smallvec 1.13.2",
     "tagptr",
     "thiserror",
     "triomphe",
     "uuid",
    ]

    [[package]]
    name = "mutually_exclusive_features"
    version = "0.0.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6d02c0b00610773bb7fc61d85e13d86c7858cbdf00e1a120bfc41bc055dbaa0e"

    [[package]]
    name = "nanoid"
    version = "0.4.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3ffa00dec017b5b1a8b7cf5e2c008bfda1aa7e0697ac1508b491fdf2622fb4d8"
    dependencies = [
     "rand",
    ]

    [[package]]
    name = "native-tls"
    version = "0.2.11"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "07226173c32f2926027b63cce4bcd8076c3552846cbe7925f3aaffeac0a3b92e"
    dependencies = [
     "lazy_static",
     "libc",
     "log",
     "openssl",
     "openssl-probe",
     "openssl-sys",
     "schannel",
     "security-framework",
     "security-framework-sys",
     "tempfile",
    ]

    [[package]]
    name = "net2"
    version = "0.2.39"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b13b648036a2339d06de780866fbdfda0dde886de7b3af2ddeba8b14f4ee34ac"
    dependencies = [
     "cfg-if 0.1.10",
     "libc",
     "winapi 0.3.9",
    ]

    [[package]]
    name = "nix"
    version = "0.28.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ab2156c4fce2f8df6c499cc1c763e4394b7482525bf2a9701c9d79d215f519e4"
    dependencies = [
     "bitflags 2.5.0",
     "cfg-if 1.0.0",
     "cfg_aliases",
     "libc",
    ]

    [[package]]
    name = "nom"
    version = "7.1.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a"
    dependencies = [
     "memchr",
     "minimal-lexical",
    ]

    [[package]]
    name = "normpath"
    version = "1.1.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ec60c60a693226186f5d6edf073232bfb6464ed97eb22cf3b01c1e8198fd97f5"
    dependencies = [
     "windows-sys 0.48.0",
    ]

    [[package]]
    name = "nu-ansi-term"
    version = "0.46.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84"
    dependencies = [
     "overload",
     "winapi 0.3.9",
    ]

    [[package]]
    name = "num-bigint"
    version = "0.4.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "608e7659b5c3d7cba262d894801b9ec9d00de989e8a82bd4bef91d08da45cdc0"
    dependencies = [
     "autocfg",
     "num-integer",
     "num-traits",
    ]

    [[package]]
    name = "num-bigint-dig"
    version = "0.8.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "dc84195820f291c7697304f3cbdadd1cb7199c0efc917ff5eafd71225c136151"
    dependencies = [
     "byteorder",
     "lazy_static",
     "libm",
     "num-integer",
     "num-iter",
     "num-traits",
     "rand",
     "smallvec 1.13.2",
     "zeroize",
    ]

    [[package]]
    name = "num-conv"
    version = "0.1.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9"

    [[package]]
    name = "num-integer"
    version = "0.1.46"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f"
    dependencies = [
     "num-traits",
    ]

    [[package]]
    name = "num-iter"
    version = "0.1.44"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d869c01cc0c455284163fd0092f1f93835385ccab5a98a0dcc497b2f8bf055a9"
    dependencies = [
     "autocfg",
     "num-integer",
     "num-traits",
    ]

    [[package]]
    name = "num-traits"
    version = "0.2.18"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "da0df0e5185db44f69b44f26786fe401b6c293d1907744beaa7fa62b2e5a517a"
    dependencies = [
     "autocfg",
     "libm",
    ]

    [[package]]
    name = "num_cpus"
    version = "1.16.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43"
    dependencies = [
     "hermit-abi",
     "libc",
    ]

    [[package]]
    name = "num_enum"
    version = "0.5.11"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1f646caf906c20226733ed5b1374287eb97e3c2a5c227ce668c1f2ce20ae57c9"
    dependencies = [
     "num_enum_derive",
    ]

    [[package]]
    name = "num_enum_derive"
    version = "0.5.11"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "dcbff9bc912032c62bf65ef1d5aea88983b420f4f839db1e9b0c281a25c9c799"
    dependencies = [
     "proc-macro-crate 1.3.1",
     "proc-macro2",
     "quote",
     "syn 1.0.109",
    ]

    [[package]]
    name = "num_threads"
    version = "0.1.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5c7398b9c8b70908f6371f47ed36737907c87c52af34c268fed0bf0ceb92ead9"
    dependencies = [
     "libc",
    ]

    [[package]]
    name = "nutype"
    version = "0.4.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "801187d4ee2f03db47daf0f5fc335a7b1b94f60f47942293060b762641b83f2e"
    dependencies = [
     "nutype_macros",
    ]

    [[package]]
    name = "nutype_macros"
    version = "0.4.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e96467936d36285839340d692fcd974106d9bc203e36f55a477e0243737a8af7"
    dependencies = [
     "cfg-if 1.0.0",
     "kinded",
     "proc-macro2",
     "quote",
     "syn 2.0.57",
     "urlencoding",
    ]

    [[package]]
    name = "oauth2"
    version = "4.4.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c38841cdd844847e3e7c8d29cef9dcfed8877f8f56f9071f77843ecf3baf937f"
    dependencies = [
     "base64 0.13.1",
     "chrono",
     "getrandom",
     "http 0.2.12",
     "rand",
     "reqwest",
     "serde",
     "serde_json",
     "serde_path_to_error",
     "sha2",
     "thiserror",
     "url",
    ]

    [[package]]
    name = "object"
    version = "0.32.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a6a622008b6e321afc04970976f62ee297fdbaa6f95318ca343e3eebb9648441"
    dependencies = [
     "memchr",
    ]

    [[package]]
    name = "oid-registry"
    version = "0.7.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1c958dd45046245b9c3c2547369bb634eb461670b2e7e0de552905801a648d1d"
    dependencies = [
     "asn1-rs",
    ]

    [[package]]
    name = "once_cell"
    version = "1.19.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92"

    [[package]]
    name = "oncemutex"
    version = "0.1.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "44d11de466f4a3006fe8a5e7ec84e93b79c70cb992ae0aa0eb631ad2df8abfe2"

    [[package]]
    name = "oorandom"
    version = "11.1.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0ab1bc2a289d34bd04a330323ac98a1b4bc82c9d9fcb1e66b63caa84da26b575"

    [[package]]
    name = "openapi"
    version = "0.1.0"
    dependencies = [
     "api_models",
     "common_utils",
     "router_env",
     "serde_json",
     "utoipa",
    ]

    [[package]]
    name = "openidconnect"
    version = "3.5.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f47e80a9cfae4462dd29c41e987edd228971d6565553fbc14b8a11e666d91590"
    dependencies = [
     "base64 0.13.1",
     "chrono",
     "dyn-clone",
     "ed25519-dalek",
     "hmac",
     "http 0.2.12",
     "itertools 0.10.5",
     "log",
     "oauth2",
     "p256",
     "p384",
     "rand",
     "rsa",
     "serde",
     "serde-value",
     "serde_derive",
     "serde_json",
     "serde_path_to_error",
     "serde_plain",
     "serde_with",
     "sha2",
     "subtle",
     "thiserror",
     "url",
    ]

    [[package]]
    name = "opensearch"
    version = "2.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "fd2846759315751e04d8b45a0bdbd89ce442282ffb916cf54f6b0adf8df4b44c"
    dependencies = [
     "aws-credential-types 1.1.8",
     "aws-sigv4 1.2.0",
     "aws-smithy-runtime-api",
     "aws-types 1.1.8",
     "base64 0.21.7",
     "bytes 1.6.0",
     "dyn-clone",
     "lazy_static",
     "percent-encoding",
     "reqwest",
     "rustc_version 0.4.0",
     "serde",
     "serde_json",
     "serde_with",
     "url",
     "void",
    ]

    [[package]]
    name = "openssl"
    version = "0.10.64"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "95a0481286a310808298130d22dd1fef0fa571e05a8f44ec801801e84b216b1f"
    dependencies = [
     "bitflags 2.5.0",
     "cfg-if 1.0.0",
     "foreign-types",
     "libc",
     "once_cell",
     "openssl-macros",
     "openssl-sys",
    ]

    [[package]]
    name = "openssl-macros"
    version = "0.1.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "openssl-probe"
    version = "0.1.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf"

    [[package]]
    name = "openssl-sys"
    version = "0.9.102"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c597637d56fbc83893a35eb0dd04b2b8e7a50c91e64e9493e398b5df4fb45fa2"
    dependencies = [
     "cc",
     "libc",
     "pkg-config",
     "vcpkg",
    ]

    [[package]]
    name = "opentelemetry"
    version = "0.19.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5f4b8347cc26099d3aeee044065ecc3ae11469796b4d65d065a23a584ed92a6f"
    dependencies = [
     "opentelemetry_api",
     "opentelemetry_sdk",
    ]

    [[package]]
    name = "opentelemetry-otlp"
    version = "0.12.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8af72d59a4484654ea8eb183fea5ae4eb6a41d7ac3e3bae5f4d2a282a3a7d3ca"
    dependencies = [
     "async-trait",
     "futures 0.3.30",
     "futures-util",
     "http 0.2.12",
     "opentelemetry",
     "opentelemetry-proto",
     "prost",
     "thiserror",
     "tokio 1.37.0",
     "tonic",
    ]

    [[package]]
    name = "opentelemetry-proto"
    version = "0.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "045f8eea8c0fa19f7d48e7bc3128a39c2e5c533d5c61298c548dfefc1064474c"
    dependencies = [
     "futures 0.3.30",
     "futures-util",
     "opentelemetry",
     "prost",
     "tonic",
    ]

    [[package]]
    name = "opentelemetry_api"
    version = "0.19.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ed41783a5bf567688eb38372f2b7a8530f5a607a4b49d38dd7573236c23ca7e2"
    dependencies = [
     "fnv",
     "futures-channel",
     "futures-util",
     "indexmap 1.9.3",
     "once_cell",
     "pin-project-lite",
     "thiserror",
     "urlencoding",
    ]

    [[package]]
    name = "opentelemetry_sdk"
    version = "0.19.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8b3a2a91fdbfdd4d212c0dcc2ab540de2c2bcbbd90be17de7a7daf8822d010c1"
    dependencies = [
     "async-trait",
     "crossbeam-channel",
     "dashmap",
     "fnv",
     "futures-channel",
     "futures-executor",
     "futures-util",
     "once_cell",
     "opentelemetry_api",
     "percent-encoding",
     "rand",
     "thiserror",
     "tokio 1.37.0",
     "tokio-stream",
    ]

    [[package]]
    name = "ordered-float"
    version = "2.10.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "68f19d67e5a2795c94e73e0bb1cc1a7edeb2e28efd39e2e1c9b7a40c1108b11c"
    dependencies = [
     "num-traits",
    ]

    [[package]]
    name = "ordered-multimap"
    version = "0.6.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4ed8acf08e98e744e5384c8bc63ceb0364e68a6854187221c18df61c4797690e"
    dependencies = [
     "dlv-list",
     "hashbrown 0.13.2",
    ]

    [[package]]
    name = "outref"
    version = "0.5.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4030760ffd992bef45b0ae3f10ce1aba99e33464c90d14dd7c039884963ddc7a"

    [[package]]
    name = "overload"
    version = "0.1.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39"

    [[package]]
    name = "p256"
    version = "0.13.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c9863ad85fa8f4460f9c48cb909d38a0d689dba1f6f6988a5e3e0d31071bcd4b"
    dependencies = [
     "ecdsa",
     "elliptic-curve",
     "primeorder",
     "sha2",
    ]

    [[package]]
    name = "p384"
    version = "0.13.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "70786f51bcc69f6a4c0360e063a4cac5419ef7c5cd5b3c99ad70f3be5ba79209"
    dependencies = [
     "ecdsa",
     "elliptic-curve",
     "primeorder",
     "sha2",
    ]

    [[package]]
    name = "parking_lot"
    version = "0.9.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f842b1982eb6c2fe34036a4fbfb06dd185a3f5c8edfaacdf7d1ea10b07de6252"
    dependencies = [
     "lock_api 0.3.4",
     "parking_lot_core 0.6.3",
     "rustc_version 0.2.3",
    ]

    [[package]]
    name = "parking_lot"
    version = "0.12.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f"
    dependencies = [
     "lock_api 0.4.11",
     "parking_lot_core 0.9.9",
    ]

    [[package]]
    name = "parking_lot_core"
    version = "0.6.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "bda66b810a62be75176a80873726630147a5ca780cd33921e0b5709033e66b0a"
    dependencies = [
     "cfg-if 0.1.10",
     "cloudabi",
     "libc",
     "redox_syscall 0.1.57",
     "rustc_version 0.2.3",
     "smallvec 0.6.14",
     "winapi 0.3.9",
    ]

    [[package]]
    name = "parking_lot_core"
    version = "0.9.9"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4c42a9226546d68acdd9c0a280d17ce19bfe27a46bf68784e4066115788d008e"
    dependencies = [
     "cfg-if 1.0.0",
     "libc",
     "redox_syscall 0.4.1",
     "smallvec 1.13.2",
     "windows-targets 0.48.5",
    ]

    [[package]]
    name = "parse-size"
    version = "1.0.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "944553dd59c802559559161f9816429058b869003836120e262e8caec061b7ae"

    [[package]]
    name = "parse-zoneinfo"
    version = "0.3.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c705f256449c60da65e11ff6626e0c16a0a0b96aaa348de61376b249bc340f41"
    dependencies = [
     "regex",
    ]

    [[package]]
    name = "password-hash"
    version = "0.5.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "346f04948ba92c43e8469c1ee6736c7563d71012b17d40745260fe106aac2166"
    dependencies = [
     "base64ct",
     "rand_core",
     "subtle",
    ]

    [[package]]
    name = "paste"
    version = "1.0.14"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "de3145af08024dea9fa9914f381a17b8fc6034dfb00f3a84013f7ff43f29ed4c"

    [[package]]
    name = "pathdiff"
    version = "0.2.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8835116a5c179084a830efb3adc117ab007512b535bc1a21c991d3b32a6b44dd"

    [[package]]
    name = "pem"
    version = "3.0.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1b8fcc794035347fb64beda2d3b462595dd2753e3f268d89c5aae77e8cf2c310"
    dependencies = [
     "base64 0.21.7",
     "serde",
    ]

    [[package]]
    name = "pem-rfc7468"
    version = "0.7.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "88b39c9bfcfc231068454382784bb460aae594343fb030d46e9f50a645418412"
    dependencies = [
     "base64ct",
    ]

    [[package]]
    name = "percent-encoding"
    version = "2.3.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e"

    [[package]]
    name = "pest"
    version = "2.7.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "56f8023d0fb78c8e03784ea1c7f3fa36e68a723138990b8d5a47d916b651e7a8"
    dependencies = [
     "memchr",
     "thiserror",
     "ucd-trie",
    ]

    [[package]]
    name = "pest_derive"
    version = "2.7.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b0d24f72393fd16ab6ac5738bc33cdb6a9aa73f8b902e8fe29cf4e67d7dd1026"
    dependencies = [
     "pest",
     "pest_generator",
    ]

    [[package]]
    name = "pest_generator"
    version = "2.7.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "fdc17e2a6c7d0a492f0158d7a4bd66cc17280308bbaff78d5bef566dca35ab80"
    dependencies = [
     "pest",
     "pest_meta",
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "pest_meta"
    version = "2.7.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "934cd7631c050f4674352a6e835d5f6711ffbfb9345c2fc0107155ac495ae293"
    dependencies = [
     "once_cell",
     "pest",
     "sha2",
    ]

    [[package]]
    name = "phf"
    version = "0.11.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ade2d8b8f33c7333b51bcf0428d37e217e9f32192ae4772156f65063b8ce03dc"
    dependencies = [
     "phf_shared",
    ]

    [[package]]
    name = "phf_codegen"
    version = "0.11.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e8d39688d359e6b34654d328e262234662d16cc0f60ec8dcbe5e718709342a5a"
    dependencies = [
     "phf_generator",
     "phf_shared",
    ]

    [[package]]
    name = "phf_generator"
    version = "0.11.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "48e4cc64c2ad9ebe670cb8fd69dd50ae301650392e81c05f9bfcb2d5bdbc24b0"
    dependencies = [
     "phf_shared",
     "rand",
    ]

    [[package]]
    name = "phf_shared"
    version = "0.11.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "90fcb95eef784c2ac79119d1dd819e162b5da872ce6f3c3abe1e8ca1c082f72b"
    dependencies = [
     "siphasher 0.3.11",
    ]

    [[package]]
    name = "phonenumber"
    version = "0.3.3+8.13.9"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "635f3e6288e4f01c049d89332a031bd74f25d64b6fb94703ca966e819488cd06"
    dependencies = [
     "bincode",
     "either",
     "fnv",
     "itertools 0.11.0",
     "lazy_static",
     "nom",
     "quick-xml 0.28.2",
     "regex",
     "regex-cache",
     "serde",
     "serde_derive",
     "strum 0.24.1",
     "thiserror",
    ]

    [[package]]
    name = "pin-project"
    version = "1.1.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b6bf43b791c5b9e34c3d182969b4abb522f9343702850a2e57f460d00d09b4b3"
    dependencies = [
     "pin-project-internal",
    ]

    [[package]]
    name = "pin-project-internal"
    version = "1.1.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "2f38a4412a78282e09a2cf38d195ea5420d15ba0602cb375210efbc877243965"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "pin-project-lite"
    version = "0.2.14"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "bda66fc9667c18cb2758a2ac84d1167245054bcf85d5d1aaa6923f45801bdd02"

    [[package]]
    name = "pin-utils"
    version = "0.1.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184"

    [[package]]
    name = "pkcs1"
    version = "0.7.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c8ffb9f10fa047879315e6625af03c164b16962a5368d724ed16323b68ace47f"
    dependencies = [
     "der",
     "pkcs8",
     "spki",
    ]

    [[package]]
    name = "pkcs8"
    version = "0.10.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f950b2377845cebe5cf8b5165cb3cc1a5e0fa5cfa3e1f7f55707d8fd82e0a7b7"
    dependencies = [
     "der",
     "spki",
    ]

    [[package]]
    name = "pkg-config"
    version = "0.3.30"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d231b230927b5e4ad203db57bbcbee2802f6bce620b1e4a9024a07d94e2907ec"

    [[package]]
    name = "plotters"
    version = "0.3.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d2c224ba00d7cadd4d5c660deaf2098e5e80e07846537c51f9cfa4be50c1fd45"
    dependencies = [
     "num-traits",
     "plotters-backend",
     "plotters-svg",
     "wasm-bindgen",
     "web-sys",
    ]

    [[package]]
    name = "plotters-backend"
    version = "0.3.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9e76628b4d3a7581389a35d5b6e2139607ad7c75b17aed325f210aa91f4a9609"

    [[package]]
    name = "plotters-svg"
    version = "0.3.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "38f6d39893cca0701371e3c27294f09797214b86f1fb951b89ade8ec04e2abab"
    dependencies = [
     "plotters-backend",
    ]

    [[package]]
    name = "pm_auth"
    version = "0.1.0"
    dependencies = [
     "api_models",
     "async-trait",
     "bytes 1.6.0",
     "common_enums",
     "common_utils",
     "error-stack",
     "http 0.2.12",
     "masking",
     "mime",
     "serde",
     "serde_json",
     "strum 0.26.2",
     "thiserror",
    ]

    [[package]]
    name = "png"
    version = "0.17.13"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "06e4b0d3d1312775e782c86c91a111aa1f910cbb65e1337f9975b5f9a554b5e1"
    dependencies = [
     "bitflags 1.3.2",
     "crc32fast",
     "fdeflate",
     "flate2",
     "miniz_oxide",
    ]

    [[package]]
    name = "powerfmt"
    version = "0.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391"

    [[package]]
    name = "ppv-lite86"
    version = "0.2.17"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de"

    [[package]]
    name = "pq-sys"
    version = "0.4.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "31c0052426df997c0cbd30789eb44ca097e3541717a7b8fa36b1c464ee7edebd"
    dependencies = [
     "vcpkg",
    ]

    [[package]]
    name = "primeorder"
    version = "0.13.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "353e1ca18966c16d9deb1c69278edbc5f194139612772bd9537af60ac231e1e6"
    dependencies = [
     "elliptic-curve",
    ]

    [[package]]
    name = "proc-macro-crate"
    version = "1.3.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7f4c021e1093a56626774e81216a4ce732a735e5bad4868a03f3ed65ca0c3919"
    dependencies = [
     "once_cell",
     "toml_edit 0.19.15",
    ]

    [[package]]
    name = "proc-macro-crate"
    version = "3.1.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6d37c51ca738a55da99dc0c4a34860fd675453b8b36209178c2249bb13651284"
    dependencies = [
     "toml_edit 0.21.1",
    ]

    [[package]]
    name = "proc-macro-error"
    version = "1.0.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c"
    dependencies = [
     "proc-macro-error-attr",
     "proc-macro2",
     "quote",
     "syn 1.0.109",
     "version_check",
    ]

    [[package]]
    name = "proc-macro-error-attr"
    version = "1.0.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a1be40180e52ecc98ad80b184934baf3d0d29f979574e439af5a55274b35f869"
    dependencies = [
     "proc-macro2",
     "quote",
     "version_check",
    ]

    [[package]]
    name = "proc-macro2"
    version = "1.0.79"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e835ff2298f5721608eb1a980ecaee1aef2c132bf95ecc026a11b7bf3c01c02e"
    dependencies = [
     "unicode-ident",
    ]

    [[package]]
    name = "proptest"
    version = "1.4.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "31b476131c3c86cb68032fdc5cb6d5a1045e3e42d96b69fa599fd77701e1f5bf"
    dependencies = [
     "bit-set",
     "bit-vec",
     "bitflags 2.5.0",
     "lazy_static",
     "num-traits",
     "rand",
     "rand_chacha",
     "rand_xorshift",
     "regex-syntax 0.8.3",
     "rusty-fork",
     "tempfile",
     "unarray",
    ]

    [[package]]
    name = "prost"
    version = "0.11.9"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0b82eaa1d779e9a4bc1c3217db8ffbeabaae1dca241bf70183242128d48681cd"
    dependencies = [
     "bytes 1.6.0",
     "prost-derive",
    ]

    [[package]]
    name = "prost-derive"
    version = "0.11.9"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e5d2d8d10f3c6ded6da8b05b5fb3b8a5082514344d56c9f871412d29b4e075b4"
    dependencies = [
     "anyhow",
     "itertools 0.10.5",
     "proc-macro2",
     "quote",
     "syn 1.0.109",
    ]

    [[package]]
    name = "ptr_meta"
    version = "0.1.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0738ccf7ea06b608c10564b31debd4f5bc5e197fc8bfe088f68ae5ce81e7a4f1"
    dependencies = [
     "ptr_meta_derive",
    ]

    [[package]]
    name = "ptr_meta_derive"
    version = "0.1.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "16b845dbfca988fa33db069c0e230574d15a3088f147a87b64c7589eb662c9ac"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 1.0.109",
    ]

    [[package]]
    name = "pulldown-cmark"
    version = "0.9.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "57206b407293d2bcd3af849ce869d52068623f19e1b5ff8e8778e3309439682b"
    dependencies = [
     "bitflags 2.5.0",
     "memchr",
     "unicase",
    ]

    [[package]]
    name = "qrcode"
    version = "0.14.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "23e719ca51966ff9f5a8436edb00d6115b3c606a0bb27c8f8ca74a38ff2b036d"
    dependencies = [
     "image",
    ]

    [[package]]
    name = "quanta"
    version = "0.12.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9ca0b7bac0b97248c40bb77288fc52029cf1459c0461ea1b05ee32ccf011de2c"
    dependencies = [
     "crossbeam-utils 0.8.19",
     "libc",
     "once_cell",
     "raw-cpuid",
     "wasi",
     "web-sys",
     "winapi 0.3.9",
    ]

    [[package]]
    name = "quick-error"
    version = "1.2.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a1d01941d82fa2ab50be1e79e6714289dd7cde78eba4c074bc5a4374f650dfe0"

    [[package]]
    name = "quick-xml"
    version = "0.28.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0ce5e73202a820a31f8a0ee32ada5e21029c81fd9e3ebf668a40832e4219d9d1"
    dependencies = [
     "memchr",
    ]

    [[package]]
    name = "quick-xml"
    version = "0.31.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1004a344b30a54e2ee58d66a71b32d2db2feb0a31f9a2d302bf0536f15de2a33"
    dependencies = [
     "memchr",
     "serde",
    ]

    [[package]]
    name = "quote"
    version = "1.0.35"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "291ec9ab5efd934aaf503a6466c5d5251535d108ee747472c3977cc5acc868ef"
    dependencies = [
     "proc-macro2",
    ]

    [[package]]
    name = "r2d2"
    version = "0.8.10"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "51de85fb3fb6524929c8a2eb85e6b6d363de4e8c48f9e2c2eac4944abc181c93"
    dependencies = [
     "log",
     "parking_lot 0.12.1",
     "scheduled-thread-pool",
    ]

    [[package]]
    name = "radium"
    version = "0.7.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "dc33ff2d4973d518d823d61aa239014831e521c75da58e3df4840d3f47749d09"

    [[package]]
    name = "rand"
    version = "0.8.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404"
    dependencies = [
     "libc",
     "rand_chacha",
     "rand_core",
    ]

    [[package]]
    name = "rand_chacha"
    version = "0.3.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88"
    dependencies = [
     "ppv-lite86",
     "rand_core",
    ]

    [[package]]
    name = "rand_core"
    version = "0.6.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c"
    dependencies = [
     "getrandom",
    ]

    [[package]]
    name = "rand_xorshift"
    version = "0.3.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d25bf25ec5ae4a3f1b92f929810509a2f53d7dca2f50b794ff57e3face536c8f"
    dependencies = [
     "rand_core",
    ]

    [[package]]
    name = "raw-cpuid"
    version = "11.0.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9d86a7c4638d42c44551f4791a20e687dbb4c3de1f33c43dd71e355cd429def1"
    dependencies = [
     "bitflags 2.5.0",
    ]

    [[package]]
    name = "rayon"
    version = "1.10.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa"
    dependencies = [
     "either",
     "rayon-core",
    ]

    [[package]]
    name = "rayon-core"
    version = "1.12.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2"
    dependencies = [
     "crossbeam-deque 0.8.5",
     "crossbeam-utils 0.8.19",
    ]

    [[package]]
    name = "rdkafka"
    version = "0.36.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1beea247b9a7600a81d4cc33f659ce1a77e1988323d7d2809c7ed1c21f4c316d"
    dependencies = [
     "futures-channel",
     "futures-util",
     "libc",
     "log",
     "rdkafka-sys",
     "serde",
     "serde_derive",
     "serde_json",
     "slab",
     "tokio 1.37.0",
    ]

    [[package]]
    name = "rdkafka-sys"
    version = "4.7.0+2.3.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "55e0d2f9ba6253f6ec72385e453294f8618e9e15c2c6aba2a5c01ccf9622d615"
    dependencies = [
     "libc",
     "libz-sys",
     "num_enum",
     "pkg-config",
    ]

    [[package]]
    name = "redis-protocol"
    version = "4.1.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9c31deddf734dc0a39d3112e73490e88b61a05e83e074d211f348404cee4d2c6"
    dependencies = [
     "bytes 1.6.0",
     "bytes-utils",
     "cookie-factory",
     "crc16",
     "log",
     "nom",
    ]

    [[package]]
    name = "redis_interface"
    version = "0.1.0"
    dependencies = [
     "common_utils",
     "error-stack",
     "fred",
     "futures 0.3.30",
     "serde",
     "thiserror",
     "tokio 1.37.0",
     "tokio-stream",
     "tracing",
    ]

    [[package]]
    name = "redox_syscall"
    version = "0.1.57"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "41cc0f7e4d5d4544e8861606a285bb08d3e70712ccc7d2b84d7c0ccfaf4b05ce"

    [[package]]
    name = "redox_syscall"
    version = "0.4.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa"
    dependencies = [
     "bitflags 1.3.2",
    ]

    [[package]]
    name = "regex"
    version = "1.10.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c117dbdfde9c8308975b6a18d71f3f385c89461f7b3fb054288ecf2a2058ba4c"
    dependencies = [
     "aho-corasick",
     "memchr",
     "regex-automata 0.4.6",
     "regex-syntax 0.8.3",
    ]

    [[package]]
    name = "regex-automata"
    version = "0.1.10"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132"
    dependencies = [
     "regex-syntax 0.6.29",
    ]

    [[package]]
    name = "regex-automata"
    version = "0.4.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "86b83b8b9847f9bf95ef68afb0b8e6cdb80f498442f5179a29fad448fcc1eaea"
    dependencies = [
     "aho-corasick",
     "memchr",
     "regex-syntax 0.8.3",
    ]

    [[package]]
    name = "regex-cache"
    version = "0.2.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "2f7b62d69743b8b94f353b6b7c3deb4c5582828328bcb8d5fedf214373808793"
    dependencies = [
     "lru-cache",
     "oncemutex",
     "regex",
     "regex-syntax 0.6.29",
    ]

    [[package]]
    name = "regex-lite"
    version = "0.1.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "30b661b2f27137bdbc16f00eda72866a92bb28af1753ffbd56744fb6e2e9cd8e"

    [[package]]
    name = "regex-syntax"
    version = "0.6.29"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f162c6dd7b008981e4d40210aca20b4bd0f9b60ca9271061b07f78537722f2e1"

    [[package]]
    name = "regex-syntax"
    version = "0.8.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "adad44e29e4c806119491a7f06f03de4d1af22c3a680dd47f1e6e179439d1f56"

    [[package]]
    name = "rend"
    version = "0.4.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "71fe3824f5629716b1589be05dacd749f6aa084c87e00e016714a8cdfccc997c"
    dependencies = [
     "bytecheck",
    ]

    [[package]]
    name = "reqwest"
    version = "0.11.27"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "dd67538700a17451e7cba03ac727fb961abb7607553461627b97de0b89cf4a62"
    dependencies = [
     "async-compression",
     "base64 0.21.7",
     "bytes 1.6.0",
     "encoding_rs",
     "futures-core",
     "futures-util",
     "h2 0.3.25",
     "http 0.2.12",
     "http-body 0.4.6",
     "hyper 0.14.28",
     "hyper-rustls 0.24.2",
     "hyper-tls",
     "ipnet",
     "js-sys",
     "log",
     "mime",
     "mime_guess",
     "native-tls",
     "once_cell",
     "percent-encoding",
     "pin-project-lite",
     "rustls 0.21.10",
     "rustls-pemfile 1.0.4",
     "serde",
     "serde_json",
     "serde_urlencoded",
     "sync_wrapper",
     "system-configuration",
     "tokio 1.37.0",
     "tokio-native-tls",
     "tokio-rustls 0.24.1",
     "tokio-util",
     "tower-service",
     "url",
     "wasm-bindgen",
     "wasm-bindgen-futures",
     "web-sys",
     "webpki-roots 0.25.4",
     "winreg",
    ]

    [[package]]
    name = "rfc6979"
    version = "0.4.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f8dd2a808d456c4a54e300a23e9f5a67e122c3024119acbfd73e3bf664491cb2"
    dependencies = [
     "hmac",
     "subtle",
    ]

    [[package]]
    name = "ring"
    version = "0.16.20"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3053cf52e236a3ed746dfc745aa9cacf1b791d846bdaf412f60a8d7d6e17c8fc"
    dependencies = [
     "cc",
     "libc",
     "once_cell",
     "spin 0.5.2",
     "untrusted 0.7.1",
     "web-sys",
     "winapi 0.3.9",
    ]

    [[package]]
    name = "ring"
    version = "0.17.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d"
    dependencies = [
     "cc",
     "cfg-if 1.0.0",
     "getrandom",
     "libc",
     "spin 0.9.8",
     "untrusted 0.9.0",
     "windows-sys 0.52.0",
    ]

    [[package]]
    name = "rkyv"
    version = "0.7.44"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5cba464629b3394fc4dbc6f940ff8f5b4ff5c7aef40f29166fd4ad12acbc99c0"
    dependencies = [
     "bitvec",
     "bytecheck",
     "bytes 1.6.0",
     "hashbrown 0.12.3",
     "ptr_meta",
     "rend",
     "rkyv_derive",
     "seahash",
     "tinyvec",
     "uuid",
    ]

    [[package]]
    name = "rkyv_derive"
    version = "0.7.44"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a7dddfff8de25e6f62b9d64e6e432bf1c6736c57d20323e15ee10435fbda7c65"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 1.0.109",
    ]

    [[package]]
    name = "ron"
    version = "0.8.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b91f7eff05f748767f183df4320a63d6936e9c6107d97c9e6bdd9784f4289c94"
    dependencies = [
     "base64 0.21.7",
     "bitflags 2.5.0",
     "serde",
     "serde_derive",
    ]

    [[package]]
    name = "ron-parser"
    version = "0.1.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1c7280c46017fafbe4275179689e446a9b0db3bd91ea61aaee22841ef618405a"
    dependencies = [
     "nom",
     "serde",
     "serde-wasm-bindgen 0.5.0",
     "serde_json",
     "wasm-bindgen",
    ]

    [[package]]
    name = "router"
    version = "0.2.0"
    dependencies = [
     "actix-cors",
     "actix-http",
     "actix-multipart",
     "actix-rt",
     "actix-web",
     "analytics",
     "api_models",
     "argon2",
     "async-bb8-diesel",
     "async-trait",
     "awc",
     "base64 0.22.0",
     "bb8",
     "bigdecimal",
     "blake3",
     "bytes 1.6.0",
     "cards",
     "clap",
     "common_enums",
     "common_utils",
     "config",
     "cookie 0.18.1",
     "csv",
     "currency_conversion",
     "derive_deref",
     "diesel",
     "diesel_models",
     "digest",
     "dyn-clone",
     "encoding_rs",
     "error-stack",
     "euclid",
     "events",
     "external_services",
     "futures 0.3.30",
     "hex",
     "http 0.2.12",
     "hyper 0.14.28",
     "hyperswitch_connectors",
     "hyperswitch_constraint_graph",
     "hyperswitch_domain_models",
     "hyperswitch_interfaces",
     "image",
     "infer",
     "iso_currency",
     "isocountry",
     "josekit",
     "jsonwebtoken",
     "kgraph_utils",
     "masking",
     "maud",
     "mimalloc",
     "mime",
     "nanoid",
     "num_cpus",
     "once_cell",
     "openidconnect",
     "openssl",
     "pm_auth",
     "qrcode",
     "quick-xml 0.31.0",
     "rand",
     "rand_chacha",
     "rdkafka",
     "redis_interface",
     "regex",
     "reqwest",
     "ring 0.17.8",
     "router_derive",
     "router_env",
     "roxmltree",
     "rust-i18n",
     "rust_decimal",
     "rustc-hash",
     "rustls 0.22.4",
     "rustls-pemfile 2.1.2",
     "scheduler",
     "serde",
     "serde_json",
     "serde_path_to_error",
     "serde_qs",
     "serde_repr",
     "serde_urlencoded",
     "serde_with",
     "serial_test",
     "sha1",
     "storage_impl",
     "strum 0.26.2",
     "tera",
     "test_utils",
     "thiserror",
     "time",
     "tokio 1.37.0",
     "totp-rs",
     "tracing-futures",
     "unicode-segmentation",
     "unidecode",
     "url",
     "utoipa",
     "uuid",
     "validator",
     "wiremock",
     "x509-parser",
    ]

    [[package]]
    name = "router_derive"
    version = "0.1.0"
    dependencies = [
     "common_utils",
     "diesel",
     "error-stack",
     "indexmap 2.3.0",
     "proc-macro2",
     "quote",
     "serde",
     "serde_json",
     "strum 0.26.2",
     "syn 2.0.57",
     "utoipa",
    ]

    [[package]]
    name = "router_env"
    version = "0.1.0"
    dependencies = [
     "cargo_metadata 0.18.1",
     "config",
     "error-stack",
     "gethostname",
     "once_cell",
     "opentelemetry",
     "opentelemetry-otlp",
     "rustc-hash",
     "serde",
     "serde_json",
     "serde_path_to_error",
     "strum 0.26.2",
     "time",
     "tokio 1.37.0",
     "tracing",
     "tracing-actix-web",
     "tracing-appender",
     "tracing-attributes",
     "tracing-opentelemetry",
     "tracing-subscriber",
     "vergen",
    ]

    [[package]]
    name = "roxmltree"
    version = "0.19.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3cd14fd5e3b777a7422cca79358c57a8f6e3a703d9ac187448d0daf220c2407f"

    [[package]]
    name = "rsa"
    version = "0.9.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5d0e5124fcb30e76a7e79bfee683a2746db83784b86289f6251b54b7950a0dfc"
    dependencies = [
     "const-oid",
     "digest",
     "num-bigint-dig",
     "num-integer",
     "num-traits",
     "pkcs1",
     "pkcs8",
     "rand_core",
     "signature",
     "spki",
     "subtle",
     "zeroize",
    ]

    [[package]]
    name = "rust-i18n"
    version = "3.1.1"
    source = "git+https://github.com/kashif-m/rust-i18n?rev=f2d8096aaaff7a87a847c35a5394c269f75e077a#f2d8096aaaff7a87a847c35a5394c269f75e077a"
    dependencies = [
     "globwalk",
     "once_cell",
     "regex",
     "rust-i18n-macro",
     "rust-i18n-support",
     "smallvec 1.13.2",
    ]

    [[package]]
    name = "rust-i18n-macro"
    version = "3.1.1"
    source = "git+https://github.com/kashif-m/rust-i18n?rev=f2d8096aaaff7a87a847c35a5394c269f75e077a#f2d8096aaaff7a87a847c35a5394c269f75e077a"
    dependencies = [
     "glob",
     "once_cell",
     "proc-macro2",
     "quote",
     "rust-i18n-support",
     "serde",
     "serde_json",
     "serde_yml",
     "syn 2.0.57",
    ]

    [[package]]
    name = "rust-i18n-support"
    version = "3.1.1"
    source = "git+https://github.com/kashif-m/rust-i18n?rev=f2d8096aaaff7a87a847c35a5394c269f75e077a#f2d8096aaaff7a87a847c35a5394c269f75e077a"
    dependencies = [
     "arc-swap",
     "base62",
     "globwalk",
     "itertools 0.11.0",
     "lazy_static",
     "normpath",
     "once_cell",
     "proc-macro2",
     "regex",
     "serde",
     "serde_json",
     "serde_yml",
     "siphasher 1.0.1",
     "toml 0.7.8",
     "triomphe",
    ]

    [[package]]
    name = "rust-ini"
    version = "0.19.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7e2a3bcec1f113553ef1c88aae6c020a369d03d55b58de9869a0908930385091"
    dependencies = [
     "cfg-if 1.0.0",
     "ordered-multimap",
    ]

    [[package]]
    name = "rust_decimal"
    version = "1.35.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1790d1c4c0ca81211399e0e0af16333276f375209e71a37b67698a373db5b47a"
    dependencies = [
     "arrayvec",
     "borsh",
     "bytes 1.6.0",
     "num-traits",
     "rand",
     "rkyv",
     "serde",
     "serde_json",
    ]

    [[package]]
    name = "rustc-demangle"
    version = "0.1.23"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d626bb9dae77e28219937af045c257c28bfd3f69333c512553507f5f9798cb76"

    [[package]]
    name = "rustc-hash"
    version = "1.1.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2"

    [[package]]
    name = "rustc_version"
    version = "0.2.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "138e3e0acb6c9fb258b19b67cb8abd63c00679d2851805ea151465464fe9030a"
    dependencies = [
     "semver 0.9.0",
    ]

    [[package]]
    name = "rustc_version"
    version = "0.4.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "bfa0f585226d2e68097d4f95d113b15b83a82e819ab25717ec0590d9584ef366"
    dependencies = [
     "semver 1.0.22",
    ]

    [[package]]
    name = "rusticata-macros"
    version = "4.1.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "faf0c4a6ece9950b9abdb62b1cfcf2a68b3b67a10ba445b3bb85be2a293d0632"
    dependencies = [
     "nom",
    ]

    [[package]]
    name = "rustify"
    version = "0.5.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e9c02e25271068de581e03ac3bb44db60165ff1a10d92b9530192ccb898bc706"
    dependencies = [
     "anyhow",
     "async-trait",
     "bytes 1.6.0",
     "http 0.2.12",
     "reqwest",
     "rustify_derive",
     "serde",
     "serde_json",
     "serde_urlencoded",
     "thiserror",
     "tracing",
     "url",
    ]

    [[package]]
    name = "rustify_derive"
    version = "0.5.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "58135536c18c04f4634bedad182a3f41baf33ef811cc38a3ec7b7061c57134c8"
    dependencies = [
     "proc-macro2",
     "quote",
     "regex",
     "serde_urlencoded",
     "syn 1.0.109",
     "synstructure 0.12.6",
    ]

    [[package]]
    name = "rustix"
    version = "0.38.32"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "65e04861e65f21776e67888bfbea442b3642beaa0138fdb1dd7a84a52dffdb89"
    dependencies = [
     "bitflags 2.5.0",
     "errno",
     "libc",
     "linux-raw-sys",
     "windows-sys 0.52.0",
    ]

    [[package]]
    name = "rustls"
    version = "0.20.9"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1b80e3dec595989ea8510028f30c408a4630db12c9cbb8de34203b89d6577e99"
    dependencies = [
     "log",
     "ring 0.16.20",
     "sct",
     "webpki",
    ]

    [[package]]
    name = "rustls"
    version = "0.21.10"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f9d5a6813c0759e4609cd494e8e725babae6a2ca7b62a5536a13daaec6fcb7ba"
    dependencies = [
     "log",
     "ring 0.17.8",
     "rustls-webpki 0.101.7",
     "sct",
    ]

    [[package]]
    name = "rustls"
    version = "0.22.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "bf4ef73721ac7bcd79b2b315da7779d8fc09718c6b3d2d1b2d94850eb8c18432"
    dependencies = [
     "log",
     "ring 0.17.8",
     "rustls-pki-types",
     "rustls-webpki 0.102.5",
     "subtle",
     "zeroize",
    ]

    [[package]]
    name = "rustls-native-certs"
    version = "0.6.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a9aace74cb666635c918e9c12bc0d348266037aa8eb599b5cba565709a8dff00"
    dependencies = [
     "openssl-probe",
     "rustls-pemfile 1.0.4",
     "schannel",
     "security-framework",
    ]

    [[package]]
    name = "rustls-pemfile"
    version = "1.0.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1c74cae0a4cf6ccbbf5f359f08efdf8ee7e1dc532573bf0db71968cb56b1448c"
    dependencies = [
     "base64 0.21.7",
    ]

    [[package]]
    name = "rustls-pemfile"
    version = "2.1.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "29993a25686778eb88d4189742cd713c9bce943bc54251a33509dc63cbacf73d"
    dependencies = [
     "base64 0.22.0",
     "rustls-pki-types",
    ]

    [[package]]
    name = "rustls-pki-types"
    version = "1.7.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "976295e77ce332211c0d24d92c0e83e50f5c5f046d11082cea19f3df13a3562d"

    [[package]]
    name = "rustls-webpki"
    version = "0.101.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8b6275d1ee7a1cd780b64aca7726599a1dbc893b1e64144529e55c3c2f745765"
    dependencies = [
     "ring 0.17.8",
     "untrusted 0.9.0",
    ]

    [[package]]
    name = "rustls-webpki"
    version = "0.102.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f9a6fccd794a42c2c105b513a2f62bc3fd8f3ba57a4593677ceb0bd035164d78"
    dependencies = [
     "ring 0.17.8",
     "rustls-pki-types",
     "untrusted 0.9.0",
    ]

    [[package]]
    name = "rustversion"
    version = "1.0.14"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7ffc183a10b4478d04cbbbfc96d0873219d962dd5accaff2ffbd4ceb7df837f4"

    [[package]]
    name = "rusty-fork"
    version = "0.3.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "cb3dcc6e454c328bb824492db107ab7c0ae8fcffe4ad210136ef014458c1bc4f"
    dependencies = [
     "fnv",
     "quick-error",
     "tempfile",
     "wait-timeout",
    ]

    [[package]]
    name = "rusty-money"
    version = "0.4.1"
    source = "git+https://github.com/varunsrin/rusty_money?rev=bbc0150742a0fff905225ff11ee09388e9babdcc#bbc0150742a0fff905225ff11ee09388e9babdcc"
    dependencies = [
     "rust_decimal",
    ]

    [[package]]
    name = "ryu"
    version = "1.0.18"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f"

    [[package]]
    name = "same-file"
    version = "1.0.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502"
    dependencies = [
     "winapi-util",
    ]

    [[package]]
    name = "schannel"
    version = "0.1.23"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "fbc91545643bcf3a0bbb6569265615222618bdf33ce4ffbbd13c4bbd4c093534"
    dependencies = [
     "windows-sys 0.52.0",
    ]

    [[package]]
    name = "scheduled-thread-pool"
    version = "0.2.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3cbc66816425a074528352f5789333ecff06ca41b36b0b0efdfbb29edc391a19"
    dependencies = [
     "parking_lot 0.12.1",
    ]

    [[package]]
    name = "scheduler"
    version = "0.1.0"
    dependencies = [
     "async-trait",
     "common_utils",
     "diesel_models",
     "error-stack",
     "external_services",
     "futures 0.3.30",
     "hyperswitch_domain_models",
     "num_cpus",
     "once_cell",
     "rand",
     "redis_interface",
     "router_env",
     "serde",
     "serde_json",
     "storage_impl",
     "strum 0.26.2",
     "thiserror",
     "time",
     "tokio 1.37.0",
     "uuid",
    ]

    [[package]]
    name = "scopeguard"
    version = "1.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49"

    [[package]]
    name = "sct"
    version = "0.7.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "da046153aa2352493d6cb7da4b6e5c0c057d8a1d0a9aa8560baffdd945acd414"
    dependencies = [
     "ring 0.17.8",
     "untrusted 0.9.0",
    ]

    [[package]]
    name = "seahash"
    version = "4.1.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1c107b6f4780854c8b126e228ea8869f4d7b71260f962fefb57b996b8959ba6b"

    [[package]]
    name = "sec1"
    version = "0.7.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d3e97a565f76233a6003f9f5c54be1d9c5bdfa3eccfb189469f11ec4901c47dc"
    dependencies = [
     "base16ct",
     "der",
     "generic-array",
     "pkcs8",
     "subtle",
     "zeroize",
    ]

    [[package]]
    name = "security-framework"
    version = "2.9.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "05b64fb303737d99b81884b2c63433e9ae28abebe5eb5045dcdd175dc2ecf4de"
    dependencies = [
     "bitflags 1.3.2",
     "core-foundation",
     "core-foundation-sys",
     "libc",
     "security-framework-sys",
    ]

    [[package]]
    name = "security-framework-sys"
    version = "2.9.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e932934257d3b408ed8f30db49d85ea163bfe74961f017f405b025af298f0c7a"
    dependencies = [
     "core-foundation-sys",
     "libc",
    ]

    [[package]]
    name = "semver"
    version = "0.9.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403"
    dependencies = [
     "semver-parser",
    ]

    [[package]]
    name = "semver"
    version = "1.0.22"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "92d43fe69e652f3df9bdc2b85b2854a0825b86e4fb76bc44d945137d053639ca"
    dependencies = [
     "serde",
    ]

    [[package]]
    name = "semver-parser"
    version = "0.7.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3"

    [[package]]
    name = "serde"
    version = "1.0.205"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e33aedb1a7135da52b7c21791455563facbbcc43d0f0f66165b42c21b3dfb150"
    dependencies = [
     "serde_derive",
    ]

    [[package]]
    name = "serde-value"
    version = "0.7.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f3a1a3341211875ef120e117ea7fd5228530ae7e7036a779fdc9117be6b3282c"
    dependencies = [
     "ordered-float",
     "serde",
    ]

    [[package]]
    name = "serde-wasm-bindgen"
    version = "0.5.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f3b143e2833c57ab9ad3ea280d21fd34e285a42837aeb0ee301f4f41890fa00e"
    dependencies = [
     "js-sys",
     "serde",
     "wasm-bindgen",
    ]

    [[package]]
    name = "serde-wasm-bindgen"
    version = "0.6.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8302e169f0eddcc139c70f139d19d6467353af16f9fce27e8c30158036a1e16b"
    dependencies = [
     "js-sys",
     "serde",
     "wasm-bindgen",
    ]

    [[package]]
    name = "serde_derive"
    version = "1.0.205"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "692d6f5ac90220161d6774db30c662202721e64aed9058d2c394f451261420c1"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "serde_json"
    version = "1.0.122"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "784b6203951c57ff748476b126ccb5e8e2959a5c19e5c617ab1956be3dbc68da"
    dependencies = [
     "indexmap 2.3.0",
     "itoa",
     "memchr",
     "ryu",
     "serde",
    ]

    [[package]]
    name = "serde_path_to_error"
    version = "0.1.16"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "af99884400da37c88f5e9146b7f1fd0fbcae8f6eec4e9da38b67d05486f814a6"
    dependencies = [
     "itoa",
     "serde",
    ]

    [[package]]
    name = "serde_plain"
    version = "1.0.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9ce1fc6db65a611022b23a0dec6975d63fb80a302cb3388835ff02c097258d50"
    dependencies = [
     "serde",
    ]

    [[package]]
    name = "serde_qs"
    version = "0.12.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0431a35568651e363364210c91983c1da5eb29404d9f0928b67d4ebcfa7d330c"
    dependencies = [
     "percent-encoding",
     "serde",
     "thiserror",
    ]

    [[package]]
    name = "serde_repr"
    version = "0.1.19"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6c64451ba24fc7a6a2d60fc75dd9c83c90903b19028d4eff35e88fc1e86564e9"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "serde_spanned"
    version = "0.6.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "eb3622f419d1296904700073ea6cc23ad690adbd66f13ea683df73298736f0c1"
    dependencies = [
     "serde",
    ]

    [[package]]
    name = "serde_urlencoded"
    version = "0.7.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd"
    dependencies = [
     "form_urlencoded",
     "itoa",
     "ryu",
     "serde",
    ]

    [[package]]
    name = "serde_with"
    version = "3.7.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ee80b0e361bbf88fd2f6e242ccd19cfda072cb0faa6ae694ecee08199938569a"
    dependencies = [
     "base64 0.21.7",
     "chrono",
     "hex",
     "indexmap 1.9.3",
     "indexmap 2.3.0",
     "serde",
     "serde_derive",
     "serde_json",
     "serde_with_macros",
     "time",
    ]

    [[package]]
    name = "serde_with_macros"
    version = "3.7.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6561dc161a9224638a31d876ccdfefbc1df91d3f3a8342eddb35f055d48c7655"
    dependencies = [
     "darling 0.20.8",
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "serde_yml"
    version = "0.0.11"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "48e76bab63c3fd98d27c17f9cbce177f64a91f5e69ac04cafe04e1bb25d1dc3c"
    dependencies = [
     "indexmap 2.3.0",
     "itoa",
     "libyml",
     "log",
     "memchr",
     "ryu",
     "serde",
     "serde_json",
     "tempfile",
    ]

    [[package]]
    name = "serial_test"
    version = "3.0.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "953ad9342b3aaca7cb43c45c097dd008d4907070394bd0751a0aa8817e5a018d"
    dependencies = [
     "dashmap",
     "futures 0.3.30",
     "lazy_static",
     "log",
     "parking_lot 0.12.1",
     "serial_test_derive",
    ]

    [[package]]
    name = "serial_test_derive"
    version = "3.0.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b93fb4adc70021ac1b47f7d45e8cc4169baaa7ea58483bc5b721d19a26202212"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "sha1"
    version = "0.10.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e3bf829a2d51ab4a5ddf1352d8470c140cadc8301b2ae1789db023f01cedd6ba"
    dependencies = [
     "cfg-if 1.0.0",
     "cpufeatures",
     "digest",
    ]

    [[package]]
    name = "sha2"
    version = "0.10.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8"
    dependencies = [
     "cfg-if 1.0.0",
     "cpufeatures",
     "digest",
    ]

    [[package]]
    name = "sharded-slab"
    version = "0.1.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6"
    dependencies = [
     "lazy_static",
    ]

    [[package]]
    name = "signal-hook"
    version = "0.3.17"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8621587d4798caf8eb44879d42e56b9a93ea5dcd315a6487c357130095b62801"
    dependencies = [
     "libc",
     "signal-hook-registry",
    ]

    [[package]]
    name = "signal-hook-registry"
    version = "1.4.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d8229b473baa5980ac72ef434c4415e70c4b5e71b423043adb4ba059f89c99a1"
    dependencies = [
     "libc",
    ]

    [[package]]
    name = "signal-hook-tokio"
    version = "0.3.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "213241f76fb1e37e27de3b6aa1b068a2c333233b59cca6634f634b80a27ecf1e"
    dependencies = [
     "futures-core",
     "libc",
     "signal-hook",
     "tokio 1.37.0",
    ]

    [[package]]
    name = "signature"
    version = "2.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "77549399552de45a898a580c1b41d445bf730df867cc44e6c0233bbc4b8329de"
    dependencies = [
     "digest",
     "rand_core",
    ]

    [[package]]
    name = "simd-adler32"
    version = "0.3.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d66dc143e6b11c1eddc06d5c423cfc97062865baf299914ab64caa38182078fe"

    [[package]]
    name = "simdutf8"
    version = "0.1.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f27f6278552951f1f2b8cf9da965d10969b2efdea95a6ec47987ab46edfe263a"

    [[package]]
    name = "simple_asn1"
    version = "0.6.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "adc4e5204eb1910f40f9cfa375f6f05b68c3abac4b6fd879c8ff5e7ae8a0a085"
    dependencies = [
     "num-bigint",
     "num-traits",
     "thiserror",
     "time",
    ]

    [[package]]
    name = "siphasher"
    version = "0.3.11"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d"

    [[package]]
    name = "siphasher"
    version = "1.0.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "56199f7ddabf13fe5074ce809e7d3f42b42ae711800501b5b16ea82ad029c39d"

    [[package]]
    name = "skeptic"
    version = "0.13.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "16d23b015676c90a0f01c197bfdc786c20342c73a0afdda9025adb0bc42940a8"
    dependencies = [
     "bytecount",
     "cargo_metadata 0.14.2",
     "error-chain",
     "glob",
     "pulldown-cmark",
     "tempfile",
     "walkdir",
    ]

    [[package]]
    name = "slab"
    version = "0.4.9"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67"
    dependencies = [
     "autocfg",
    ]

    [[package]]
    name = "slug"
    version = "0.1.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3bd94acec9c8da640005f8e135a39fc0372e74535e6b368b7a04b875f784c8c4"
    dependencies = [
     "deunicode",
     "wasm-bindgen",
    ]

    [[package]]
    name = "smallvec"
    version = "0.6.14"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b97fcaeba89edba30f044a10c6a3cc39df9c3f17d7cd829dd1446cab35f890e0"
    dependencies = [
     "maybe-uninit",
    ]

    [[package]]
    name = "smallvec"
    version = "1.13.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67"

    [[package]]
    name = "socket2"
    version = "0.5.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "05ffd9c0a93b7543e062e759284fcf5f5e3b098501104bfbdde4d404db792871"
    dependencies = [
     "libc",
     "windows-sys 0.52.0",
    ]

    [[package]]
    name = "spin"
    version = "0.5.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6e63cff320ae2c57904679ba7cb63280a3dc4613885beafb148ee7bf9aa9042d"

    [[package]]
    name = "spin"
    version = "0.9.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67"
    dependencies = [
     "lock_api 0.4.11",
    ]

    [[package]]
    name = "spki"
    version = "0.7.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d91ed6c858b01f942cd56b37a94b3e0a1798290327d1236e4d9cf4eaca44d29d"
    dependencies = [
     "base64ct",
     "der",
    ]

    [[package]]
    name = "sqlformat"
    version = "0.2.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ce81b7bd7c4493975347ef60d8c7e8b742d4694f4c49f93e0a12ea263938176c"
    dependencies = [
     "itertools 0.12.1",
     "nom",
     "unicode_categories",
    ]

    [[package]]
    name = "sqlx"
    version = "0.7.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "dba03c279da73694ef99763320dea58b51095dfe87d001b1d4b5fe78ba8763cf"
    dependencies = [
     "sqlx-core",
     "sqlx-macros",
     "sqlx-mysql",
     "sqlx-postgres",
     "sqlx-sqlite",
    ]

    [[package]]
    name = "sqlx-core"
    version = "0.7.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d84b0a3c3739e220d94b3239fd69fb1f74bc36e16643423bd99de3b43c21bfbd"
    dependencies = [
     "ahash 0.8.11",
     "atoi",
     "bigdecimal",
     "byteorder",
     "bytes 1.6.0",
     "crc",
     "crossbeam-queue 0.3.11",
     "dotenvy",
     "either",
     "event-listener",
     "futures-channel",
     "futures-core",
     "futures-intrusive",
     "futures-io",
     "futures-util",
     "hashlink",
     "hex",
     "indexmap 2.3.0",
     "log",
     "memchr",
     "native-tls",
     "once_cell",
     "paste",
     "percent-encoding",
     "serde",
     "serde_json",
     "sha2",
     "smallvec 1.13.2",
     "sqlformat",
     "thiserror",
     "time",
     "tokio 1.37.0",
     "tokio-stream",
     "tracing",
     "url",
    ]

    [[package]]
    name = "sqlx-macros"
    version = "0.7.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "89961c00dc4d7dffb7aee214964b065072bff69e36ddb9e2c107541f75e4f2a5"
    dependencies = [
     "proc-macro2",
     "quote",
     "sqlx-core",
     "sqlx-macros-core",
     "syn 1.0.109",
    ]

    [[package]]
    name = "sqlx-macros-core"
    version = "0.7.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d0bd4519486723648186a08785143599760f7cc81c52334a55d6a83ea1e20841"
    dependencies = [
     "atomic-write-file",
     "dotenvy",
     "either",
     "heck",
     "hex",
     "once_cell",
     "proc-macro2",
     "quote",
     "serde",
     "serde_json",
     "sha2",
     "sqlx-core",
     "sqlx-mysql",
     "sqlx-postgres",
     "sqlx-sqlite",
     "syn 1.0.109",
     "tempfile",
     "tokio 1.37.0",
     "url",
    ]

    [[package]]
    name = "sqlx-mysql"
    version = "0.7.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e37195395df71fd068f6e2082247891bc11e3289624bbc776a0cdfa1ca7f1ea4"
    dependencies = [
     "atoi",
     "base64 0.21.7",
     "bigdecimal",
     "bitflags 2.5.0",
     "byteorder",
     "bytes 1.6.0",
     "crc",
     "digest",
     "dotenvy",
     "either",
     "futures-channel",
     "futures-core",
     "futures-io",
     "futures-util",
     "generic-array",
     "hex",
     "hkdf",
     "hmac",
     "itoa",
     "log",
     "md-5",
     "memchr",
     "once_cell",
     "percent-encoding",
     "rand",
     "rsa",
     "serde",
     "sha1",
     "sha2",
     "smallvec 1.13.2",
     "sqlx-core",
     "stringprep",
     "thiserror",
     "time",
     "tracing",
     "whoami",
    ]

    [[package]]
    name = "sqlx-postgres"
    version = "0.7.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d6ac0ac3b7ccd10cc96c7ab29791a7dd236bd94021f31eec7ba3d46a74aa1c24"
    dependencies = [
     "atoi",
     "base64 0.21.7",
     "bigdecimal",
     "bitflags 2.5.0",
     "byteorder",
     "crc",
     "dotenvy",
     "etcetera",
     "futures-channel",
     "futures-core",
     "futures-io",
     "futures-util",
     "hex",
     "hkdf",
     "hmac",
     "home",
     "itoa",
     "log",
     "md-5",
     "memchr",
     "num-bigint",
     "once_cell",
     "rand",
     "serde",
     "serde_json",
     "sha1",
     "sha2",
     "smallvec 1.13.2",
     "sqlx-core",
     "stringprep",
     "thiserror",
     "time",
     "tracing",
     "whoami",
    ]

    [[package]]
    name = "sqlx-sqlite"
    version = "0.7.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "210976b7d948c7ba9fced8ca835b11cbb2d677c59c79de41ac0d397e14547490"
    dependencies = [
     "atoi",
     "flume",
     "futures-channel",
     "futures-core",
     "futures-executor",
     "futures-intrusive",
     "futures-util",
     "libsqlite3-sys",
     "log",
     "percent-encoding",
     "serde",
     "sqlx-core",
     "time",
     "tracing",
     "url",
     "urlencoding",
    ]

    [[package]]
    name = "stable_deref_trait"
    version = "1.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3"

    [[package]]
    name = "storage_impl"
    version = "0.1.0"
    dependencies = [
     "api_models",
     "async-bb8-diesel",
     "async-trait",
     "bb8",
     "bytes 1.6.0",
     "common_enums",
     "common_utils",
     "config",
     "crc32fast",
     "diesel",
     "diesel_models",
     "dyn-clone",
     "error-stack",
     "futures 0.3.30",
     "hyperswitch_domain_models",
     "masking",
     "moka",
     "once_cell",
     "redis_interface",
     "router_derive",
     "router_env",
     "serde",
     "serde_json",
     "thiserror",
     "tokio 1.37.0",
    ]

    [[package]]
    name = "stringmatch"
    version = "0.4.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6aadc0801d92f0cdc26127c67c4b8766284f52a5ba22894f285e3101fa57d05d"
    dependencies = [
     "regex",
    ]

    [[package]]
    name = "stringprep"
    version = "0.1.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "bb41d74e231a107a1b4ee36bd1214b11285b77768d2e3824aedafa988fd36ee6"
    dependencies = [
     "finl_unicode",
     "unicode-bidi",
     "unicode-normalization",
    ]

    [[package]]
    name = "strsim"
    version = "0.10.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623"

    [[package]]
    name = "strum"
    version = "0.24.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "063e6045c0e62079840579a7e47a355ae92f60eb74daaf156fb1e84ba164e63f"
    dependencies = [
     "strum_macros 0.24.3",
    ]

    [[package]]
    name = "strum"
    version = "0.25.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "290d54ea6f91c969195bdbcd7442c8c2a2ba87da8bf60a7ee86a235d4bc1e125"
    dependencies = [
     "strum_macros 0.25.3",
    ]

    [[package]]
    name = "strum"
    version = "0.26.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5d8cec3501a5194c432b2b7976db6b7d10ec95c253208b45f83f7136aa985e29"
    dependencies = [
     "strum_macros 0.26.2",
    ]

    [[package]]
    name = "strum_macros"
    version = "0.24.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1e385be0d24f186b4ce2f9982191e7101bb737312ad61c1f2f984f34bcf85d59"
    dependencies = [
     "heck",
     "proc-macro2",
     "quote",
     "rustversion",
     "syn 1.0.109",
    ]

    [[package]]
    name = "strum_macros"
    version = "0.25.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "23dc1fa9ac9c169a78ba62f0b841814b7abae11bdd047b9c58f893439e309ea0"
    dependencies = [
     "heck",
     "proc-macro2",
     "quote",
     "rustversion",
     "syn 2.0.57",
    ]

    [[package]]
    name = "strum_macros"
    version = "0.26.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c6cf59daf282c0a494ba14fd21610a0325f9f90ec9d1231dea26bcb1d696c946"
    dependencies = [
     "heck",
     "proc-macro2",
     "quote",
     "rustversion",
     "syn 2.0.57",
    ]

    [[package]]
    name = "subtle"
    version = "2.5.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "81cdd64d312baedb58e21336b31bc043b77e01cc99033ce76ef539f78e965ebc"

    [[package]]
    name = "syn"
    version = "1.0.109"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237"
    dependencies = [
     "proc-macro2",
     "quote",
     "unicode-ident",
    ]

    [[package]]
    name = "syn"
    version = "2.0.57"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "11a6ae1e52eb25aab8f3fb9fca13be982a373b8f1157ca14b897a825ba4a2d35"
    dependencies = [
     "proc-macro2",
     "quote",
     "unicode-ident",
    ]

    [[package]]
    name = "syn_derive"
    version = "0.1.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1329189c02ff984e9736652b1631330da25eaa6bc639089ed4915d25446cbe7b"
    dependencies = [
     "proc-macro-error",
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "sync_wrapper"
    version = "0.1.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "2047c6ded9c721764247e62cd3b03c09ffc529b2ba5b10ec482ae507a4a70160"

    [[package]]
    name = "synstructure"
    version = "0.12.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f36bdaa60a83aca3921b5259d5400cbf5e90fc51931376a9bd4a0eb79aa7210f"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 1.0.109",
     "unicode-xid",
    ]

    [[package]]
    name = "synstructure"
    version = "0.13.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c8af7666ab7b6390ab78131fb5b0fce11d6b7a6951602017c35fa82800708971"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "system-configuration"
    version = "0.5.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ba3a3adc5c275d719af8cb4272ea1c4a6d668a777f37e115f6d11ddbc1c8e0e7"
    dependencies = [
     "bitflags 1.3.2",
     "core-foundation",
     "system-configuration-sys",
    ]

    [[package]]
    name = "system-configuration-sys"
    version = "0.5.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a75fb188eb626b924683e3b95e3a48e63551fcfb51949de2f06a9d91dbee93c9"
    dependencies = [
     "core-foundation-sys",
     "libc",
    ]

    [[package]]
    name = "tagptr"
    version = "0.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7b2093cf4c8eb1e67749a6762251bc9cd836b6fc171623bd0a9d324d37af2417"

    [[package]]
    name = "tap"
    version = "1.0.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "55937e1799185b12863d447f42597ed69d9928686b8d88a1df17376a097d8369"

    [[package]]
    name = "tempfile"
    version = "3.10.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "85b77fafb263dd9d05cbeac119526425676db3784113aa9295c88498cbf8bff1"
    dependencies = [
     "cfg-if 1.0.0",
     "fastrand 2.0.2",
     "rustix",
     "windows-sys 0.52.0",
    ]

    [[package]]
    name = "tera"
    version = "1.19.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "970dff17c11e884a4a09bc76e3a17ef71e01bb13447a11e85226e254fe6d10b8"
    dependencies = [
     "chrono",
     "chrono-tz",
     "globwalk",
     "humansize",
     "lazy_static",
     "percent-encoding",
     "pest",
     "pest_derive",
     "rand",
     "regex",
     "serde",
     "serde_json",
     "slug",
     "unic-segment",
    ]

    [[package]]
    name = "test-case"
    version = "3.3.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "eb2550dd13afcd286853192af8601920d959b14c401fcece38071d53bf0768a8"
    dependencies = [
     "test-case-macros",
    ]

    [[package]]
    name = "test-case-core"
    version = "3.3.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "adcb7fd841cd518e279be3d5a3eb0636409487998a4aff22f3de87b81e88384f"
    dependencies = [
     "cfg-if 1.0.0",
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "test-case-macros"
    version = "3.3.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5c89e72a01ed4c579669add59014b9a524d609c0c88c6a585ce37485879f6ffb"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 2.0.57",
     "test-case-core",
    ]

    [[package]]
    name = "test_utils"
    version = "0.1.0"
    dependencies = [
     "anyhow",
     "async-trait",
     "base64 0.22.0",
     "clap",
     "masking",
     "rand",
     "regex",
     "reqwest",
     "serde",
     "serde_json",
     "serde_urlencoded",
     "serial_test",
     "thirtyfour",
     "time",
     "tokio 1.37.0",
     "toml 0.8.12",
    ]

    [[package]]
    name = "thirtyfour"
    version = "0.31.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "72fc70ad9624071cdd96d034676b84b504bfeb4bee1580df1324c99373ea0ca7"
    dependencies = [
     "async-trait",
     "base64 0.13.1",
     "chrono",
     "cookie 0.16.2",
     "fantoccini",
     "futures 0.3.30",
     "http 0.2.12",
     "log",
     "parking_lot 0.12.1",
     "serde",
     "serde_json",
     "serde_repr",
     "stringmatch",
     "thirtyfour-macros",
     "thiserror",
     "tokio 1.37.0",
     "url",
     "urlparse",
    ]

    [[package]]
    name = "thirtyfour-macros"
    version = "0.1.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9cae91d1c7c61ec65817f1064954640ee350a50ae6548ff9a1bdd2489d6ffbb0"
    dependencies = [
     "proc-macro-error",
     "proc-macro2",
     "quote",
     "syn 1.0.109",
    ]

    [[package]]
    name = "thiserror"
    version = "1.0.58"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "03468839009160513471e86a034bb2c5c0e4baae3b43f79ffc55c4a5427b3297"
    dependencies = [
     "thiserror-impl",
    ]

    [[package]]
    name = "thiserror-impl"
    version = "1.0.58"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c61f3ba182994efc43764a46c018c347bc492c79f024e705f46567b418f6d4f7"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "thread_local"
    version = "1.1.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c"
    dependencies = [
     "cfg-if 1.0.0",
     "once_cell",
    ]

    [[package]]
    name = "time"
    version = "0.3.36"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5dfd88e563464686c916c7e46e623e520ddc6d79fa6641390f2e3fa86e83e885"
    dependencies = [
     "deranged",
     "itoa",
     "libc",
     "num-conv",
     "num_threads",
     "powerfmt",
     "serde",
     "time-core",
     "time-macros",
    ]

    [[package]]
    name = "time-core"
    version = "0.1.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3"

    [[package]]
    name = "time-macros"
    version = "0.2.18"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3f252a68540fde3a3877aeea552b832b40ab9a69e318efd078774a01ddee1ccf"
    dependencies = [
     "num-conv",
     "time-core",
    ]

    [[package]]
    name = "tiny-keccak"
    version = "2.0.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "2c9d3793400a45f954c52e73d068316d76b6f4e36977e3fcebb13a2721e80237"
    dependencies = [
     "crunchy",
    ]

    [[package]]
    name = "tinytemplate"
    version = "1.2.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc"
    dependencies = [
     "serde",
     "serde_json",
    ]

    [[package]]
    name = "tinyvec"
    version = "1.6.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "87cc5ceb3875bb20c2890005a4e226a4651264a5c75edb2421b52861a0a0cb50"
    dependencies = [
     "tinyvec_macros",
    ]

    [[package]]
    name = "tinyvec_macros"
    version = "0.1.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20"

    [[package]]
    name = "tokio"
    version = "0.1.22"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5a09c0b5bb588872ab2f09afa13ee6e9dac11e10a0ec9e8e3ba39a5a5d530af6"
    dependencies = [
     "bytes 0.4.12",
     "futures 0.1.31",
     "mio 0.6.23",
     "num_cpus",
     "tokio-codec",
     "tokio-current-thread",
     "tokio-executor",
     "tokio-fs",
     "tokio-io",
     "tokio-reactor",
     "tokio-sync",
     "tokio-tcp",
     "tokio-threadpool",
     "tokio-timer",
     "tokio-udp",
     "tokio-uds",
    ]

    [[package]]
    name = "tokio"
    version = "1.37.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1adbebffeca75fcfd058afa480fb6c0b81e165a0323f9c9d39c9697e37c46787"
    dependencies = [
     "backtrace",
     "bytes 1.6.0",
     "libc",
     "mio 0.8.11",
     "num_cpus",
     "parking_lot 0.12.1",
     "pin-project-lite",
     "signal-hook-registry",
     "socket2",
     "tokio-macros",
     "windows-sys 0.48.0",
    ]

    [[package]]
    name = "tokio-codec"
    version = "0.1.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "25b2998660ba0e70d18684de5d06b70b70a3a747469af9dea7618cc59e75976b"
    dependencies = [
     "bytes 0.4.12",
     "futures 0.1.31",
     "tokio-io",
    ]

    [[package]]
    name = "tokio-current-thread"
    version = "0.1.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b1de0e32a83f131e002238d7ccde18211c0a5397f60cbfffcb112868c2e0e20e"
    dependencies = [
     "futures 0.1.31",
     "tokio-executor",
    ]

    [[package]]
    name = "tokio-executor"
    version = "0.1.10"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "fb2d1b8f4548dbf5e1f7818512e9c406860678f29c300cdf0ebac72d1a3a1671"
    dependencies = [
     "crossbeam-utils 0.7.2",
     "futures 0.1.31",
    ]

    [[package]]
    name = "tokio-fs"
    version = "0.1.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "297a1206e0ca6302a0eed35b700d292b275256f596e2f3fea7729d5e629b6ff4"
    dependencies = [
     "futures 0.1.31",
     "tokio-io",
     "tokio-threadpool",
    ]

    [[package]]
    name = "tokio-io"
    version = "0.1.13"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "57fc868aae093479e3131e3d165c93b1c7474109d13c90ec0dda2a1bbfff0674"
    dependencies = [
     "bytes 0.4.12",
     "futures 0.1.31",
     "log",
    ]

    [[package]]
    name = "tokio-io-timeout"
    version = "1.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "30b74022ada614a1b4834de765f9bb43877f910cc8ce4be40e89042c9223a8bf"
    dependencies = [
     "pin-project-lite",
     "tokio 1.37.0",
    ]

    [[package]]
    name = "tokio-macros"
    version = "2.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5b8a1e28f2deaa14e508979454cb3a223b10b938b45af148bc0986de36f1923b"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "tokio-native-tls"
    version = "0.3.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "bbae76ab933c85776efabc971569dd6119c580d8f5d448769dec1764bf796ef2"
    dependencies = [
     "native-tls",
     "tokio 1.37.0",
    ]

    [[package]]
    name = "tokio-reactor"
    version = "0.1.12"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "09bc590ec4ba8ba87652da2068d150dcada2cfa2e07faae270a5e0409aa51351"
    dependencies = [
     "crossbeam-utils 0.7.2",
     "futures 0.1.31",
     "lazy_static",
     "log",
     "mio 0.6.23",
     "num_cpus",
     "parking_lot 0.9.0",
     "slab",
     "tokio-executor",
     "tokio-io",
     "tokio-sync",
    ]

    [[package]]
    name = "tokio-rustls"
    version = "0.23.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c43ee83903113e03984cb9e5cebe6c04a5116269e900e3ddba8f068a62adda59"
    dependencies = [
     "rustls 0.20.9",
     "tokio 1.37.0",
     "webpki",
    ]

    [[package]]
    name = "tokio-rustls"
    version = "0.24.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c28327cf380ac148141087fbfb9de9d7bd4e84ab5d2c28fbc911d753de8a7081"
    dependencies = [
     "rustls 0.21.10",
     "tokio 1.37.0",
    ]

    [[package]]
    name = "tokio-rustls"
    version = "0.25.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "775e0c0f0adb3a2f22a00c4745d728b479985fc15ee7ca6a2608388c5569860f"
    dependencies = [
     "rustls 0.22.4",
     "rustls-pki-types",
     "tokio 1.37.0",
    ]

    [[package]]
    name = "tokio-stream"
    version = "0.1.15"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "267ac89e0bec6e691e5813911606935d77c476ff49024f98abcea3e7b15e37af"
    dependencies = [
     "futures-core",
     "pin-project-lite",
     "tokio 1.37.0",
     "tokio-util",
    ]

    [[package]]
    name = "tokio-sync"
    version = "0.1.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "edfe50152bc8164fcc456dab7891fa9bf8beaf01c5ee7e1dd43a397c3cf87dee"
    dependencies = [
     "fnv",
     "futures 0.1.31",
    ]

    [[package]]
    name = "tokio-tcp"
    version = "0.1.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "98df18ed66e3b72e742f185882a9e201892407957e45fbff8da17ae7a7c51f72"
    dependencies = [
     "bytes 0.4.12",
     "futures 0.1.31",
     "iovec",
     "mio 0.6.23",
     "tokio-io",
     "tokio-reactor",
    ]

    [[package]]
    name = "tokio-threadpool"
    version = "0.1.18"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "df720b6581784c118f0eb4310796b12b1d242a7eb95f716a8367855325c25f89"
    dependencies = [
     "crossbeam-deque 0.7.4",
     "crossbeam-queue 0.2.3",
     "crossbeam-utils 0.7.2",
     "futures 0.1.31",
     "lazy_static",
     "log",
     "num_cpus",
     "slab",
     "tokio-executor",
    ]

    [[package]]
    name = "tokio-timer"
    version = "0.2.13"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "93044f2d313c95ff1cb7809ce9a7a05735b012288a888b62d4434fd58c94f296"
    dependencies = [
     "crossbeam-utils 0.7.2",
     "futures 0.1.31",
     "slab",
     "tokio-executor",
    ]

    [[package]]
    name = "tokio-udp"
    version = "0.1.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e2a0b10e610b39c38b031a2fcab08e4b82f16ece36504988dcbd81dbba650d82"
    dependencies = [
     "bytes 0.4.12",
     "futures 0.1.31",
     "log",
     "mio 0.6.23",
     "tokio-codec",
     "tokio-io",
     "tokio-reactor",
    ]

    [[package]]
    name = "tokio-uds"
    version = "0.2.7"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ab57a4ac4111c8c9dbcf70779f6fc8bc35ae4b2454809febac840ad19bd7e4e0"
    dependencies = [
     "bytes 0.4.12",
     "futures 0.1.31",
     "iovec",
     "libc",
     "log",
     "mio 0.6.23",
     "mio-uds",
     "tokio-codec",
     "tokio-io",
     "tokio-reactor",
    ]

    [[package]]
    name = "tokio-util"
    version = "0.7.10"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5419f34732d9eb6ee4c3578b7989078579b7f039cbbb9ca2c4da015749371e15"
    dependencies = [
     "bytes 1.6.0",
     "futures-core",
     "futures-sink",
     "pin-project-lite",
     "tokio 1.37.0",
     "tracing",
    ]

    [[package]]
    name = "toml"
    version = "0.5.11"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f4f7f0dd8d50a853a531c426359045b1998f04219d88799810762cd4ad314234"
    dependencies = [
     "serde",
    ]

    [[package]]
    name = "toml"
    version = "0.7.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "dd79e69d3b627db300ff956027cc6c3798cef26d22526befdfcd12feeb6d2257"
    dependencies = [
     "serde",
     "serde_spanned",
     "toml_datetime",
     "toml_edit 0.19.15",
    ]

    [[package]]
    name = "toml"
    version = "0.8.12"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e9dd1545e8208b4a5af1aa9bbd0b4cf7e9ea08fabc5d0a5c67fcaafa17433aa3"
    dependencies = [
     "indexmap 2.3.0",
     "serde",
     "serde_spanned",
     "toml_datetime",
     "toml_edit 0.22.9",
    ]

    [[package]]
    name = "toml_datetime"
    version = "0.6.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3550f4e9685620ac18a50ed434eb3aec30db8ba93b0287467bca5826ea25baf1"
    dependencies = [
     "serde",
    ]

    [[package]]
    name = "toml_edit"
    version = "0.19.15"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1b5bb770da30e5cbfde35a2d7b9b8a2c4b8ef89548a7a6aeab5c9a576e3e7421"
    dependencies = [
     "indexmap 2.3.0",
     "serde",
     "serde_spanned",
     "toml_datetime",
     "winnow 0.5.40",
    ]

    [[package]]
    name = "toml_edit"
    version = "0.21.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6a8534fd7f78b5405e860340ad6575217ce99f38d4d5c8f2442cb5ecb50090e1"
    dependencies = [
     "indexmap 2.3.0",
     "toml_datetime",
     "winnow 0.5.40",
    ]

    [[package]]
    name = "toml_edit"
    version = "0.22.9"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8e40bb779c5187258fd7aad0eb68cb8706a0a81fa712fbea808ab43c4b8374c4"
    dependencies = [
     "indexmap 2.3.0",
     "serde",
     "serde_spanned",
     "toml_datetime",
     "winnow 0.6.5",
    ]

    [[package]]
    name = "tonic"
    version = "0.8.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8f219fad3b929bef19b1f86fbc0358d35daed8f2cac972037ac0dc10bbb8d5fb"
    dependencies = [
     "async-stream",
     "async-trait",
     "axum",
     "base64 0.13.1",
     "bytes 1.6.0",
     "futures-core",
     "futures-util",
     "h2 0.3.25",
     "http 0.2.12",
     "http-body 0.4.6",
     "hyper 0.14.28",
     "hyper-timeout",
     "percent-encoding",
     "pin-project",
     "prost",
     "prost-derive",
     "tokio 1.37.0",
     "tokio-stream",
     "tokio-util",
     "tower",
     "tower-layer",
     "tower-service",
     "tracing",
     "tracing-futures",
    ]

    [[package]]
    name = "totp-rs"
    version = "5.5.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6c4ae9724c5888c0417d2396037ed3b60665925624766416e3e342b6ba5dbd3f"
    dependencies = [
     "base32",
     "constant_time_eq 0.2.6",
     "hmac",
     "rand",
     "sha1",
     "sha2",
     "url",
     "urlencoding",
    ]

    [[package]]
    name = "tower"
    version = "0.4.13"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b8fa9be0de6cf49e536ce1851f987bd21a43b771b09473c3549a6c853db37c1c"
    dependencies = [
     "futures-core",
     "futures-util",
     "indexmap 1.9.3",
     "pin-project",
     "pin-project-lite",
     "rand",
     "slab",
     "tokio 1.37.0",
     "tokio-util",
     "tower-layer",
     "tower-service",
     "tracing",
    ]

    [[package]]
    name = "tower-layer"
    version = "0.3.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c20c8dbed6283a09604c3e69b4b7eeb54e298b8a600d4d5ecb5ad39de609f1d0"

    [[package]]
    name = "tower-service"
    version = "0.3.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b6bc1c9ce2b5135ac7f93c72918fc37feb872bdc6a5533a8b85eb4b86bfdae52"

    [[package]]
    name = "tracing"
    version = "0.1.40"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef"
    dependencies = [
     "log",
     "pin-project-lite",
     "tracing-attributes",
     "tracing-core",
    ]

    [[package]]
    name = "tracing-actix-web"
    version = "0.7.10"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "fa069bd1503dd526ee793bb3fce408895136c95fc86d2edb2acf1c646d7f0684"
    dependencies = [
     "actix-web",
     "mutually_exclusive_features",
     "opentelemetry",
     "pin-project",
     "tracing",
     "tracing-opentelemetry",
     "uuid",
    ]

    [[package]]
    name = "tracing-appender"
    version = "0.2.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3566e8ce28cc0a3fe42519fc80e6b4c943cc4c8cef275620eb8dac2d3d4e06cf"
    dependencies = [
     "crossbeam-channel",
     "thiserror",
     "time",
     "tracing-subscriber",
    ]

    [[package]]
    name = "tracing-attributes"
    version = "0.1.27"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "tracing-core"
    version = "0.1.32"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54"
    dependencies = [
     "once_cell",
     "valuable",
    ]

    [[package]]
    name = "tracing-futures"
    version = "0.2.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "97d095ae15e245a057c8e8451bab9b3ee1e1f68e9ba2b4fbc18d0ac5237835f2"
    dependencies = [
     "pin-project",
     "tokio 0.1.22",
     "tracing",
    ]

    [[package]]
    name = "tracing-log"
    version = "0.1.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f751112709b4e791d8ce53e32c4ed2d353565a795ce84da2285393f41557bdf2"
    dependencies = [
     "log",
     "once_cell",
     "tracing-core",
    ]

    [[package]]
    name = "tracing-log"
    version = "0.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ee855f1f400bd0e5c02d150ae5de3840039a3f54b025156404e34c23c03f47c3"
    dependencies = [
     "log",
     "once_cell",
     "tracing-core",
    ]

    [[package]]
    name = "tracing-opentelemetry"
    version = "0.19.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "00a39dcf9bfc1742fa4d6215253b33a6e474be78275884c216fc2a06267b3600"
    dependencies = [
     "once_cell",
     "opentelemetry",
     "tracing",
     "tracing-core",
     "tracing-log 0.1.4",
     "tracing-subscriber",
    ]

    [[package]]
    name = "tracing-serde"
    version = "0.1.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "bc6b213177105856957181934e4920de57730fc69bf42c37ee5bb664d406d9e1"
    dependencies = [
     "serde",
     "tracing-core",
    ]

    [[package]]
    name = "tracing-subscriber"
    version = "0.3.18"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ad0f048c97dbd9faa9b7df56362b8ebcaa52adb06b498c050d2f4e32f90a7a8b"
    dependencies = [
     "matchers",
     "nu-ansi-term",
     "once_cell",
     "regex",
     "serde",
     "serde_json",
     "sharded-slab",
     "smallvec 1.13.2",
     "thread_local",
     "tracing",
     "tracing-core",
     "tracing-log 0.2.0",
     "tracing-serde",
    ]

    [[package]]
    name = "triomphe"
    version = "0.1.11"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "859eb650cfee7434994602c3a68b25d77ad9e68c8a6cd491616ef86661382eb3"
    dependencies = [
     "arc-swap",
     "serde",
     "stable_deref_trait",
    ]

    [[package]]
    name = "try-lock"
    version = "0.2.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e421abadd41a4225275504ea4d6566923418b7f05506fbc9c0fe86ba7396114b"

    [[package]]
    name = "typenum"
    version = "1.17.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825"

    [[package]]
    name = "ucd-trie"
    version = "0.1.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ed646292ffc8188ef8ea4d1e0e0150fb15a5c2e12ad9b8fc191ae7a8a7f3c4b9"

    [[package]]
    name = "unarray"
    version = "0.1.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "eaea85b334db583fe3274d12b4cd1880032beab409c0d774be044d4480ab9a94"

    [[package]]
    name = "unic-char-property"
    version = "0.9.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a8c57a407d9b6fa02b4795eb81c5b6652060a15a7903ea981f3d723e6c0be221"
    dependencies = [
     "unic-char-range",
    ]

    [[package]]
    name = "unic-char-range"
    version = "0.9.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0398022d5f700414f6b899e10b8348231abf9173fa93144cbc1a43b9793c1fbc"

    [[package]]
    name = "unic-common"
    version = "0.9.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "80d7ff825a6a654ee85a63e80f92f054f904f21e7d12da4e22f9834a4aaa35bc"

    [[package]]
    name = "unic-segment"
    version = "0.9.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e4ed5d26be57f84f176157270c112ef57b86debac9cd21daaabbe56db0f88f23"
    dependencies = [
     "unic-ucd-segment",
    ]

    [[package]]
    name = "unic-ucd-segment"
    version = "0.9.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "2079c122a62205b421f499da10f3ee0f7697f012f55b675e002483c73ea34700"
    dependencies = [
     "unic-char-property",
     "unic-char-range",
     "unic-ucd-version",
    ]

    [[package]]
    name = "unic-ucd-version"
    version = "0.9.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "96bd2f2237fe450fcd0a1d2f5f4e91711124f7857ba2e964247776ebeeb7b0c4"
    dependencies = [
     "unic-common",
    ]

    [[package]]
    name = "unicase"
    version = "2.7.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f7d2d4dafb69621809a81864c9c1b864479e1235c0dd4e199924b9742439ed89"
    dependencies = [
     "version_check",
    ]

    [[package]]
    name = "unicode-bidi"
    version = "0.3.15"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "08f95100a766bf4f8f28f90d77e0a5461bbdb219042e7679bebe79004fed8d75"

    [[package]]
    name = "unicode-ident"
    version = "1.0.12"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b"

    [[package]]
    name = "unicode-normalization"
    version = "0.1.23"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a56d1686db2308d901306f92a263857ef59ea39678a5458e7cb17f01415101f5"
    dependencies = [
     "tinyvec",
    ]

    [[package]]
    name = "unicode-segmentation"
    version = "1.11.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d4c87d22b6e3f4a18d4d40ef354e97c90fcb14dd91d7dc0aa9d8a1172ebf7202"

    [[package]]
    name = "unicode-xid"
    version = "0.2.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f962df74c8c05a667b5ee8bcf162993134c104e96440b663c8daa176dc772d8c"

    [[package]]
    name = "unicode_categories"
    version = "0.1.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "39ec24b3121d976906ece63c9daad25b85969647682eee313cb5779fdd69e14e"

    [[package]]
    name = "unidecode"
    version = "0.3.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "402bb19d8e03f1d1a7450e2bd613980869438e0666331be3e073089124aa1adc"

    [[package]]
    name = "untrusted"
    version = "0.7.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a156c684c91ea7d62626509bce3cb4e1d9ed5c4d978f7b4352658f96a4c26b4a"

    [[package]]
    name = "untrusted"
    version = "0.9.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1"

    [[package]]
    name = "url"
    version = "2.5.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "31e6302e3bb753d46e83516cae55ae196fc0c309407cf11ab35cc51a4c2a4633"
    dependencies = [
     "form_urlencoded",
     "idna",
     "percent-encoding",
     "serde",
    ]

    [[package]]
    name = "urlencoding"
    version = "2.1.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "daf8dba3b7eb870caf1ddeed7bc9d2a049f3cfdfae7cb521b087cc33ae4c49da"

    [[package]]
    name = "urlparse"
    version = "0.7.3"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "110352d4e9076c67839003c7788d8604e24dcded13e0b375af3efaa8cf468517"

    [[package]]
    name = "utf8parse"
    version = "0.2.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a"

    [[package]]
    name = "utoipa"
    version = "4.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "272ebdfbc99111033031d2f10e018836056e4d2c8e2acda76450ec7974269fa7"
    dependencies = [
     "indexmap 2.3.0",
     "serde",
     "serde_json",
     "utoipa-gen",
    ]

    [[package]]
    name = "utoipa-gen"
    version = "4.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d3c9f4d08338c1bfa70dde39412a040a884c6f318b3d09aaaf3437a1e52027fc"
    dependencies = [
     "proc-macro-error",
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "uuid"
    version = "1.8.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a183cf7feeba97b4dd1c0d46788634f6221d87fa961b305bed08c851829efcc0"
    dependencies = [
     "atomic",
     "getrandom",
    ]

    [[package]]
    name = "validator"
    version = "0.17.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "da339118f018cc70ebf01fafc103360528aad53717e4bf311db929cb01cb9345"
    dependencies = [
     "idna",
     "once_cell",
     "regex",
     "serde",
     "serde_derive",
     "serde_json",
     "url",
    ]

    [[package]]
    name = "valuable"
    version = "0.1.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d"

    [[package]]
    name = "vaultrs"
    version = "0.7.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0bb996bb053adadc767f8b0bda2a80bc2b67d24fe89f2b959ae919e200d79a19"
    dependencies = [
     "async-trait",
     "bytes 1.6.0",
     "derive_builder",
     "http 0.2.12",
     "reqwest",
     "rustify",
     "rustify_derive",
     "serde",
     "serde_json",
     "thiserror",
     "tracing",
     "url",
    ]

    [[package]]
    name = "vcpkg"
    version = "0.2.15"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426"

    [[package]]
    name = "vergen"
    version = "8.3.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e27d6bdd219887a9eadd19e1c34f32e47fa332301184935c6d9bca26f3cca525"
    dependencies = [
     "anyhow",
     "cargo_metadata 0.18.1",
     "cfg-if 1.0.0",
     "git2",
     "regex",
     "rustc_version 0.4.0",
     "rustversion",
     "time",
    ]

    [[package]]
    name = "version_check"
    version = "0.9.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f"

    [[package]]
    name = "void"
    version = "1.0.2"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "6a02e4885ed3bc0f2de90ea6dd45ebcbb66dacffe03547fadbb0eeae2770887d"

    [[package]]
    name = "vsimd"
    version = "0.8.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5c3082ca00d5a5ef149bb8b555a72ae84c9c59f7250f013ac822ac2e49b19c64"

    [[package]]
    name = "wait-timeout"
    version = "0.2.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9f200f5b12eb75f8c1ed65abd4b2db8a6e1b138a20de009dacee265a2498f3f6"
    dependencies = [
     "libc",
    ]

    [[package]]
    name = "walkdir"
    version = "2.5.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b"
    dependencies = [
     "same-file",
     "winapi-util",
    ]

    [[package]]
    name = "want"
    version = "0.3.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e"
    dependencies = [
     "try-lock",
    ]

    [[package]]
    name = "wasi"
    version = "0.11.0+wasi-snapshot-preview1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423"

    [[package]]
    name = "wasite"
    version = "0.1.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b8dad83b4f25e74f184f64c43b150b91efe7647395b42289f38e50566d82855b"

    [[package]]
    name = "wasm-bindgen"
    version = "0.2.92"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "4be2531df63900aeb2bca0daaaddec08491ee64ceecbee5076636a3b026795a8"
    dependencies = [
     "cfg-if 1.0.0",
     "wasm-bindgen-macro",
    ]

    [[package]]
    name = "wasm-bindgen-backend"
    version = "0.2.92"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "614d787b966d3989fa7bb98a654e369c762374fd3213d212cfc0251257e747da"
    dependencies = [
     "bumpalo",
     "log",
     "once_cell",
     "proc-macro2",
     "quote",
     "syn 2.0.57",
     "wasm-bindgen-shared",
    ]

    [[package]]
    name = "wasm-bindgen-futures"
    version = "0.4.42"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "76bc14366121efc8dbb487ab05bcc9d346b3b5ec0eaa76e46594cabbe51762c0"
    dependencies = [
     "cfg-if 1.0.0",
     "js-sys",
     "wasm-bindgen",
     "web-sys",
    ]

    [[package]]
    name = "wasm-bindgen-macro"
    version = "0.2.92"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a1f8823de937b71b9460c0c34e25f3da88250760bec0ebac694b49997550d726"
    dependencies = [
     "quote",
     "wasm-bindgen-macro-support",
    ]

    [[package]]
    name = "wasm-bindgen-macro-support"
    version = "0.2.92"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "e94f17b526d0a461a191c78ea52bbce64071ed5c04c9ffe424dcb38f74171bb7"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 2.0.57",
     "wasm-bindgen-backend",
     "wasm-bindgen-shared",
    ]

    [[package]]
    name = "wasm-bindgen-shared"
    version = "0.2.92"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "af190c94f2773fdb3729c55b007a722abb5384da03bc0986df4c289bf5567e96"

    [[package]]
    name = "web-sys"
    version = "0.3.69"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "77afa9a11836342370f4817622a2f0f418b134426d91a82dfb48f532d2ec13ef"
    dependencies = [
     "js-sys",
     "wasm-bindgen",
    ]

    [[package]]
    name = "webdriver"
    version = "0.46.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9973cb72c8587d5ad5efdb91e663d36177dc37725e6c90ca86c626b0cc45c93f"
    dependencies = [
     "base64 0.13.1",
     "bytes 1.6.0",
     "cookie 0.16.2",
     "http 0.2.12",
     "log",
     "serde",
     "serde_derive",
     "serde_json",
     "time",
     "unicode-segmentation",
     "url",
    ]

    [[package]]
    name = "webpki"
    version = "0.22.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ed63aea5ce73d0ff405984102c42de94fc55a6b75765d621c65262469b3c9b53"
    dependencies = [
     "ring 0.17.8",
     "untrusted 0.9.0",
    ]

    [[package]]
    name = "webpki-roots"
    version = "0.22.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b6c71e40d7d2c34a5106301fb632274ca37242cd0c9d3e64dbece371a40a2d87"
    dependencies = [
     "webpki",
    ]

    [[package]]
    name = "webpki-roots"
    version = "0.25.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5f20c57d8d7db6d3b86154206ae5d8fba62dd39573114de97c2cb0578251f8e1"

    [[package]]
    name = "whoami"
    version = "1.5.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a44ab49fad634e88f55bf8f9bb3abd2f27d7204172a112c7c9987e01c1c94ea9"
    dependencies = [
     "redox_syscall 0.4.1",
     "wasite",
    ]

    [[package]]
    name = "winapi"
    version = "0.2.8"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a"

    [[package]]
    name = "winapi"
    version = "0.3.9"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419"
    dependencies = [
     "winapi-i686-pc-windows-gnu",
     "winapi-x86_64-pc-windows-gnu",
    ]

    [[package]]
    name = "winapi-build"
    version = "0.1.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc"

    [[package]]
    name = "winapi-i686-pc-windows-gnu"
    version = "0.4.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6"

    [[package]]
    name = "winapi-util"
    version = "0.1.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f29e6f9198ba0d26b4c9f07dbe6f9ed633e1f3d5b8b414090084349e46a52596"
    dependencies = [
     "winapi 0.3.9",
    ]

    [[package]]
    name = "winapi-x86_64-pc-windows-gnu"
    version = "0.4.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f"

    [[package]]
    name = "windows-core"
    version = "0.52.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9"
    dependencies = [
     "windows-targets 0.52.4",
    ]

    [[package]]
    name = "windows-sys"
    version = "0.48.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9"
    dependencies = [
     "windows-targets 0.48.5",
    ]

    [[package]]
    name = "windows-sys"
    version = "0.52.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d"
    dependencies = [
     "windows-targets 0.52.4",
    ]

    [[package]]
    name = "windows-targets"
    version = "0.48.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c"
    dependencies = [
     "windows_aarch64_gnullvm 0.48.5",
     "windows_aarch64_msvc 0.48.5",
     "windows_i686_gnu 0.48.5",
     "windows_i686_msvc 0.48.5",
     "windows_x86_64_gnu 0.48.5",
     "windows_x86_64_gnullvm 0.48.5",
     "windows_x86_64_msvc 0.48.5",
    ]

    [[package]]
    name = "windows-targets"
    version = "0.52.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "7dd37b7e5ab9018759f893a1952c9420d060016fc19a472b4bb20d1bdd694d1b"
    dependencies = [
     "windows_aarch64_gnullvm 0.52.4",
     "windows_aarch64_msvc 0.52.4",
     "windows_i686_gnu 0.52.4",
     "windows_i686_msvc 0.52.4",
     "windows_x86_64_gnu 0.52.4",
     "windows_x86_64_gnullvm 0.52.4",
     "windows_x86_64_msvc 0.52.4",
    ]

    [[package]]
    name = "windows_aarch64_gnullvm"
    version = "0.48.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8"

    [[package]]
    name = "windows_aarch64_gnullvm"
    version = "0.52.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "bcf46cf4c365c6f2d1cc93ce535f2c8b244591df96ceee75d8e83deb70a9cac9"

    [[package]]
    name = "windows_aarch64_msvc"
    version = "0.48.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc"

    [[package]]
    name = "windows_aarch64_msvc"
    version = "0.52.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "da9f259dd3bcf6990b55bffd094c4f7235817ba4ceebde8e6d11cd0c5633b675"

    [[package]]
    name = "windows_i686_gnu"
    version = "0.48.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e"

    [[package]]
    name = "windows_i686_gnu"
    version = "0.52.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "b474d8268f99e0995f25b9f095bc7434632601028cf86590aea5c8a5cb7801d3"

    [[package]]
    name = "windows_i686_msvc"
    version = "0.48.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406"

    [[package]]
    name = "windows_i686_msvc"
    version = "0.52.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "1515e9a29e5bed743cb4415a9ecf5dfca648ce85ee42e15873c3cd8610ff8e02"

    [[package]]
    name = "windows_x86_64_gnu"
    version = "0.48.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e"

    [[package]]
    name = "windows_x86_64_gnu"
    version = "0.52.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "5eee091590e89cc02ad514ffe3ead9eb6b660aedca2183455434b93546371a03"

    [[package]]
    name = "windows_x86_64_gnullvm"
    version = "0.48.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc"

    [[package]]
    name = "windows_x86_64_gnullvm"
    version = "0.52.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "77ca79f2451b49fa9e2af39f0747fe999fcda4f5e241b2898624dca97a1f2177"

    [[package]]
    name = "windows_x86_64_msvc"
    version = "0.48.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538"

    [[package]]
    name = "windows_x86_64_msvc"
    version = "0.52.4"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "32b752e52a2da0ddfbdbcc6fceadfeede4c939ed16d13e648833a61dfb611ed8"

    [[package]]
    name = "winnow"
    version = "0.5.40"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "f593a95398737aeed53e489c785df13f3618e41dbcd6718c6addbf1395aa6876"
    dependencies = [
     "memchr",
    ]

    [[package]]
    name = "winnow"
    version = "0.6.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "dffa400e67ed5a4dd237983829e66475f0a4a26938c4b04c21baede6262215b8"
    dependencies = [
     "memchr",
    ]

    [[package]]
    name = "winreg"
    version = "0.50.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "524e57b2c537c0f9b1e69f1965311ec12182b4122e45035b1508cd24d2adadb1"
    dependencies = [
     "cfg-if 1.0.0",
     "windows-sys 0.48.0",
    ]

    [[package]]
    name = "wiremock"
    version = "0.6.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "ec874e1eef0df2dcac546057fe5e29186f09c378181cd7b635b4b7bcc98e9d81"
    dependencies = [
     "assert-json-diff",
     "async-trait",
     "base64 0.21.7",
     "deadpool",
     "futures 0.3.30",
     "http 1.1.0",
     "http-body-util",
     "hyper 1.2.0",
     "hyper-util",
     "log",
     "once_cell",
     "regex",
     "serde",
     "serde_json",
     "tokio 1.37.0",
     "url",
    ]

    [[package]]
    name = "ws2_32-sys"
    version = "0.2.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "d59cefebd0c892fa2dd6de581e937301d8552cb44489cdff035c6187cb63fa5e"
    dependencies = [
     "winapi 0.2.8",
     "winapi-build",
    ]

    [[package]]
    name = "wyz"
    version = "0.5.1"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "05f360fc0b24296329c78fda852a1e9ae82de9cf7b27dae4b7f62f118f77b9ed"
    dependencies = [
     "tap",
    ]

    [[package]]
    name = "x509-parser"
    version = "0.16.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "fcbc162f30700d6f3f82a24bf7cc62ffe7caea42c0b2cba8bf7f3ae50cf51f69"
    dependencies = [
     "asn1-rs",
     "data-encoding",
     "der-parser",
     "lazy_static",
     "nom",
     "oid-registry",
     "rusticata-macros",
     "thiserror",
     "time",
    ]

    [[package]]
    name = "xmlparser"
    version = "0.13.6"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "66fee0b777b0f5ac1c69bb06d361268faafa61cd4682ae064a171c16c433e9e4"

    [[package]]
    name = "yaml-rust"
    version = "0.4.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "56c1936c4cc7a1c9ab21a1ebb602eb942ba868cbd44a99cb7cdc5892335e1c85"
    dependencies = [
     "linked-hash-map",
    ]

    [[package]]
    name = "zerocopy"
    version = "0.7.32"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "74d4d3961e53fa4c9a25a8637fc2bfaf2595b3d3ae34875568a5cf64787716be"
    dependencies = [
     "zerocopy-derive",
    ]

    [[package]]
    name = "zerocopy-derive"
    version = "0.7.32"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9ce1b18ccd8e73a9321186f97e46f9f04b778851177567b1975109d26a08d2a6"
    dependencies = [
     "proc-macro2",
     "quote",
     "syn 2.0.57",
    ]

    [[package]]
    name = "zeroize"
    version = "1.7.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "525b4ec142c6b68a2d10f01f7bbf6755599ca3f81ea53b8431b7dd348f5fdb2d"

    [[package]]
    name = "zstd"
    version = "0.13.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "bffb3309596d527cfcba7dfc6ed6052f1d39dfbd7c867aa2e865e4a449c10110"
    dependencies = [
     "zstd-safe",
    ]

    [[package]]
    name = "zstd-safe"
    version = "7.0.0"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "43747c7422e2924c11144d5229878b98180ef8b06cca4ab5af37afc8a8d8ea3e"
    dependencies = [
     "zstd-sys",
    ]

    [[package]]
    name = "zstd-sys"
    version = "2.0.9+zstd.1.5.5"
    source = "registry+https://github.com/rust-lang/crates.io-index"
    checksum = "9e16efa8a874a0481a574084d34cc26fdb3b99627480f785888deb6386506656"
    dependencies = [
     "cc",
     "pkg-config",
    ]
  Cargo.nix: |-
    # This file was @generated by cargo2nix 0.11.0.
    # It is not intended to be manually edited.

    args@{
      release ? true,
      rootFeatures ? [
        "api_models/default"
        "common_utils/default"
        "masking/default"
        "router_env/default"
        "router_derive/default"
        "drainer/default"
        "redis_interface/default"
        "diesel_models/default"
        "router/default"
      ],
      rustPackages,
      buildRustPackages,
      hostPlatform,
      hostPlatformCpu ? null,
      hostPlatformFeatures ? [],
      target ? null,
      codegenOpts ? null,
      profileOpts ? null,
      rustcLinkFlags ? null,
      rustcBuildFlags ? null,
      mkRustCrate,
      rustLib,
      lib,
      workspaceSrc,
    }:
    let
      workspaceSrc = if args.workspaceSrc == null then ./. else args.workspaceSrc;
    in let
      inherit (rustLib) fetchCratesIo fetchCrateLocal fetchCrateGit fetchCrateAlternativeRegistry expandFeatures decideProfile genDrvsByProfile;
      profilesByName = {
        release = builtins.fromTOML "codegen-units = 1\nlto = true\nstrip = true\n";
      };
      rootFeatures' = expandFeatures rootFeatures;
      overridableMkRustCrate = f:
        let
          drvs = genDrvsByProfile profilesByName ({ profile, profileName }: mkRustCrate ({ inherit release profile hostPlatformCpu hostPlatformFeatures target profileOpts codegenOpts rustcLinkFlags rustcBuildFlags; } // (f profileName)));
        in { compileMode ? null, profileName ? decideProfile compileMode release }:
          let drv = drvs.${profileName}; in if compileMode == null then drv else drv.override { inherit compileMode; };
    in
    {
      cargo2nixVersion = "0.11.0";
      workspace = {
        api_models = rustPackages.unknown.api_models."0.1.0";
        common_utils = rustPackages.unknown.common_utils."0.1.0";
        masking = rustPackages.unknown.masking."0.1.0";
        router_env = rustPackages.unknown.router_env."0.1.0";
        router_derive = rustPackages.unknown.router_derive."0.1.0";
        drainer = rustPackages.unknown.drainer."0.1.0";
        redis_interface = rustPackages.unknown.redis_interface."0.1.0";
        diesel_models = rustPackages.unknown.diesel_models."0.1.0";
        router = rustPackages.unknown.router."0.2.0";
      };
      "registry+https://github.com/rust-lang/crates.io-index".actix."0.13.0" = overridableMkRustCrate (profileName: rec {
        name = "actix";
        version = "0.13.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "f728064aca1c318585bf4bb04ffcfac9e75e508ab4e8b1bd9ba5dfe04e2cbed5"; };
        features = builtins.concatLists [
          [ "actix_derive" ]
          [ "default" ]
          [ "macros" ]
        ];
        dependencies = {
          actix_rt = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-rt."2.8.0" { inherit profileName; };
          actix_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".actix_derive."0.6.0" { profileName = "__noProfile"; };
          bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          crossbeam_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.5.6" { inherit profileName; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.25" { inherit profileName; };
          futures_task = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.25" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.1" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.10.0" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          tokio_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.4" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".actix-codec."0.5.0" = overridableMkRustCrate (profileName: rec {
        name = "actix-codec";
        version = "0.5.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "57a7559404a7f3573127aab53c08ce37a6c6a315c374a31070f3c91cd1b4a7fe"; };
        dependencies = {
          bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.25" { inherit profileName; };
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          tokio_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.4" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".actix-cors."0.6.4" = overridableMkRustCrate (profileName: rec {
        name = "actix-cors";
        version = "0.6.4";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "b340e9cfa5b08690aae90fb61beb44e9b06f44fe3d0f93781aaa58cfba86245e"; };
        dependencies = {
          actix_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-utils."3.0.1" { inherit profileName; };
          actix_web = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-web."4.3.0" { inherit profileName; };
          derive_more = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_more."0.99.17" { profileName = "__noProfile"; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.10.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".actix-http."3.3.0" = overridableMkRustCrate (profileName: rec {
        name = "actix-http";
        version = "3.3.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "0070905b2c4a98d184c4e81025253cb192aa8a73827553f38e9410801ceb35bb"; };
        features = builtins.concatLists [
          [ "__compress" ]
          [ "base64" ]
          [ "brotli" ]
          [ "compress-brotli" ]
          [ "compress-gzip" ]
          [ "compress-zstd" ]
          [ "default" ]
          [ "flate2" ]
          [ "h2" ]
          [ "http2" ]
          [ "local-channel" ]
          [ "rand" ]
          [ "sha1" ]
          [ "ws" ]
          [ "zstd" ]
        ];
        dependencies = {
          actix_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-codec."0.5.0" { inherit profileName; };
          actix_rt = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-rt."2.8.0" { inherit profileName; };
          actix_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-service."2.0.2" { inherit profileName; };
          actix_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-utils."3.0.1" { inherit profileName; };
          ahash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ahash."0.7.6" { inherit profileName; };
          base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.0" { inherit profileName; };
          bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
          brotli = rustPackages."registry+https://github.com/rust-lang/crates.io-index".brotli."3.3.4" { inherit profileName; };
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          bytestring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytestring."1.2.0" { inherit profileName; };
          derive_more = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_more."0.99.17" { profileName = "__noProfile"; };
          encoding_rs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding_rs."0.8.31" { inherit profileName; };
          flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.25" { inherit profileName; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          h2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".h2."0.3.15" { inherit profileName; };
          http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          httparse = rustPackages."registry+https://github.com/rust-lang/crates.io-index".httparse."1.8.0" { inherit profileName; };
          httpdate = rustPackages."registry+https://github.com/rust-lang/crates.io-index".httpdate."1.0.2" { inherit profileName; };
          itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.5" { inherit profileName; };
          language_tags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".language-tags."0.3.2" { inherit profileName; };
          local_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".local-channel."0.1.3" { inherit profileName; };
          mime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.16" { inherit profileName; };
          percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.2.0" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; };
          sha1 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha1."0.10.5" { inherit profileName; };
          smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.10.0" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          tokio_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.4" { inherit profileName; };
          tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
          zstd = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zstd."0.12.2+zstd.1.5.2" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".actix-macros."0.2.3" = overridableMkRustCrate (profileName: rec {
        name = "actix-macros";
        version = "0.2.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "465a6172cf69b960917811022d8f29bc0b7fa1398bc4f78b3c466673db1213b6"; };
        dependencies = {
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".actix-router."0.5.1" = overridableMkRustCrate (profileName: rec {
        name = "actix-router";
        version = "0.5.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "d66ff4d247d2b160861fa2866457e85706833527840e4133f8f49aa423a38799"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "http" ]
        ];
        dependencies = {
          bytestring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytestring."1.2.0" { inherit profileName; };
          http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.7.1" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".actix-rt."2.8.0" = overridableMkRustCrate (profileName: rec {
        name = "actix-rt";
        version = "2.8.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "15265b6b8e2347670eb363c47fc8c75208b4a4994b27192f345fcbe707804f3e"; };
        features = builtins.concatLists [
          [ "actix-macros" ]
          [ "default" ]
          [ "macros" ]
        ];
        dependencies = {
          actix_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-macros."0.2.3" { profileName = "__noProfile"; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".actix-server."2.1.1" = overridableMkRustCrate (profileName: rec {
        name = "actix-server";
        version = "2.1.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "0da34f8e659ea1b077bb4637948b815cd3768ad5a188fdcd74ff4d84240cd824"; };
        features = builtins.concatLists [
          [ "default" ]
        ];
        dependencies = {
          actix_rt = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-rt."2.8.0" { inherit profileName; };
          actix_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-service."2.0.2" { inherit profileName; };
          actix_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-utils."3.0.1" { inherit profileName; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          mio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.8.5" { inherit profileName; };
          num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.15.0" { inherit profileName; };
          socket2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.4.7" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".actix-service."2.0.2" = overridableMkRustCrate (profileName: rec {
        name = "actix-service";
        version = "2.0.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "3b894941f818cfdc7ccc4b9e60fa7e53b5042a2e8567270f9147d5591893373a"; };
        dependencies = {
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          paste = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".paste."1.0.11" { profileName = "__noProfile"; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".actix-tls."3.0.3" = overridableMkRustCrate (profileName: rec {
        name = "actix-tls";
        version = "3.0.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "9fde0cf292f7cdc7f070803cb9a0d45c018441321a78b1042ffbbb81ec333297"; };
        features = builtins.concatLists [
          [ "accept" ]
          [ "connect" ]
          [ "default" ]
          [ "http" ]
          [ "rustls" ]
          [ "tokio-rustls" ]
          [ "uri" ]
          [ "webpki-roots" ]
        ];
        dependencies = {
          actix_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-codec."0.5.0" { inherit profileName; };
          actix_rt = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-rt."2.8.0" { inherit profileName; };
          actix_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-service."2.0.2" { inherit profileName; };
          actix_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-utils."3.0.1" { inherit profileName; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          tokio_rustls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-rustls."0.23.4" { inherit profileName; };
          tokio_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.4" { inherit profileName; };
          webpki_roots = rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki-roots."0.22.6" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".actix-utils."3.0.1" = overridableMkRustCrate (profileName: rec {
        name = "actix-utils";
        version = "3.0.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "88a1dcdff1466e3c2488e1cb5c36a71822750ad43839937f85d2f4d9f8b705d8"; };
        dependencies = {
          local_waker = rustPackages."registry+https://github.com/rust-lang/crates.io-index".local-waker."0.1.3" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".actix-web."4.3.0" = overridableMkRustCrate (profileName: rec {
        name = "actix-web";
        version = "4.3.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "464e0fddc668ede5f26ec1f9557a8d44eda948732f40c6b0ad79126930eb775f"; };
        features = builtins.concatLists [
          [ "__compress" ]
          [ "actix-macros" ]
          [ "actix-web-codegen" ]
          [ "compress-brotli" ]
          [ "compress-gzip" ]
          [ "compress-zstd" ]
          [ "cookie" ]
          [ "cookies" ]
          [ "default" ]
          [ "macros" ]
        ];
        dependencies = {
          actix_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-codec."0.5.0" { inherit profileName; };
          actix_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-http."3.3.0" { inherit profileName; };
          actix_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-macros."0.2.3" { profileName = "__noProfile"; };
          actix_router = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-router."0.5.1" { inherit profileName; };
          actix_rt = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-rt."2.8.0" { inherit profileName; };
          actix_server = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-server."2.1.1" { inherit profileName; };
          actix_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-service."2.0.2" { inherit profileName; };
          actix_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-utils."3.0.1" { inherit profileName; };
          actix_web_codegen = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-web-codegen."4.1.0" { profileName = "__noProfile"; };
          ahash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ahash."0.7.6" { inherit profileName; };
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          bytestring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytestring."1.2.0" { inherit profileName; };
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
          cookie = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cookie."0.16.2" { inherit profileName; };
          derive_more = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_more."0.99.17" { profileName = "__noProfile"; };
          encoding_rs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding_rs."0.8.31" { inherit profileName; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.5" { inherit profileName; };
          language_tags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".language-tags."0.3.2" { inherit profileName; };
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          mime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.16" { inherit profileName; };
          once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.7.1" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
          serde_urlencoded = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.7.1" { inherit profileName; };
          smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.10.0" { inherit profileName; };
          socket2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.4.7" { inherit profileName; };
          time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.17" { inherit profileName; };
          url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.3.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".actix-web-codegen."4.1.0" = overridableMkRustCrate (profileName: rec {
        name = "actix-web-codegen";
        version = "4.1.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "1fa9362663c8643d67b2d5eafba49e4cb2c8a053a29ed00a0bea121f17c76b13"; };
        dependencies = {
          actix_router = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-router."0.5.1" { inherit profileName; };
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".actix_derive."0.6.0" = overridableMkRustCrate (profileName: rec {
        name = "actix_derive";
        version = "0.6.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "6d44b8fee1ced9671ba043476deddef739dd0959bf77030b26b738cc591737a7"; };
        dependencies = {
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".adler."1.0.2" = overridableMkRustCrate (profileName: rec {
        name = "adler";
        version = "1.0.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".ahash."0.7.6" = overridableMkRustCrate (profileName: rec {
        name = "ahash";
        version = "0.7.6";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "fcb51a0695d8f838b1ee009b3fbf66bda078cd64590202a864a8f3e8c4315c47"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
        dependencies = {
          ${ if hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "freebsd" || hostPlatform.parsed.kernel.name == "openbsd" || hostPlatform.parsed.kernel.name == "netbsd" || hostPlatform.parsed.kernel.name == "dragonfly" || hostPlatform.parsed.kernel.name == "solaris" || hostPlatform.parsed.kernel.name == "illumos" || hostPlatform.parsed.kernel.name == "fuchsia" || hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "cloudabi" || hostPlatform.parsed.kernel.name == "haiku" || hostPlatform.parsed.kernel.name == "vxworks" || hostPlatform.parsed.kernel.name == "emscripten" || hostPlatform.parsed.kernel.name == "wasi" then "getrandom" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.8" { inherit profileName; };
          ${ if !((hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l") && hostPlatform.parsed.kernel.name == "none") then "once_cell" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
        };
        buildDependencies = {
          version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.4" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".aho-corasick."0.7.20" = overridableMkRustCrate (profileName: rec {
        name = "aho-corasick";
        version = "0.7.20";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "cc936419f96fa211c1b9166887b38e5e40b19958e5b895be7c1f93adec7071ac"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
        dependencies = {
          memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".alloc-no-stdlib."2.0.4" = overridableMkRustCrate (profileName: rec {
        name = "alloc-no-stdlib";
        version = "2.0.4";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "cc7bb162ec39d46ab1ca8c77bf72e890535becd1751bb45f64c597edb4c8c6b3"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".alloc-stdlib."0.2.2" = overridableMkRustCrate (profileName: rec {
        name = "alloc-stdlib";
        version = "0.2.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "94fb8275041c72129eb51b7d0322c29b8387a0386127718b096429201a5d6ece"; };
        dependencies = {
          alloc_no_stdlib = rustPackages."registry+https://github.com/rust-lang/crates.io-index".alloc-no-stdlib."2.0.4" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.68" = overridableMkRustCrate (profileName: rec {
        name = "anyhow";
        version = "1.0.68";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "2cb2f989d18dd141ab8ae82f64d1a8cdd37e0840f73a406896cf5e99502fab61"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
      });
      "unknown".api_models."0.1.0" = overridableMkRustCrate (profileName: rec {
        name = "api_models";
        version = "0.1.0";
        registry = "unknown";
        src = fetchCrateLocal (workspaceSrc + "/crates/api_models");
        dependencies = {
          actix_web = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-web."4.3.0" { inherit profileName; };
          common_utils = rustPackages."unknown".common_utils."0.1.0" { inherit profileName; };
          error_stack = rustPackages."registry+https://github.com/rust-lang/crates.io-index".error-stack."0.2.4" { inherit profileName; };
          frunk = rustPackages."registry+https://github.com/rust-lang/crates.io-index".frunk."0.4.1" { inherit profileName; };
          frunk_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".frunk_core."0.4.1" { inherit profileName; };
          masking = rustPackages."unknown".masking."0.1.0" { inherit profileName; };
          mime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.16" { inherit profileName; };
          reqwest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".reqwest."0.11.14" { inherit profileName; };
          router_derive = buildRustPackages."unknown".router_derive."0.1.0" { profileName = "__noProfile"; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
          strum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strum."0.24.1" { inherit profileName; };
          time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.17" { inherit profileName; };
          utoipa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".utoipa."3.0.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".arc-swap."1.6.0" = overridableMkRustCrate (profileName: rec {
        name = "arc-swap";
        version = "1.6.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "bddcadddf5e9015d310179a59bb28c4d4b9920ad0f11e8e14dbadf654890c9a6"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".arcstr."1.1.5" = overridableMkRustCrate (profileName: rec {
        name = "arcstr";
        version = "1.1.5";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "3f907281554a3d0312bb7aab855a8e0ef6cbf1614d06de54105039ca8b34460e"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "substr" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".arrayref."0.3.6" = overridableMkRustCrate (profileName: rec {
        name = "arrayref";
        version = "0.3.6";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "a4c527152e37cf757a3f78aae5a06fbeefdb07ccc535c980a3208ee3060dd544"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.2" = overridableMkRustCrate (profileName: rec {
        name = "arrayvec";
        version = "0.7.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "8da52d66c7071e2e3fa2a1e5c6d088fec47b593032b254f5e980de8ea54454d6"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".assert-json-diff."2.0.2" = overridableMkRustCrate (profileName: rec {
        name = "assert-json-diff";
        version = "2.0.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "47e4f2b81832e72834d7518d8487a0396a28cc408186a2e8854c0f98011faf12"; };
        dependencies = {
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
        };
      });
      "git+https://github.com/juspay/async-bb8-diesel".async-bb8-diesel."0.1.0" = overridableMkRustCrate (profileName: rec {
        name = "async-bb8-diesel";
        version = "0.1.0";
        registry = "git+https://github.com/juspay/async-bb8-diesel";
        src = fetchCrateGit {
          url = https://github.com/juspay/async-bb8-diesel;
          name = "async-bb8-diesel";
          version = "0.1.0";
          rev = "9a71d142726dbc33f41c1fd935ddaa79841c7be5";};
        dependencies = {
          async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.63" { profileName = "__noProfile"; };
          bb8 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bb8."0.8.0" { inherit profileName; };
          diesel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".diesel."2.0.3" { inherit profileName; };
          thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.38" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".async-channel."1.8.0" = overridableMkRustCrate (profileName: rec {
        name = "async-channel";
        version = "1.8.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "cf46fee83e5ccffc220104713af3292ff9bc7c64c7de289f66dae8e38d826833"; };
        dependencies = {
          concurrent_queue = rustPackages."registry+https://github.com/rust-lang/crates.io-index".concurrent-queue."2.1.0" { inherit profileName; };
          event_listener = rustPackages."registry+https://github.com/rust-lang/crates.io-index".event-listener."2.5.3" { inherit profileName; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".async-compression."0.3.15" = overridableMkRustCrate (profileName: rec {
        name = "async-compression";
        version = "0.3.15";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "942c7cd7ae39e91bde4820d74132e9862e62c2f386c3aa90ccf55949f5bad63a"; };
        features = builtins.concatLists [
          [ "flate2" ]
          [ "gzip" ]
          [ "tokio" ]
        ];
        dependencies = {
          flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.25" { inherit profileName; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".async-stream."0.3.3" = overridableMkRustCrate (profileName: rec {
        name = "async-stream";
        version = "0.3.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "dad5c83079eae9969be7fadefe640a1c566901f05ff91ab221de4b6f68d9507e"; };
        dependencies = {
          async_stream_impl = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-stream-impl."0.3.3" { profileName = "__noProfile"; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".async-stream-impl."0.3.3" = overridableMkRustCrate (profileName: rec {
        name = "async-stream-impl";
        version = "0.3.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "10f203db73a71dfa2fb6dd22763990fa26f3d2625a6da2da900d23b87d26be27"; };
        dependencies = {
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.63" = overridableMkRustCrate (profileName: rec {
        name = "async-trait";
        version = "0.1.63";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "eff18d764974428cf3a9328e23fc5c986f5fbed46e6cd4cdf42544df5d297ec1"; };
        dependencies = {
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" = overridableMkRustCrate (profileName: rec {
        name = "atty";
        version = "0.2.14";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8"; };
        dependencies = {
          ${ if hostPlatform.parsed.kernel.name == "hermit" then "hermit_abi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.19" { inherit profileName; };
          ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" = overridableMkRustCrate (profileName: rec {
        name = "autocfg";
        version = "1.1.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".awc."3.1.0" = overridableMkRustCrate (profileName: rec {
        name = "awc";
        version = "3.1.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "0dff3fc64a176e0d4398c71b0f2c2679ff4a723c6ed8fcc68dfe5baa00665388"; };
        features = builtins.concatLists [
          [ "__compress" ]
          [ "compress-brotli" ]
          [ "compress-gzip" ]
          [ "compress-zstd" ]
          [ "cookie" ]
          [ "cookies" ]
          [ "default" ]
          [ "rustls" ]
          [ "tls-rustls" ]
        ];
        dependencies = {
          actix_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-codec."0.5.0" { inherit profileName; };
          actix_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-http."3.3.0" { inherit profileName; };
          actix_rt = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-rt."2.8.0" { inherit profileName; };
          actix_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-service."2.0.2" { inherit profileName; };
          actix_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-tls."3.0.3" { inherit profileName; };
          actix_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-utils."3.0.1" { inherit profileName; };
          ahash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ahash."0.7.6" { inherit profileName; };
          base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.0" { inherit profileName; };
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
          cookie = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cookie."0.16.2" { inherit profileName; };
          derive_more = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_more."0.99.17" { profileName = "__noProfile"; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          h2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".h2."0.3.15" { inherit profileName; };
          http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.5" { inherit profileName; };
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          mime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.16" { inherit profileName; };
          percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.2.0" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; };
          tls_rustls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.20.8" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
          serde_urlencoded = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.7.1" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".aws-config."0.54.1" = overridableMkRustCrate (profileName: rec {
        name = "aws-config";
        version = "0.54.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "3c3d1e2a1f1ab3ac6c4b884e37413eaa03eb9d901e4fc68ee8f5c1d49721680e"; };
        features = builtins.concatLists [
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "client-hyper")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "default")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "rt-tokio")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "rustls")
        ];
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_credential_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-credential-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-http."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_sdk_sso" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-sdk-sso."0.24.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_sdk_sts" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-sdk-sts."0.24.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_async" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-async."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_client" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-client."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_http_tower" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http-tower."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_json" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-json."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "hex" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "hyper" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.23" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "ring" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.16.20" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "time" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.17" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tower" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tracing" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "zeroize" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.5.7" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".aws-credential-types."0.54.1" = overridableMkRustCrate (profileName: rec {
        name = "aws-credential-types";
        version = "0.54.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "bb0696a0523a39a19087747e4dafda0362dc867531e3d72a3f195564c84e5e08"; };
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_async" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-async."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tracing" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "zeroize" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.5.7" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".aws-endpoint."0.54.1" = overridableMkRustCrate (profileName: rec {
        name = "aws-endpoint";
        version = "0.54.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "80a4f935ab6a1919fbfd6102a80c4fccd9ff5f47f94ba154074afe1051903261"; };
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "regex" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.7.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tracing" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".aws-http."0.54.1" = overridableMkRustCrate (profileName: rec {
        name = "aws-http";
        version = "0.54.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "82976ca4e426ee9ca3ffcf919d9b2c8d14d0cd80d43cc02173737a8f07f28d4d"; };
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_credential_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-credential-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "http_body" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "lazy_static" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "percent_encoding" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.2.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "pin_project_lite" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tracing" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".aws-sdk-kms."0.24.0" = overridableMkRustCrate (profileName: rec {
        name = "aws-sdk-kms";
        version = "0.24.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "434d7097fc824eee1d94cf6c5e3a30714da15b81a5b99618f8feb67f8eb2f70a"; };
        features = builtins.concatLists [
          (lib.optional (rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "default")
          (lib.optional (rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "rt-tokio")
          (lib.optional (rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "rustls")
        ];
        dependencies = {
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_credential_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-credential-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_endpoint" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-endpoint."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-http."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_sig_auth" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-sig-auth."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_async" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-async."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_client" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-client."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_http_tower" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http-tower."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_json" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-json."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "regex" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.7.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tokio_stream" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-stream."0.1.11" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tower" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tracing" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".aws-sdk-sso."0.24.0" = overridableMkRustCrate (profileName: rec {
        name = "aws-sdk-sso";
        version = "0.24.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "ca0119bacf0c42f587506769390983223ba834e605f049babe514b2bd646dbb2"; };
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_credential_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-credential-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_endpoint" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-endpoint."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-http."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_sig_auth" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-sig-auth."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_async" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-async."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_client" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-client."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_http_tower" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http-tower."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_json" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-json."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "regex" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.7.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tokio_stream" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-stream."0.1.11" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tower" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".aws-sdk-sts."0.24.0" = overridableMkRustCrate (profileName: rec {
        name = "aws-sdk-sts";
        version = "0.24.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "270b6a33969ebfcb193512fbd5e8ee5306888ad6c6d5d775cdbfb2d50d94de26"; };
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_credential_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-credential-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_endpoint" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-endpoint."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-http."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_sig_auth" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-sig-auth."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_async" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-async."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_client" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-client."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_http_tower" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http-tower."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_json" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-json."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_query" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-query."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_xml" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-xml."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "regex" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.7.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tower" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tracing" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".aws-sig-auth."0.54.1" = overridableMkRustCrate (profileName: rec {
        name = "aws-sig-auth";
        version = "0.54.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "660a02a98ab1af83bd8d714afbab2d502ba9b18c49e7e4cddd6bf8837ff778cb"; };
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_credential_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-credential-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_sigv4" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-sigv4."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tracing" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".aws-sigv4."0.54.1" = overridableMkRustCrate (profileName: rec {
        name = "aws-sigv4";
        version = "0.54.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "cdaf11005b7444e6cd66f600d09861a3aeb6eb89a0f003c7c9820dbab2d15297"; };
        features = builtins.concatLists [
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "default")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "form_urlencoded")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "http")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "percent-encoding")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "sign-http")
        ];
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "form_urlencoded" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".form_urlencoded."1.1.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "hex" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "hmac" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hmac."0.12.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "once_cell" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "percent_encoding" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.2.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "regex" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.7.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "sha2" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.6" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "time" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.17" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tracing" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-async."0.54.1" = overridableMkRustCrate (profileName: rec {
        name = "aws-smithy-async";
        version = "0.54.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "075d87b46420b28b64140f2ba88fa6b158c2877466a2acdbeaf396c25e4b9b33"; };
        features = builtins.concatLists [
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "rt-tokio")
        ];
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "futures_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "pin_project_lite" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tokio_stream" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-stream."0.1.11" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-client."0.54.1" = overridableMkRustCrate (profileName: rec {
        name = "aws-smithy-client";
        version = "0.54.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "17d44078855a64d757e5c1727df29ffa6679022c38cfc4ba4e63ee9567133141"; };
        features = builtins.concatLists [
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "client-hyper")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "hyper")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "hyper-rustls")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "lazy_static")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "rt-tokio")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "rustls")
        ];
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_async" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-async."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_http_tower" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http-tower."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "fastrand" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fastrand."1.8.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "http_body" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "hyper" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.23" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "hyper_rustls" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper-rustls."0.23.2" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "lazy_static" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "pin_project_lite" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tower" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tracing" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.54.1" = overridableMkRustCrate (profileName: rec {
        name = "aws-smithy-http";
        version = "0.54.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "b5bd86f48d7e36fb24ee922d04d79c8353e01724b1c38757ed92593179223aa7"; };
        features = builtins.concatLists [
          (lib.optional (rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "rt-tokio")
          (lib.optional (rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "tokio")
          (lib.optional (rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "tokio-util")
        ];
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "bytes_utils" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes-utils."0.1.3" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "futures_core" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "http_body" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "hyper" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.23" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "once_cell" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "percent_encoding" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.2.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "pin_project_lite" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "pin_utils" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-utils."0.1.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tokio_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.4" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tracing" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http-tower."0.54.1" = overridableMkRustCrate (profileName: rec {
        name = "aws-smithy-http-tower";
        version = "0.54.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "c8972d1b4ae3aba1a10e7106fed53a5a36bc8ef86170a84f6ddd33d36fac12ad"; };
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "http_body" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "pin_project_lite" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tower" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tracing" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-json."0.54.1" = overridableMkRustCrate (profileName: rec {
        name = "aws-smithy-json";
        version = "0.54.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "18973f12721e27b54891386497a57e1ba09975df1c6cfeccafaf541198962aef"; };
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.54.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-query."0.54.1" = overridableMkRustCrate (profileName: rec {
        name = "aws-smithy-query";
        version = "0.54.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "2881effde104a2b0619badaad9f30ae67805e86fbbdb99e5fcc176e8bfbc1a85"; };
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "urlencoding" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".urlencoding."2.1.2" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.54.1" = overridableMkRustCrate (profileName: rec {
        name = "aws-smithy-types";
        version = "0.54.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "da7e499c4b15bab8eb6b234df31833cc83a1bdaa691ba72d5d81efc109d9d705"; };
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "base64_simd" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64-simd."0.7.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "itoa" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.5" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "num_integer" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.45" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "ryu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.12" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "time" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.17" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-xml."0.54.1" = overridableMkRustCrate (profileName: rec {
        name = "aws-smithy-xml";
        version = "0.54.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "9a73082f023f4a361fe811954da0061076709198792a3d2ad3a7498e10b606a0"; };
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "xmlparser" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".xmlparser."0.13.5" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".aws-types."0.54.1" = overridableMkRustCrate (profileName: rec {
        name = "aws-types";
        version = "0.54.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "f8f15b34253b68cde08e39b0627cc6101bcca64351229484b4743392c035d057"; };
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_credential_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-credential-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_async" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-async."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_client" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-client."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_smithy_types" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tracing" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
        };
        buildDependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "rustc_version" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.4.0" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".axum."0.6.2" = overridableMkRustCrate (profileName: rec {
        name = "axum";
        version = "0.6.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "1304eab461cf02bd70b083ed8273388f9724c549b316ba3d1e213ce0e9e7fb7e"; };
        dependencies = {
          async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.63" { profileName = "__noProfile"; };
          axum_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".axum-core."0.3.1" { inherit profileName; };
          bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          http_body = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" { inherit profileName; };
          hyper = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.23" { inherit profileName; };
          itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.5" { inherit profileName; };
          matchit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matchit."0.7.0" { inherit profileName; };
          memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" { inherit profileName; };
          mime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.16" { inherit profileName; };
          percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.2.0" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          sync_wrapper = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sync_wrapper."0.1.1" { inherit profileName; };
          tower = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" { inherit profileName; };
          tower_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-http."0.3.5" { inherit profileName; };
          tower_layer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-layer."0.3.2" { inherit profileName; };
          tower_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" { inherit profileName; };
        };
        buildDependencies = {
          rustversion = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustversion."1.0.11" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".axum-core."0.3.1" = overridableMkRustCrate (profileName: rec {
        name = "axum-core";
        version = "0.3.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "f487e40dc9daee24d8a1779df88522f159a54a980f99cfbe43db0be0bd3444a8"; };
        dependencies = {
          async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.63" { profileName = "__noProfile"; };
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          http_body = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" { inherit profileName; };
          mime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.16" { inherit profileName; };
          tower_layer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-layer."0.3.2" { inherit profileName; };
          tower_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" { inherit profileName; };
        };
        buildDependencies = {
          rustversion = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustversion."1.0.11" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".base64."0.13.1" = overridableMkRustCrate (profileName: rec {
        name = "base64";
        version = "0.13.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "9e1b586273c5702936fe7b7d6896644d8be71e6314cfe09d3167c95f712589e8"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".base64."0.21.0" = overridableMkRustCrate (profileName: rec {
        name = "base64";
        version = "0.21.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "a4a4ddaa51a5bc52a6948f74c06d20aaaddb71924eab79b8c97a8c556e942d6a"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".base64-simd."0.7.0" = overridableMkRustCrate (profileName: rec {
        name = "base64-simd";
        version = "0.7.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "781dd20c3aff0bd194fe7d2a977dd92f21c173891f3a03b677359e5fa457e5d5"; };
        features = builtins.concatLists [
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "alloc")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "default")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "detect")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "std")
        ];
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "simd_abstraction" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".simd-abstraction."0.7.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".bb8."0.8.0" = overridableMkRustCrate (profileName: rec {
        name = "bb8";
        version = "0.8.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "1627eccf3aa91405435ba240be23513eeca466b5dc33866422672264de061582"; };
        dependencies = {
          async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.63" { profileName = "__noProfile"; };
          futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.25" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.1" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".bit-set."0.5.3" = overridableMkRustCrate (profileName: rec {
        name = "bit-set";
        version = "0.5.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "0700ddab506f33b20a03b13996eccd309a48e5ff77d0d95926aa0210fb4e95f1"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
        dependencies = {
          bit_vec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bit-vec."0.6.3" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".bit-vec."0.6.3" = overridableMkRustCrate (profileName: rec {
        name = "bit-vec";
        version = "0.6.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "349f9b6a179ed607305526ca489b34ad0a41aed5f7980fa90eb03160b69598fb"; };
        features = builtins.concatLists [
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" = overridableMkRustCrate (profileName: rec {
        name = "bitflags";
        version = "1.3.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a"; };
        features = builtins.concatLists [
          [ "default" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".blake3."1.3.3" = overridableMkRustCrate (profileName: rec {
        name = "blake3";
        version = "1.3.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "42ae2468a89544a466886840aa467a25b766499f4f04bf7d9fcd10ecee9fccef"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "digest" ]
          [ "std" ]
        ];
        dependencies = {
          arrayref = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayref."0.3.6" { inherit profileName; };
          arrayvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.2" { inherit profileName; };
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
          constant_time_eq = rustPackages."registry+https://github.com/rust-lang/crates.io-index".constant_time_eq."0.2.4" { inherit profileName; };
          digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.6" { inherit profileName; };
        };
        buildDependencies = {
          cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.78" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.9.0" = overridableMkRustCrate (profileName: rec {
        name = "block-buffer";
        version = "0.9.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "4152116fd6e9dadb291ae18fc1ec3575ed6d84c29642d97890f4b4a3417297e4"; };
        dependencies = {
          generic_array = rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.6" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.10.3" = overridableMkRustCrate (profileName: rec {
        name = "block-buffer";
        version = "0.10.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "69cce20737498f97b993470a6e536b8523f0af7892a4f928cceb1ac5e52ebe7e"; };
        dependencies = {
          generic_array = rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.6" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".brotli."3.3.4" = overridableMkRustCrate (profileName: rec {
        name = "brotli";
        version = "3.3.4";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "a1a0b1dbcc8ae29329621f8d4f0d835787c1c38bb1401979b49d13b0b305ff68"; };
        features = builtins.concatLists [
          [ "alloc-stdlib" ]
          [ "default" ]
          [ "ffi-api" ]
          [ "std" ]
        ];
        dependencies = {
          alloc_no_stdlib = rustPackages."registry+https://github.com/rust-lang/crates.io-index".alloc-no-stdlib."2.0.4" { inherit profileName; };
          alloc_stdlib = rustPackages."registry+https://github.com/rust-lang/crates.io-index".alloc-stdlib."0.2.2" { inherit profileName; };
          brotli_decompressor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".brotli-decompressor."2.3.4" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".brotli-decompressor."2.3.4" = overridableMkRustCrate (profileName: rec {
        name = "brotli-decompressor";
        version = "2.3.4";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "4b6561fd3f895a11e8f72af2cb7d22e08366bebc2b6b57f7744c4bda27034744"; };
        features = builtins.concatLists [
          [ "alloc-stdlib" ]
          [ "std" ]
        ];
        dependencies = {
          alloc_no_stdlib = rustPackages."registry+https://github.com/rust-lang/crates.io-index".alloc-no-stdlib."2.0.4" { inherit profileName; };
          alloc_stdlib = rustPackages."registry+https://github.com/rust-lang/crates.io-index".alloc-stdlib."0.2.2" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.12.0" = overridableMkRustCrate (profileName: rec {
        name = "bumpalo";
        version = "3.12.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "0d261e256854913907f67ed06efbc3338dfe6179796deefc1ff763fc1aee5535"; };
        features = builtins.concatLists [
          [ "default" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".byteorder."1.4.3" = overridableMkRustCrate (profileName: rec {
        name = "byteorder";
        version = "1.4.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "14c189c53d098945499cdfa7ecc63567cf3886b3332b312a5b4585d8d3a6a610"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" = overridableMkRustCrate (profileName: rec {
        name = "bytes";
        version = "1.3.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "dfb24e866b15a1af2a1b663f10c6b6b8f397a84aadb828f12e5b289ec23a3a3c"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".bytes-utils."0.1.3" = overridableMkRustCrate (profileName: rec {
        name = "bytes-utils";
        version = "0.1.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "e47d3a8076e283f3acd27400535992edb3ba4b5bb72f8891ad8fbe7932a7d4b9"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
        dependencies = {
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.8.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".bytestring."1.2.0" = overridableMkRustCrate (profileName: rec {
        name = "bytestring";
        version = "1.2.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "f7f83e57d9154148e355404702e2694463241880b939570d7c97c014da7a69a1"; };
        dependencies = {
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".cc."1.0.78" = overridableMkRustCrate (profileName: rec {
        name = "cc";
        version = "1.0.78";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "a20104e2335ce8a659d6dd92a51a767a0c062599c73b343fd152cb401e828c3d"; };
        features = builtins.concatLists [
          [ "jobserver" ]
          [ "parallel" ]
        ];
        dependencies = {
          jobserver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.25" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" = overridableMkRustCrate (profileName: rec {
        name = "cfg-if";
        version = "1.0.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".clap."4.1.4" = overridableMkRustCrate (profileName: rec {
        name = "clap";
        version = "4.1.4";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "f13b9c79b5d1dd500d20ef541215a6423c75829ef43117e1b4d17fd8af0b5d76"; };
        features = builtins.concatLists [
          [ "derive" ]
          [ "help" ]
          [ "std" ]
          [ "usage" ]
        ];
        dependencies = {
          bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
          clap_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".clap_derive."4.1.0" { profileName = "__noProfile"; };
          clap_lex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap_lex."0.3.1" { inherit profileName; };
          once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".clap_derive."4.1.0" = overridableMkRustCrate (profileName: rec {
        name = "clap_derive";
        version = "4.1.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "684a277d672e91966334af371f1a7b5833f9aa00b07c84e92fbce95e00208ce8"; };
        features = builtins.concatLists [
          [ "default" ]
        ];
        dependencies = {
          heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.4.0" { inherit profileName; };
          proc_macro_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."1.0.4" { inherit profileName; };
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".clap_lex."0.3.1" = overridableMkRustCrate (profileName: rec {
        name = "clap_lex";
        version = "0.3.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "783fe232adfca04f90f56201b26d79682d4cd2625e0bc7290b95123afe558ade"; };
        dependencies = {
          os_str_bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".os_str_bytes."6.4.1" { inherit profileName; };
        };
      });
      "unknown".common_utils."0.1.0" = overridableMkRustCrate (profileName: rec {
        name = "common_utils";
        version = "0.1.0";
        registry = "unknown";
        src = fetchCrateLocal (workspaceSrc + "/crates/common_utils");
        dependencies = {
          async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.63" { profileName = "__noProfile"; };
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          error_stack = rustPackages."registry+https://github.com/rust-lang/crates.io-index".error-stack."0.2.4" { inherit profileName; };
          futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.25" { inherit profileName; };
          hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" { inherit profileName; };
          masking = rustPackages."unknown".masking."0.1.0" { inherit profileName; };
          nanoid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".nanoid."0.4.0" { inherit profileName; };
          once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; };
          regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.7.1" { inherit profileName; };
          ring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.16.20" { inherit profileName; };
          router_env = rustPackages."unknown".router_env."0.1.0" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
          serde_urlencoded = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.7.1" { inherit profileName; };
          signal_hook = rustPackages."registry+https://github.com/rust-lang/crates.io-index".signal-hook."0.3.14" { inherit profileName; };
          signal_hook_tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".signal-hook-tokio."0.3.1" { inherit profileName; };
          thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.38" { inherit profileName; };
          time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.17" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
        };
        devDependencies = {
          fake = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fake."2.5.0" { inherit profileName; };
          proptest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proptest."1.1.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".concurrent-queue."2.1.0" = overridableMkRustCrate (profileName: rec {
        name = "concurrent-queue";
        version = "2.1.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "c278839b831783b70278b14df4d45e1beb1aad306c07bb796637de9a0e323e8e"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
        dependencies = {
          crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.14" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".config."0.13.3" = overridableMkRustCrate (profileName: rec {
        name = "config";
        version = "0.13.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "d379af7f68bfc21714c6c7dea883544201741d2ce8274bb12fa54f89507f52a7"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "ini" ]
          [ "json" ]
          [ "json5" ]
          [ "json5_rs" ]
          [ "ron" ]
          [ "rust-ini" ]
          [ "serde_json" ]
          [ "toml" ]
          [ "yaml" ]
          [ "yaml-rust" ]
        ];
        dependencies = {
          async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.63" { profileName = "__noProfile"; };
          json5_rs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".json5."0.4.1" { inherit profileName; };
          lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
          nom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".nom."7.1.3" { inherit profileName; };
          pathdiff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pathdiff."0.2.1" { inherit profileName; };
          ron = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ron."0.7.1" { inherit profileName; };
          ini = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rust-ini."0.18.0" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
          toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.11" { inherit profileName; };
          yaml_rust = rustPackages."registry+https://github.com/rust-lang/crates.io-index".yaml-rust."0.4.5" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".constant_time_eq."0.2.4" = overridableMkRustCrate (profileName: rec {
        name = "constant_time_eq";
        version = "0.2.4";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "f3ad85c1f65dc7b37604eb0e89748faf0b9653065f2a8ef69f96a687ec1e9279"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".convert_case."0.4.0" = overridableMkRustCrate (profileName: rec {
        name = "convert_case";
        version = "0.4.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "6245d59a3e82a7fc217c5828a6692dbc6dfb63a0c8c90495621f7b9d79704a0e"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".cookie."0.16.2" = overridableMkRustCrate (profileName: rec {
        name = "cookie";
        version = "0.16.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "e859cd57d0710d9e06c381b550c06e76992472a8c6d527aecd2fc673dcc231fb"; };
        features = builtins.concatLists [
          [ "percent-encode" ]
          [ "percent-encoding" ]
        ];
        dependencies = {
          percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.2.0" { inherit profileName; };
          time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.17" { inherit profileName; };
        };
        buildDependencies = {
          version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.4" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".cookie-factory."0.3.2" = overridableMkRustCrate (profileName: rec {
        name = "cookie-factory";
        version = "0.3.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "396de984970346b0d9e93d1415082923c679e5ae5c3ee3dcbd104f5610af126b"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.9.3" = overridableMkRustCrate (profileName: rec {
        name = "core-foundation";
        version = "0.9.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "194a7a9e6de53fa55116934067c844d9d749312f75c6f6d0980e8c252f8c2146"; };
        dependencies = {
          core_foundation_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.3" { inherit profileName; };
          libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.3" = overridableMkRustCrate (profileName: rec {
        name = "core-foundation-sys";
        version = "0.8.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "5827cebf4670468b8772dd191856768aedcb1b0278a04f989f7766351917b9dc"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".cpufeatures."0.2.5" = overridableMkRustCrate (profileName: rec {
        name = "cpufeatures";
        version = "0.2.5";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "28d997bd5e24a5928dd43e46dc529867e207907fe0b239c3477d924f7f2ca320"; };
        dependencies = {
          ${ if hostPlatform.config == "aarch64-apple-darwin" || hostPlatform.config == "aarch64-linux-android" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.kernel.name == "linux" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".crc16."0.4.0" = overridableMkRustCrate (profileName: rec {
        name = "crc16";
        version = "0.4.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "338089f42c427b86394a5ee60ff321da23a5c89c9d89514c829687b26359fcff"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.3.2" = overridableMkRustCrate (profileName: rec {
        name = "crc32fast";
        version = "1.3.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "b540bd8bc810d3885c6ea91e2018302f68baba2129ab3e88f32389ee9370880d"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
        dependencies = {
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.5.6" = overridableMkRustCrate (profileName: rec {
        name = "crossbeam-channel";
        version = "0.5.6";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "c2dd04ddaf88237dc3b8d8f9a3c1004b506b54b3313403944054d23c0870c521"; };
        features = builtins.concatLists [
          [ "crossbeam-utils" ]
          [ "default" ]
          [ "std" ]
        ];
        dependencies = {
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
          crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.14" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.14" = overridableMkRustCrate (profileName: rec {
        name = "crossbeam-utils";
        version = "0.8.14";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "4fb766fa798726286dbbb842f174001dab8abc7b627a1dd86e0b7222a95d929f"; };
        features = builtins.concatLists [
          [ "std" ]
        ];
        dependencies = {
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".crypto-common."0.1.6" = overridableMkRustCrate (profileName: rec {
        name = "crypto-common";
        version = "0.1.6";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3"; };
        features = builtins.concatLists [
          [ "std" ]
        ];
        dependencies = {
          generic_array = rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.6" { inherit profileName; };
          typenum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.16.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".dashmap."5.4.0" = overridableMkRustCrate (profileName: rec {
        name = "dashmap";
        version = "5.4.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "907076dfda823b0b36d2a1bb5f90c96660a5bbcd7729e10727f07858f22c4edc"; };
        dependencies = {
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
          hashbrown = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.12.3" { inherit profileName; };
          lock_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.9" { inherit profileName; };
          once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          parking_lot_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.9.6" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".deadpool."0.9.5" = overridableMkRustCrate (profileName: rec {
        name = "deadpool";
        version = "0.9.5";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "421fe0f90f2ab22016f32a9881be5134fdd71c65298917084b0c7477cbc3856e"; };
        features = builtins.concatLists [
          [ "async-trait" ]
          [ "default" ]
          [ "managed" ]
          [ "unmanaged" ]
        ];
        dependencies = {
          async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.63" { profileName = "__noProfile"; };
          deadpool_runtime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".deadpool-runtime."0.1.2" { inherit profileName; };
          num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.15.0" { inherit profileName; };
          retain_mut = rustPackages."registry+https://github.com/rust-lang/crates.io-index".retain_mut."0.1.9" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".deadpool-runtime."0.1.2" = overridableMkRustCrate (profileName: rec {
        name = "deadpool-runtime";
        version = "0.1.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "eaa37046cc0f6c3cc6090fbdbf73ef0b8ef4cfcc37f6befc0020f63e8cf121e1"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".derive_deref."1.1.1" = overridableMkRustCrate (profileName: rec {
        name = "derive_deref";
        version = "1.1.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "dcdbcee2d9941369faba772587a565f4f534e42cb8d17e5295871de730163b2b"; };
        dependencies = {
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".derive_more."0.99.17" = overridableMkRustCrate (profileName: rec {
        name = "derive_more";
        version = "0.99.17";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "4fb810d30a7c1953f91334de7244731fc3f3c10d7fe163338a35b9f640960321"; };
        features = builtins.concatLists [
          [ "add" ]
          [ "add_assign" ]
          [ "as_mut" ]
          [ "as_ref" ]
          [ "constructor" ]
          [ "convert_case" ]
          [ "default" ]
          [ "deref" ]
          [ "deref_mut" ]
          [ "display" ]
          [ "error" ]
          [ "from" ]
          [ "from_str" ]
          [ "index" ]
          [ "index_mut" ]
          [ "into" ]
          [ "into_iterator" ]
          [ "is_variant" ]
          [ "iterator" ]
          [ "mul" ]
          [ "mul_assign" ]
          [ "not" ]
          [ "rustc_version" ]
          [ "sum" ]
          [ "try_into" ]
          [ "unwrap" ]
        ];
        dependencies = {
          convert_case = rustPackages."registry+https://github.com/rust-lang/crates.io-index".convert_case."0.4.0" { inherit profileName; };
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
        buildDependencies = {
          rustc_version = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.4.0" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".diesel."2.0.3" = overridableMkRustCrate (profileName: rec {
        name = "diesel";
        version = "2.0.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "4391a22b19c916e50bec4d6140f29bdda3e3bb187223fe6e3ea0b6e4d1021c04"; };
        features = builtins.concatLists [
          [ "32-column-tables" ]
          [ "bitflags" ]
          [ "byteorder" ]
          [ "default" ]
          [ "itoa" ]
          [ "postgres" ]
          [ "postgres_backend" ]
          [ "pq-sys" ]
          [ "r2d2" ]
          [ "serde_json" ]
          [ "time" ]
          [ "with-deprecated" ]
        ];
        dependencies = {
          bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
          byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.4.3" { inherit profileName; };
          diesel_derives = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".diesel_derives."2.0.1" { profileName = "__noProfile"; };
          itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.5" { inherit profileName; };
          pq_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pq-sys."0.4.7" { inherit profileName; };
          r2d2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".r2d2."0.8.10" { inherit profileName; };
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
          time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.17" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".diesel_derives."2.0.1" = overridableMkRustCrate (profileName: rec {
        name = "diesel_derives";
        version = "2.0.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "143b758c91dbc3fe1fdcb0dba5bd13276c6a66422f2ef5795b58488248a310aa"; };
        features = builtins.concatLists [
          [ "32-column-tables" ]
          [ "default" ]
          [ "postgres" ]
          [ "with-deprecated" ]
        ];
        dependencies = {
          proc_macro_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."1.0.4" { inherit profileName; };
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".digest."0.9.0" = overridableMkRustCrate (profileName: rec {
        name = "digest";
        version = "0.9.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "d3dd60d1080a57a05ab032377049e0591415d2b31afd7028356dbf3cc6dcb066"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "std" ]
        ];
        dependencies = {
          generic_array = rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.6" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".digest."0.10.6" = overridableMkRustCrate (profileName: rec {
        name = "digest";
        version = "0.10.6";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "8168378f4e5023e7218c89c891c0fd8ecdb5e5e4f18cb78f38cf245dd021e76f"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "block-buffer" ]
          [ "core-api" ]
          [ "default" ]
          [ "mac" ]
          [ "std" ]
          [ "subtle" ]
        ];
        dependencies = {
          block_buffer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.10.3" { inherit profileName; };
          crypto_common = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crypto-common."0.1.6" { inherit profileName; };
          subtle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.4.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".dlv-list."0.3.0" = overridableMkRustCrate (profileName: rec {
        name = "dlv-list";
        version = "0.3.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "0688c2a7f92e427f44895cd63841bff7b29f8d7a1648b9e7e07a4a365b2e1257"; };
      });
      "unknown".drainer."0.1.0" = overridableMkRustCrate (profileName: rec {
        name = "drainer";
        version = "0.1.0";
        registry = "unknown";
        src = fetchCrateLocal (workspaceSrc + "/crates/drainer");
        dependencies = {
          async_bb8_diesel = rustPackages."git+https://github.com/juspay/async-bb8-diesel".async-bb8-diesel."0.1.0" { inherit profileName; };
          bb8 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bb8."0.8.0" { inherit profileName; };
          clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."4.1.4" { inherit profileName; };
          common_utils = rustPackages."unknown".common_utils."0.1.0" { inherit profileName; };
          config = rustPackages."registry+https://github.com/rust-lang/crates.io-index".config."0.13.3" { inherit profileName; };
          diesel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".diesel."2.0.3" { inherit profileName; };
          error_stack = rustPackages."registry+https://github.com/rust-lang/crates.io-index".error-stack."0.2.4" { inherit profileName; };
          once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          redis_interface = rustPackages."unknown".redis_interface."0.1.0" { inherit profileName; };
          router_env = rustPackages."unknown".router_env."0.1.0" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
          serde_path_to_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_path_to_error."0.1.9" { inherit profileName; };
          diesel_models = rustPackages."unknown".diesel_models."0.1.0" { inherit profileName; };
          thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.38" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
        };
        buildDependencies = {
          router_env = buildRustPackages."unknown".router_env."0.1.0" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".dyn-clone."1.0.10" = overridableMkRustCrate (profileName: rec {
        name = "dyn-clone";
        version = "1.0.10";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "c9b0705efd4599c15a38151f4721f7bc388306f61084d3bfd50bd07fbca5cb60"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".either."1.8.0" = overridableMkRustCrate (profileName: rec {
        name = "either";
        version = "1.8.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "90e5c1c8368803113bf0c9584fc495a58b86dc8a29edbf8fe877d21d9507e797"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "use_std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".encoding_rs."0.8.31" = overridableMkRustCrate (profileName: rec {
        name = "encoding_rs";
        version = "0.8.31";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "9852635589dc9f9ea1b6fe9f05b50ef208c85c834a562f0c6abb1c475736ec2b"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "default" ]
        ];
        dependencies = {
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" = overridableMkRustCrate (profileName: rec {
        name = "env_logger";
        version = "0.7.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "44533bbbb3bb3c1fa17d9f2e4e38bbbaf8396ba82193c4cb1b6445d711445d36"; };
        features = builtins.concatLists [
          [ "atty" ]
          [ "default" ]
          [ "humantime" ]
          [ "regex" ]
          [ "termcolor" ]
        ];
        dependencies = {
          atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
          humantime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."1.3.0" { inherit profileName; };
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.7.1" { inherit profileName; };
          termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.2.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".error-stack."0.2.4" = overridableMkRustCrate (profileName: rec {
        name = "error-stack";
        version = "0.2.4";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "859d224e04b2d93d974c08e375dac9b8d1a513846e44c6666450a57b1ed963f9"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "pretty-print" ]
          [ "std" ]
        ];
        dependencies = {
          anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.68" { inherit profileName; };
          owo_colors = rustPackages."registry+https://github.com/rust-lang/crates.io-index".owo-colors."3.5.0" { inherit profileName; };
        };
        buildDependencies = {
          rustc_version = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.4.0" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".event-listener."2.5.3" = overridableMkRustCrate (profileName: rec {
        name = "event-listener";
        version = "2.5.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "0206175f82b8d6bf6652ff7d71a1e27fd2e4efde587fd368662814d6ec1d9ce0"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".fake."2.5.0" = overridableMkRustCrate (profileName: rec {
        name = "fake";
        version = "2.5.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "4d68f517805463f3a896a9d29c1d6ff09d3579ded64a7201b4069f8f9c0d52fd"; };
        dependencies = {
          rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".fastrand."1.8.0" = overridableMkRustCrate (profileName: rec {
        name = "fastrand";
        version = "1.8.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "a7a407cfaa3385c4ae6b23e84623d48c2798d06e3e6a1878f7f59f17b3f86499"; };
        dependencies = {
          ${ if hostPlatform.parsed.cpu.name == "wasm32" then "instant" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".instant."0.1.12" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.25" = overridableMkRustCrate (profileName: rec {
        name = "flate2";
        version = "1.0.25";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "a8a2db397cb1c8772f31494cb8917e48cd1e64f0fa7efac59fbd741a0a8ce841"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "miniz_oxide" ]
          [ "rust_backend" ]
        ];
        dependencies = {
          crc32fast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.3.2" { inherit profileName; };
          miniz_oxide = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.6.2" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".float-cmp."0.8.0" = overridableMkRustCrate (profileName: rec {
        name = "float-cmp";
        version = "0.8.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "e1267f4ac4f343772758f7b1bdcbe767c218bbab93bb432acbf5162bbf85a6c4"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "num-traits" ]
          [ "ratio" ]
        ];
        dependencies = {
          num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" = overridableMkRustCrate (profileName: rec {
        name = "fnv";
        version = "1.0.7";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.3.2" = overridableMkRustCrate (profileName: rec {
        name = "foreign-types";
        version = "0.3.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1"; };
        dependencies = {
          foreign_types_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types-shared."0.1.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".foreign-types-shared."0.1.1" = overridableMkRustCrate (profileName: rec {
        name = "foreign-types-shared";
        version = "0.1.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".form_urlencoded."1.1.0" = overridableMkRustCrate (profileName: rec {
        name = "form_urlencoded";
        version = "1.1.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "a9c384f161156f5260c24a097c56119f9be8c798586aecc13afbcbe7b7e26bf8"; };
        dependencies = {
          percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.2.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".fred."5.2.0" = overridableMkRustCrate (profileName: rec {
        name = "fred";
        version = "5.2.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "6be0137d9045288f9c0a0659da3b74c196ad0263d2eafa0f5a73785a907bad14"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "enable-tls" ]
          [ "ignore-auth-error" ]
          [ "metrics" ]
          [ "native-tls" ]
          [ "partial-tracing" ]
          [ "pool-prefer-active" ]
          [ "tokio-native-tls" ]
          [ "tracing" ]
          [ "tracing-futures" ]
        ];
        dependencies = {
          arc_swap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arc-swap."1.6.0" { inherit profileName; };
          arcstr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arcstr."1.1.5" { inherit profileName; };
          async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.63" { profileName = "__noProfile"; };
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          bytes_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes-utils."0.1.3" { inherit profileName; };
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
          float_cmp = rustPackages."registry+https://github.com/rust-lang/crates.io-index".float-cmp."0.8.0" { inherit profileName; };
          futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.25" { inherit profileName; };
          lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          native_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".native-tls."0.2.11" { inherit profileName; };
          parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.11.2" { inherit profileName; };
          pretty_env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pretty_env_logger."0.4.0" { inherit profileName; };
          rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; };
          redis_protocol = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redis-protocol."4.1.0" { inherit profileName; };
          semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."1.0.16" { inherit profileName; };
          sha1 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha-1."0.9.8" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          tokio_native_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-native-tls."0.3.0" { inherit profileName; };
          tokio_stream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-stream."0.1.11" { inherit profileName; };
          tokio_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.6.10" { inherit profileName; };
          tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
          tracing_futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-futures."0.2.5" { inherit profileName; };
          url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.3.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".frunk."0.4.1" = overridableMkRustCrate (profileName: rec {
        name = "frunk";
        version = "0.4.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "a89c703bf50009f383a0873845357cc400a95fc535f836feddfe015d7df6e1e0"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "frunk_proc_macros" ]
          [ "proc-macros" ]
          [ "std" ]
          [ "validated" ]
        ];
        dependencies = {
          frunk_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".frunk_core."0.4.1" { inherit profileName; };
          frunk_derives = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".frunk_derives."0.4.1" { profileName = "__noProfile"; };
          frunk_proc_macros = rustPackages."registry+https://github.com/rust-lang/crates.io-index".frunk_proc_macros."0.1.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".frunk_core."0.4.1" = overridableMkRustCrate (profileName: rec {
        name = "frunk_core";
        version = "0.4.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "2a446d01a558301dca28ef43222864a9fa2bd9a2e71370f769d5d5d5ec9f3537"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".frunk_derives."0.4.1" = overridableMkRustCrate (profileName: rec {
        name = "frunk_derives";
        version = "0.4.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "b83164912bb4c97cfe0772913c7af7387ee2e00cb6d4636fb65a35b3d0c8f173"; };
        dependencies = {
          frunk_proc_macro_helpers = rustPackages."registry+https://github.com/rust-lang/crates.io-index".frunk_proc_macro_helpers."0.1.1" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".frunk_proc_macro_helpers."0.1.1" = overridableMkRustCrate (profileName: rec {
        name = "frunk_proc_macro_helpers";
        version = "0.1.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "015425591bbeb0f5b8a75593340f1789af428e9f887a4f1e36c0c471f067ef50"; };
        dependencies = {
          frunk_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".frunk_core."0.4.1" { inherit profileName; };
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".frunk_proc_macros."0.1.1" = overridableMkRustCrate (profileName: rec {
        name = "frunk_proc_macros";
        version = "0.1.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "ea01524f285deab48affffb342b97f186e657b119c3f1821ac531780e0fbfae0"; };
        dependencies = {
          frunk_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".frunk_core."0.4.1" { inherit profileName; };
          frunk_proc_macros_impl = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".frunk_proc_macros_impl."0.1.1" { profileName = "__noProfile"; };
          proc_macro_hack = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-hack."0.5.20+deprecated" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".frunk_proc_macros_impl."0.1.1" = overridableMkRustCrate (profileName: rec {
        name = "frunk_proc_macros_impl";
        version = "0.1.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "0a802d974cc18ee7fe1a7868fc9ce31086294fd96ba62f8da64ecb44e92a2653"; };
        dependencies = {
          frunk_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".frunk_core."0.4.1" { inherit profileName; };
          frunk_proc_macro_helpers = rustPackages."registry+https://github.com/rust-lang/crates.io-index".frunk_proc_macro_helpers."0.1.1" { inherit profileName; };
          proc_macro_hack = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-hack."0.5.20+deprecated" { profileName = "__noProfile"; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".futures."0.3.25" = overridableMkRustCrate (profileName: rec {
        name = "futures";
        version = "0.3.25";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "38390104763dc37a5145a53c29c63c1290b5d316d6086ec32c293f6736051bb0"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "async-await" ]
          [ "default" ]
          [ "executor" ]
          [ "futures-executor" ]
          [ "std" ]
        ];
        dependencies = {
          futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.25" { inherit profileName; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          futures_executor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-executor."0.3.25" { inherit profileName; };
          futures_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.25" { inherit profileName; };
          futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.25" { inherit profileName; };
          futures_task = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.25" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.25" = overridableMkRustCrate (profileName: rec {
        name = "futures-channel";
        version = "0.3.25";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "52ba265a92256105f45b719605a571ffe2d1f0fea3807304b522c1d778f79eed"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "default" ]
          [ "futures-sink" ]
          [ "sink" ]
          [ "std" ]
        ];
        dependencies = {
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.25" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" = overridableMkRustCrate (profileName: rec {
        name = "futures-core";
        version = "0.3.25";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "04909a7a7e4633ae6c4a9ab280aeb86da1236243a77b694a49eacd659a4bd3ac"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "default" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".futures-executor."0.3.25" = overridableMkRustCrate (profileName: rec {
        name = "futures-executor";
        version = "0.3.25";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "7acc85df6714c176ab5edf386123fafe217be88c0840ec11f199441134a074e2"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
        dependencies = {
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          futures_task = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.25" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.25" = overridableMkRustCrate (profileName: rec {
        name = "futures-io";
        version = "0.3.25";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "00f5fb52a06bdcadeb54e8d3671f8888a39697dcb0b81b23b55174030427f4eb"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".futures-lite."1.12.0" = overridableMkRustCrate (profileName: rec {
        name = "futures-lite";
        version = "1.12.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "7694489acd39452c77daa48516b894c153f192c3578d5a839b62c58099fcbf48"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "default" ]
          [ "fastrand" ]
          [ "futures-io" ]
          [ "memchr" ]
          [ "parking" ]
          [ "std" ]
          [ "waker-fn" ]
        ];
        dependencies = {
          fastrand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fastrand."1.8.0" { inherit profileName; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          futures_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.25" { inherit profileName; };
          memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" { inherit profileName; };
          parking = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking."2.0.0" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          waker_fn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".waker-fn."1.1.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".futures-macro."0.3.25" = overridableMkRustCrate (profileName: rec {
        name = "futures-macro";
        version = "0.3.25";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "bdfb8ce053d86b91919aad980c220b1fb8401a9394410e1c289ed7e66b61835d"; };
        dependencies = {
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.25" = overridableMkRustCrate (profileName: rec {
        name = "futures-sink";
        version = "0.3.25";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "39c15cf1a4aa79df40f1bb462fb39676d0ad9e366c2a33b590d7c66f4f81fcf9"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "default" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.25" = overridableMkRustCrate (profileName: rec {
        name = "futures-task";
        version = "0.3.25";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "2ffb393ac5d9a6eaa9d3fdf37ae2776656b706e200c8e16b1bdb227f5198e6ea"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".futures-timer."3.0.2" = overridableMkRustCrate (profileName: rec {
        name = "futures-timer";
        version = "3.0.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "e64b03909df88034c26dc1547e8970b91f98bdb65165d6a4e9110d94263dbb2c"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" = overridableMkRustCrate (profileName: rec {
        name = "futures-util";
        version = "0.3.25";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "197676987abd2f9cadff84926f410af1c183608d36641465df73ae8211dc65d6"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "async-await" ]
          [ "async-await-macro" ]
          [ "channel" ]
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "default")
          [ "futures-channel" ]
          [ "futures-io" ]
          [ "futures-macro" ]
          [ "futures-sink" ]
          [ "io" ]
          [ "memchr" ]
          [ "sink" ]
          [ "slab" ]
          [ "std" ]
        ];
        dependencies = {
          futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.25" { inherit profileName; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          futures_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.25" { inherit profileName; };
          futures_macro = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-macro."0.3.25" { profileName = "__noProfile"; };
          futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.25" { inherit profileName; };
          futures_task = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.25" { inherit profileName; };
          memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          pin_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-utils."0.1.0" { inherit profileName; };
          slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.7" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.6" = overridableMkRustCrate (profileName: rec {
        name = "generic-array";
        version = "0.14.6";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "bff49e947297f3312447abdca79f45f4738097cc82b06e72054d2223f601f1b9"; };
        features = builtins.concatLists [
          [ "more_lengths" ]
        ];
        dependencies = {
          typenum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.16.0" { inherit profileName; };
        };
        buildDependencies = {
          version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.4" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".gethostname."0.4.1" = overridableMkRustCrate (profileName: rec {
        name = "gethostname";
        version = "0.4.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "8a329e22866dd78b35d2c639a4a23d7b950aeae300dfd79f4fb19f74055c2404"; };
        dependencies = {
          ${ if !hostPlatform.isWindows then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          ${ if hostPlatform.isWindows then "windows" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows."0.43.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".getrandom."0.1.16" = overridableMkRustCrate (profileName: rec {
        name = "getrandom";
        version = "0.1.16";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "8fc3cb4d91f53b50155bdcfd23f6a4c39ae1969c2ae85982b135750cccaf5fce"; };
        features = builtins.concatLists [
          [ "std" ]
        ];
        dependencies = {
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
          ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          ${ if hostPlatform.parsed.kernel.name == "wasi" then "wasi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.9.0+wasi-snapshot-preview1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.8" = overridableMkRustCrate (profileName: rec {
        name = "getrandom";
        version = "0.2.8";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "c05aeb6a22b8f62540c194aac980f2115af067bfe15a0734d7277a768d396b31"; };
        features = builtins.concatLists [
          [ "std" ]
        ];
        dependencies = {
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
          ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          ${ if hostPlatform.parsed.kernel.name == "wasi" then "wasi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".git2."0.16.1" = overridableMkRustCrate (profileName: rec {
        name = "git2";
        version = "0.16.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "ccf7f68c2995f392c49fffb4f95ae2c873297830eb25c6bc4c114ce8f4562acc"; };
        dependencies = {
          bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
          libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          libgit2_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libgit2-sys."0.14.2+1.5.1" { inherit profileName; };
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.3.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".h2."0.3.15" = overridableMkRustCrate (profileName: rec {
        name = "h2";
        version = "0.3.15";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "5f9f29bc9dda355256b2916cf526ab02ce0aeaaaf2bad60d65ef3f12f11dd0f4"; };
        dependencies = {
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.25" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.2" { inherit profileName; };
          slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.7" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          tokio_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.4" { inherit profileName; };
          tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.12.3" = overridableMkRustCrate (profileName: rec {
        name = "hashbrown";
        version = "0.12.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888"; };
        features = builtins.concatLists [
          [ "ahash" ]
          [ "default" ]
          [ "inline-more" ]
          [ "raw" ]
        ];
        dependencies = {
          ahash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ahash."0.7.6" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".heck."0.4.0" = overridableMkRustCrate (profileName: rec {
        name = "heck";
        version = "0.4.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "2540771e65fc8cb83cd6e8a237f70c319bd5c29f78ed1084ba5d50eeac86f7f9"; };
        features = builtins.concatLists [
          [ "default" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.19" = overridableMkRustCrate (profileName: rec {
        name = "hermit-abi";
        version = "0.1.19";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33"; };
        features = builtins.concatLists [
          [ "default" ]
        ];
        dependencies = {
          libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.2.6" = overridableMkRustCrate (profileName: rec {
        name = "hermit-abi";
        version = "0.2.6";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "ee512640fe35acbfb4bb779db6f0d80704c2cacfa2e39b601ef3e3f47d1ae4c7"; };
        features = builtins.concatLists [
          [ "default" ]
        ];
        dependencies = {
          libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" = overridableMkRustCrate (profileName: rec {
        name = "hex";
        version = "0.4.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "default" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".hmac."0.12.1" = overridableMkRustCrate (profileName: rec {
        name = "hmac";
        version = "0.12.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "6c49c37c09c17a53d937dfbb742eb3a961d65a994e6bcdcf37e7399d0cc8ab5e"; };
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "digest" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.6" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" = overridableMkRustCrate (profileName: rec {
        name = "http";
        version = "0.2.8";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "75f43d41e26995c17e71ee126451dd3941010b0514a81a9d11f3b341debc2399"; };
        dependencies = {
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; };
          itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.5" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" = overridableMkRustCrate (profileName: rec {
        name = "http-body";
        version = "0.4.5";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "d5f38f16d184e36f2408a55281cd658ecbd3ca05cce6d6510a176eca393e26d1"; };
        dependencies = {
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".http-range-header."0.3.0" = overridableMkRustCrate (profileName: rec {
        name = "http-range-header";
        version = "0.3.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "0bfe8eed0a9285ef776bb792479ea3834e8b94e13d615c2f66d03dd50a435a29"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".http-types."2.12.0" = overridableMkRustCrate (profileName: rec {
        name = "http-types";
        version = "2.12.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "6e9b187a72d63adbfba487f48095306ac823049cb504ee195541e91c7775f5ad"; };
        features = builtins.concatLists [
          [ "http" ]
          [ "hyperium_http" ]
        ];
        dependencies = {
          anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.68" { inherit profileName; };
          async_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-channel."1.8.0" { inherit profileName; };
          base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.13.1" { inherit profileName; };
          futures_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-lite."1.12.0" { inherit profileName; };
          http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          infer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".infer."0.2.3" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
          serde_qs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_qs."0.8.5" { inherit profileName; };
          serde_urlencoded = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.7.1" { inherit profileName; };
          url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.3.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".httparse."1.8.0" = overridableMkRustCrate (profileName: rec {
        name = "httparse";
        version = "1.8.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "d897f394bad6a705d5f4104762e116a75639e470d80901eed05a860a95cb1904"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".httpdate."1.0.2" = overridableMkRustCrate (profileName: rec {
        name = "httpdate";
        version = "1.0.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "c4a1e36c821dbe04574f602848a19f742f4fb3c98d40449f11bcad18d6b17421"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".humantime."1.3.0" = overridableMkRustCrate (profileName: rec {
        name = "humantime";
        version = "1.3.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "df004cfca50ef23c36850aaaa59ad52cc70d0e90243c3c7737a4dd32dc7a3c4f"; };
        dependencies = {
          quick_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.3" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.23" = overridableMkRustCrate (profileName: rec {
        name = "hyper";
        version = "0.14.23";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "034711faac9d2166cb1baf1a2fb0b60b1f277f8492fd72176c17f3515e1abd3c"; };
        features = builtins.concatLists [
          [ "client" ]
          [ "default" ]
          [ "full" ]
          [ "h2" ]
          [ "http1" ]
          [ "http2" ]
          [ "runtime" ]
          [ "server" ]
          [ "socket2" ]
          [ "stream" ]
          [ "tcp" ]
        ];
        dependencies = {
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.25" { inherit profileName; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          h2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".h2."0.3.15" { inherit profileName; };
          http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          http_body = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" { inherit profileName; };
          httparse = rustPackages."registry+https://github.com/rust-lang/crates.io-index".httparse."1.8.0" { inherit profileName; };
          httpdate = rustPackages."registry+https://github.com/rust-lang/crates.io-index".httpdate."1.0.2" { inherit profileName; };
          itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.5" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          socket2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.4.7" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          tower_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" { inherit profileName; };
          tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
          want = rustPackages."registry+https://github.com/rust-lang/crates.io-index".want."0.3.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".hyper-rustls."0.23.2" = overridableMkRustCrate (profileName: rec {
        name = "hyper-rustls";
        version = "0.23.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "1788965e61b367cd03a62950836d5cd41560c3577d90e40e0819373194d1661c"; };
        features = builtins.concatLists [
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "default")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "http1")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "http2")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "log")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "logging")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "native-tokio")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "rustls-native-certs")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "tls12")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "tokio-runtime")
        ];
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "http" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "hyper" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.23" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "rustls" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.20.8" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "rustls_native_certs" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-native-certs."0.6.2" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "tokio_rustls" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-rustls."0.23.4" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".hyper-timeout."0.4.1" = overridableMkRustCrate (profileName: rec {
        name = "hyper-timeout";
        version = "0.4.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "bbb958482e8c7be4bc3cf272a766a2b0bf1a6755e7a6ae777f017a31d11b13b1"; };
        dependencies = {
          hyper = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.23" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          tokio_io_timeout = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io-timeout."1.2.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".hyper-tls."0.5.0" = overridableMkRustCrate (profileName: rec {
        name = "hyper-tls";
        version = "0.5.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "d6183ddfa99b85da61a140bea0efc93fdf56ceaa041b37d553518030827f9905"; };
        dependencies = {
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          hyper = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.23" { inherit profileName; };
          native_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".native-tls."0.2.11" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          tokio_native_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-native-tls."0.3.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".idna."0.3.0" = overridableMkRustCrate (profileName: rec {
        name = "idna";
        version = "0.3.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "e14ddfc70884202db2244c223200c204c2bda1bc6e0998d11b5e024d657209e6"; };
        dependencies = {
          unicode_bidi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.8" { inherit profileName; };
          unicode_normalization = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.22" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.2" = overridableMkRustCrate (profileName: rec {
        name = "indexmap";
        version = "1.9.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "1885e79c1fc4b10f0e172c475f458b7f7b93061064d98c3293e98c5ba0c8b399"; };
        features = builtins.concatLists [
          [ "serde" ]
          [ "std" ]
        ];
        dependencies = {
          hashbrown = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.12.3" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
        };
        buildDependencies = {
          autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".infer."0.2.3" = overridableMkRustCrate (profileName: rec {
        name = "infer";
        version = "0.2.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "64e9829a50b42bb782c1df523f78d332fe371b10c661e78b7a3c34b0198e9fac"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".instant."0.1.12" = overridableMkRustCrate (profileName: rec {
        name = "instant";
        version = "0.1.12";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "7a5bbe824c507c5da5956355e86a746d82e0e1464f65d862cc5e71da70e94b2c"; };
        dependencies = {
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".ipnet."2.7.1" = overridableMkRustCrate (profileName: rec {
        name = "ipnet";
        version = "2.7.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "30e22bd8629359895450b59ea7a776c850561b96a3b1d31321c1949d9e6c9146"; };
        features = builtins.concatLists [
          [ "default" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".is_ci."1.1.1" = overridableMkRustCrate (profileName: rec {
        name = "is_ci";
        version = "1.1.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "616cde7c720bb2bb5824a224687d8f77bfd38922027f01d825cd7453be5099fb"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".itertools."0.10.5" = overridableMkRustCrate (profileName: rec {
        name = "itertools";
        version = "0.10.5";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473"; };
        features = builtins.concatLists [
          [ "use_alloc" ]
        ];
        dependencies = {
          either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.8.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.8" = overridableMkRustCrate (profileName: rec {
        name = "itoa";
        version = "0.4.8";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "b71991ff56294aa922b450139ee08b3bfc70982c6b2c7562771375cf73542dd4"; };
        features = builtins.concatLists [
          [ "i128" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.5" = overridableMkRustCrate (profileName: rec {
        name = "itoa";
        version = "1.0.5";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "fad582f4b9e86b6caa621cabeb0963332d92eea04729ab12892c2533951e6440"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.25" = overridableMkRustCrate (profileName: rec {
        name = "jobserver";
        version = "0.1.25";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "068b1ee6743e4d11fb9c6a1e6064b3693a1b600e7f5f5988047d98b3dc9fb90b"; };
        dependencies = {
          ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".josekit."0.8.1" = overridableMkRustCrate (profileName: rec {
        name = "josekit";
        version = "0.8.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "dee6af62ad98bdf699ad2ecc8323479a1fdc7aa5faa6043d93119d83f6c5fca8"; };
        dependencies = {
          ${ if rootFeatures' ? "router/basilisk" || rootFeatures' ? "router/josekit" || rootFeatures' ? "router/sandbox" then "anyhow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.68" { inherit profileName; };
          ${ if rootFeatures' ? "router/basilisk" || rootFeatures' ? "router/josekit" || rootFeatures' ? "router/sandbox" then "base64" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.13.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/basilisk" || rootFeatures' ? "router/josekit" || rootFeatures' ? "router/sandbox" then "flate2" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.25" { inherit profileName; };
          ${ if rootFeatures' ? "router/basilisk" || rootFeatures' ? "router/josekit" || rootFeatures' ? "router/sandbox" then "once_cell" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/basilisk" || rootFeatures' ? "router/josekit" || rootFeatures' ? "router/sandbox" then "openssl" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.45" { inherit profileName; };
          ${ if rootFeatures' ? "router/basilisk" || rootFeatures' ? "router/josekit" || rootFeatures' ? "router/sandbox" then "regex" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.7.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/basilisk" || rootFeatures' ? "router/josekit" || rootFeatures' ? "router/sandbox" then "serde" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          ${ if rootFeatures' ? "router/basilisk" || rootFeatures' ? "router/josekit" || rootFeatures' ? "router/sandbox" then "serde_json" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
          ${ if rootFeatures' ? "router/basilisk" || rootFeatures' ? "router/josekit" || rootFeatures' ? "router/sandbox" then "thiserror" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.38" { inherit profileName; };
          ${ if rootFeatures' ? "router/basilisk" || rootFeatures' ? "router/josekit" || rootFeatures' ? "router/sandbox" then "time" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.17" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.60" = overridableMkRustCrate (profileName: rec {
        name = "js-sys";
        version = "0.3.60";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "49409df3e3bf0856b916e2ceaca09ee28e6871cf7d9ce97a692cacfdb2a25a47"; };
        dependencies = {
          wasm_bindgen = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.83" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".json5."0.4.1" = overridableMkRustCrate (profileName: rec {
        name = "json5";
        version = "0.4.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "96b0db21af676c1ce64250b5f40f3ce2cf27e4e47cb91ed91eb6fe9350b430c1"; };
        dependencies = {
          pest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest."2.5.3" { inherit profileName; };
          pest_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pest_derive."2.5.3" { profileName = "__noProfile"; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".jsonwebtoken."8.2.0" = overridableMkRustCrate (profileName: rec {
        name = "jsonwebtoken";
        version = "8.2.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "09f4f04699947111ec1733e71778d763555737579e44b85844cae8e1940a1828"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "pem" ]
          [ "simple_asn1" ]
          [ "use_pem" ]
        ];
        dependencies = {
          base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.13.1" { inherit profileName; };
          pem = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pem."1.1.1" { inherit profileName; };
          ring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.16.20" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
          simple_asn1 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".simple_asn1."0.6.2" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".language-tags."0.3.2" = overridableMkRustCrate (profileName: rec {
        name = "language-tags";
        version = "0.3.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "d4345964bb142484797b161f473a503a434de77149dd8c7427788c6e13379388"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" = overridableMkRustCrate (profileName: rec {
        name = "lazy_static";
        version = "1.4.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" = overridableMkRustCrate (profileName: rec {
        name = "libc";
        version = "0.2.139";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "201de327520df007757c1f0adce6e827fe8562fbc28bfd9c15571c66ca1f5f79"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".libgit2-sys."0.14.2+1.5.1" = overridableMkRustCrate (profileName: rec {
        name = "libgit2-sys";
        version = "0.14.2+1.5.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "7f3d95f6b51075fe9810a7ae22c7095f12b98005ab364d8544797a825ce946a4"; };
        dependencies = {
          libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          libz_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libz-sys."1.1.8" { inherit profileName; };
        };
        buildDependencies = {
          cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.78" { profileName = "__noProfile"; };
          pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.26" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".libm."0.2.6" = overridableMkRustCrate (profileName: rec {
        name = "libm";
        version = "0.2.6";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "348108ab3fba42ec82ff6e9564fc4ca0247bdccdc68dd8af9764bbc79c3c8ffb"; };
        features = builtins.concatLists [
          [ "default" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".libmimalloc-sys."0.1.30" = overridableMkRustCrate (profileName: rec {
        name = "libmimalloc-sys";
        version = "0.1.30";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "dd8c7cbf8b89019683667e347572e6d55a7df7ea36b0c4ce69961b0cde67b174"; };
        features = builtins.concatLists [
          (lib.optional (rootFeatures' ? "router/mimalloc") "secure")
        ];
        dependencies = {
          ${ if rootFeatures' ? "router/mimalloc" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
        };
        buildDependencies = {
          ${ if rootFeatures' ? "router/mimalloc" then "cc" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.78" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".libz-sys."1.1.8" = overridableMkRustCrate (profileName: rec {
        name = "libz-sys";
        version = "1.1.8";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "9702761c3935f8cc2f101793272e202c72b99da8f4224a19ddcf1279a6450bbf"; };
        features = builtins.concatLists [
          [ "libc" ]
        ];
        dependencies = {
          libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
        };
        buildDependencies = {
          cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.78" { profileName = "__noProfile"; };
          pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.26" { profileName = "__noProfile"; };
          ${ if hostPlatform.parsed.abi.name == "msvc" then "vcpkg" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.15" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".linked-hash-map."0.5.6" = overridableMkRustCrate (profileName: rec {
        name = "linked-hash-map";
        version = "0.5.6";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "0717cef1bc8b636c6e1c1bbdefc09e6322da8a9321966e8928ef80d20f7f770f"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".literally."0.1.3" = overridableMkRustCrate (profileName: rec {
        name = "literally";
        version = "0.1.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "f0d2be3f5a0d4d5c983d1f8ecc2a87676a0875a14feb9eebf0675f7c3e2f3c35"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".local-channel."0.1.3" = overridableMkRustCrate (profileName: rec {
        name = "local-channel";
        version = "0.1.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "7f303ec0e94c6c54447f84f3b0ef7af769858a9c4ef56ef2a986d3dcd4c3fc9c"; };
        dependencies = {
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.25" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          local_waker = rustPackages."registry+https://github.com/rust-lang/crates.io-index".local-waker."0.1.3" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".local-waker."0.1.3" = overridableMkRustCrate (profileName: rec {
        name = "local-waker";
        version = "0.1.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "e34f76eb3611940e0e7d53a9aaa4e6a3151f69541a282fd0dad5571420c53ff1"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.9" = overridableMkRustCrate (profileName: rec {
        name = "lock_api";
        version = "0.4.9";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "435011366fe56583b16cf956f9df0095b405b82d76425bc8981c0e22e60ec4df"; };
        dependencies = {
          scopeguard = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.1.0" { inherit profileName; };
        };
        buildDependencies = {
          autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" = overridableMkRustCrate (profileName: rec {
        name = "log";
        version = "0.4.17";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "abb12e687cfb44aa40f41fc3978ef76448f9b6038cad6aef4259d3c095a2382e"; };
        features = builtins.concatLists [
          [ "std" ]
        ];
        dependencies = {
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
        };
      });
      "unknown".masking."0.1.0" = overridableMkRustCrate (profileName: rec {
        name = "masking";
        version = "0.1.0";
        registry = "unknown";
        src = fetchCrateLocal (workspaceSrc + "/crates/masking");
        features = builtins.concatLists [
          [ "alloc" ]
          (lib.optional (rootFeatures' ? "masking/bytes") "bytes")
          [ "default" ]
          [ "diesel" ]
          [ "serde" ]
        ];
        dependencies = {
          ${ if rootFeatures' ? "masking/bytes" then "bytes" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          diesel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".diesel."2.0.3" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
          subtle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.4.1" { inherit profileName; };
          zeroize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.5.7" { inherit profileName; };
        };
        devDependencies = {
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".matchers."0.1.0" = overridableMkRustCrate (profileName: rec {
        name = "matchers";
        version = "0.1.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558"; };
        dependencies = {
          regex_automata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.1.10" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".matchit."0.7.0" = overridableMkRustCrate (profileName: rec {
        name = "matchit";
        version = "0.7.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "b87248edafb776e59e6ee64a79086f65890d3510f2c656c000bf2a7e8a0aea40"; };
        features = builtins.concatLists [
          [ "default" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".maud."0.24.0" = overridableMkRustCrate (profileName: rec {
        name = "maud";
        version = "0.24.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "19aff2cd19eb4b93df29efa602652513b0f731f1d3474f6e377f763fddf61e58"; };
        features = builtins.concatLists [
          [ "actix-web" ]
          [ "actix-web-dep" ]
          [ "default" ]
          [ "futures-util" ]
        ];
        dependencies = {
          actix_web_dep = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-web."4.3.0" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.8" { inherit profileName; };
          maud_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".maud_macros."0.24.0" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".maud_macros."0.24.0" = overridableMkRustCrate (profileName: rec {
        name = "maud_macros";
        version = "0.24.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "e5c114f6f24b08fdd4a25d2fb87a8b140df56b577723247b382e8b04c583f2eb"; };
        dependencies = {
          proc_macro_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."1.0.4" { inherit profileName; };
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" = overridableMkRustCrate (profileName: rec {
        name = "memchr";
        version = "2.5.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "2dffe52ecf27772e601905b7522cb4ef790d2cc203488bbd0e2fe85fcb74566d"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".mimalloc."0.1.34" = overridableMkRustCrate (profileName: rec {
        name = "mimalloc";
        version = "0.1.34";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "9dcb174b18635f7561a0c6c9fc2ce57218ac7523cf72c50af80e2d79ab8f3ba1"; };
        features = builtins.concatLists [
          (lib.optional (rootFeatures' ? "router/mimalloc") "default")
          (lib.optional (rootFeatures' ? "router/mimalloc") "secure")
        ];
        dependencies = {
          ${ if rootFeatures' ? "router/mimalloc" then "libmimalloc_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libmimalloc-sys."0.1.30" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".mime."0.3.16" = overridableMkRustCrate (profileName: rec {
        name = "mime";
        version = "0.3.16";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "2a60c7ce501c71e03a9c9c0d35b861413ae925bd979cc7a4e30d060069aaac8d"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".minimal-lexical."0.2.1" = overridableMkRustCrate (profileName: rec {
        name = "minimal-lexical";
        version = "0.2.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a"; };
        features = builtins.concatLists [
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.6.2" = overridableMkRustCrate (profileName: rec {
        name = "miniz_oxide";
        version = "0.6.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "b275950c28b37e794e8c55d88aeb5e139d0ce23fdbbeda68f8d7174abdf9e8fa"; };
        features = builtins.concatLists [
          [ "with-alloc" ]
        ];
        dependencies = {
          adler = rustPackages."registry+https://github.com/rust-lang/crates.io-index".adler."1.0.2" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".mio."0.8.5" = overridableMkRustCrate (profileName: rec {
        name = "mio";
        version = "0.8.5";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "e5d732bc30207a6423068df043e3d02e0735b155ad7ce1a6f76fe2baa5b158de"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "net" ]
          [ "os-ext" ]
          [ "os-poll" ]
        ];
        dependencies = {
          ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "wasi" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          ${ if hostPlatform.parsed.kernel.name == "wasi" then "wasi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" { inherit profileName; };
          ${ if hostPlatform.isWindows then "windows_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.42.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".nanoid."0.4.0" = overridableMkRustCrate (profileName: rec {
        name = "nanoid";
        version = "0.4.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "3ffa00dec017b5b1a8b7cf5e2c008bfda1aa7e0697ac1508b491fdf2622fb4d8"; };
        dependencies = {
          rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".native-tls."0.2.11" = overridableMkRustCrate (profileName: rec {
        name = "native-tls";
        version = "0.2.11";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "07226173c32f2926027b63cce4bcd8076c3552846cbe7925f3aaffeac0a3b92e"; };
        dependencies = {
          ${ if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" then "lazy_static" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
          ${ if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          ${ if !(hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          ${ if !(hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "openssl" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.45" { inherit profileName; };
          ${ if !(hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "openssl_probe" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.5" { inherit profileName; };
          ${ if !(hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "openssl_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.80" { inherit profileName; };
          ${ if hostPlatform.parsed.kernel.name == "windows" then "schannel" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".schannel."0.1.21" { inherit profileName; };
          ${ if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" then "security_framework" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".security-framework."2.7.0" { inherit profileName; };
          ${ if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" then "security_framework_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".security-framework-sys."2.6.1" { inherit profileName; };
          ${ if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" then "tempfile" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.3.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".nom."7.1.3" = overridableMkRustCrate (profileName: rec {
        name = "nom";
        version = "7.1.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "default" ]
          [ "std" ]
        ];
        dependencies = {
          memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" { inherit profileName; };
          minimal_lexical = rustPackages."registry+https://github.com/rust-lang/crates.io-index".minimal-lexical."0.2.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".nom8."0.2.0" = overridableMkRustCrate (profileName: rec {
        name = "nom8";
        version = "0.2.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "ae01545c9c7fc4486ab7debaf2aad7003ac19431791868fb2e8066df97fad2f8"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "default" ]
          [ "std" ]
        ];
        dependencies = {
          memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".nu-ansi-term."0.46.0" = overridableMkRustCrate (profileName: rec {
        name = "nu-ansi-term";
        version = "0.46.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84"; };
        dependencies = {
          overload = rustPackages."registry+https://github.com/rust-lang/crates.io-index".overload."0.1.1" { inherit profileName; };
          ${ if hostPlatform.parsed.kernel.name == "windows" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".num-bigint."0.4.3" = overridableMkRustCrate (profileName: rec {
        name = "num-bigint";
        version = "0.4.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "f93ab6289c7b344a8a9f60f88d80aa20032336fe78da341afc91c8a2341fc75f"; };
        dependencies = {
          num_integer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.45" { inherit profileName; };
          num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" { inherit profileName; };
        };
        buildDependencies = {
          autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.45" = overridableMkRustCrate (profileName: rec {
        name = "num-integer";
        version = "0.1.45";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "225d3389fb3509a24c93f5c29eb6bde2586b98d9f016636dff58d7c6f7569cd9"; };
        features = builtins.concatLists [
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "default")
          [ "i128" ]
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "std")
        ];
        dependencies = {
          num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" { inherit profileName; };
        };
        buildDependencies = {
          autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" = overridableMkRustCrate (profileName: rec {
        name = "num-traits";
        version = "0.2.15";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "578ede34cf02f8924ab9447f50c28075b4d3e5b269972345e7e0372b38c6cdcd"; };
        features = builtins.concatLists [
          [ "i128" ]
          [ "libm" ]
          [ "std" ]
        ];
        dependencies = {
          libm = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libm."0.2.6" { inherit profileName; };
        };
        buildDependencies = {
          autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.15.0" = overridableMkRustCrate (profileName: rec {
        name = "num_cpus";
        version = "1.15.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "0fac9e2da13b5eb447a6ce3d392f23a29d8694bff781bf03a16cd9ac8697593b"; };
        dependencies = {
          ${ if (hostPlatform.parsed.cpu.name == "x86_64" || hostPlatform.parsed.cpu.name == "aarch64") && hostPlatform.parsed.kernel.name == "hermit" then "hermit_abi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.2.6" { inherit profileName; };
          ${ if !hostPlatform.isWindows then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" = overridableMkRustCrate (profileName: rec {
        name = "once_cell";
        version = "1.17.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "6f61fba1741ea2b3d6a1e3178721804bb716a68a6aeba1149b5d52e3d464ea66"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "default" ]
          [ "race" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".opaque-debug."0.3.0" = overridableMkRustCrate (profileName: rec {
        name = "opaque-debug";
        version = "0.3.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "624a8340c38c1b80fd549087862da4ba43e08858af025b236e509b6649fc13d5"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.45" = overridableMkRustCrate (profileName: rec {
        name = "openssl";
        version = "0.10.45";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "b102428fd03bc5edf97f62620f7298614c45cedf287c271e7ed450bbaf83f2e1"; };
        features = builtins.concatLists [
          [ "default" ]
        ];
        dependencies = {
          bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
          foreign_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.3.2" { inherit profileName; };
          libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          openssl_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-macros."0.1.0" { profileName = "__noProfile"; };
          ffi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.80" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".openssl-macros."0.1.0" = overridableMkRustCrate (profileName: rec {
        name = "openssl-macros";
        version = "0.1.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "b501e44f11665960c7e7fcf062c7d96a14ade4aa98116c004b2e37b5be7d736c"; };
        dependencies = {
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.5" = overridableMkRustCrate (profileName: rec {
        name = "openssl-probe";
        version = "0.1.5";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.80" = overridableMkRustCrate (profileName: rec {
        name = "openssl-sys";
        version = "0.9.80";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "23bbbf7854cd45b83958ebe919f0e8e516793727652e27fda10a8384cfc790b7"; };
        dependencies = {
          libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
        };
        buildDependencies = {
          autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; };
          cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.78" { profileName = "__noProfile"; };
          pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.26" { profileName = "__noProfile"; };
          ${ if hostPlatform.parsed.abi.name == "msvc" then "vcpkg" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.15" { profileName = "__noProfile"; };
        };
      });
      "git+https://github.com/open-telemetry/opentelemetry-rust".opentelemetry."0.18.0" = overridableMkRustCrate (profileName: rec {
        name = "opentelemetry";
        version = "0.18.0";
        registry = "git+https://github.com/open-telemetry/opentelemetry-rust";
        src = fetchCrateGit {
          url = https://github.com/open-telemetry/opentelemetry-rust;
          name = "opentelemetry";
          version = "0.18.0";
          rev = "44b90202fd744598db8b0ace5b8f0bad7ec45658";};
        features = builtins.concatLists [
          [ "default" ]
          [ "metrics" ]
          [ "rt-tokio-current-thread" ]
          [ "trace" ]
        ];
        dependencies = {
          opentelemetry_api = rustPackages."git+https://github.com/open-telemetry/opentelemetry-rust".opentelemetry_api."0.18.0" { inherit profileName; };
          opentelemetry_sdk = rustPackages."git+https://github.com/open-telemetry/opentelemetry-rust".opentelemetry_sdk."0.18.0" { inherit profileName; };
        };
      });
      "git+https://github.com/open-telemetry/opentelemetry-rust".opentelemetry-otlp."0.11.0" = overridableMkRustCrate (profileName: rec {
        name = "opentelemetry-otlp";
        version = "0.11.0";
        registry = "git+https://github.com/open-telemetry/opentelemetry-rust";
        src = fetchCrateGit {
          url = https://github.com/open-telemetry/opentelemetry-rust;
          name = "opentelemetry-otlp";
          version = "0.11.0";
          rev = "44b90202fd744598db8b0ace5b8f0bad7ec45658";};
        features = builtins.concatLists [
          [ "default" ]
          [ "grpc-tonic" ]
          [ "http" ]
          [ "metrics" ]
          [ "prost" ]
          [ "tokio" ]
          [ "tonic" ]
          [ "trace" ]
        ];
        dependencies = {
          async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.63" { profileName = "__noProfile"; };
          futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.25" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          opentelemetry = rustPackages."git+https://github.com/open-telemetry/opentelemetry-rust".opentelemetry."0.18.0" { inherit profileName; };
          opentelemetry_proto = rustPackages."git+https://github.com/open-telemetry/opentelemetry-rust".opentelemetry-proto."0.1.0" { inherit profileName; };
          prost = rustPackages."registry+https://github.com/rust-lang/crates.io-index".prost."0.11.6" { inherit profileName; };
          thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.38" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          tonic = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tonic."0.8.3" { inherit profileName; };
        };
      });
      "git+https://github.com/open-telemetry/opentelemetry-rust".opentelemetry-proto."0.1.0" = overridableMkRustCrate (profileName: rec {
        name = "opentelemetry-proto";
        version = "0.1.0";
        registry = "git+https://github.com/open-telemetry/opentelemetry-rust";
        src = fetchCrateGit {
          url = https://github.com/open-telemetry/opentelemetry-rust;
          name = "opentelemetry-proto";
          version = "0.1.0";
          rev = "44b90202fd744598db8b0ace5b8f0bad7ec45658";};
        features = builtins.concatLists [
          [ "gen-tonic" ]
          [ "metrics" ]
          [ "prost" ]
          [ "tonic" ]
          [ "traces" ]
        ];
        dependencies = {
          futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.25" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          opentelemetry = rustPackages."git+https://github.com/open-telemetry/opentelemetry-rust".opentelemetry."0.18.0" { inherit profileName; };
          prost = rustPackages."registry+https://github.com/rust-lang/crates.io-index".prost."0.11.6" { inherit profileName; };
          tonic = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tonic."0.8.3" { inherit profileName; };
        };
      });
      "git+https://github.com/open-telemetry/opentelemetry-rust".opentelemetry_api."0.18.0" = overridableMkRustCrate (profileName: rec {
        name = "opentelemetry_api";
        version = "0.18.0";
        registry = "git+https://github.com/open-telemetry/opentelemetry-rust";
        src = fetchCrateGit {
          url = https://github.com/open-telemetry/opentelemetry-rust;
          name = "opentelemetry_api";
          version = "0.18.0";
          rev = "44b90202fd744598db8b0ace5b8f0bad7ec45658";};
        features = builtins.concatLists [
          [ "default" ]
          [ "fnv" ]
          [ "metrics" ]
          [ "pin-project-lite" ]
          [ "trace" ]
        ];
        dependencies = {
          fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; };
          futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.25" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.2" { inherit profileName; };
          ${ if hostPlatform.parsed.cpu.name == "wasm32" then "js_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.60" { inherit profileName; };
          once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.38" { inherit profileName; };
        };
      });
      "git+https://github.com/open-telemetry/opentelemetry-rust".opentelemetry_sdk."0.18.0" = overridableMkRustCrate (profileName: rec {
        name = "opentelemetry_sdk";
        version = "0.18.0";
        registry = "git+https://github.com/open-telemetry/opentelemetry-rust";
        src = fetchCrateGit {
          url = https://github.com/open-telemetry/opentelemetry-rust;
          name = "opentelemetry_sdk";
          version = "0.18.0";
          rev = "44b90202fd744598db8b0ace5b8f0bad7ec45658";};
        features = builtins.concatLists [
          [ "async-trait" ]
          [ "crossbeam-channel" ]
          [ "dashmap" ]
          [ "default" ]
          [ "fnv" ]
          [ "metrics" ]
          [ "percent-encoding" ]
          [ "rand" ]
          [ "rt-tokio-current-thread" ]
          [ "tokio" ]
          [ "tokio-stream" ]
          [ "trace" ]
        ];
        dependencies = {
          async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.63" { profileName = "__noProfile"; };
          crossbeam_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.5.6" { inherit profileName; };
          dashmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dashmap."5.4.0" { inherit profileName; };
          fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; };
          futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.25" { inherit profileName; };
          futures_executor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-executor."0.3.25" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          opentelemetry_api = rustPackages."git+https://github.com/open-telemetry/opentelemetry-rust".opentelemetry_api."0.18.0" { inherit profileName; };
          percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.2.0" { inherit profileName; };
          rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; };
          thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.38" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          tokio_stream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-stream."0.1.11" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".ordered-multimap."0.4.3" = overridableMkRustCrate (profileName: rec {
        name = "ordered-multimap";
        version = "0.4.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "ccd746e37177e1711c20dd619a1620f34f5c8b569c53590a72dedd5344d8924a"; };
        dependencies = {
          dlv_list = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dlv-list."0.3.0" { inherit profileName; };
          hashbrown = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.12.3" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".os_str_bytes."6.4.1" = overridableMkRustCrate (profileName: rec {
        name = "os_str_bytes";
        version = "6.4.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "9b7820b9daea5457c9f21c69448905d723fbd21136ccf521748f23fd49e723ee"; };
        features = builtins.concatLists [
          [ "raw_os_str" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".outref."0.1.0" = overridableMkRustCrate (profileName: rec {
        name = "outref";
        version = "0.1.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "7f222829ae9293e33a9f5e9f440c6760a3d450a64affe1846486b140db81c1f4"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".overload."0.1.1" = overridableMkRustCrate (profileName: rec {
        name = "overload";
        version = "0.1.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".owo-colors."3.5.0" = overridableMkRustCrate (profileName: rec {
        name = "owo-colors";
        version = "3.5.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "c1b04fb49957986fdce4d6ee7a65027d55d4b6d2265e5848bbb507b58ccfdb6f"; };
        features = builtins.concatLists [
          [ "supports-color" ]
          [ "supports-colors" ]
        ];
        dependencies = {
          supports_color = rustPackages."registry+https://github.com/rust-lang/crates.io-index".supports-color."1.3.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".parking."2.0.0" = overridableMkRustCrate (profileName: rec {
        name = "parking";
        version = "2.0.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "427c3892f9e783d91cc128285287e70a59e206ca452770ece88a76f7a3eddd72"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.11.2" = overridableMkRustCrate (profileName: rec {
        name = "parking_lot";
        version = "0.11.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "7d17b78036a60663b797adeaee46f5c9dfebb86948d1255007a1d6be0271ff99"; };
        features = builtins.concatLists [
          [ "default" ]
        ];
        dependencies = {
          instant = rustPackages."registry+https://github.com/rust-lang/crates.io-index".instant."0.1.12" { inherit profileName; };
          lock_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.9" { inherit profileName; };
          parking_lot_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.8.6" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.1" = overridableMkRustCrate (profileName: rec {
        name = "parking_lot";
        version = "0.12.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f"; };
        features = builtins.concatLists [
          [ "default" ]
        ];
        dependencies = {
          lock_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.9" { inherit profileName; };
          parking_lot_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.9.6" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.8.6" = overridableMkRustCrate (profileName: rec {
        name = "parking_lot_core";
        version = "0.8.6";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "60a2cfe6f0ad2bfc16aefa463b497d5c7a5ecd44a23efa72aa342d90177356dc"; };
        dependencies = {
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
          instant = rustPackages."registry+https://github.com/rust-lang/crates.io-index".instant."0.1.12" { inherit profileName; };
          ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.2.16" { inherit profileName; };
          smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.10.0" { inherit profileName; };
          ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.9.6" = overridableMkRustCrate (profileName: rec {
        name = "parking_lot_core";
        version = "0.9.6";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "ba1ef8814b5c993410bb3adfad7a5ed269563e4a2f90c41f5d85be7fb47133bf"; };
        dependencies = {
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
          ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.2.16" { inherit profileName; };
          smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.10.0" { inherit profileName; };
          ${ if hostPlatform.isWindows then "windows_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.42.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".paste."1.0.11" = overridableMkRustCrate (profileName: rec {
        name = "paste";
        version = "1.0.11";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "d01a5bd0424d00070b0098dd17ebca6f961a959dead1dbcbbbc1d1cd8d3deeba"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".pathdiff."0.2.1" = overridableMkRustCrate (profileName: rec {
        name = "pathdiff";
        version = "0.2.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "8835116a5c179084a830efb3adc117ab007512b535bc1a21c991d3b32a6b44dd"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".pem."1.1.1" = overridableMkRustCrate (profileName: rec {
        name = "pem";
        version = "1.1.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "a8835c273a76a90455d7344889b0964598e3316e2a79ede8e36f16bdcf2228b8"; };
        dependencies = {
          base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.13.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.2.0" = overridableMkRustCrate (profileName: rec {
        name = "percent-encoding";
        version = "2.2.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "478c572c3d73181ff3c2539045f6eb99e5491218eae919370993b890cdbdd98e"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "default" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".pest."2.5.3" = overridableMkRustCrate (profileName: rec {
        name = "pest";
        version = "2.5.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "4257b4a04d91f7e9e6290be5d3da4804dd5784fafde3a497d73eb2b4a158c30a"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
          [ "thiserror" ]
        ];
        dependencies = {
          thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.38" { inherit profileName; };
          ucd_trie = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ucd-trie."0.1.5" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".pest_derive."2.5.3" = overridableMkRustCrate (profileName: rec {
        name = "pest_derive";
        version = "2.5.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "241cda393b0cdd65e62e07e12454f1f25d57017dcc514b1514cd3c4645e3a0a6"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
        dependencies = {
          pest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest."2.5.3" { inherit profileName; };
          pest_generator = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest_generator."2.5.3" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".pest_generator."2.5.3" = overridableMkRustCrate (profileName: rec {
        name = "pest_generator";
        version = "2.5.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "46b53634d8c8196302953c74d5352f33d0c512a9499bd2ce468fc9f4128fa27c"; };
        features = builtins.concatLists [
          [ "std" ]
        ];
        dependencies = {
          pest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest."2.5.3" { inherit profileName; };
          pest_meta = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest_meta."2.5.3" { inherit profileName; };
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".pest_meta."2.5.3" = overridableMkRustCrate (profileName: rec {
        name = "pest_meta";
        version = "2.5.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "0ef4f1332a8d4678b41966bb4cc1d0676880e84183a1ecc3f4b69f03e99c7a51"; };
        dependencies = {
          once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          pest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pest."2.5.3" { inherit profileName; };
        };
        buildDependencies = {
          sha2 = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.6" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".pin-project."1.0.12" = overridableMkRustCrate (profileName: rec {
        name = "pin-project";
        version = "1.0.12";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "ad29a609b6bcd67fee905812e544992d216af9d755757c05ed2d0e15a74c6ecc"; };
        dependencies = {
          pin_project_internal = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-internal."1.0.12" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".pin-project-internal."1.0.12" = overridableMkRustCrate (profileName: rec {
        name = "pin-project-internal";
        version = "1.0.12";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "069bdb1e05adc7a8990dce9cc75370895fbe4e3d58b9b73bf1aee56359344a55"; };
        dependencies = {
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" = overridableMkRustCrate (profileName: rec {
        name = "pin-project-lite";
        version = "0.2.9";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "e0a7ae3ac2f1173085d398531c705756c94a4c56843785df85a60c1a0afac116"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".pin-utils."0.1.0" = overridableMkRustCrate (profileName: rec {
        name = "pin-utils";
        version = "0.1.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.26" = overridableMkRustCrate (profileName: rec {
        name = "pkg-config";
        version = "0.3.26";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "6ac9a59f73473f1b8d852421e59e64809f025994837ef743615c6d0c5b305160"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.17" = overridableMkRustCrate (profileName: rec {
        name = "ppv-lite86";
        version = "0.2.17";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de"; };
        features = builtins.concatLists [
          [ "simd" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".pq-sys."0.4.7" = overridableMkRustCrate (profileName: rec {
        name = "pq-sys";
        version = "0.4.7";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "3b845d6d8ec554f972a2c5298aad68953fd64e7441e846075450b44656a016d1"; };
        buildDependencies = {
          ${ if hostPlatform.parsed.abi.name == "msvc" then "vcpkg" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.15" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".pretty_env_logger."0.4.0" = overridableMkRustCrate (profileName: rec {
        name = "pretty_env_logger";
        version = "0.4.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "926d36b9553851b8b0005f1275891b392ee4d2d833852c417ed025477350fb9d"; };
        dependencies = {
          env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.7.1" { inherit profileName; };
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."1.0.4" = overridableMkRustCrate (profileName: rec {
        name = "proc-macro-error";
        version = "1.0.4";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "syn" ]
          [ "syn-error" ]
        ];
        dependencies = {
          proc_macro_error_attr = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-error-attr."1.0.4" { profileName = "__noProfile"; };
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
        buildDependencies = {
          version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.4" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".proc-macro-error-attr."1.0.4" = overridableMkRustCrate (profileName: rec {
        name = "proc-macro-error-attr";
        version = "1.0.4";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "a1be40180e52ecc98ad80b184934baf3d0d29f979574e439af5a55274b35f869"; };
        dependencies = {
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
        };
        buildDependencies = {
          version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.4" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".proc-macro-hack."0.5.20+deprecated" = overridableMkRustCrate (profileName: rec {
        name = "proc-macro-hack";
        version = "0.5.20+deprecated";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "dc375e1527247fe1a97d8b7156678dfe7c1af2fc075c9a4db3690ecd2a148068"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" = overridableMkRustCrate (profileName: rec {
        name = "proc-macro2";
        version = "1.0.50";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "6ef7d57beacfaf2d8aee5937dab7b7f28de3cb8b1828479bb5de2a7106f2bae2"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "proc-macro" ]
        ];
        dependencies = {
          unicode_ident = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.6" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".proptest."1.1.0" = overridableMkRustCrate (profileName: rec {
        name = "proptest";
        version = "1.1.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "29f1b898011ce9595050a68e60f90bad083ff2987a695a42357134c8381fba70"; };
        features = builtins.concatLists [
          [ "bit-set" ]
          [ "break-dead-code" ]
          [ "default" ]
          [ "fork" ]
          [ "lazy_static" ]
          [ "quick-error" ]
          [ "regex-syntax" ]
          [ "rusty-fork" ]
          [ "std" ]
          [ "tempfile" ]
          [ "timeout" ]
        ];
        dependencies = {
          bit_set = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bit-set."0.5.3" { inherit profileName; };
          bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
          byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.4.3" { inherit profileName; };
          lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
          num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" { inherit profileName; };
          quick_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-error."2.0.1" { inherit profileName; };
          rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; };
          rand_chacha = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.3.1" { inherit profileName; };
          rand_xorshift = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_xorshift."0.3.0" { inherit profileName; };
          regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.28" { inherit profileName; };
          rusty_fork = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rusty-fork."0.3.0" { inherit profileName; };
          tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.3.0" { inherit profileName; };
          unarray = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unarray."0.1.4" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".prost."0.11.6" = overridableMkRustCrate (profileName: rec {
        name = "prost";
        version = "0.11.6";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "21dc42e00223fc37204bd4aa177e69420c604ca4a183209a8f9de30c6d934698"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "prost-derive" ]
          [ "std" ]
        ];
        dependencies = {
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          prost_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".prost-derive."0.11.6" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".prost-derive."0.11.6" = overridableMkRustCrate (profileName: rec {
        name = "prost-derive";
        version = "0.11.6";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "8bda8c0881ea9f722eb9629376db3d0b903b462477c1aafcb0566610ac28ac5d"; };
        dependencies = {
          anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.68" { inherit profileName; };
          itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.10.5" { inherit profileName; };
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.3" = overridableMkRustCrate (profileName: rec {
        name = "quick-error";
        version = "1.2.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "a1d01941d82fa2ab50be1e79e6714289dd7cde78eba4c074bc5a4374f650dfe0"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".quick-error."2.0.1" = overridableMkRustCrate (profileName: rec {
        name = "quick-error";
        version = "2.0.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "a993555f31e5a609f617c12db6250dedcac1b0a85076912c436e6fc9b2c8e6a3"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" = overridableMkRustCrate (profileName: rec {
        name = "quote";
        version = "1.0.23";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "8856d8364d252a14d474036ea1358d63c9e6965c8e5c1885c18f73d70bff9c7b"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "proc-macro" ]
        ];
        dependencies = {
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".r2d2."0.8.10" = overridableMkRustCrate (profileName: rec {
        name = "r2d2";
        version = "0.8.10";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "51de85fb3fb6524929c8a2eb85e6b6d363de4e8c48f9e2c2eac4944abc181c93"; };
        dependencies = {
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.1" { inherit profileName; };
          scheduled_thread_pool = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scheduled-thread-pool."0.2.6" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" = overridableMkRustCrate (profileName: rec {
        name = "rand";
        version = "0.7.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "6a6b1679d49b24bbfe0c803429aa1874472f50d9b363131f0e89fc356b544d03"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "default" ]
          [ "getrandom" ]
          [ "getrandom_package" ]
          [ "libc" ]
          [ "std" ]
        ];
        dependencies = {
          getrandom_package = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.1.16" { inherit profileName; };
          ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          ${ if !(hostPlatform.parsed.kernel.name == "emscripten") then "rand_chacha" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.2.2" { inherit profileName; };
          rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" { inherit profileName; };
          ${ if hostPlatform.parsed.kernel.name == "emscripten" then "rand_hc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_hc."0.2.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" = overridableMkRustCrate (profileName: rec {
        name = "rand";
        version = "0.8.5";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "default" ]
          [ "getrandom" ]
          [ "libc" ]
          [ "rand_chacha" ]
          [ "small_rng" ]
          [ "std" ]
          [ "std_rng" ]
        ];
        dependencies = {
          ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          rand_chacha = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.3.1" { inherit profileName; };
          rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.2.2" = overridableMkRustCrate (profileName: rec {
        name = "rand_chacha";
        version = "0.2.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "f4c8ed856279c9737206bf725bf36935d8666ead7aa69b52be55af369d193402"; };
        features = builtins.concatLists [
          [ "std" ]
        ];
        dependencies = {
          ppv_lite86 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.17" { inherit profileName; };
          rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.3.1" = overridableMkRustCrate (profileName: rec {
        name = "rand_chacha";
        version = "0.3.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88"; };
        features = builtins.concatLists [
          [ "std" ]
        ];
        dependencies = {
          ppv_lite86 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.17" { inherit profileName; };
          rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" = overridableMkRustCrate (profileName: rec {
        name = "rand_core";
        version = "0.5.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "90bde5296fc891b0cef12a6d03ddccc162ce7b2aff54160af9338f8d40df6d19"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "getrandom" ]
          [ "std" ]
        ];
        dependencies = {
          getrandom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.1.16" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" = overridableMkRustCrate (profileName: rec {
        name = "rand_core";
        version = "0.6.4";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "getrandom" ]
          [ "std" ]
        ];
        dependencies = {
          getrandom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.8" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".rand_hc."0.2.0" = overridableMkRustCrate (profileName: rec {
        name = "rand_hc";
        version = "0.2.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "ca3129af7b92a17112d59ad498c6f81eaf463253766b90396d39ea7a39d6613c"; };
        dependencies = {
          rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".rand_xorshift."0.3.0" = overridableMkRustCrate (profileName: rec {
        name = "rand_xorshift";
        version = "0.3.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "d25bf25ec5ae4a3f1b92f929810509a2f53d7dca2f50b794ff57e3face536c8f"; };
        dependencies = {
          rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".redis-protocol."4.1.0" = overridableMkRustCrate (profileName: rec {
        name = "redis-protocol";
        version = "4.1.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "9c31deddf734dc0a39d3112e73490e88b61a05e83e074d211f348404cee4d2c6"; };
        features = builtins.concatLists [
          [ "decode-mut" ]
          [ "default" ]
        ];
        dependencies = {
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          bytes_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes-utils."0.1.3" { inherit profileName; };
          cookie_factory = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cookie-factory."0.3.2" { inherit profileName; };
          crc16 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc16."0.4.0" { inherit profileName; };
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          nom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".nom."7.1.3" { inherit profileName; };
        };
      });
      "unknown".redis_interface."0.1.0" = overridableMkRustCrate (profileName: rec {
        name = "redis_interface";
        version = "0.1.0";
        registry = "unknown";
        src = fetchCrateLocal (workspaceSrc + "/crates/redis_interface");
        dependencies = {
          common_utils = rustPackages."unknown".common_utils."0.1.0" { inherit profileName; };
          error_stack = rustPackages."registry+https://github.com/rust-lang/crates.io-index".error-stack."0.2.4" { inherit profileName; };
          fred = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fred."5.2.0" { inherit profileName; };
          futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.25" { inherit profileName; };
          router_env = rustPackages."unknown".router_env."0.1.0" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.38" { inherit profileName; };
        };
        devDependencies = {
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.2.16" = overridableMkRustCrate (profileName: rec {
        name = "redox_syscall";
        version = "0.2.16";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "fb5a58c1855b4b6819d59012155603f0b22ad30cad752600aadfcb695265519a"; };
        dependencies = {
          bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".regex."1.7.1" = overridableMkRustCrate (profileName: rec {
        name = "regex";
        version = "1.7.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "48aaa5748ba571fb95cd2c85c09f629215d3a6ece942baa100950af03a34f733"; };
        features = builtins.concatLists [
          [ "aho-corasick" ]
          [ "default" ]
          [ "memchr" ]
          [ "perf" ]
          [ "perf-cache" ]
          [ "perf-dfa" ]
          [ "perf-inline" ]
          [ "perf-literal" ]
          [ "std" ]
          [ "unicode" ]
          [ "unicode-age" ]
          [ "unicode-bool" ]
          [ "unicode-case" ]
          [ "unicode-gencat" ]
          [ "unicode-perl" ]
          [ "unicode-script" ]
          [ "unicode-segment" ]
        ];
        dependencies = {
          aho_corasick = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."0.7.20" { inherit profileName; };
          memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" { inherit profileName; };
          regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.28" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.1.10" = overridableMkRustCrate (profileName: rec {
        name = "regex-automata";
        version = "0.1.10";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "regex-syntax" ]
          [ "std" ]
        ];
        dependencies = {
          regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.28" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.28" = overridableMkRustCrate (profileName: rec {
        name = "regex-syntax";
        version = "0.6.28";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "456c603be3e8d448b072f410900c09faf164fbce2d480456f50eea6e25f9c848"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "unicode" ]
          [ "unicode-age" ]
          [ "unicode-bool" ]
          [ "unicode-case" ]
          [ "unicode-gencat" ]
          [ "unicode-perl" ]
          [ "unicode-script" ]
          [ "unicode-segment" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".remove_dir_all."0.5.3" = overridableMkRustCrate (profileName: rec {
        name = "remove_dir_all";
        version = "0.5.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "3acd125665422973a33ac9d3dd2df85edad0f4ae9b00dafb1a05e43a9f5ef8e7"; };
        dependencies = {
          ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".reqwest."0.11.14" = overridableMkRustCrate (profileName: rec {
        name = "reqwest";
        version = "0.11.14";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "21eed90ec8570952d53b772ecf8f206aa1ec9a3d76b2521c56c42973f2d91ee9"; };
        features = builtins.concatLists [
          [ "__tls" ]
          [ "async-compression" ]
          [ "default" ]
          [ "default-tls" ]
          [ "gzip" ]
          [ "hyper-tls" ]
          [ "json" ]
          [ "native-tls" ]
          [ "native-tls-crate" ]
          [ "serde_json" ]
          [ "tokio-native-tls" ]
          [ "tokio-util" ]
        ];
        dependencies = {
          ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "async_compression" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-compression."0.3.15" { inherit profileName; };
          base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.0" { inherit profileName; };
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "encoding_rs" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding_rs."0.8.31" { inherit profileName; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "h2" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".h2."0.3.15" { inherit profileName; };
          http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "http_body" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" { inherit profileName; };
          ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "hyper" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.23" { inherit profileName; };
          ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "hyper_tls" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper-tls."0.5.0" { inherit profileName; };
          ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "ipnet" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ipnet."2.7.1" { inherit profileName; };
          ${ if hostPlatform.parsed.cpu.name == "wasm32" then "js_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.60" { inherit profileName; };
          ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "mime" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.16" { inherit profileName; };
          ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "native_tls_crate" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".native-tls."0.2.11" { inherit profileName; };
          ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "once_cell" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "percent_encoding" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.2.0" { inherit profileName; };
          ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "pin_project_lite" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
          serde_urlencoded = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.7.1" { inherit profileName; };
          ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "tokio_native_tls" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-native-tls."0.3.0" { inherit profileName; };
          ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "tokio_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.4" { inherit profileName; };
          tower_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" { inherit profileName; };
          url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.3.1" { inherit profileName; };
          ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_bindgen" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.83" { inherit profileName; };
          ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_bindgen_futures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-futures."0.4.33" { inherit profileName; };
          ${ if hostPlatform.parsed.cpu.name == "wasm32" then "web_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.60" { inherit profileName; };
          ${ if hostPlatform.isWindows then "winreg" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winreg."0.10.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".retain_mut."0.1.9" = overridableMkRustCrate (profileName: rec {
        name = "retain_mut";
        version = "0.1.9";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "4389f1d5789befaf6029ebd9f7dac4af7f7e3d61b69d4f30e2ac02b57e7712b0"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".ring."0.16.20" = overridableMkRustCrate (profileName: rec {
        name = "ring";
        version = "0.16.20";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "3053cf52e236a3ed746dfc745aa9cacf1b791d846bdaf412f60a8d7d6e17c8fc"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "default" ]
          [ "dev_urandom_fallback" ]
          [ "once_cell" ]
          [ "std" ]
        ];
        dependencies = {
          ${ if hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "linux" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          ${ if hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.kernel.name == "dragonfly" || hostPlatform.parsed.kernel.name == "freebsd" || hostPlatform.parsed.kernel.name == "illumos" || hostPlatform.parsed.kernel.name == "netbsd" || hostPlatform.parsed.kernel.name == "openbsd" || hostPlatform.parsed.kernel.name == "solaris" then "once_cell" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          ${ if hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" || (hostPlatform.parsed.cpu.name == "aarch64" || hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l") && (hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "fuchsia" || hostPlatform.parsed.kernel.name == "linux") then "spin" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".spin."0.5.2" { inherit profileName; };
          untrusted = rustPackages."registry+https://github.com/rust-lang/crates.io-index".untrusted."0.7.1" { inherit profileName; };
          ${ if hostPlatform.parsed.cpu.name == "wasm32" && hostPlatform.parsed.vendor.name == "unknown" && hostPlatform.parsed.kernel.name == "unknown" && hostPlatform.parsed.abi.name == "" then "web_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.60" { inherit profileName; };
          ${ if hostPlatform.parsed.kernel.name == "windows" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
        };
        buildDependencies = {
          cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.78" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".ron."0.7.1" = overridableMkRustCrate (profileName: rec {
        name = "ron";
        version = "0.7.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "88073939a61e5b7680558e6be56b419e208420c2adb92be54921fa6b72283f1a"; };
        dependencies = {
          base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.13.1" { inherit profileName; };
          bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
        };
      });
      "unknown".router."0.2.0" = overridableMkRustCrate (profileName: rec {
        name = "router";
        version = "0.2.0";
        registry = "unknown";
        src = fetchCrateLocal (workspaceSrc + "/crates/router");
        features = builtins.concatLists [
          (lib.optional (rootFeatures' ? "router/accounts_cache" || rootFeatures' ? "router/default") "accounts_cache")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "aws-config")
          (lib.optional (rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "aws-sdk-kms")
          (lib.optional (rootFeatures' ? "router/basilisk" || rootFeatures' ? "router/sandbox") "basilisk")
          (lib.optional (rootFeatures' ? "router/default") "default")
          (lib.optional (rootFeatures' ? "router/basilisk" || rootFeatures' ? "router/josekit" || rootFeatures' ? "router/sandbox") "josekit")
          (lib.optional (rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "kms")
          (lib.optional (rootFeatures' ? "router/default" || rootFeatures' ? "router/kv_store") "kv_store")
          (lib.optional (rootFeatures' ? "router/mimalloc") "mimalloc")
          (lib.optional (rootFeatures' ? "router/default" || rootFeatures' ? "router/olap" || rootFeatures' ? "router/openapi") "olap")
          (lib.optional (rootFeatures' ? "router/default" || rootFeatures' ? "router/oltp" || rootFeatures' ? "router/openapi") "oltp")
          (lib.optional (rootFeatures' ? "router/openapi") "openapi")
          (lib.optional (rootFeatures' ? "router/production") "production")
          (lib.optional (rootFeatures' ? "router/sandbox") "sandbox")
          (lib.optional (rootFeatures' ? "router/default" || rootFeatures' ? "router/sandbox" || rootFeatures' ? "router/stripe") "stripe")
        ];
        dependencies = {
          actix = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix."0.13.0" { inherit profileName; };
          actix_cors = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-cors."0.6.4" { inherit profileName; };
          actix_rt = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-rt."2.8.0" { inherit profileName; };
          actix_web = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-web."4.3.0" { inherit profileName; };
          api_models = rustPackages."unknown".api_models."0.1.0" { inherit profileName; };
          async_bb8_diesel = rustPackages."git+https://github.com/juspay/async-bb8-diesel".async-bb8-diesel."0.1.0" { inherit profileName; };
          async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.63" { profileName = "__noProfile"; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_config" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-config."0.54.1" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "aws_sdk_kms" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-sdk-kms."0.24.0" { inherit profileName; };
          base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.0" { inherit profileName; };
          bb8 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bb8."0.8.0" { inherit profileName; };
          blake3 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".blake3."1.3.3" { inherit profileName; };
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."4.1.4" { inherit profileName; };
          common_utils = rustPackages."unknown".common_utils."0.1.0" { inherit profileName; };
          config = rustPackages."registry+https://github.com/rust-lang/crates.io-index".config."0.13.3" { inherit profileName; };
          crc32fast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.3.2" { inherit profileName; };
          diesel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".diesel."2.0.3" { inherit profileName; };
          dyn_clone = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dyn-clone."1.0.10" { inherit profileName; };
          encoding_rs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding_rs."0.8.31" { inherit profileName; };
          error_stack = rustPackages."registry+https://github.com/rust-lang/crates.io-index".error-stack."0.2.4" { inherit profileName; };
          frunk = rustPackages."registry+https://github.com/rust-lang/crates.io-index".frunk."0.4.1" { inherit profileName; };
          frunk_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".frunk_core."0.4.1" { inherit profileName; };
          futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.25" { inherit profileName; };
          hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" { inherit profileName; };
          http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          ${ if rootFeatures' ? "router/basilisk" || rootFeatures' ? "router/josekit" || rootFeatures' ? "router/sandbox" then "josekit" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".josekit."0.8.1" { inherit profileName; };
          jsonwebtoken = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jsonwebtoken."8.2.0" { inherit profileName; };
          literally = rustPackages."registry+https://github.com/rust-lang/crates.io-index".literally."0.1.3" { inherit profileName; };
          masking = rustPackages."unknown".masking."0.1.0" { inherit profileName; };
          maud = rustPackages."registry+https://github.com/rust-lang/crates.io-index".maud."0.24.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/mimalloc" then "mimalloc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mimalloc."0.1.34" { inherit profileName; };
          mime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.16" { inherit profileName; };
          nanoid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".nanoid."0.4.0" { inherit profileName; };
          num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.15.0" { inherit profileName; };
          once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; };
          redis_interface = rustPackages."unknown".redis_interface."0.1.0" { inherit profileName; };
          regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.7.1" { inherit profileName; };
          reqwest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".reqwest."0.11.14" { inherit profileName; };
          ring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.16.20" { inherit profileName; };
          router_derive = buildRustPackages."unknown".router_derive."0.1.0" { profileName = "__noProfile"; };
          router_env = rustPackages."unknown".router_env."0.1.0" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
          serde_path_to_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_path_to_error."0.1.9" { inherit profileName; };
          ${ if rootFeatures' ? "router/default" || rootFeatures' ? "router/sandbox" || rootFeatures' ? "router/stripe" then "serde_qs" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_qs."0.11.0" { inherit profileName; };
          serde_urlencoded = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.7.1" { inherit profileName; };
          signal_hook = rustPackages."registry+https://github.com/rust-lang/crates.io-index".signal-hook."0.3.14" { inherit profileName; };
          signal_hook_tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".signal-hook-tokio."0.3.1" { inherit profileName; };
          diesel_models = rustPackages."unknown".diesel_models."0.1.0" { inherit profileName; };
          strum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strum."0.24.1" { inherit profileName; };
          thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.38" { inherit profileName; };
          time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.17" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.3.1" { inherit profileName; };
          utoipa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".utoipa."3.0.1" { inherit profileName; };
          uuid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."1.2.2" { inherit profileName; };
        };
        devDependencies = {
          actix_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-http."3.3.0" { inherit profileName; };
          awc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".awc."3.1.0" { inherit profileName; };
          derive_deref = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_deref."1.1.1" { profileName = "__noProfile"; };
          rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; };
          serial_test = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serial_test."1.0.0" { inherit profileName; };
          time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.17" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.7.2" { inherit profileName; };
          wiremock = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wiremock."0.5.17" { inherit profileName; };
        };
        buildDependencies = {
          router_env = buildRustPackages."unknown".router_env."0.1.0" { profileName = "__noProfile"; };
        };
      });
      "unknown".router_derive."0.1.0" = overridableMkRustCrate (profileName: rec {
        name = "router_derive";
        version = "0.1.0";
        registry = "unknown";
        src = fetchCrateLocal (workspaceSrc + "/crates/router_derive");
        dependencies = {
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
        devDependencies = {
          diesel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".diesel."2.0.3" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
          strum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strum."0.24.1" { inherit profileName; };
        };
      });
      "unknown".router_env."0.1.0" = overridableMkRustCrate (profileName: rec {
        name = "router_env";
        version = "0.1.0";
        registry = "unknown";
        src = fetchCrateLocal (workspaceSrc + "/crates/router_env");
        features = builtins.concatLists [
          [ "actix_web" ]
          [ "default" ]
          [ "log_custom_entries_to_extra" ]
          [ "log_extra_implicit_fields" ]
          [ "tracing-actix-web" ]
          [ "vergen" ]
        ];
        dependencies = {
          config = rustPackages."registry+https://github.com/rust-lang/crates.io-index".config."0.13.3" { inherit profileName; };
          gethostname = rustPackages."registry+https://github.com/rust-lang/crates.io-index".gethostname."0.4.1" { inherit profileName; };
          once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          opentelemetry = rustPackages."git+https://github.com/open-telemetry/opentelemetry-rust".opentelemetry."0.18.0" { inherit profileName; };
          opentelemetry_otlp = rustPackages."git+https://github.com/open-telemetry/opentelemetry-rust".opentelemetry-otlp."0.11.0" { inherit profileName; };
          rustc_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
          serde_path_to_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_path_to_error."0.1.9" { inherit profileName; };
          strum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strum."0.24.1" { inherit profileName; };
          time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.17" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
          tracing_actix_web = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-actix-web."0.7.2" { inherit profileName; };
          tracing_appender = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-appender."0.2.2" { inherit profileName; };
          tracing_attributes = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-attributes."0.1.22" { profileName = "__noProfile"; };
          tracing_opentelemetry = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-opentelemetry."0.18.0" { inherit profileName; };
          tracing_subscriber = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.16" { inherit profileName; };
          vergen = rustPackages."registry+https://github.com/rust-lang/crates.io-index".vergen."8.0.0-beta.3" { inherit profileName; };
        };
        devDependencies = {
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
        };
        buildDependencies = {
          vergen = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vergen."8.0.0-beta.3" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".rust-ini."0.18.0" = overridableMkRustCrate (profileName: rec {
        name = "rust-ini";
        version = "0.18.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "f6d5f2436026b4f6e79dc829837d467cc7e9a55ee40e750d716713540715a2df"; };
        features = builtins.concatLists [
          [ "default" ]
        ];
        dependencies = {
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
          ordered_multimap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ordered-multimap."0.4.3" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".rustc-hash."1.1.0" = overridableMkRustCrate (profileName: rec {
        name = "rustc-hash";
        version = "1.1.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.4.0" = overridableMkRustCrate (profileName: rec {
        name = "rustc_version";
        version = "0.4.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "bfa0f585226d2e68097d4f95d113b15b83a82e819ab25717ec0590d9584ef366"; };
        dependencies = {
          semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."1.0.16" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".rustls."0.20.8" = overridableMkRustCrate (profileName: rec {
        name = "rustls";
        version = "0.20.8";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "fff78fc74d175294f4e83b28343315ffcfb114b156f0185e9741cb5570f50e2f"; };
        features = builtins.concatLists [
          [ "dangerous_configuration" ]
          [ "default" ]
          [ "log" ]
          [ "logging" ]
          [ "tls12" ]
        ];
        dependencies = {
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          ring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.16.20" { inherit profileName; };
          sct = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sct."0.7.0" { inherit profileName; };
          webpki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki."0.22.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".rustls-native-certs."0.6.2" = overridableMkRustCrate (profileName: rec {
        name = "rustls-native-certs";
        version = "0.6.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "0167bac7a9f490495f3c33013e7722b53cb087ecbe082fb0c6387c96f634ea50"; };
        dependencies = {
          ${ if (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") && hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin") then "openssl_probe" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.5" { inherit profileName; };
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "rustls_pemfile" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-pemfile."1.0.2" { inherit profileName; };
          ${ if (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") && hostPlatform.isWindows then "schannel" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".schannel."0.1.21" { inherit profileName; };
          ${ if (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") && hostPlatform.parsed.kernel.name == "darwin" then "security_framework" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".security-framework."2.7.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".rustls-pemfile."1.0.2" = overridableMkRustCrate (profileName: rec {
        name = "rustls-pemfile";
        version = "1.0.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "d194b56d58803a43635bdc398cd17e383d6f71f9182b9a192c127ca42494a59b"; };
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "base64" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".rustversion."1.0.11" = overridableMkRustCrate (profileName: rec {
        name = "rustversion";
        version = "1.0.11";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "5583e89e108996506031660fe09baa5011b9dd0341b89029313006d1fb508d70"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".rusty-fork."0.3.0" = overridableMkRustCrate (profileName: rec {
        name = "rusty-fork";
        version = "0.3.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "cb3dcc6e454c328bb824492db107ab7c0ae8fcffe4ad210136ef014458c1bc4f"; };
        features = builtins.concatLists [
          [ "timeout" ]
          [ "wait-timeout" ]
        ];
        dependencies = {
          fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; };
          quick_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.3" { inherit profileName; };
          tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.3.0" { inherit profileName; };
          wait_timeout = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wait-timeout."0.2.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.12" = overridableMkRustCrate (profileName: rec {
        name = "ryu";
        version = "1.0.12";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "7b4b9743ed687d4b4bcedf9ff5eaa7398495ae14e61cba0a295704edbc7decde"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".schannel."0.1.21" = overridableMkRustCrate (profileName: rec {
        name = "schannel";
        version = "0.1.21";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "713cfb06c7059f3588fb8044c0fad1d09e3c01d225e25b9220dbfdcf16dbb1b3"; };
        dependencies = {
          windows_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.42.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".scheduled-thread-pool."0.2.6" = overridableMkRustCrate (profileName: rec {
        name = "scheduled-thread-pool";
        version = "0.2.6";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "977a7519bff143a44f842fd07e80ad1329295bd71686457f18e496736f4bf9bf"; };
        dependencies = {
          parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.1.0" = overridableMkRustCrate (profileName: rec {
        name = "scopeguard";
        version = "1.1.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".sct."0.7.0" = overridableMkRustCrate (profileName: rec {
        name = "sct";
        version = "0.7.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "d53dcdb7c9f8158937a7981b48accfd39a43af418591a5d008c7b22b5e1b7ca4"; };
        dependencies = {
          ring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.16.20" { inherit profileName; };
          untrusted = rustPackages."registry+https://github.com/rust-lang/crates.io-index".untrusted."0.7.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".security-framework."2.7.0" = overridableMkRustCrate (profileName: rec {
        name = "security-framework";
        version = "2.7.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "2bc1bb97804af6631813c55739f771071e0f2ed33ee20b68c86ec505d906356c"; };
        features = builtins.concatLists [
          [ "OSX_10_9" ]
          [ "default" ]
        ];
        dependencies = {
          bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
          core_foundation = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.9.3" { inherit profileName; };
          core_foundation_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.3" { inherit profileName; };
          libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          security_framework_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".security-framework-sys."2.6.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".security-framework-sys."2.6.1" = overridableMkRustCrate (profileName: rec {
        name = "security-framework-sys";
        version = "2.6.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "0160a13a177a45bfb43ce71c01580998474f556ad854dcbca936dd2841a5c556"; };
        features = builtins.concatLists [
          [ "OSX_10_9" ]
          [ "default" ]
        ];
        dependencies = {
          core_foundation_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.3" { inherit profileName; };
          libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".semver."1.0.16" = overridableMkRustCrate (profileName: rec {
        name = "semver";
        version = "1.0.16";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "58bc9567378fc7690d6b2addae4e60ac2eeea07becb2c64b9f218b53865cba2a"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" = overridableMkRustCrate (profileName: rec {
        name = "serde";
        version = "1.0.152";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "bb7d1f0d3021d347a83e556fc4683dea2ea09d87bccdf88ff5c12545d89d5efb"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "default" ]
          [ "derive" ]
          [ "serde_derive" ]
          [ "std" ]
        ];
        dependencies = {
          serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.152" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.152" = overridableMkRustCrate (profileName: rec {
        name = "serde_derive";
        version = "1.0.152";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "af487d118eecd09402d70a5d72551860e788df87b464af30e5ea6a38c75c541e"; };
        features = builtins.concatLists [
          [ "default" ]
        ];
        dependencies = {
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" = overridableMkRustCrate (profileName: rec {
        name = "serde_json";
        version = "1.0.91";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "877c235533714907a8c2464236f5c4b2a17262ef1bd71f38f35ea592c8da6883"; };
        features = builtins.concatLists [
          [ "default" ]
          (lib.optional (rootFeatures' ? "router/basilisk" || rootFeatures' ? "router/josekit" || rootFeatures' ? "router/sandbox") "indexmap")
          (lib.optional (rootFeatures' ? "router/basilisk" || rootFeatures' ? "router/josekit" || rootFeatures' ? "router/sandbox") "preserve_order")
          [ "std" ]
        ];
        dependencies = {
          ${ if rootFeatures' ? "router/basilisk" || rootFeatures' ? "router/josekit" || rootFeatures' ? "router/sandbox" then "indexmap" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.2" { inherit profileName; };
          itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.5" { inherit profileName; };
          ryu = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.12" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".serde_path_to_error."0.1.9" = overridableMkRustCrate (profileName: rec {
        name = "serde_path_to_error";
        version = "0.1.9";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "26b04f22b563c91331a10074bda3dd5492e3cc39d56bd557e91c0af42b6c7341"; };
        dependencies = {
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".serde_qs."0.8.5" = overridableMkRustCrate (profileName: rec {
        name = "serde_qs";
        version = "0.8.5";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "c7715380eec75f029a4ef7de39a9200e0a63823176b759d055b613f5a87df6a6"; };
        features = builtins.concatLists [
          [ "default" ]
        ];
        dependencies = {
          percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.2.0" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.38" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".serde_qs."0.11.0" = overridableMkRustCrate (profileName: rec {
        name = "serde_qs";
        version = "0.11.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "c679fa27b429f2bb57fd4710257e643e86c966e716037259f8baa33de594a1b6"; };
        features = builtins.concatLists [
          (lib.optional (rootFeatures' ? "router/default" || rootFeatures' ? "router/sandbox" || rootFeatures' ? "router/stripe") "default")
        ];
        dependencies = {
          ${ if rootFeatures' ? "router/default" || rootFeatures' ? "router/sandbox" || rootFeatures' ? "router/stripe" then "percent_encoding" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.2.0" { inherit profileName; };
          ${ if rootFeatures' ? "router/default" || rootFeatures' ? "router/sandbox" || rootFeatures' ? "router/stripe" then "serde" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          ${ if rootFeatures' ? "router/default" || rootFeatures' ? "router/sandbox" || rootFeatures' ? "router/stripe" then "thiserror" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.38" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".serde_spanned."0.6.1" = overridableMkRustCrate (profileName: rec {
        name = "serde_spanned";
        version = "0.6.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "0efd8caf556a6cebd3b285caf480045fcc1ac04f6bd786b09a6f11af30c4fcf4"; };
        features = builtins.concatLists [
          [ "serde" ]
        ];
        dependencies = {
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.7.1" = overridableMkRustCrate (profileName: rec {
        name = "serde_urlencoded";
        version = "0.7.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd"; };
        dependencies = {
          form_urlencoded = rustPackages."registry+https://github.com/rust-lang/crates.io-index".form_urlencoded."1.1.0" { inherit profileName; };
          itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.5" { inherit profileName; };
          ryu = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.12" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".serial_test."1.0.0" = overridableMkRustCrate (profileName: rec {
        name = "serial_test";
        version = "1.0.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "538c30747ae860d6fb88330addbbd3e0ddbe46d662d032855596d8a8ca260611"; };
        features = builtins.concatLists [
          [ "async" ]
          [ "default" ]
          [ "futures" ]
          [ "log" ]
          [ "logging" ]
        ];
        dependencies = {
          dashmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dashmap."5.4.0" { inherit profileName; };
          futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.25" { inherit profileName; };
          lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.1" { inherit profileName; };
          serial_test_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serial_test_derive."1.0.0" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".serial_test_derive."1.0.0" = overridableMkRustCrate (profileName: rec {
        name = "serial_test_derive";
        version = "1.0.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "079a83df15f85d89a68d64ae1238f142f172b1fa915d0d76b26a7cba1b659a69"; };
        features = builtins.concatLists [
          [ "async" ]
        ];
        dependencies = {
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".sha-1."0.9.8" = overridableMkRustCrate (profileName: rec {
        name = "sha-1";
        version = "0.9.8";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "99cd6713db3cf16b6c84e06321e049a9b9f699826e16096d23bbcc44d15d51a6"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
        dependencies = {
          block_buffer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.9.0" { inherit profileName; };
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
          ${ if hostPlatform.parsed.cpu.name == "aarch64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" then "cpufeatures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cpufeatures."0.2.5" { inherit profileName; };
          digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.9.0" { inherit profileName; };
          opaque_debug = rustPackages."registry+https://github.com/rust-lang/crates.io-index".opaque-debug."0.3.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".sha1."0.10.5" = overridableMkRustCrate (profileName: rec {
        name = "sha1";
        version = "0.10.5";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "f04293dc80c3993519f2d7f6f511707ee7094fe0c6d3406feb330cdb3540eba3"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
        dependencies = {
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
          ${ if hostPlatform.parsed.cpu.name == "aarch64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" then "cpufeatures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cpufeatures."0.2.5" { inherit profileName; };
          digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.6" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.6" = overridableMkRustCrate (profileName: rec {
        name = "sha2";
        version = "0.10.6";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "82e6b795fe2e3b1e845bafcb27aa35405c4d47cdfc92af5fc8d3002f76cebdc0"; };
        features = builtins.concatLists [
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "default")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "std")
        ];
        dependencies = {
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
          ${ if hostPlatform.parsed.cpu.name == "aarch64" || hostPlatform.parsed.cpu.name == "x86_64" || hostPlatform.parsed.cpu.name == "i686" then "cpufeatures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cpufeatures."0.2.5" { inherit profileName; };
          digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.6" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".sharded-slab."0.1.4" = overridableMkRustCrate (profileName: rec {
        name = "sharded-slab";
        version = "0.1.4";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "900fba806f70c630b0a382d0d825e17a0f19fcd059a2ade1ff237bcddf446b31"; };
        dependencies = {
          lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".signal-hook."0.3.14" = overridableMkRustCrate (profileName: rec {
        name = "signal-hook";
        version = "0.3.14";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "a253b5e89e2698464fc26b545c9edceb338e18a89effeeecfea192c3025be29d"; };
        features = builtins.concatLists [
          [ "channel" ]
          [ "default" ]
          [ "iterator" ]
        ];
        dependencies = {
          libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          signal_hook_registry = rustPackages."registry+https://github.com/rust-lang/crates.io-index".signal-hook-registry."1.4.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".signal-hook-registry."1.4.0" = overridableMkRustCrate (profileName: rec {
        name = "signal-hook-registry";
        version = "1.4.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "e51e73328dc4ac0c7ccbda3a494dfa03df1de2f46018127f60c693f2648455b0"; };
        dependencies = {
          libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".signal-hook-tokio."0.3.1" = overridableMkRustCrate (profileName: rec {
        name = "signal-hook-tokio";
        version = "0.3.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "213241f76fb1e37e27de3b6aa1b068a2c333233b59cca6634f634b80a27ecf1e"; };
        features = builtins.concatLists [
          [ "futures-core-0_3" ]
          [ "futures-v0_3" ]
        ];
        dependencies = {
          futures_core_0_3 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          signal_hook = rustPackages."registry+https://github.com/rust-lang/crates.io-index".signal-hook."0.3.14" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".simd-abstraction."0.7.1" = overridableMkRustCrate (profileName: rec {
        name = "simd-abstraction";
        version = "0.7.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "9cadb29c57caadc51ff8346233b5cec1d240b68ce55cf1afc764818791876987"; };
        features = builtins.concatLists [
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "alloc")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "detect")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "std")
        ];
        dependencies = {
          ${ if rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox" then "outref" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".outref."0.1.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".simple_asn1."0.6.2" = overridableMkRustCrate (profileName: rec {
        name = "simple_asn1";
        version = "0.6.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "adc4e5204eb1910f40f9cfa375f6f05b68c3abac4b6fd879c8ff5e7ae8a0a085"; };
        dependencies = {
          num_bigint = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-bigint."0.4.3" { inherit profileName; };
          num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" { inherit profileName; };
          thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.38" { inherit profileName; };
          time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.17" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".slab."0.4.7" = overridableMkRustCrate (profileName: rec {
        name = "slab";
        version = "0.4.7";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "4614a76b2a8be0058caa9dbbaf66d988527d86d003c11a94fbd335d7661edcef"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
        buildDependencies = {
          autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".smallvec."1.10.0" = overridableMkRustCrate (profileName: rec {
        name = "smallvec";
        version = "1.10.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "a507befe795404456341dfab10cef66ead4c041f62b8b11bbb92bffe5d0953e0"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".socket2."0.4.7" = overridableMkRustCrate (profileName: rec {
        name = "socket2";
        version = "0.4.7";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "02e2d2db9033d13a1567121ddd7a095ee144db4e1ca1b1bda3419bc0da294ebd"; };
        features = builtins.concatLists [
          [ "all" ]
        ];
        dependencies = {
          ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".spin."0.5.2" = overridableMkRustCrate (profileName: rec {
        name = "spin";
        version = "0.5.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "6e63cff320ae2c57904679ba7cb63280a3dc4613885beafb148ee7bf9aa9042d"; };
      });
      "unknown".diesel_models."0.1.0" = overridableMkRustCrate (profileName: rec {
        name = "diesel_models";
        version = "0.1.0";
        registry = "unknown";
        src = fetchCrateLocal (workspaceSrc + "/crates/diesel_models");
        features = builtins.concatLists [
          [ "default" ]
          [ "kv_store" ]
        ];
        dependencies = {
          async_bb8_diesel = rustPackages."git+https://github.com/juspay/async-bb8-diesel".async-bb8-diesel."0.1.0" { inherit profileName; };
          async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.63" { profileName = "__noProfile"; };
          common_utils = rustPackages."unknown".common_utils."0.1.0" { inherit profileName; };
          diesel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".diesel."2.0.3" { inherit profileName; };
          error_stack = rustPackages."registry+https://github.com/rust-lang/crates.io-index".error-stack."0.2.4" { inherit profileName; };
          frunk = rustPackages."registry+https://github.com/rust-lang/crates.io-index".frunk."0.4.1" { inherit profileName; };
          frunk_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".frunk_core."0.4.1" { inherit profileName; };
          hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" { inherit profileName; };
          masking = rustPackages."unknown".masking."0.1.0" { inherit profileName; };
          router_derive = buildRustPackages."unknown".router_derive."0.1.0" { profileName = "__noProfile"; };
          router_env = rustPackages."unknown".router_env."0.1.0" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
          strum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strum."0.24.1" { inherit profileName; };
          thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.38" { inherit profileName; };
          time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.17" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".strum."0.24.1" = overridableMkRustCrate (profileName: rec {
        name = "strum";
        version = "0.24.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "063e6045c0e62079840579a7e47a355ae92f60eb74daaf156fb1e84ba164e63f"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "derive" ]
          [ "std" ]
          [ "strum_macros" ]
        ];
        dependencies = {
          strum_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".strum_macros."0.24.3" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".strum_macros."0.24.3" = overridableMkRustCrate (profileName: rec {
        name = "strum_macros";
        version = "0.24.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "1e385be0d24f186b4ce2f9982191e7101bb737312ad61c1f2f984f34bcf85d59"; };
        dependencies = {
          heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.4.0" { inherit profileName; };
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          rustversion = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustversion."1.0.11" { profileName = "__noProfile"; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".subtle."2.4.1" = overridableMkRustCrate (profileName: rec {
        name = "subtle";
        version = "2.4.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "6bdef32e8150c2a081110b42772ffe7d7c9032b606bc226c8260fd97e0976601"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "i128" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".supports-color."1.3.1" = overridableMkRustCrate (profileName: rec {
        name = "supports-color";
        version = "1.3.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "8ba6faf2ca7ee42fdd458f4347ae0a9bd6bcc445ad7cb57ad82b383f18870d6f"; };
        dependencies = {
          atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
          is_ci = rustPackages."registry+https://github.com/rust-lang/crates.io-index".is_ci."1.1.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" = overridableMkRustCrate (profileName: rec {
        name = "syn";
        version = "1.0.107";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "1f4064b5b16e03ae50984a5a8ed5d4f8803e6bc1fd170a3cda91a1be4b18e3f5"; };
        features = builtins.concatLists [
          [ "clone-impls" ]
          [ "default" ]
          [ "derive" ]
          [ "extra-traits" ]
          [ "fold" ]
          [ "full" ]
          [ "parsing" ]
          [ "printing" ]
          [ "proc-macro" ]
          [ "quote" ]
          [ "visit" ]
          [ "visit-mut" ]
        ];
        dependencies = {
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          unicode_ident = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.6" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".sync_wrapper."0.1.1" = overridableMkRustCrate (profileName: rec {
        name = "sync_wrapper";
        version = "0.1.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "20518fe4a4c9acf048008599e464deb21beeae3d3578418951a189c235a7a9a8"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tempfile."3.3.0" = overridableMkRustCrate (profileName: rec {
        name = "tempfile";
        version = "3.3.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "5cdb1ef4eaeeaddc8fbd371e5017057064af0911902ef36b39801f67cc6d79e4"; };
        dependencies = {
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
          fastrand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fastrand."1.8.0" { inherit profileName; };
          ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "wasi" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.2.16" { inherit profileName; };
          remove_dir_all = rustPackages."registry+https://github.com/rust-lang/crates.io-index".remove_dir_all."0.5.3" { inherit profileName; };
          ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".termcolor."1.2.0" = overridableMkRustCrate (profileName: rec {
        name = "termcolor";
        version = "1.2.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "be55cf8942feac5c765c2c993422806843c9a9a45d4d5c407ad6dd2ea95eb9b6"; };
        dependencies = {
          ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.38" = overridableMkRustCrate (profileName: rec {
        name = "thiserror";
        version = "1.0.38";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "6a9cd18aa97d5c45c6603caea1da6628790b37f7a34b6ca89522331c5180fed0"; };
        dependencies = {
          thiserror_impl = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.38" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.38" = overridableMkRustCrate (profileName: rec {
        name = "thiserror-impl";
        version = "1.0.38";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "1fb327af4685e4d03fa8cbcf1716380da910eeb2bb8be417e7f9fd3fb164f36f"; };
        dependencies = {
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".thread_local."1.1.4" = overridableMkRustCrate (profileName: rec {
        name = "thread_local";
        version = "1.1.4";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "5516c27b78311c50bf42c071425c560ac799b11c30b31f87e3081965fe5e0180"; };
        dependencies = {
          once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".time."0.3.17" = overridableMkRustCrate (profileName: rec {
        name = "time";
        version = "0.3.17";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "a561bf4617eebd33bca6434b988f39ed798e527f51a1e797d0ee4f61c0a38376"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "default" ]
          [ "formatting" ]
          [ "macros" ]
          [ "parsing" ]
          [ "serde" ]
          [ "serde-well-known" ]
          [ "std" ]
        ];
        dependencies = {
          itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.5" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          time_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time-core."0.1.0" { inherit profileName; };
          time_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".time-macros."0.2.6" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".time-core."0.1.0" = overridableMkRustCrate (profileName: rec {
        name = "time-core";
        version = "0.1.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "2e153e1f1acaef8acc537e68b44906d2db6436e2b35ac2c6b42640fff91f00fd"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".time-macros."0.2.6" = overridableMkRustCrate (profileName: rec {
        name = "time-macros";
        version = "0.2.6";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "d967f99f534ca7e495c575c62638eebc2898a8c84c119b89e250477bc4ba16b2"; };
        features = builtins.concatLists [
          [ "formatting" ]
          [ "parsing" ]
          [ "serde" ]
        ];
        dependencies = {
          time_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time-core."0.1.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tinyvec."1.6.0" = overridableMkRustCrate (profileName: rec {
        name = "tinyvec";
        version = "1.6.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "87cc5ceb3875bb20c2890005a4e226a4651264a5c75edb2421b52861a0a0cb50"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "default" ]
          [ "tinyvec_macros" ]
        ];
        dependencies = {
          tinyvec_macros = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tinyvec_macros."0.1.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tinyvec_macros."0.1.0" = overridableMkRustCrate (profileName: rec {
        name = "tinyvec_macros";
        version = "0.1.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "cda74da7e1a664f795bb1f8a87ec406fb89a02522cf6e50620d016add6dbbf5c"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" = overridableMkRustCrate (profileName: rec {
        name = "tokio";
        version = "1.25.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "c8e00990ebabbe4c14c08aca901caed183ecd5c09562a12c824bb53d3c3fd3af"; };
        features = builtins.concatLists [
          [ "bytes" ]
          [ "default" ]
          (lib.optional (rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "fs")
          [ "io-std" ]
          [ "io-util" ]
          [ "libc" ]
          [ "macros" ]
          [ "memchr" ]
          [ "mio" ]
          [ "net" ]
          [ "num_cpus" ]
          [ "parking_lot" ]
          [ "rt" ]
          [ "rt-multi-thread" ]
          [ "signal" ]
          [ "signal-hook-registry" ]
          [ "socket2" ]
          [ "sync" ]
          [ "time" ]
          [ "tokio-macros" ]
          [ "windows-sys" ]
        ];
        dependencies = {
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" { inherit profileName; };
          mio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.8.5" { inherit profileName; };
          num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.15.0" { inherit profileName; };
          parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.1" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          ${ if hostPlatform.isUnix then "signal_hook_registry" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".signal-hook-registry."1.4.0" { inherit profileName; };
          ${ if !(hostPlatform.parsed.cpu.name == "wasm32" || hostPlatform.parsed.cpu.name == "wasm64") then "socket2" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.4.7" { inherit profileName; };
          tokio_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-macros."1.8.2" { profileName = "__noProfile"; };
          ${ if hostPlatform.isWindows then "windows_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.42.0" { inherit profileName; };
        };
        buildDependencies = {
          autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tokio-io-timeout."1.2.0" = overridableMkRustCrate (profileName: rec {
        name = "tokio-io-timeout";
        version = "1.2.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "30b74022ada614a1b4834de765f9bb43877f910cc8ce4be40e89042c9223a8bf"; };
        dependencies = {
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tokio-macros."1.8.2" = overridableMkRustCrate (profileName: rec {
        name = "tokio-macros";
        version = "1.8.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "d266c00fde287f55d3f1c3e96c500c362a2b8c695076ec180f27918820bc6df8"; };
        dependencies = {
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tokio-native-tls."0.3.0" = overridableMkRustCrate (profileName: rec {
        name = "tokio-native-tls";
        version = "0.3.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "f7d995660bd2b7f8c1568414c1126076c13fbb725c40112dc0120b78eb9b717b"; };
        dependencies = {
          native_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".native-tls."0.2.11" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tokio-rustls."0.23.4" = overridableMkRustCrate (profileName: rec {
        name = "tokio-rustls";
        version = "0.23.4";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "c43ee83903113e03984cb9e5cebe6c04a5116269e900e3ddba8f068a62adda59"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "logging" ]
          [ "tls12" ]
        ];
        dependencies = {
          rustls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.20.8" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          webpki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki."0.22.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tokio-stream."0.1.11" = overridableMkRustCrate (profileName: rec {
        name = "tokio-stream";
        version = "0.1.11";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "d660770404473ccd7bc9f8b28494a811bc18542b915c0855c51e8f419d5223ce"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "time" ]
        ];
        dependencies = {
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.6.10" = overridableMkRustCrate (profileName: rec {
        name = "tokio-util";
        version = "0.6.10";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "36943ee01a6d67977dd3f84a5a1d2efeb4ada3a1ae771cadfaa535d9d9fc6507"; };
        features = builtins.concatLists [
          [ "codec" ]
          [ "default" ]
        ];
        dependencies = {
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.25" { inherit profileName; };
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.4" = overridableMkRustCrate (profileName: rec {
        name = "tokio-util";
        version = "0.7.4";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "0bb2e075f03b3d66d8d8785356224ba688d2906a371015e225beeb65ca92c740"; };
        features = builtins.concatLists [
          [ "codec" ]
          [ "default" ]
          [ "io" ]
          [ "tracing" ]
        ];
        dependencies = {
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.25" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".toml."0.5.11" = overridableMkRustCrate (profileName: rec {
        name = "toml";
        version = "0.5.11";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "f4f7f0dd8d50a853a531c426359045b1998f04219d88799810762cd4ad314234"; };
        features = builtins.concatLists [
          [ "default" ]
        ];
        dependencies = {
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".toml."0.7.2" = overridableMkRustCrate (profileName: rec {
        name = "toml";
        version = "0.7.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "f7afcae9e3f0fe2c370fd4657108972cbb2fa9db1b9f84849cefd80741b01cb6"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "display" ]
          [ "parse" ]
        ];
        dependencies = {
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_spanned = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_spanned."0.6.1" { inherit profileName; };
          toml_datetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml_datetime."0.6.1" { inherit profileName; };
          toml_edit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml_edit."0.19.3" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".toml_datetime."0.6.1" = overridableMkRustCrate (profileName: rec {
        name = "toml_datetime";
        version = "0.6.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "3ab8ed2edee10b50132aed5f331333428b011c99402b5a534154ed15746f9622"; };
        features = builtins.concatLists [
          [ "serde" ]
        ];
        dependencies = {
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".toml_edit."0.19.3" = overridableMkRustCrate (profileName: rec {
        name = "toml_edit";
        version = "0.19.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "5e6a7712b49e1775fb9a7b998de6635b299237f48b404dde71704f2e0e7f37e5"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "serde" ]
        ];
        dependencies = {
          indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.2" { inherit profileName; };
          nom8 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".nom8."0.2.0" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_spanned = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_spanned."0.6.1" { inherit profileName; };
          toml_datetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml_datetime."0.6.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tonic."0.8.3" = overridableMkRustCrate (profileName: rec {
        name = "tonic";
        version = "0.8.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "8f219fad3b929bef19b1f86fbc0358d35daed8f2cac972037ac0dc10bbb8d5fb"; };
        features = builtins.concatLists [
          [ "async-trait" ]
          [ "axum" ]
          [ "channel" ]
          [ "codegen" ]
          [ "default" ]
          [ "h2" ]
          [ "hyper" ]
          [ "hyper-timeout" ]
          [ "prost" ]
          [ "prost-derive" ]
          [ "prost1" ]
          [ "tokio" ]
          [ "tower" ]
          [ "tracing-futures" ]
          [ "transport" ]
        ];
        dependencies = {
          async_stream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-stream."0.3.3" { inherit profileName; };
          async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.63" { profileName = "__noProfile"; };
          axum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".axum."0.6.2" { inherit profileName; };
          base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.13.1" { inherit profileName; };
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          h2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".h2."0.3.15" { inherit profileName; };
          http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          http_body = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" { inherit profileName; };
          hyper = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.23" { inherit profileName; };
          hyper_timeout = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper-timeout."0.4.1" { inherit profileName; };
          percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.2.0" { inherit profileName; };
          pin_project = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project."1.0.12" { inherit profileName; };
          prost1 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".prost."0.11.6" { inherit profileName; };
          prost_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".prost-derive."0.11.6" { profileName = "__noProfile"; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          tokio_stream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-stream."0.1.11" { inherit profileName; };
          tokio_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.4" { inherit profileName; };
          tower = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" { inherit profileName; };
          tower_layer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-layer."0.3.2" { inherit profileName; };
          tower_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" { inherit profileName; };
          tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
          tracing_futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-futures."0.2.5" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" = overridableMkRustCrate (profileName: rec {
        name = "tower";
        version = "0.4.13";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "b8fa9be0de6cf49e536ce1851f987bd21a43b771b09473c3549a6c853db37c1c"; };
        features = builtins.concatLists [
          [ "__common" ]
          [ "balance" ]
          [ "buffer" ]
          [ "default" ]
          [ "discover" ]
          [ "futures-core" ]
          [ "futures-util" ]
          [ "indexmap" ]
          [ "limit" ]
          [ "load" ]
          [ "log" ]
          [ "make" ]
          [ "pin-project" ]
          [ "pin-project-lite" ]
          [ "rand" ]
          [ "ready-cache" ]
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "retry")
          [ "slab" ]
          [ "timeout" ]
          [ "tokio" ]
          [ "tokio-util" ]
          [ "tracing" ]
          [ "util" ]
        ];
        dependencies = {
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.2" { inherit profileName; };
          pin_project = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project."1.0.12" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; };
          slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.7" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
          tokio_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.4" { inherit profileName; };
          tower_layer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-layer."0.3.2" { inherit profileName; };
          tower_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" { inherit profileName; };
          tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tower-http."0.3.5" = overridableMkRustCrate (profileName: rec {
        name = "tower-http";
        version = "0.3.5";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "f873044bf02dd1e8239e9c1293ea39dad76dc594ec16185d0a1bf31d8dc8d858"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "map-response-body" ]
          [ "tower" ]
          [ "util" ]
        ];
        dependencies = {
          bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; };
          bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.3.0" { inherit profileName; };
          futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.25" { inherit profileName; };
          futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.25" { inherit profileName; };
          http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.8" { inherit profileName; };
          http_body = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" { inherit profileName; };
          http_range_header = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-range-header."0.3.0" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          tower = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" { inherit profileName; };
          tower_layer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-layer."0.3.2" { inherit profileName; };
          tower_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tower-layer."0.3.2" = overridableMkRustCrate (profileName: rec {
        name = "tower-layer";
        version = "0.3.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "c20c8dbed6283a09604c3e69b4b7eeb54e298b8a600d4d5ecb5ad39de609f1d0"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" = overridableMkRustCrate (profileName: rec {
        name = "tower-service";
        version = "0.3.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "b6bc1c9ce2b5135ac7f93c72918fc37feb872bdc6a5533a8b85eb4b86bfdae52"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" = overridableMkRustCrate (profileName: rec {
        name = "tracing";
        version = "0.1.36";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "2fce9567bd60a67d08a16488756721ba392f24f29006402881e43b19aac64307"; };
        features = builtins.concatLists [
          [ "attributes" ]
          [ "default" ]
          [ "log" ]
          [ "std" ]
          [ "tracing-attributes" ]
        ];
        dependencies = {
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.9" { inherit profileName; };
          tracing_attributes = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-attributes."0.1.22" { profileName = "__noProfile"; };
          tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.30" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tracing-actix-web."0.7.2" = overridableMkRustCrate (profileName: rec {
        name = "tracing-actix-web";
        version = "0.7.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "4082e4d81173e0b7ad3cfb71e9eaef0dd0cbb7b139fdb56394f488a3b0760b23"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "emit_event_on_error" ]
          [ "opentelemetry_0_18" ]
          [ "opentelemetry_0_18_pkg" ]
          [ "tracing-opentelemetry_0_18_pkg" ]
        ];
        dependencies = {
          actix_web = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-web."4.3.0" { inherit profileName; };
          opentelemetry_0_18_pkg = rustPackages."git+https://github.com/open-telemetry/opentelemetry-rust".opentelemetry."0.18.0" { inherit profileName; };
          pin_project = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project."1.0.12" { inherit profileName; };
          tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
          tracing_opentelemetry_0_18_pkg = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-opentelemetry."0.18.0" { inherit profileName; };
          uuid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."1.2.2" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tracing-appender."0.2.2" = overridableMkRustCrate (profileName: rec {
        name = "tracing-appender";
        version = "0.2.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "09d48f71a791638519505cefafe162606f706c25592e4bde4d97600c0195312e"; };
        dependencies = {
          crossbeam_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.5.6" { inherit profileName; };
          time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.17" { inherit profileName; };
          tracing_subscriber = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.16" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tracing-attributes."0.1.22" = overridableMkRustCrate (profileName: rec {
        name = "tracing-attributes";
        version = "0.1.22";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "11c75893af559bc8e10716548bdef5cb2b983f8e637db9d0e15126b61b484ee2"; };
        dependencies = {
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.30" = overridableMkRustCrate (profileName: rec {
        name = "tracing-core";
        version = "0.1.30";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "24eb03ba0eab1fd845050058ce5e616558e8f8d8fca633e6b163fe25c797213a"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "once_cell" ]
          [ "std" ]
          [ "valuable" ]
        ];
        dependencies = {
          once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          ${ if false then "valuable" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".valuable."0.1.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tracing-futures."0.2.5" = overridableMkRustCrate (profileName: rec {
        name = "tracing-futures";
        version = "0.2.5";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "97d095ae15e245a057c8e8451bab9b3ee1e1f68e9ba2b4fbc18d0ac5237835f2"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "pin-project" ]
          [ "std" ]
          [ "std-future" ]
        ];
        dependencies = {
          pin_project = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project."1.0.12" { inherit profileName; };
          tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tracing-log."0.1.3" = overridableMkRustCrate (profileName: rec {
        name = "tracing-log";
        version = "0.1.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "78ddad33d2d10b1ed7eb9d1f518a5674713876e97e5bb9b7345a7984fbb4f922"; };
        features = builtins.concatLists [
          [ "log-tracer" ]
          [ "std" ]
        ];
        dependencies = {
          lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.30" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tracing-opentelemetry."0.18.0" = overridableMkRustCrate (profileName: rec {
        name = "tracing-opentelemetry";
        version = "0.18.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "21ebb87a95ea13271332df069020513ab70bdb5637ca42d6e492dc3bbbad48de"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "metrics" ]
          [ "tracing-log" ]
        ];
        dependencies = {
          once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          opentelemetry = rustPackages."git+https://github.com/open-telemetry/opentelemetry-rust".opentelemetry."0.18.0" { inherit profileName; };
          tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
          tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.30" { inherit profileName; };
          tracing_log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-log."0.1.3" { inherit profileName; };
          tracing_subscriber = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.16" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tracing-serde."0.1.3" = overridableMkRustCrate (profileName: rec {
        name = "tracing-serde";
        version = "0.1.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "bc6b213177105856957181934e4920de57730fc69bf42c37ee5bb664d406d9e1"; };
        dependencies = {
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.30" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.16" = overridableMkRustCrate (profileName: rec {
        name = "tracing-subscriber";
        version = "0.3.16";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "a6176eae26dd70d0c919749377897b54a9276bd7061339665dd68777926b5a70"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "ansi" ]
          [ "default" ]
          [ "env-filter" ]
          [ "fmt" ]
          [ "json" ]
          [ "matchers" ]
          [ "nu-ansi-term" ]
          [ "once_cell" ]
          [ "regex" ]
          [ "registry" ]
          [ "serde" ]
          [ "serde_json" ]
          [ "sharded-slab" ]
          [ "smallvec" ]
          [ "std" ]
          [ "thread_local" ]
          [ "tracing" ]
          [ "tracing-log" ]
          [ "tracing-serde" ]
        ];
        dependencies = {
          matchers = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matchers."0.1.0" { inherit profileName; };
          nu_ansi_term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".nu-ansi-term."0.46.0" { inherit profileName; };
          once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.7.1" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
          sharded_slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sharded-slab."0.1.4" { inherit profileName; };
          smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.10.0" { inherit profileName; };
          thread_local = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."1.1.4" { inherit profileName; };
          tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.36" { inherit profileName; };
          tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.30" { inherit profileName; };
          tracing_log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-log."0.1.3" { inherit profileName; };
          tracing_serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-serde."0.1.3" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".try-lock."0.2.4" = overridableMkRustCrate (profileName: rec {
        name = "try-lock";
        version = "0.2.4";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "3528ecfd12c466c6f163363caf2d02a71161dd5e1cc6ae7b34207ea2d42d81ed"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".typenum."1.16.0" = overridableMkRustCrate (profileName: rec {
        name = "typenum";
        version = "1.16.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "497961ef93d974e23eb6f433eb5fe1b7930b659f06d12dec6fc44a8f554c0bba"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".ucd-trie."0.1.5" = overridableMkRustCrate (profileName: rec {
        name = "ucd-trie";
        version = "0.1.5";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "9e79c4d996edb816c91e4308506774452e55e95c3c9de07b6729e17e15a5ef81"; };
        features = builtins.concatLists [
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".unarray."0.1.4" = overridableMkRustCrate (profileName: rec {
        name = "unarray";
        version = "0.1.4";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "eaea85b334db583fe3274d12b4cd1880032beab409c0d774be044d4480ab9a94"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.8" = overridableMkRustCrate (profileName: rec {
        name = "unicode-bidi";
        version = "0.3.8";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "099b7128301d285f79ddd55b9a83d5e6b9e97c92e0ea0daebee7263e932de992"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "hardcoded-data" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.6" = overridableMkRustCrate (profileName: rec {
        name = "unicode-ident";
        version = "1.0.6";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "84a22b9f218b40614adcb3f4ff08b703773ad44fa9423e4e0d346d5db86e4ebc"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.22" = overridableMkRustCrate (profileName: rec {
        name = "unicode-normalization";
        version = "0.1.22";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "5c5713f0fc4b5db668a2ac63cdb7bb4469d8c9fed047b1d0292cc7b0ce2ba921"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
        dependencies = {
          tinyvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tinyvec."1.6.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".untrusted."0.7.1" = overridableMkRustCrate (profileName: rec {
        name = "untrusted";
        version = "0.7.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "a156c684c91ea7d62626509bce3cb4e1d9ed5c4d978f7b4352658f96a4c26b4a"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".url."2.3.1" = overridableMkRustCrate (profileName: rec {
        name = "url";
        version = "2.3.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "0d68c799ae75762b8c3fe375feb6600ef5602c883c5d21eb51c09f22b83c4643"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "serde" ]
        ];
        dependencies = {
          form_urlencoded = rustPackages."registry+https://github.com/rust-lang/crates.io-index".form_urlencoded."1.1.0" { inherit profileName; };
          idna = rustPackages."registry+https://github.com/rust-lang/crates.io-index".idna."0.3.0" { inherit profileName; };
          percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.2.0" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".urlencoding."2.1.2" = overridableMkRustCrate (profileName: rec {
        name = "urlencoding";
        version = "2.1.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "e8db7427f936968176eaa7cdf81b7f98b980b18495ec28f1b5791ac3bfe3eea9"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".utoipa."3.0.1" = overridableMkRustCrate (profileName: rec {
        name = "utoipa";
        version = "3.0.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "3920fa753064b1be7842bea26175ffa0dfc4a8f30bcb52b8ff03fddf8889914c"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "preserve_order" ]
          [ "time" ]
        ];
        dependencies = {
          indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.2" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
          utoipa_gen = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".utoipa-gen."3.0.1" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".utoipa-gen."3.0.1" = overridableMkRustCrate (profileName: rec {
        name = "utoipa-gen";
        version = "3.0.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "720298fac6efca20df9e457e67a1eab41a20d1c3101380b5c4dca1ca60ae0062"; };
        features = builtins.concatLists [
          [ "time" ]
        ];
        dependencies = {
          proc_macro_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."1.0.4" { inherit profileName; };
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".uuid."1.2.2" = overridableMkRustCrate (profileName: rec {
        name = "uuid";
        version = "1.2.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "422ee0de9031b5b948b97a8fc04e3aa35230001a722ddd27943e0be31564ce4c"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "getrandom" ]
          [ "rng" ]
          [ "serde" ]
          [ "std" ]
          [ "v4" ]
        ];
        dependencies = {
          getrandom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.8" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".valuable."0.1.0" = overridableMkRustCrate (profileName: rec {
        name = "valuable";
        version = "0.1.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.15" = overridableMkRustCrate (profileName: rec {
        name = "vcpkg";
        version = "0.2.15";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".vergen."8.0.0-beta.3" = overridableMkRustCrate (profileName: rec {
        name = "vergen";
        version = "8.0.0-beta.3";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "7ddc80f045ae4afcbb388b085240e773f6728dfbbacff007dd91fc9e2f686fc7"; };
        features = builtins.concatLists [
          [ "cargo" ]
          [ "default" ]
          [ "git" ]
          [ "git2" ]
          [ "git2-rs" ]
          [ "rustc" ]
          [ "rustc_version" ]
          [ "time" ]
        ];
        dependencies = {
          anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.68" { inherit profileName; };
          git2_rs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".git2."0.16.1" { inherit profileName; };
          rustc_version = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.4.0" { inherit profileName; };
          time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.17" { inherit profileName; };
        };
        buildDependencies = {
          rustversion = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustversion."1.0.11" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.4" = overridableMkRustCrate (profileName: rec {
        name = "version_check";
        version = "0.9.4";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".wait-timeout."0.2.0" = overridableMkRustCrate (profileName: rec {
        name = "wait-timeout";
        version = "0.2.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "9f200f5b12eb75f8c1ed65abd4b2db8a6e1b138a20de009dacee265a2498f3f6"; };
        dependencies = {
          ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".waker-fn."1.1.0" = overridableMkRustCrate (profileName: rec {
        name = "waker-fn";
        version = "1.1.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "9d5b2c62b4012a3e1eca5a7e077d13b3bf498c4073e33ccd58626607748ceeca"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".want."0.3.0" = overridableMkRustCrate (profileName: rec {
        name = "want";
        version = "0.3.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "1ce8a968cb1cd110d136ff8b819a556d6fb6d919363c61534f6860c7eb172ba0"; };
        dependencies = {
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          try_lock = rustPackages."registry+https://github.com/rust-lang/crates.io-index".try-lock."0.2.4" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".wasi."0.9.0+wasi-snapshot-preview1" = overridableMkRustCrate (profileName: rec {
        name = "wasi";
        version = "0.9.0+wasi-snapshot-preview1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "cccddf32554fecc6acb585f82a32a72e28b48f8c4c1883ddfeeeaa96f7d8e519"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" = overridableMkRustCrate (profileName: rec {
        name = "wasi";
        version = "0.11.0+wasi-snapshot-preview1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "std" ]
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.83" = overridableMkRustCrate (profileName: rec {
        name = "wasm-bindgen";
        version = "0.2.83";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "eaf9f5aceeec8be17c128b2e93e031fb8a4d469bb9c4ae2d7dc1888b26887268"; };
        features = builtins.concatLists [
          [ "default" ]
          [ "spans" ]
          [ "std" ]
        ];
        dependencies = {
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
          wasm_bindgen_macro = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.83" { profileName = "__noProfile"; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.83" = overridableMkRustCrate (profileName: rec {
        name = "wasm-bindgen-backend";
        version = "0.2.83";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "4c8ffb332579b0557b52d268b91feab8df3615f265d5270fec2a8c95b17c1142"; };
        features = builtins.concatLists [
          [ "spans" ]
        ];
        dependencies = {
          bumpalo = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.12.0" { inherit profileName; };
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
          wasm_bindgen_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.83" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-futures."0.4.33" = overridableMkRustCrate (profileName: rec {
        name = "wasm-bindgen-futures";
        version = "0.4.33";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "23639446165ca5a5de86ae1d8896b737ae80319560fbaa4c2887b7da6e7ebd7d"; };
        dependencies = {
          cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; };
          js_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.60" { inherit profileName; };
          wasm_bindgen = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.83" { inherit profileName; };
          ${ if builtins.elem "atomics" hostPlatformFeatures then "web_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.60" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.83" = overridableMkRustCrate (profileName: rec {
        name = "wasm-bindgen-macro";
        version = "0.2.83";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "052be0f94026e6cbc75cdefc9bae13fd6052cdcaf532fa6c45e7ae33a1e6c810"; };
        features = builtins.concatLists [
          [ "spans" ]
        ];
        dependencies = {
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          wasm_bindgen_macro_support = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.83" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.83" = overridableMkRustCrate (profileName: rec {
        name = "wasm-bindgen-macro-support";
        version = "0.2.83";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "07bc0c051dc5f23e307b13285f9d75df86bfdf816c5721e573dec1f9b8aa193c"; };
        features = builtins.concatLists [
          [ "spans" ]
        ];
        dependencies = {
          proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.50" { inherit profileName; };
          quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.23" { inherit profileName; };
          syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.107" { inherit profileName; };
          wasm_bindgen_backend = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.83" { inherit profileName; };
          wasm_bindgen_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.83" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.83" = overridableMkRustCrate (profileName: rec {
        name = "wasm-bindgen-shared";
        version = "0.2.83";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "1c38c045535d93ec4f0b4defec448e4291638ee608530863b1e2ba115d4fff7f"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.60" = overridableMkRustCrate (profileName: rec {
        name = "web-sys";
        version = "0.3.60";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "bcda906d8be16e728fd5adc5b729afad4e444e106ab28cd1c7256e54fa61510f"; };
        features = builtins.concatLists [
          [ "Blob" ]
          [ "BlobPropertyBag" ]
          [ "Crypto" ]
          [ "Event" ]
          [ "EventTarget" ]
          [ "File" ]
          [ "FormData" ]
          [ "Headers" ]
          [ "MessageEvent" ]
          [ "ReadableStream" ]
          [ "Request" ]
          [ "RequestCredentials" ]
          [ "RequestInit" ]
          [ "RequestMode" ]
          [ "Response" ]
          [ "ServiceWorkerGlobalScope" ]
          [ "Window" ]
          [ "Worker" ]
          [ "WorkerGlobalScope" ]
        ];
        dependencies = {
          js_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.60" { inherit profileName; };
          wasm_bindgen = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.83" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".webpki."0.22.0" = overridableMkRustCrate (profileName: rec {
        name = "webpki";
        version = "0.22.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "f095d78192e208183081cc07bc5515ef55216397af48b873e5edcd72637fa1bd"; };
        features = builtins.concatLists [
          [ "alloc" ]
          [ "std" ]
        ];
        dependencies = {
          ring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.16.20" { inherit profileName; };
          untrusted = rustPackages."registry+https://github.com/rust-lang/crates.io-index".untrusted."0.7.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".webpki-roots."0.22.6" = overridableMkRustCrate (profileName: rec {
        name = "webpki-roots";
        version = "0.22.6";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "b6c71e40d7d2c34a5106301fb632274ca37242cd0c9d3e64dbece371a40a2d87"; };
        dependencies = {
          webpki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki."0.22.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" = overridableMkRustCrate (profileName: rec {
        name = "winapi";
        version = "0.3.9";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419"; };
        features = builtins.concatLists [
          [ "consoleapi" ]
          [ "errhandlingapi" ]
          [ "fileapi" ]
          [ "handleapi" ]
          [ "impl-debug" ]
          [ "impl-default" ]
          [ "minwinbase" ]
          [ "minwindef" ]
          [ "ntsecapi" ]
          [ "ntstatus" ]
          [ "processenv" ]
          [ "std" ]
          [ "timezoneapi" ]
          [ "winbase" ]
          [ "wincon" ]
          [ "winerror" ]
          [ "winnt" ]
          [ "winreg" ]
          [ "ws2ipdef" ]
          [ "ws2tcpip" ]
          [ "wtypesbase" ]
        ];
        dependencies = {
          ${ if hostPlatform.config == "i686-pc-windows-gnu" then "winapi_i686_pc_windows_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" { inherit profileName; };
          ${ if hostPlatform.config == "x86_64-pc-windows-gnu" then "winapi_x86_64_pc_windows_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
        name = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" = overridableMkRustCrate (profileName: rec {
        name = "winapi-util";
        version = "0.1.5";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178"; };
        dependencies = {
          ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
        name = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".windows."0.43.0" = overridableMkRustCrate (profileName: rec {
        name = "windows";
        version = "0.43.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "04662ed0e3e5630dfa9b26e4cb823b817f1a9addda855d973a9458c236556244"; };
        features = builtins.concatLists [
          [ "Win32" ]
          [ "Win32_Foundation" ]
          [ "Win32_System" ]
          [ "Win32_System_SystemInformation" ]
          [ "default" ]
        ];
        dependencies = {
          ${ if hostPlatform.config == "aarch64-pc-windows-gnullvm" then "windows_aarch64_gnullvm" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.42.1" { inherit profileName; };
          ${ if hostPlatform.config == "aarch64-pc-windows-msvc" || hostPlatform.config == "aarch64-uwp-windows-msvc" then "windows_aarch64_msvc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.42.1" { inherit profileName; };
          ${ if hostPlatform.config == "i686-pc-windows-gnu" || hostPlatform.config == "i686-uwp-windows-gnu" then "windows_i686_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.42.1" { inherit profileName; };
          ${ if hostPlatform.config == "i686-pc-windows-msvc" || hostPlatform.config == "i686-uwp-windows-msvc" then "windows_i686_msvc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.42.1" { inherit profileName; };
          ${ if hostPlatform.config == "x86_64-pc-windows-gnu" || hostPlatform.config == "x86_64-uwp-windows-gnu" then "windows_x86_64_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.42.1" { inherit profileName; };
          ${ if hostPlatform.config == "x86_64-pc-windows-gnullvm" then "windows_x86_64_gnullvm" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.42.1" { inherit profileName; };
          ${ if hostPlatform.config == "x86_64-pc-windows-msvc" || hostPlatform.config == "x86_64-uwp-windows-msvc" then "windows_x86_64_msvc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.42.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.42.0" = overridableMkRustCrate (profileName: rec {
        name = "windows-sys";
        version = "0.42.0";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "5a3e1820f08b8513f676f7ab6c1f99ff312fb97b553d30ff4dd86f9f15728aa7"; };
        features = builtins.concatLists [
          [ "Win32" ]
          [ "Win32_Foundation" ]
          [ "Win32_Networking" ]
          [ "Win32_Networking_WinSock" ]
          [ "Win32_Security" ]
          [ "Win32_Security_Authentication" ]
          [ "Win32_Security_Authentication_Identity" ]
          [ "Win32_Security_Authorization" ]
          [ "Win32_Security_Credentials" ]
          [ "Win32_Security_Cryptography" ]
          [ "Win32_Storage" ]
          [ "Win32_Storage_FileSystem" ]
          [ "Win32_System" ]
          [ "Win32_System_Console" ]
          [ "Win32_System_IO" ]
          [ "Win32_System_LibraryLoader" ]
          [ "Win32_System_Memory" ]
          [ "Win32_System_Pipes" ]
          [ "Win32_System_SystemServices" ]
          [ "Win32_System_WindowsProgramming" ]
          [ "default" ]
        ];
        dependencies = {
          ${ if hostPlatform.config == "aarch64-pc-windows-gnullvm" then "windows_aarch64_gnullvm" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.42.1" { inherit profileName; };
          ${ if hostPlatform.config == "aarch64-pc-windows-msvc" || hostPlatform.config == "aarch64-uwp-windows-msvc" then "windows_aarch64_msvc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.42.1" { inherit profileName; };
          ${ if hostPlatform.config == "i686-pc-windows-gnu" || hostPlatform.config == "i686-uwp-windows-gnu" then "windows_i686_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.42.1" { inherit profileName; };
          ${ if hostPlatform.config == "i686-pc-windows-msvc" || hostPlatform.config == "i686-uwp-windows-msvc" then "windows_i686_msvc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.42.1" { inherit profileName; };
          ${ if hostPlatform.config == "x86_64-pc-windows-gnu" || hostPlatform.config == "x86_64-uwp-windows-gnu" then "windows_x86_64_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.42.1" { inherit profileName; };
          ${ if hostPlatform.config == "x86_64-pc-windows-gnullvm" then "windows_x86_64_gnullvm" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.42.1" { inherit profileName; };
          ${ if hostPlatform.config == "x86_64-pc-windows-msvc" || hostPlatform.config == "x86_64-uwp-windows-msvc" then "windows_x86_64_msvc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.42.1" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.42.1" = overridableMkRustCrate (profileName: rec {
        name = "windows_aarch64_gnullvm";
        version = "0.42.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "8c9864e83243fdec7fc9c5444389dcbbfd258f745e7853198f365e3c4968a608"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.42.1" = overridableMkRustCrate (profileName: rec {
        name = "windows_aarch64_msvc";
        version = "0.42.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "4c8b1b673ffc16c47a9ff48570a9d85e25d265735c503681332589af6253c6c7"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.42.1" = overridableMkRustCrate (profileName: rec {
        name = "windows_i686_gnu";
        version = "0.42.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "de3887528ad530ba7bdbb1faa8275ec7a1155a45ffa57c37993960277145d640"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.42.1" = overridableMkRustCrate (profileName: rec {
        name = "windows_i686_msvc";
        version = "0.42.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "bf4d1122317eddd6ff351aa852118a2418ad4214e6613a50e0191f7004372605"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.42.1" = overridableMkRustCrate (profileName: rec {
        name = "windows_x86_64_gnu";
        version = "0.42.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "c1040f221285e17ebccbc2591ffdc2d44ee1f9186324dd3e84e99ac68d699c45"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.42.1" = overridableMkRustCrate (profileName: rec {
        name = "windows_x86_64_gnullvm";
        version = "0.42.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "628bfdf232daa22b0d64fdb62b09fcc36bb01f05a3939e20ab73aaf9470d0463"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.42.1" = overridableMkRustCrate (profileName: rec {
        name = "windows_x86_64_msvc";
        version = "0.42.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "447660ad36a13288b1db4d4248e857b510e8c3a225c822ba4fb748c0aafecffd"; };
      });
      "registry+https://github.com/rust-lang/crates.io-index".winreg."0.10.1" = overridableMkRustCrate (profileName: rec {
        name = "winreg";
        version = "0.10.1";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "80d0f4e272c85def139476380b12f9ac60926689dd2e01d4923222f40580869d"; };
        dependencies = {
          winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".wiremock."0.5.17" = overridableMkRustCrate (profileName: rec {
        name = "wiremock";
        version = "0.5.17";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "12316b50eb725e22b2f6b9c4cbede5b7b89984274d113a7440c86e5c3fc6f99b"; };
        dependencies = {
          assert_json_diff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".assert-json-diff."2.0.2" { inherit profileName; };
          async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.63" { profileName = "__noProfile"; };
          base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.13.1" { inherit profileName; };
          deadpool = rustPackages."registry+https://github.com/rust-lang/crates.io-index".deadpool."0.9.5" { inherit profileName; };
          futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.25" { inherit profileName; };
          futures_timer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-timer."3.0.2" { inherit profileName; };
          http_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-types."2.12.0" { inherit profileName; };
          hyper = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.23" { inherit profileName; };
          log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" { inherit profileName; };
          once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.17.0" { inherit profileName; };
          regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.7.1" { inherit profileName; };
          serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.152" { inherit profileName; };
          serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.91" { inherit profileName; };
          tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.25.0" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".xmlparser."0.13.5" = overridableMkRustCrate (profileName: rec {
        name = "xmlparser";
        version = "0.13.5";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "4d25c75bf9ea12c4040a97f829154768bbbce366287e2dc044af160cd79a13fd"; };
        features = builtins.concatLists [
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "default")
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "std")
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".yaml-rust."0.4.5" = overridableMkRustCrate (profileName: rec {
        name = "yaml-rust";
        version = "0.4.5";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "56c1936c4cc7a1c9ab21a1ebb602eb942ba868cbd44a99cb7cdc5892335e1c85"; };
        dependencies = {
          linked_hash_map = rustPackages."registry+https://github.com/rust-lang/crates.io-index".linked-hash-map."0.5.6" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".zeroize."1.5.7" = overridableMkRustCrate (profileName: rec {
        name = "zeroize";
        version = "1.5.7";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "c394b5bd0c6f669e7275d9c20aa90ae064cb22e75a1cad54e1b34088034b149f"; };
        features = builtins.concatLists [
          [ "alloc" ]
          (lib.optional (rootFeatures' ? "router/aws-config" || rootFeatures' ? "router/aws-sdk-kms" || rootFeatures' ? "router/kms" || rootFeatures' ? "router/sandbox") "default")
        ];
      });
      "registry+https://github.com/rust-lang/crates.io-index".zstd."0.12.2+zstd.1.5.2" = overridableMkRustCrate (profileName: rec {
        name = "zstd";
        version = "0.12.2+zstd.1.5.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "e9262a83dc741c0b0ffec209881b45dbc232c21b02a2b9cb1adb93266e41303d"; };
        features = builtins.concatLists [
          [ "arrays" ]
          [ "default" ]
          [ "legacy" ]
          [ "zdict_builder" ]
        ];
        dependencies = {
          zstd_safe = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zstd-safe."6.0.2+zstd.1.5.2" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".zstd-safe."6.0.2+zstd.1.5.2" = overridableMkRustCrate (profileName: rec {
        name = "zstd-safe";
        version = "6.0.2+zstd.1.5.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "a6cf39f730b440bab43da8fb5faf5f254574462f73f260f85f7987f32154ff17"; };
        features = builtins.concatLists [
          [ "arrays" ]
          [ "legacy" ]
          [ "std" ]
          [ "zdict_builder" ]
        ];
        dependencies = {
          libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
          zstd_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zstd-sys."2.0.5+zstd.1.5.2" { inherit profileName; };
        };
      });
      "registry+https://github.com/rust-lang/crates.io-index".zstd-sys."2.0.5+zstd.1.5.2" = overridableMkRustCrate (profileName: rec {
        name = "zstd-sys";
        version = "2.0.5+zstd.1.5.2";
        registry = "registry+https://github.com/rust-lang/crates.io-index";
        src = fetchCratesIo { inherit name version; sha256 = "edc50ffce891ad571e9f9afe5039c4837bede781ac4bb13052ed7ae695518596"; };
        features = builtins.concatLists [
          [ "legacy" ]
          [ "std" ]
          [ "zdict_builder" ]
        ];
        dependencies = {
          libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.139" { inherit profileName; };
        };
        buildDependencies = {
          cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.78" { profileName = "__noProfile"; };
          pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.26" { profileName = "__noProfile"; };
        };
      });
    }
  Cargo.toml: |
    [workspace]
    resolver = "2"
    members = ["crates/*"]
    package.edition = "2021"
    package.rust-version = "1.76.0"
    package.license = "Apache-2.0"

    [workspace.dependencies]
    tracing = { version = "0.1.40" }

    # Most of the lint configuration is based on https://github.com/EmbarkStudios/rust-ecosystem/blob/main/lints.toml
    [workspace.lints.rust]
    unsafe_code = "forbid"
    rust_2018_idioms = { level = "warn", priority = -1 } # Remove priority once https://github.com/rust-lang/rust-clippy/pull/12827 is available in stable clippy
    unused_qualifications = "warn"
    # missing_debug_implementations = "warn"
    # missing_docs = "warn"

    [workspace.lints.clippy]
    as_conversions = "warn"
    expect_used = "warn"
    index_refutable_slice = "warn"
    indexing_slicing = "warn"
    large_futures = "warn"
    match_on_vec_items = "warn"
    missing_panics_doc = "warn"
    out_of_bounds_indexing = "warn"
    panic = "warn"
    panic_in_result_fn = "warn"
    panicking_unwrap = "warn"
    print_stderr = "warn"
    print_stdout = "warn"
    todo = "warn"
    unimplemented = "warn"
    unreachable = "warn"
    unwrap_in_result = "warn"
    unwrap_used = "warn"
    use_self = "warn"

    # Lints to allow
    option_map_unit_fn = "allow"

    [profile.release]
    strip = true
    lto = true
    codegen-units = 1
  Dockerfile: |
    FROM rust:bookworm as builder

    ARG EXTRA_FEATURES=""

    RUN apt-get update \
        && apt-get install -y libpq-dev libssl-dev pkg-config

    # Copying codebase from current dir to /router dir
    # and creating a fresh build
    WORKDIR /router

    # Disable incremental compilation.
    #
    # Incremental compilation is useful as part of an edit-build-test-edit cycle,
    # as it lets the compiler avoid recompiling code that hasn't changed. However,
    # on CI, we're not making small edits; we're almost always building the entire
    # project from scratch. Thus, incremental compilation on CI actually
    # introduces *additional* overhead to support making future builds
    # faster...but no future builds will ever occur in any given CI environment.
    #
    # See https://matklad.github.io/2021/09/04/fast-rust-builds.html#ci-workflow
    # for details.
    ENV CARGO_INCREMENTAL=0
    # Allow more retries for network requests in cargo (downloading crates) and
    # rustup (installing toolchains). This should help to reduce flaky CI failures
    # from transient network timeouts or other issues.
    ENV CARGO_NET_RETRY=10
    ENV RUSTUP_MAX_RETRIES=10
    # Don't emit giant backtraces in the CI logs.
    ENV RUST_BACKTRACE="short"
    # Use cargo's sparse index protocol
    ENV CARGO_REGISTRIES_CRATES_IO_PROTOCOL="sparse"

    COPY . .
    RUN cargo build --release --features release ${EXTRA_FEATURES}



    FROM debian:bookworm

    # Placing config and binary executable in different directories
    ARG CONFIG_DIR=/local/config
    ARG BIN_DIR=/local/bin

    # RUN_ENV decides the corresponding config file to be used
    ARG RUN_ENV=sandbox

    # args for deciding the executable to export. three binaries:
    # 1. BINARY=router - for main application
    # 2. BINARY=scheduler, SCHEDULER_FLOW=consumer - part of process tracker
    # 3. BINARY=scheduler, SCHEDULER_FLOW=producer - part of process tracker
    ARG BINARY=router
    ARG SCHEDULER_FLOW=consumer

    RUN apt-get update \
        && apt-get install -y ca-certificates tzdata libpq-dev curl procps

    EXPOSE 8080

    ENV TZ=Etc/UTC \
        RUN_ENV=${RUN_ENV} \
        CONFIG_DIR=${CONFIG_DIR} \
        SCHEDULER_FLOW=${SCHEDULER_FLOW} \
        BINARY=${BINARY} \
        RUST_MIN_STACK=4194304

    RUN mkdir -p ${BIN_DIR}

    COPY --from=builder /router/target/release/${BINARY} ${BIN_DIR}/${BINARY}

    WORKDIR ${BIN_DIR}

    CMD ./${BINARY}
  INSTALL_dependencies.sh: |
    #!/usr/bin/env bash
    #
    # Description: One click install for hyperswitch router
    #
    #
    # Global config

    if [[ "${TRACE-0}" == "1" ]]; then
        set -o xtrace
    fi

    RUST_MSRV=1.76.0
    _DB_NAME="hyperswitch_db"
    _DB_USER="db_user"
    _DB_PASS="db_password"

    OSTYPE=${OSTYPE:-}

    PRE_INSTALL_MSG="Dependency install script.\n
    The script assumes 'curl' and build essentials like gcc/clang are already installed.\n
    \n
    The script will\n
    1. Install or update RUST using RUSTUP\n
    2. Install Postgresql server and redis server, if found missing\n
    3. Install diesel_cli program to setup database\n
    4. Setup database and create necessary schema\n
    "

    POST_INSTALL_MSG="\n
    Install was successful.\n
    If rust was installed, restart the shell or configure current shell using 'SOURCE $HOME/.cargo/env'\n
    "


    # Used variables must be initialized
    set -o nounset

    # utilities
    # convert semver to comparable integer
    if [[ `id -u` -ne 0 ]]; then
        print_info "requires sudo"
        SUDO=sudo
    else
        SUDO=""
    fi

    ver () {
        printf "%03d%03d%03d%03d" `echo "$1" | tr '.' ' '`;
    }

    PROGNAME=`basename $0`
    print_info () {
        echo -e "$PROGNAME: $*"
    }

    err () {
        print_info "*ERROR*:" $*
        exit 1
    }

    need_cmd () {
        if ! command -v $1 > /dev/null
        then
            err "Command \"${1}\" not found. Bailing out"
        fi

    }

    prompt () {
        read -p "$*? [y/N] :" ANSWER
        case $ANSWER in
            [Yy]*) return 1;;
            *) return 0;;
        esac
    }

    init_start_postgres () {

        if [[ "${OSTYPE}" == "darwin"* ]]; then
            initdb -U postgres -D /var/lib/postgres/data
        elif command -v su > /dev/null; then
            $SUDO su -c "initdb -D /var/lib/postgres/data" postgres
        elif command -v sudo > /dev/null; then
            sudo -u postgres "initdb -D /var/lib/postgres/data"
        else
            err "Don't know how to switch to postgres user to run commands"
        fi

        if command -v brew > /dev/null; then
            brew services start postgresql
        elif command -v service > /dev/null; then
            service postgresql start
        elif command -v systemctl > /dev/null; then
            $SUDO systemctl start postgresql.service
        else
            print_info "Unable to start postgres. Please start manually"
        fi
    }

    init_start_redis () {

        if command -v brew > /dev/null; then
            brew services start redis
        elif command -v service > /dev/null; then
            service redis-server start
            service redis start
        elif command -v systemctl > /dev/null; then
            $SUDO systemctl start redis.service
            $SUDO systemctl start redis-server.service
        else
            print_info "Unable to start redis. Please start manually"
        fi
    }

    print_info ${PRE_INSTALL_MSG}

    if prompt "Would you like to continue"; then
        err "Aborted by user"
    fi

    # verify rust installation and version
    if command -v cargo > /dev/null; then

        print_info "\"cargo\" found. Verifying rustc version"

        need_cmd rustc

        RUST_VERSION=`rustc -V | cut -d " " -f 2`

        _HAVE_VERSION=`ver ${RUST_VERSION}`
        _NEED_VERSION=`ver ${RUST_MSRV}`

        print_info "Found rust version \"${RUST_VERSION}\". MSRV is \"${RUST_MSRV}\""

        if [[ ${_HAVE_VERSION} -lt ${_NEED_VERSION} ]] ; then

            if command -v rustup > /dev/null; then
                print_info "found rustup. Trying to install ${RUST_MSRV} version..."
                rustup install "${RUST_MSRV}"
            else
                print_info "Couldn't find \"rustup\". ***needs upgrade***, but skipping..."
            fi
        else
            print_info "Skipping update"
        fi
    else
        print_info "\"cargo\" command not found..."
        if ! prompt "Would you like to install \"rust\" using \"rustup\""
        then
            print_info "Installing \"rust\" through \"rustup\""
            need_cmd curl
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
            # add to path
            . "$HOME/.cargo/env"
            need_cmd rustc
        else
            print_info "Rust installation was aborted"
            err "This application needs \"rust\""
        fi
    fi

    # Dependency checks
    print_info "checking for dependencies"

    install_dep () {
        $INSTALL_CMD $*
    }

    if [[ ! -x "`command -v psql`" ]] || [[ ! -x "`command -v redis-server`" ]] ; then
        print_info "Missing dependencies. Trying to install"

        # java has an apt which seems to mess up when we look for apt
        if command -v apt-get > /dev/null; then
            INSTALL_CMD="$SUDO apt-get install -y"
        elif command -v yum > /dev/null; then
            INSTALL_CMD="$SUDO yum -y install"
        elif command -v pacman > /dev/null; then
            INSTALL_CMD="$SUDO pacman -S"
        elif command -v brew > /dev/null; then
            INSTALL_CMD="brew install"
        else
            err "Unable to identify the package manager"
        fi

        if ! command -v psql > /dev/null
        then
           install_dep postgresql
           install_dep postgresql-contrib # not needed for macos?
           install_dep postgresql-devel # needed for diesel_cli in some linux distributions
           install_dep postgresql-libs # needed for diesel_cli in some linux distributions
           init_start_postgres # installing libpq messes with initdb creating two copies. better to run it better libpq.
           install_dep libpq-dev || install_dep libpq
        else
            print_info "Postgres found. skipping..."
        fi

        if ! command -v redis-server > /dev/null
        then
            # the package names differ. Need better way to identify correct package name
           install_dep redis || install_dep redis
           init_start_redis
        else
            print_info "Redis found. skipping..."
        fi

    else
        print_info "No missing dependency."
    fi

    print_info "Proceeding to setup Database"
    # install diesel cli
    need_cmd cargo
    if ! command -v diesel > /dev/null; then
        print_info "diesel_cli not found. Installing..."
        cargo install diesel_cli --no-default-features --features "postgres"
    else
        print_info "diesel_cli found."
    fi

    # DB setup
    need_cmd psql
    need_cmd diesel
    read -p "Enter name for database [default: ${_DB_NAME}]: " DB_NAME
    DB_NAME=${DB_NAME:-$_DB_NAME}

    read -p "Enter username for ${DB_NAME} [default: ${_DB_USER}]: " DB_USER
    DB_USER=${DB_USER:-$_DB_USER}

    read -sp "Enter password for ${DB_USER} [default: ${_DB_PASS}]: " DB_PASS
    DB_PASS=${DB_PASS:-$_DB_PASS}

    print_info ""

    print_info "Creating DB \"${DB_NAME}\" and user \"${DB_USER}\" with provided password"


    if [[ "$OSTYPE" == "darwin"* ]]; then
        psql -e -U postgres -c "CREATE DATABASE ${DB_NAME};"
        psql -e -U postgres -c "CREATE USER ${DB_USER} WITH PASSWORD '${DB_PASS}';"
        psql -e -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE ${DB_NAME} to ${DB_USER};"
    elif command -v su > /dev/null; then
        $SUDO su -c "psql -e -c \"CREATE DATABASE ${DB_NAME};\"" postgres
        $SUDO su -c "psql -e -c \"CREATE USER ${DB_USER} WITH PASSWORD '${DB_PASS}';\"" postgres
        $SUDO su -c "psql -e -c \"GRANT ALL PRIVILEGES ON DATABASE ${DB_NAME} to ${DB_USER};\"" postgres
    elif command -v sudo > /dev/null; then
        sudo -u postgres psql -e -c "CREATE DATABASE ${DB_NAME};"
        sudo -u postgres psql -e -U postgres -c "CREATE USER ${DB_USER} WITH PASSWORD '${DB_PASS}';"
        sudo -u postgres psql -e -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE ${DB_NAME} to ${DB_USER};"
    else
        err "Don't know how to switch to postgres user to run commands"
    fi

    # run migrations
    print_info "Running migrations"
    MIGRATION_CMD="diesel migration --database-url=postgres://${DB_USER}:${DB_PASS}@localhost:5432/${DB_NAME} run"

    if [[ -d "migrations" ]]; then
        $MIGRATION_CMD
    else
        print_info "\"migrations\" directory not found. Please clone the repo/run the below command in the application directory"
        print_info "CMD \"${MIGRATION_CMD}\""
    fi

    print_info "${POST_INSTALL_MSG}"
  LICENSE: |2
                                     Apache License
                               Version 2.0, January 2004
                            http://www.apache.org/licenses/

       TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

       1. Definitions.

          "License" shall mean the terms and conditions for use, reproduction,
          and distribution as defined by Sections 1 through 9 of this document.

          "Licensor" shall mean the copyright owner or entity authorized by
          the copyright owner that is granting the License.

          "Legal Entity" shall mean the union of the acting entity and all
          other entities that control, are controlled by, or are under common
          control with that entity. For the purposes of this definition,
          "control" means (i) the power, direct or indirect, to cause the
          direction or management of such entity, whether by contract or
          otherwise, or (ii) ownership of fifty percent (50%) or more of the
          outstanding shares, or (iii) beneficial ownership of such entity.

          "You" (or "Your") shall mean an individual or Legal Entity
          exercising permissions granted by this License.

          "Source" form shall mean the preferred form for making modifications,
          including but not limited to software source code, documentation
          source, and configuration files.

          "Object" form shall mean any form resulting from mechanical
          transformation or translation of a Source form, including but
          not limited to compiled object code, generated documentation,
          and conversions to other media types.

          "Work" shall mean the work of authorship, whether in Source or
          Object form, made available under the License, as indicated by a
          copyright notice that is included in or attached to the work
          (an example is provided in the Appendix below).

          "Derivative Works" shall mean any work, whether in Source or Object
          form, that is based on (or derived from) the Work and for which the
          editorial revisions, annotations, elaborations, or other modifications
          represent, as a whole, an original work of authorship. For the purposes
          of this License, Derivative Works shall not include works that remain
          separable from, or merely link (or bind by name) to the interfaces of,
          the Work and Derivative Works thereof.

          "Contribution" shall mean any work of authorship, including
          the original version of the Work and any modifications or additions
          to that Work or Derivative Works thereof, that is intentionally
          submitted to Licensor for inclusion in the Work by the copyright owner
          or by an individual or Legal Entity authorized to submit on behalf of
          the copyright owner. For the purposes of this definition, "submitted"
          means any form of electronic, verbal, or written communication sent
          to the Licensor or its representatives, including but not limited to
          communication on electronic mailing lists, source code control systems,
          and issue tracking systems that are managed by, or on behalf of, the
          Licensor for the purpose of discussing and improving the Work, but
          excluding communication that is conspicuously marked or otherwise
          designated in writing by the copyright owner as "Not a Contribution."

          "Contributor" shall mean Licensor and any individual or Legal Entity
          on behalf of whom a Contribution has been received by Licensor and
          subsequently incorporated within the Work.

       2. Grant of Copyright License. Subject to the terms and conditions of
          this License, each Contributor hereby grants to You a perpetual,
          worldwide, non-exclusive, no-charge, royalty-free, irrevocable
          copyright license to reproduce, prepare Derivative Works of,
          publicly display, publicly perform, sublicense, and distribute the
          Work and such Derivative Works in Source or Object form.

       3. Grant of Patent License. Subject to the terms and conditions of
          this License, each Contributor hereby grants to You a perpetual,
          worldwide, non-exclusive, no-charge, royalty-free, irrevocable
          (except as stated in this section) patent license to make, have made,
          use, offer to sell, sell, import, and otherwise transfer the Work,
          where such license applies only to those patent claims licensable
          by such Contributor that are necessarily infringed by their
          Contribution(s) alone or by combination of their Contribution(s)
          with the Work to which such Contribution(s) was submitted. If You
          institute patent litigation against any entity (including a
          cross-claim or counterclaim in a lawsuit) alleging that the Work
          or a Contribution incorporated within the Work constitutes direct
          or contributory patent infringement, then any patent licenses
          granted to You under this License for that Work shall terminate
          as of the date such litigation is filed.

       4. Redistribution. You may reproduce and distribute copies of the
          Work or Derivative Works thereof in any medium, with or without
          modifications, and in Source or Object form, provided that You
          meet the following conditions:

          (a) You must give any other recipients of the Work or
              Derivative Works a copy of this License; and

          (b) You must cause any modified files to carry prominent notices
              stating that You changed the files; and

          (c) You must retain, in the Source form of any Derivative Works
              that You distribute, all copyright, patent, trademark, and
              attribution notices from the Source form of the Work,
              excluding those notices that do not pertain to any part of
              the Derivative Works; and

          (d) If the Work includes a "NOTICE" text file as part of its
              distribution, then any Derivative Works that You distribute must
              include a readable copy of the attribution notices contained
              within such NOTICE file, excluding those notices that do not
              pertain to any part of the Derivative Works, in at least one
              of the following places: within a NOTICE text file distributed
              as part of the Derivative Works; within the Source form or
              documentation, if provided along with the Derivative Works; or,
              within a display generated by the Derivative Works, if and
              wherever such third-party notices normally appear. The contents
              of the NOTICE file are for informational purposes only and
              do not modify the License. You may add Your own attribution
              notices within Derivative Works that You distribute, alongside
              or as an addendum to the NOTICE text from the Work, provided
              that such additional attribution notices cannot be construed
              as modifying the License.

          You may add Your own copyright statement to Your modifications and
          may provide additional or different license terms and conditions
          for use, reproduction, or distribution of Your modifications, or
          for any such Derivative Works as a whole, provided Your use,
          reproduction, and distribution of the Work otherwise complies with
          the conditions stated in this License.

       5. Submission of Contributions. Unless You explicitly state otherwise,
          any Contribution intentionally submitted for inclusion in the Work
          by You to the Licensor shall be under the terms and conditions of
          this License, without any additional terms or conditions.
          Notwithstanding the above, nothing herein shall supersede or modify
          the terms of any separate license agreement you may have executed
          with Licensor regarding such Contributions.

       6. Trademarks. This License does not grant permission to use the trade
          names, trademarks, service marks, or product names of the Licensor,
          except as required for reasonable and customary use in describing the
          origin of the Work and reproducing the content of the NOTICE file.

       7. Disclaimer of Warranty. Unless required by applicable law or
          agreed to in writing, Licensor provides the Work (and each
          Contributor provides its Contributions) on an "AS IS" BASIS,
          WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
          implied, including, without limitation, any warranties or conditions
          of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
          PARTICULAR PURPOSE. You are solely responsible for determining the
          appropriateness of using or redistributing the Work and assume any
          risks associated with Your exercise of permissions under this License.

       8. Limitation of Liability. In no event and under no legal theory,
          whether in tort (including negligence), contract, or otherwise,
          unless required by applicable law (such as deliberate and grossly
          negligent acts) or agreed to in writing, shall any Contributor be
          liable to You for damages, including any direct, indirect, special,
          incidental, or consequential damages of any character arising as a
          result of this License or out of the use or inability to use the
          Work (including but not limited to damages for loss of goodwill,
          work stoppage, computer failure or malfunction, or any and all
          other commercial damages or losses), even if such Contributor
          has been advised of the possibility of such damages.

       9. Accepting Warranty or Additional Liability. While redistributing
          the Work or Derivative Works thereof, You may choose to offer,
          and charge a fee for, acceptance of support, warranty, indemnity,
          or other liability obligations and/or rights consistent with this
          License. However, in accepting such obligations, You may act only
          on Your own behalf and on Your sole responsibility, not on behalf
          of any other Contributor, and only if You agree to indemnify,
          defend, and hold each Contributor harmless for any liability
          incurred by, or claims asserted against, such Contributor by reason
          of your accepting any such warranty or additional liability.

       END OF TERMS AND CONDITIONS

       APPENDIX: How to apply the Apache License to your work.

          To apply the Apache License to your work, attach the following
          boilerplate notice, with the fields enclosed by brackets "[]"
          replaced with your own identifying information. (Don't include
          the brackets!)  The text should be enclosed in the appropriate
          comment syntax for the file format. We also recommend that a
          file or class name and description of purpose be included on the
          same "printed page" as the copyright notice for easier
          identification within third-party archives.

       Copyright [yyyy] [name of copyright owner]

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

           http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
  Makefile: "# = Parameters\n# Override envars using -e\n\n#\n# = Common\n#\n\n# Checks two given strings for equality.\neq = $(if $(or $(1),$(2)),$(and $(findstring $(1),$(2)),\\\n                                $(findstring $(2),$(1))),1)\n\n\nROOT_DIR_WITH_SLASH := $(dir $(realpath $(lastword $(MAKEFILE_LIST))))\nROOT_DIR := $(realpath $(ROOT_DIR_WITH_SLASH))\n\n#\n# = Targets\n#\n\n.PHONY : \\\n\tdoc \\\n\tfmt \\\n\tclippy \\\n\ttest \\\n\taudit \\\n\tgit.sync \\\n\tbuild \\\n\tpush \\\n\tshell \\\n\trun \\\n\tstart \\\n\tstop \\\n\trm \\\n\trelease\n\n\n# Check a local package and all of its dependencies for errors\n# \n# Usage :\n#\tmake check\ncheck:\n\tcargo check\n\n\n# Compile application for running on local machine\n#\n# Usage :\n#\tmake build\nbuild :\n\tcargo build\n\n# Generate crates documentation from Rust sources.\n#\n# Usage :\n#\tmake doc [private=(yes|no)] [open=(yes|no)] [clean=(no|yes)]\n\ndoc :\nifeq ($(clean),yes)\n\t@rm -rf target/doc/\nendif\n\tcargo doc --all-features --package router \\\n\t\t$(if $(call eq,$(private),no),,--document-private-items) \\\n\t\t$(if $(call eq,$(open),no),,--open)\n\n# Format Rust sources with rustfmt.\n#\n# Usage :\n#\tmake fmt [dry_run=(no|yes)]\n\nfmt :\n\tcargo +nightly fmt --all $(if $(call eq,$(dry_run),yes),-- --check,)\n\n# Lint Rust sources with Clippy.\n#\n# Usage :\n#\tmake clippy\n\nclippy :\n\tcargo clippy --all-features --all-targets -- -D warnings\n\n# Build the DSL crate as a WebAssembly JS library\n#\n# Usage :\n# \tmake euclid-wasm\n\neuclid-wasm:\n\twasm-pack build --target web --out-dir $(ROOT_DIR)/wasm --out-name euclid $(ROOT_DIR)/crates/euclid_wasm  -- --features dummy_connector\n\n# Run Rust tests of project.\n#\n# Usage :\n#\tmake test\n\ntest :\n\tcargo test --all-features\n\n\n# Next-generation test runner for Rust.\n# cargo nextest ignores the doctests at the moment. So if you are using it locally you also have to run `cargo test --doc`.\n# Usage:\n# \tmake nextest\n\nnextest:\n\tcargo nextest run\n\n# Run format clippy test and tests.\n#\n# Usage :\n#\tmake precommit\n\nprecommit : fmt clippy test\n\n\nhack:\n\tcargo hack check --workspace --each-feature --all-targets --exclude-features 'v2 merchant_account_v2 payment_v2'\n"
  NOTICE: |
    hyperswitch

    Copyright 2022-2023 Juspay Technologies Private Limited

    This product includes software developed at
    Juspay Technologies Private Limited (https://hyperswitch.io/)
  README.md: "<p align=\"center\">\n  <img src=\"./docs/imgs/hyperswitch-logo-dark.svg#gh-dark-mode-only\" alt=\"Hyperswitch-Logo\" width=\"40%\" />\n  <img src=\"./docs/imgs/hyperswitch-logo-light.svg#gh-light-mode-only\" alt=\"Hyperswitch-Logo\" width=\"40%\" />\n</p>\n\n<h1 align=\"center\">The open-source payments switch</h1>\n\n<div align=\"center\" >\nThe single API to access payment ecosystems across 130+ countries</div>\n\n<p align=\"center\">\n  <a href=\"#%EF%B8%8F-quick-start-guide\">Quick Start Guide</a> •\n  <a href=\"/docs/try_local_system.md\">Local Setup Guide</a> •\n  <a href=\"#-fast-integration-for-stripe-users\">Fast Integration for Stripe Users</a> •\n  <a href=\"https://api-reference.hyperswitch.io/introduction\"> API Docs </a> •\n  <a href=\"#-supported-features\">Supported Features</a> •\n  <br>\n  <a href=\"#whats-included\">What's Included</a> •\n  <a href=\"#-join-us-in-building-hyperswitch\">Join us in building HyperSwitch</a> •\n  <a href=\"#-community\">Community</a> •\n  <a href=\"#-bugs-and-feature-requests\">Bugs and feature requests</a> •\n  <a href=\"#-FAQs\">FAQs</a> •\n  <a href=\"#-versioning\">Versioning</a> •\n  <a href=\"#%EF%B8%8F-copyright-and-license\">Copyright and License</a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/juspay/hyperswitch/actions?query=workflow%3ACI+branch%3Amain\">\n    <img src=\"https://github.com/juspay/hyperswitch/workflows/CI/badge.svg\" />\n  </a>\n  <a href=\"https://github.com/juspay/hyperswitch/blob/main/LICENSE\">\n    <img src=\"https://img.shields.io/github/license/juspay/hyperswitch\" />\n  </a>\n  <a href=\"https://github.com/juspay/hyperswitch/blob/main/LICENSE\">\n    <img src=\"https://img.shields.io/badge/Made_in-Rust-orange\" />\n  </a>\n</p>\n<p align=\"center\">\n  <a href=\"https://www.linkedin.com/company/hyperswitch/\">\n    <img src=\"https://img.shields.io/badge/follow-hyperswitch-blue?logo=linkedin&labelColor=grey\"/>\n  </a>\n  <a href=\"https://x.com/hyperswitchio\">\n    <img src=\"https://img.shields.io/badge/follow-%40hyperswitchio-white?logo=x&labelColor=grey\"/>\n  </a>\n  <a href=\"https://join.slack.com/t/hyperswitch-io/shared_invite/zt-2jqxmpsbm-WXUENx022HjNEy~Ark7Orw\">\n    <img src=\"https://img.shields.io/badge/chat-on_slack-blue?logo=slack&labelColor=grey&color=%233f0e40\"/>\n  </a>\n</p>\n\n<hr>\n<img src=\"./docs/imgs/switch.png\" />\n\nHyperswitch is a community-led, open payments switch to enable access to the best payments infrastructure for every digital business.\n\nUsing Hyperswitch, you can:\n\n- ⬇️ **Reduce dependency** on a single processor like Stripe or Braintree\n- \U0001F9D1‍\U0001F4BB **Reduce Dev effort** by 90% to add & maintain integrations\n- \U0001F680 **Improve success rates** with seamless failover and auto-retries\n- \U0001F4B8 **Reduce processing fees** with smart routing\n- \U0001F3A8 **Customize payment flows** with full visibility and control\n- \U0001F310 **Increase business reach** with local/alternate payment methods\n\n<br>\n<img src=\"./docs/imgs/hyperswitch-product.png\" alt=\"Hyperswitch-Product\" width=\"50%\"/>\n\n<a href=\"#Quick Start Guide\">\n  <h2 id=\"Quick Start Guide\">⚡️ Quick Start Guide</h2>\n</a>\n\n### One-click deployment on AWS cloud\n\nThe fastest and easiest way to try Hyperswitch is via our CDK scripts\n\n1. Click on the following button for a quick standalone deployment on AWS, suitable for prototyping.\n   No code or setup is required in your system and the deployment is covered within the AWS free-tier setup.\n\n   <a href=\"https://console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/new?stackName=HyperswitchBootstarp&templateURL=https://hyperswitch-synth.s3.eu-central-1.amazonaws.com/hs-starter-config.yaml\"><img src=\"./docs/imgs/aws_button.png\" height=\"35\"></a>\n\n2. Sign-in to your AWS console.\n\n3. Follow the instructions provided on the console to successfully deploy Hyperswitch\n\n### Run it on your system\n\nYou can run Hyperswitch on your system using Docker Compose after cloning this repository:\n\n```shell\ngit clone --depth 1 --branch latest https://github.com/juspay/hyperswitch\ncd hyperswitch\ndocker compose up -d\n```\n\nThis will start the app server, web client and control center.\n\nCheck out the [local setup guide][local-setup-guide] for a more comprehensive\nsetup, which includes the [scheduler and monitoring services][docker-compose-scheduler-monitoring].\n\n[local-setup-guide]: /docs/try_local_system.md\n[docker-compose-scheduler-monitoring]: /docs/try_local_system.md#run-the-scheduler-and-monitoring-services\n\n<a href=\"#Fast-Integration-for-Stripe-Users\">\n  <h2 id=\"Fast Integration for Stripe Users\">\U0001F50C Fast Integration for Stripe Users</h2>\n</a>\n\nIf you are already using Stripe, integrating with Hyperswitch is fun, fast & easy.\nTry the steps below to get a feel for how quick the setup is:\n\n1. Get API keys from our [dashboard].\n2. Follow the instructions detailed on our\n   [documentation page][migrate-from-stripe].\n\n[dashboard]: https://app.hyperswitch.io/register\n[migrate-from-stripe]: https://hyperswitch.io/docs/migrateFromStripe\n\n<a href=\"#Supported-Features\">\n  <h2 id=\"Supported Features\">✅ Supported Features</h2>\n</a>\n\n### \U0001F31F Supported Payment Processors and Methods\n\nAs of Sept 2023, we support 50+ payment processors and multiple global payment methods.\nIn addition, we are continuously integrating new processors based on their reach and community requests.\nOur target is to support 100+ processors by H2 2023.\nYou can find the latest list of payment processors, supported methods, and features [here][supported-connectors-and-features].\n\n[supported-connectors-and-features]: https://hyperswitch.io/pm-list\n\n### \U0001F31F Hosted Version\n\nIn addition to all the features of the open-source product, our hosted version\nprovides features and support to manage your payment infrastructure, compliance,\nanalytics, and operations end-to-end:\n\n- **System Performance & Reliability**\n\n  - Scalable to support 50000 tps\n  - System uptime of up to 99.99%\n  - Deployment with very low latency\n  - Hosting option with AWS or GCP\n\n- **Value Added Services**\n\n  - Compliance Support, incl. PCI, GDPR, Card Vault etc\n  - Customise the integration or payment experience\n  - Control Center with elaborate analytics and reporting\n  - Integration with Risk Management Solutions\n  - Integration with other platforms like Subscription, E-commerce, Accounting,\n    etc.\n\n- **Enterprise Support**\n\n  - 24x7 Email / On-call Support\n  - Dedicated Relationship Manager\n  - Custom dashboards with deep analytics, alerts, and reporting\n  - Expert team to consult and improve business metrics\n\nYou can [try the hosted version in our sandbox][dashboard].\n\n<a href=\"#FAQs\">\n  <h2 id=\"FAQs\">\U0001F914 FAQs</h2>\n</a>\n\nGot more questions?\nPlease refer to our [FAQs page][faqs].\n\n[faqs]: https://hyperswitch.io/docs/devSupport\n\n<!--\n## Documentation\n\nPlease refer to the following documentation pages:\n\n- Getting Started Guide [Link]\n- API Reference [Link]\n- Payments Fundamentals [Link]\n- Installation Support [Link]\n- Router Architecture [Link]\n -->\n\n<a href=\"#what's-Included❓\">\n  <h2 id=\"what's-Included❓\">What's Included❓</h2>\n</a>\n\nWithin the repositories, you'll find the following directories and files,\nlogically grouping common assets and providing both compiled and minified\nvariations.\n\n### Repositories\n\nThe current setup contains a single repo, which contains the core payment router\nand the various connector integrations under the `src/connector` sub-directory.\n\n<!-- ### Sub-Crates -->\n\n### \U0001F333 Files Tree Layout\n\n<!-- FIXME: this table should either be generated by a script or smoke test\nshould be introduced, checking it agrees with the actual structure -->\n\n```text\n.\n├── config                             : Initial startup config files for the router\n├── connector-template                 : boilerplate code for connectors\n├── crates                             : sub-crates\n│   ├── api_models                     : Request/response models for the `router` crate\n│   ├── cards                          : Types to handle card masking and validation\n│   ├── common_enums                   : Enums shared across the request/response types and database types\n│   ├── common_utils                   : Utilities shared across `router` and other crates\n│   ├── data_models                    : Represents the data/domain models used by the business/domain layer\n│   ├── diesel_models                  : Database models shared across `router` and other crates\n│   ├── drainer                        : Application that reads Redis streams and executes queries in database\n│   ├── external_services              : Interactions with external systems like emails, AWS KMS, etc.\n│   ├── masking                        : Personal Identifiable Information protection\n│   ├── redis_interface                : A user-friendly interface to Redis\n│   ├── router                         : Main crate of the project\n│   ├── router_derive                  : Utility macros for the `router` crate\n│   ├── router_env                     : Environment of payment router: logger, basic config, its environment awareness\n│   ├── scheduler                      : Scheduling and executing deferred tasks like mail scheduling\n│   ├── storage_impl                   : Storage backend implementations for data structures & objects\n│   └── test_utils                     : Utilities to run Postman and connector UI tests\n├── docs                               : hand-written documentation\n├── loadtest                           : performance benchmarking setup\n├── migrations                         : diesel DB setup\n├── monitoring                         : Grafana & Loki monitoring related configuration files\n├── openapi                            : automatically generated OpenAPI spec\n├── postman                            : postman scenarios API\n└── scripts                            : automation, testing, and other utility scripts\n```\n\n<a href=\"#Join-us-in-building-Hyperswitch\">\n  <h2 id=\"Join-us-in-building-Hyperswitch\">\U0001F4AA Join us in building Hyperswitch</h2>\n</a>\n\n### \U0001F91D Our Belief\n\n> Payments should be open, fast, reliable and affordable to serve\n> the billions of people at scale.\n\nGlobally payment diversity has been growing at a rapid pace.\nThere are hundreds of payment processors and new payment methods like BNPL,\nRTP etc.\nBusinesses need to embrace this diversity to increase conversion, reduce cost\nand improve control.\nBut integrating and maintaining multiple processors needs a lot of dev effort.\nWhy should devs across companies repeat the same work?\nWhy can't it be unified and reused? Hence, Hyperswitch was born to create that\nreusable core and let companies build and customise it as per their specific requirements.\n\n### ✨ Our Values\n\n1. Embrace Payments Diversity: It will drive innovation in the ecosystem in\n   multiple ways.\n2. Make it Open Source: Increases trust; Improves the quality and reusability of\n   software.\n3. Be community driven: It enables participatory design and development.\n4. Build it like Systems Software: This sets a high bar for Reliability,\n   Security and Performance SLAs.\n5. Maximise Value Creation: For developers, customers & partners.\n\n### \U0001F90D Contributing\n\nThis project is being created and maintained by [Juspay](https://juspay.in),\nSouth Asia's largest payments orchestrator/switch, processing more than 50\nMillion transactions per day. The solution has 1Mn+ lines of Haskell code built\nover ten years.\nHyperswitch leverages our experience in building large-scale, enterprise-grade &\nfrictionless payment solutions.\nIt is built afresh for the global markets as an open-source product in Rust.\nWe are long-term committed to building and making it useful for the community.\n\nThe product roadmap is open for the community's feedback.\nWe shall evolve a prioritisation process that is open and community-driven.\nWe welcome contributions from the community. Please read through our\n[contributing guidelines](/docs/CONTRIBUTING.md).\nIncluded are directions for opening issues, coding standards, and notes on\ndevelopment.\n\n- We appreciate all types of contributions: code, documentation, demo creation, or some new way you want to contribute to us.\n  We will reward every contribution with a Hyperswitch branded t-shirt.\n- \U0001F980 **Important note for Rust developers**: We aim for contributions from the community across a broad range of tracks.\n  Hence, we have prioritised simplicity and code readability over purely idiomatic code.\n  For example, some of the code in core functions (e.g., `payments_core`) is written to be more readable than pure-idiomatic.\n\n<a href=\"#Community\">\n  <h2 id=\"Community\">\U0001F465 Community</h2>\n</a>\n\nGet updates on Hyperswitch development and chat with the community:\n\n- [Discord server][discord] for questions related to contributing to hyperswitch, questions about the architecture, components, etc.\n- [Slack workspace][slack] for questions related to integrating hyperswitch, integrating a connector in hyperswitch, etc.\n- [GitHub Discussions][github-discussions] to drop feature requests or suggest anything payments-related you need for your stack.\n\n[discord]: https://discord.gg/wJZ7DVW8mm\n[slack]: https://join.slack.com/t/hyperswitch-io/shared_invite/zt-2awm23agh-p_G5xNpziv6yAiedTkkqLg\n[github-discussions]: https://github.com/juspay/hyperswitch/discussions\n\n<div style=\"display: flex;  justify-content: center;\">\n    <div style=\"margin-right:10px\">\n    <a href=\"https://www.producthunt.com/posts/hyperswitch-2?utm_source=badge-top-post-badge&utm_medium=badge&utm_souce=badge-hyperswitch&#0045;2\" target=\"_blank\">\n        <img src=\"https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=375220&theme=light&period=weekly\" alt=\"Hyperswitch - Fast, reliable, and affordable open source payments switch | Product Hunt\" style=\"width: 250px; height: 54px;\" width=\"250\" height=\"54\" />\n    </a>\n    </div>\n    <div style=\"margin-right:10px\">\n    <a href=\"https://www.producthunt.com/posts/hyperswitch-2?utm_source=badge-top-post-topic-badge&utm_medium=badge&utm_souce=badge-hyperswitch&#0045;2\" target=\"_blank\">\n        <img src=\"https://api.producthunt.com/widgets/embed-image/v1/top-post-topic-badge.svg?post_id=375220&theme=light&period=weekly&topic_id=267\" alt=\"Hyperswitch - Fast, reliable, and affordable open source payments switch | Product Hunt\" style=\"width: 250px; height: 54px;\" width=\"250\" height=\"54\" />\n    </a>\n  </div>\n  <div style=\"margin-right:10px\">\n    <a href=\"https://www.producthunt.com/posts/hyperswitch-2?utm_source=badge-top-post-topic-badge&utm_medium=badge&utm_souce=badge-hyperswitch&#0045;2\" target=\"_blank\">\n        <img src=\"https://api.producthunt.com/widgets/embed-image/v1/top-post-topic-badge.svg?post_id=375220&theme=light&period=weekly&topic_id=93\" alt=\"Hyperswitch - Fast, reliable, and affordable open source payments switch | Product Hunt\" style=\"width: 250px; height: 54px;\" width=\"250\" height=\"54\" />\n    </a>\n  </div>\n</div>\n\n<a href=\"#Bugs and feature requests\">\n  <h2 id=\"Bugs and feature requests\">\U0001F41E Bugs and feature requests</h2>\n</a>\n\nPlease read the issue guidelines and search for [existing and closed issues].\nIf your problem or idea is not addressed yet, please [open a new issue].\n\n[existing and closed issues]: https://github.com/juspay/hyperswitch/issues\n[open a new issue]: https://github.com/juspay/hyperswitch/issues/new/choose\n\n<a href=\"#Versioning\">\n  <h2 id=\"Versioning\">\U0001F516 Versioning</h2>\n</a>\n\nCheck the [CHANGELOG.md](./CHANGELOG.md) file for details.\n\n<a href=\"#©Copyright and License\">\n  <h2 id=\"©Copyright and License\">©️ Copyright and License</h2>\n</a>\n\nThis product is licensed under the [Apache 2.0 License](LICENSE).\n\n<a href=\"#Thanks to all contributors\">\n  <h2 id=\"Thanks to all contributors\">✨ Thanks to all contributors</h2>\n</a>\n\nThank you for your support in hyperswitch's growth. Keep up the great work! \U0001F942\n\n<a href=\"https://github.com/juspay/hyperswitch/graphs/contributors\">\n  <img src=\"https://contributors-img.web.app/image?repo=juspay/hyperswitch\" alt=\"Contributors\"/>\n</a>\n"
  add_connector.md: "# Guide to Integrate a Connector\n\n## Introduction\n\nThis is a guide to contributing new connector to Router. This guide includes instructions on checking out the source code, integrating and testing the new connector, and finally contributing the new connector back to the project.\n\n## Prerequisites\n\n- Understanding of the Connector APIs which you wish to integrate with Router\n- Setup of Router repository and running it on local\n- Access to API credentials for testing the Connector API (you can quickly sign up for sandbox/uat credentials by visiting the website of the connector you wish to integrate)\n- Ensure that you have the nightly toolchain installed because the connector template script includes code formatting.\n\nInstall it using `rustup`:\n\n```bash\n  rustup toolchain install nightly\n```\n\nIn Router, there are Connectors and Payment Methods, examples of both are shown below from which the difference is apparent.\n\n### What is a Connector ?\n\nA connector is an integration to fulfill payments. Related use cases could be any of the below\n\n- Payment processor (Stripe, Adyen, ChasePaymentTech etc.,)\n- Fraud and Risk management platform (like Signifyd, Riskified etc.,)\n- Payment network (Visa, Master)\n- Payment authentication services (Cardinal etc.,)\n  Currently, the router is compatible with 'Payment Processors' and 'Fraud and Risk Management' platforms. Support for additional categories will be expanded in the near future.\n\n### What is a Payment Method ?\n\nEvery Payment Processor has the capability to accommodate various payment methods. Refer to the [Hyperswitch Payment matrix](https://hyperswitch.io/pm-list) to discover the supported processors and payment methods.\n\nThe above mentioned payment methods are already included in Router. Hence, adding a new connector which offers payment_methods available in Router is easy and requires almost no breaking changes.\nAdding a new payment method might require some changes in core business logic of Router, which we are actively working upon.\n\n## How to Integrate a Connector\n\nMost of the code to be written is just another API integration. You have to write request and response types for API of the connector you wish to integrate and implement required traits.\n\nFor this tutorial we will be integrating card payment through the [Checkout.com connector](https://www.checkout.com/).\nGo through the [Checkout.com API reference](https://api-reference.checkout.com/). It would also be helpful to try out the API's, using tools like on postman, or any other API testing tool before starting the integration.\n\nBelow is a step-by-step tutorial for integrating a new connector.\n\n### **Generate the template**\n\n```bash\nsh scripts/add_connector.sh <connector-name> <connector-base-url>\n```\n\nFor this tutorial `<connector-name>` would be `checkout`.\n\nThe folder structure will be modified as below\n\n```\ncrates/router/src/connector\n├── checkout\n│   └── transformers.rs\n└── checkout.rs\ncrates/router/tests/connectors\n└── checkout.rs\n```\n\n`crates/router/src/connector/checkout/transformers.rs` will contain connectors API Request and Response types, and conversion between the router and connector API types.\n`crates/router/src/connector/checkout.rs` will contain the trait implementations for the connector.\n`crates/router/tests/connectors/checkout.rs` will contain the basic tests for the payments flows.\n\nThere is boiler plate code with `todo!()` in the above mentioned files. Go through the rest of the guide and fill in code wherever necessary.\n\n### **Implementing Request and Response types**\n\nAdding new Connector is all about implementing the data transformation from Router's core to Connector's API request format.\nThe Connector module is implemented as a stateless module, so that you will not have to worry about persistence of data. Router core will automatically take care of data persistence.\n\nLets add code in `transformers.rs` file.\nA little planning and designing is required for implementing the Requests and Responses of the connector, as it depends on the API spec of the connector.\n\nFor example, in case of checkout, the [request](https://api-reference.checkout.com/#tag/Payments) has a required parameter `currency` and few other required parameters in `source`. But the fields in “source” vary depending on the `source type`. An enum is needed to accommodate this in the Request type. You may need to add the serde tags to convert enum into json or url encoded based on your requirements. Here `serde(untagged)` is added to make the whole structure into the proper json acceptable to the connector.\n\nNow let's implement Request type for checkout\n\n```rust\n#[derive(Debug, Serialize)]\npub struct CardSource {\n    #[serde(rename = \"type\")]\n    pub source_type: CheckoutSourceTypes,\n    pub number: cards::CardNumber,\n    pub expiry_month: Secret<String>,\n    pub expiry_year: Secret<String>,\n    pub cvv: Secret<String>,\n}\n\n#[derive(Debug, Serialize)]\n#[serde(untagged)]\npub enum PaymentSource {\n    Card(CardSource),\n    Wallets(WalletSource),\n    ApplePayPredecrypt(Box<ApplePayPredecrypt>),\n}\n\n#[derive(Debug, Serialize)]\npub struct PaymentsRequest {\n    pub source: PaymentSource,\n    pub amount: i64,\n    pub currency: String,\n    pub processing_channel_id: Secret<String>,\n    #[serde(rename = \"3ds\")]\n    pub three_ds: CheckoutThreeDS,\n    #[serde(flatten)]\n    pub return_url: ReturnUrl,\n    pub capture: bool,\n    pub reference: String,\n}\n```\n\nSince Router is connector agnostic, only minimal data is sent to connector and optional fields may be ignored.\n\nHere processing_channel_id, is specific to checkout and implementations of such functions should be inside the checkout directory.\nLet's define `PaymentSource`\n\n`PaymentSource` is an enum type. Request types will need to derive `Serialize` and response types will need to derive `Deserialize`. For request types `From<RouterData>` needs to be implemented.\n\nFor request types that involve an amount, the implementation of `TryFrom<&ConnectorRouterData<&T>>` is required:\n\n```rust\nimpl TryFrom<&CheckoutRouterData<&T>> for PaymentsRequest\n```\n\nelse\n\n```rust\nimpl TryFrom<T> for PaymentsRequest\n```\n\nwhere `T` is a generic type which can be `types::PaymentsAuthorizeRouterData`, `types::PaymentsCaptureRouterData`, etc.\n\nIn this impl block we build the request type from RouterData which will almost always contain all the required information you need for payment processing.\n`RouterData` contains all the information required for processing the payment.\n\nAn example implementation for checkout.com is given below.\n\n```rust\nimpl<'a> From<&types::RouterData<'a>> for CheckoutPaymentsRequest {\n    fn from(item: &types::RouterData) -> Self {\n\n        let ccard = match item.payment_method_data {\n            Some(api::PaymentMethod::Card(ref ccard)) => Some(ccard),\n            Some(api::PaymentMethod::BankTransfer) | None => None,\n        };\n\n        let source_var = Source::Card(CardSource {\n            source_type: Some(\"card\".to_owned()),\n            number: ccard.map(|x| x.card_number.clone()),\n            expiry_month: ccard.map(|x| x.card_exp_month.clone()),\n            expiry_year: ccard.map(|x| x.card_exp_year.clone()),\n        });\n\n        CheckoutPaymentsRequest {\n            source: source_var,\n            amount: item.amount,\n            currency: item.currency.to_string(),\n            processing_channel_id: generate_processing_channel_id(),\n        }\n\n    }\n}\n```\n\nRequest side is now complete.\nSimilar changes are now needed to handle response side.\n\nWhile implementing the Response Type, the important Enum to be defined for every connector is `PaymentStatus`.\n\nIt stores the different status types that the connector can give in its response that is listed in its API spec. Below is the definition for checkout\n\n```rust\n#[derive(Default, Clone, Debug, Eq, PartialEq, Deserialize, Serialize)]\npub enum CheckoutPaymentStatus {\n    Authorized,\n    #[default]\n    Pending,\n    #[serde(rename = \"Card Verified\")]\n    CardVerified,\n    Declined,\n    Captured,\n}\n```\n\nThe important part is mapping it to the Router status codes.\n\n```rust\nimpl ForeignFrom<(CheckoutPaymentStatus, Option<Balances>)> for enums::AttemptStatus {\n    fn foreign_from(item: (CheckoutPaymentStatus, Option<Balances>)) -> Self {\n        let (status, balances) = item;\n\n        match status {\n            CheckoutPaymentStatus::Authorized => {\n                if let Some(Balances {\n                    available_to_capture: 0,\n                }) = balances\n                {\n                    Self::Charged\n                } else {\n                    Self::Authorized\n                }\n            }\n            CheckoutPaymentStatus::Captured => Self::Charged,\n            CheckoutPaymentStatus::Declined => Self::Failure,\n            CheckoutPaymentStatus::Pending => Self::AuthenticationPending,\n            CheckoutPaymentStatus::CardVerified => Self::Pending,\n        }\n    }\n}\n```\n\nIf you're converting ConnectorPaymentStatus to AttemptStatus without any additional conditions, you can employ the `impl From<ConnectorPaymentStatus> for enums::AttemptStatus`.\n\nNote: A payment intent can have multiple payment attempts. `enums::AttemptStatus` represents the status of a payment attempt.\n\nSome of the attempt status are given below\n\n- **Charged :** The payment attempt has succeeded.\n- **Pending :** Payment is in processing state.\n- **Failure :** The payment attempt has failed.\n- **Authorized :** Payment is authorized. Authorized payment can be voided, captured and partial captured.\n- **AuthenticationPending :** Customer action is required.\n- **Voided :** The payment was voided and never captured; the funds were returned to the customer.\n\nIt is highly recommended that the default status is Pending. Only explicit failure and explicit success from the connector shall be marked as success or failure respectively.\n\n```rust\n// Default should be Pending\nimpl Default for CheckoutPaymentStatus {\n    fn default() -> Self {\n        CheckoutPaymentStatus::Pending\n    }\n}\n```\n\nBelow is rest of the response type implementation for checkout\n\n```rust\n#[derive(Clone, Debug, Default, Eq, PartialEq, Deserialize, Serialize)]\npub struct PaymentsResponse {\n    id: String,\n    amount: Option<i32>,\n    action_id: Option<String>,\n    status: CheckoutPaymentStatus,\n    #[serde(rename = \"_links\")]\n    links: Links,\n    balances: Option<Balances>,\n    reference: Option<String>,\n    response_code: Option<String>,\n    response_summary: Option<String>,\n}\n\n#[derive(Deserialize, Debug)]\npub struct ActionResponse {\n    #[serde(rename = \"id\")]\n    pub action_id: String,\n    pub amount: i64,\n    #[serde(rename = \"type\")]\n    pub action_type: ActionType,\n    pub approved: Option<bool>,\n    pub reference: Option<String>,\n}\n\n#[derive(Debug, Deserialize)]\n#[serde(untagged)]\npub enum PaymentsResponseEnum {\n    ActionResponse(Vec<ActionResponse>),\n    PaymentResponse(Box<PaymentsResponse>),\n}\n\nimpl TryFrom<types::PaymentsResponseRouterData<PaymentsResponse>>\n    for types::PaymentsAuthorizeRouterData\n{\n    type Error = error_stack::Report<errors::ConnectorError>;\n    fn try_from(\n        item: types::PaymentsResponseRouterData<PaymentsResponse>,\n    ) -> Result<Self, Self::Error> {\n        let redirection_data = item.response.links.redirect.map(|href| {\n            services::RedirectForm::from((href.redirection_url, services::Method::Get))\n        });\n        let status = enums::AttemptStatus::foreign_from((\n            item.response.status,\n            item.data.request.capture_method,\n        ));\n        let error_response = if status == enums::AttemptStatus::Failure {\n            Some(types::ErrorResponse {\n                status_code: item.http_code,\n                code: item\n                    .response\n                    .response_code\n                    .unwrap_or_else(|| consts::NO_ERROR_CODE.to_string()),\n                message: item\n                    .response\n                    .response_summary\n                    .clone()\n                    .unwrap_or_else(|| consts::NO_ERROR_MESSAGE.to_string()),\n                reason: item.response.response_summary,\n                attempt_status: None,\n                connector_transaction_id: None,\n            })\n        } else {\n            None\n        };\n        let payments_response_data = types::PaymentsResponseData::TransactionResponse {\n            resource_id: types::ResponseId::ConnectorTransactionId(item.response.id.clone()),\n            redirection_data,\n            mandate_reference: None,\n            connector_metadata: None,\n            network_txn_id: None,\n            connector_response_reference_id: Some(\n                item.response.reference.unwrap_or(item.response.id),\n            ),\n        };\n        Ok(Self {\n            status,\n            response: error_response.map_or_else(|| Ok(payments_response_data), Err),\n            ..item.data\n        })\n    }\n}\n```\n\nUsing an enum for a response struct in Rust is not recommended due to potential deserialization issues where the deserializer attempts to deserialize into all the enum variants. A preferable alternative is to employ a separate enum for the possible response variants and include it as a field within the response struct.\n\nSome recommended fields that needs to be set on connector request and response\n\n- **connector_request_reference_id :** Most of the connectors anticipate merchants to include their own reference ID in payment requests. For instance, the merchant's reference ID in the checkout `PaymentRequest` is specified as `reference`.\n\n```rust\n  reference: item.router_data.connector_request_reference_id.clone(),\n```\n\n- **connector_response_reference_id :** Merchants might face ambiguity when deciding which ID to use in the connector dashboard for payment identification. It is essential to populate the connector_response_reference_id with the appropriate reference ID, allowing merchants to recognize the transaction. This field can be linked to either `merchant_reference` or `connector_transaction_id`, depending on the field that the connector dashboard search functionality supports.\n\n```rust\n  connector_response_reference_id: item.response.reference.or(Some(item.response.id))\n```\n\n- **resource_id :** The connector assigns an identifier to a payment attempt, referred to as `connector_transaction_id`. This identifier is represented as an enum variant for the `resource_id`. If the connector does not provide a `connector_transaction_id`, the resource_id is set to `NoResponseId`.\n\n```rust\n  resource_id: types::ResponseId::ConnectorTransactionId(item.response.id.clone()),\n```\n\n- **redirection_data :** For the implementation of a redirection flow (3D Secure, bank redirects, etc.), assign the redirection link to the `redirection_data`.\n\n```rust\n  let redirection_data = item.response.links.redirect.map(|href| {\n      services::RedirectForm::from((href.redirection_url, services::Method::Get))\n  });\n```\n\nAnd finally the error type implementation\n\n```rust\n#[derive(Default, Debug, Serialize, Deserialize, PartialEq)]\npub struct CheckoutErrorResponse {\n    pub request_id: Option<String>,\n    #[serde(rename = \"type\")]\n    pub error_type: Option<String>,\n    pub error_codes: Option<Vec<String>>,\n}\n```\n\nSimilarly for every API endpoint you can implement request and response types.\n\n### **Implementing the traits**\n\nThe `mod.rs` file contains the trait implementations where we use the types in transformers.\n\nWe create a struct with the connector name and have trait implementations for it.\nThe following trait implementations are mandatory\n\n**ConnectorCommon :** contains common description of the connector, like the base endpoint, content-type, error response handling, id, currency unit.\n\nWithin the `ConnectorCommon` trait, you'll find the following methods :\n\n- `id` method corresponds directly to the connector name.\n\n```rust\n  fn id(&self) -> &'static str {\n      \"checkout\"\n  }\n```\n\n- `get_currency_unit` method anticipates you to [specify the accepted currency unit](#set-the-currency-unit) for the connector.\n\n```rust\n  fn get_currency_unit(&self) -> api::CurrencyUnit {\n      api::CurrencyUnit::Minor\n  }\n```\n\n- `common_get_content_type` method requires you to provide the accepted content type for the connector API.\n\n```rust\n  fn common_get_content_type(&self) -> &'static str {\n      \"application/json\"\n  }\n```\n\n- `get_auth_header` method accepts common HTTP Authorization headers that are accepted in all `ConnectorIntegration` flows.\n\n```rust\n  fn get_auth_header(\n      &self,\n      auth_type: &types::ConnectorAuthType,\n  ) -> CustomResult<Vec<(String, request::Maskable<String>)>, errors::ConnectorError> {\n      let auth: checkout::CheckoutAuthType = auth_type\n          .try_into()\n          .change_context(errors::ConnectorError::FailedToObtainAuthType)?;\n      Ok(vec![(\n          headers::AUTHORIZATION.to_string(),\n          format!(\"Bearer {}\", auth.api_secret.peek()).into_masked(),\n      )])\n  }\n```\n\n- `base_url` method is for fetching the base URL of connector's API. Base url needs to be consumed from configs.\n\n```rust\n  fn base_url<'a>(&self, connectors: &'a settings::Connectors) -> &'a str {\n      connectors.checkout.base_url.as_ref()\n  }\n```\n\n- `build_error_response` method is common error response handling for a connector if it is same in all cases\n\n```rust\n  fn build_error_response(\n      &self,\n      res: types::Response,\n      event_builder: Option<&mut ConnectorEvent>,\n  ) -> CustomResult<types::ErrorResponse, errors::ConnectorError> {\n      let response: checkout::ErrorResponse = if res.response.is_empty() {\n          let (error_codes, error_type) = if res.status_code == 401 {\n              (\n                  Some(vec![\"Invalid api key\".to_string()]),\n                  Some(\"invalid_api_key\".to_string()),\n              )\n          } else {\n              (None, None)\n          };\n          checkout::ErrorResponse {\n              request_id: None,\n              error_codes,\n              error_type,\n          }\n      } else {\n          res.response\n              .parse_struct(\"ErrorResponse\")\n              .change_context(errors::ConnectorError::ResponseDeserializationFailed)?\n      };\n\n      router_env::logger::info!(error_response=?response);\n      let errors_list = response.error_codes.clone().unwrap_or_default();\n      let option_error_code_message = conn_utils::get_error_code_error_message_based_on_priority(\n          self.clone(),\n          errors_list\n              .into_iter()\n              .map(|errors| errors.into())\n              .collect(),\n      );\n      Ok(types::ErrorResponse {\n          status_code: res.status_code,\n          code: option_error_code_message\n              .clone()\n              .map(|error_code_message| error_code_message.error_code)\n              .unwrap_or(consts::NO_ERROR_CODE.to_string()),\n          message: option_error_code_message\n              .map(|error_code_message| error_code_message.error_message)\n              .unwrap_or(consts::NO_ERROR_MESSAGE.to_string()),\n          reason: response\n              .error_codes\n              .map(|errors| errors.join(\" & \"))\n              .or(response.error_type),\n          attempt_status: None,\n          connector_transaction_id: None,\n      })\n  }\n```\n\n**ConnectorIntegration :** For every api endpoint contains the url, using request transform and response transform and headers.\nWithin the `ConnectorIntegration` trait, you'll find the following methods implemented(below mentioned is example for authorized flow):\n\n- `get_url` method defines endpoint for authorize flow, base url is consumed from `ConnectorCommon` trait.\n\n```rust\n  fn get_url(\n      &self,\n      _req: &types::PaymentsAuthorizeRouterData,\n      connectors: &settings::Connectors,\n  ) -> CustomResult<String, errors::ConnectorError> {\n      Ok(format!(\"{}{}\", self.base_url(connectors), \"payments\"))\n  }\n```\n\n- `get_headers` method accepts HTTP headers that are accepted for authorize flow. In this context, it is utilized from the `ConnectorCommonExt` trait, as the connector adheres to common headers across various flows.\n\n```rust\n  fn get_headers(\n      &self,\n      req: &types::PaymentsAuthorizeRouterData,\n      connectors: &settings::Connectors,\n  ) -> CustomResult<Vec<(String, request::Maskable<String>)>, errors::ConnectorError> {\n      self.build_headers(req, connectors)\n  }\n```\n\n- `get_request_body` method calls transformers where hyperswitch payment request data is transformed into connector payment request. If the conversion and construction processes are successful, the function wraps the constructed connector_req in a Box and returns it as `RequestContent::Json`. The `RequestContent` enum defines different types of request content that can be sent. It includes variants for JSON, form-urlencoded, XML, raw bytes, and potentially other formats.\n\n```rust\n  fn get_request_body(\n        &self,\n        req: &types::PaymentsAuthorizeRouterData,\n        _connectors: &settings::Connectors,\n    ) -> CustomResult<RequestContent, errors::ConnectorError> {\n        let connector_router_data = checkout::CheckoutRouterData::try_from((\n            &self.get_currency_unit(),\n            req.request.currency,\n            req.request.amount,\n            req,\n        ))?;\n        let connector_req = checkout::PaymentsRequest::try_from(&connector_router_data)?;\n        Ok(RequestContent::Json(Box::new(connector_req)))\n    }\n```\n\n- `build_request` method assembles the API request by providing the method, URL, headers, and request body as parameters.\n\n```rust\n  fn build_request(\n      &self,\n      req: &types::RouterData<\n          api::Authorize,\n          types::PaymentsAuthorizeData,\n          types::PaymentsResponseData,\n      >,\n      connectors: &settings::Connectors,\n  ) -> CustomResult<Option<services::Request>, errors::ConnectorError> {\n      Ok(Some(\n          services::RequestBuilder::new()\n              .method(services::Method::Post)\n              .url(&types::PaymentsAuthorizeType::get_url(\n                  self, req, connectors,\n              )?)\n              .attach_default_headers()\n              .headers(types::PaymentsAuthorizeType::get_headers(\n                  self, req, connectors,\n              )?)\n              .body(types::PaymentsAuthorizeType::get_request_body(\n                  self, req, connectors,\n              )?)\n              .build(),\n    ))\n  }\n```\n\n- `handle_response` method calls transformers where connector response data is transformed into hyperswitch response.\n\n```rust\n  fn handle_response(\n      &self,\n      data: &types::PaymentsAuthorizeRouterData,\n      event_builder: Option<&mut ConnectorEvent>,\n      res: types::Response,\n  ) -> CustomResult<types::PaymentsAuthorizeRouterData, errors::ConnectorError> {\n      let response: checkout::PaymentsResponse = res\n          .response\n          .parse_struct(\"PaymentIntentResponse\")\n          .change_context(errors::ConnectorError::ResponseDeserializationFailed)?;\n        event_builder.map(|i| i.set_response_body(&response));\n            router_env::logger::info!(connector_response=?response);\n      types::RouterData::try_from(types::ResponseRouterData {\n          response,\n          data: data.clone(),\n          http_code: res.status_code,\n      })\n      .change_context(errors::ConnectorError::ResponseHandlingFailed)\n  }\n```\n\n- `get_error_response` method to manage error responses. As the handling of checkout errors remains consistent across various flows, we've incorporated it from the `build_error_response` method within the `ConnectorCommon` trait.\n\n```rust\n  fn get_error_response(\n      &self,\n      res: types::Response,\n      event_builder: Option<&mut ConnectorEvent>,\n  ) -> CustomResult<types::ErrorResponse, errors::ConnectorError> {\n      self.build_error_response(res, event_builder)\n  }\n```\n\n**ConnectorCommonExt :** An enhanced trait for `ConnectorCommon` that enables functions with a generic type. This trait includes the `build_headers` method, responsible for constructing both the common headers and the Authorization headers (retrieved from the `get_auth_header` method), returning them as a vector.\n\n```rust\n  where\n    Self: ConnectorIntegration<Flow, Request, Response>,\n{\n    fn build_headers(\n      &self,\n      req: &types::RouterData<Flow, Request, Response>,\n      _connectors: &settings::Connectors,\n  ) -> CustomResult<Vec<(String, request::Maskable<String>)>, errors::ConnectorError> {\n      let header = vec![(\n          headers::CONTENT_TYPE.to_string(),\n          self.get_content_type().to_string().into(),\n      )];\n      let mut api_key = self.get_auth_header(&req.connector_auth_type)?;\n      header.append(&mut api_key);\n      Ok(header)\n  }\n}\n```\n\n**Payment :** This trait includes several other traits and is meant to represent the functionality related to payments.\n\n**PaymentAuthorize :** This trait extends the `api::ConnectorIntegration `trait with specific types related to payment authorization.\n\n**PaymentCapture :** This trait extends the `api::ConnectorIntegration `trait with specific types related to manual payment capture.\n\n**PaymentSync :** This trait extends the `api::ConnectorIntegration `trait with specific types related to payment retrieve.\n\n**Refund :** This trait includes several other traits and is meant to represent the functionality related to Refunds.\n\n**RefundExecute :** This trait extends the `api::ConnectorIntegration `trait with specific types related to refunds create.\n\n**RefundSync :** This trait extends the `api::ConnectorIntegration `trait with specific types related to refunds retrieve.\n\nAnd the below derive traits\n\n- **Debug**\n- **Clone**\n- **Copy**\n\nThere is a trait bound to implement refunds, if you don't want to implement refunds you can mark them as `todo!()` but code panics when you initiate refunds then.\n\nRefer to other connector code for trait implementations. Mostly the rust compiler will guide you to do it easily.\nFeel free to connect with us in case of any queries and if you want to confirm the status mapping.\n\n### **Set the currency Unit**\n\nThe `get_currency_unit` function, part of the ConnectorCommon trait, enables connectors to specify their accepted currency unit as either `Base` or `Minor`. For instance, Paypal designates its currency in the base unit (for example, USD), whereas Hyperswitch processes amounts in the minor unit (for example, cents). If a connector accepts amounts in the base unit, conversion is required, as illustrated.\n\n```rust\nimpl<T>\n    TryFrom<(\n        &types::api::CurrencyUnit,\n        types::storage::enums::Currency,\n        i64,\n        T,\n    )> for PaypalRouterData<T>\n{\n    type Error = error_stack::Report<errors::ConnectorError>;\n    fn try_from(\n        (currency_unit, currency, amount, item): (\n            &types::api::CurrencyUnit,\n            types::storage::enums::Currency,\n            i64,\n            T,\n        ),\n    ) -> Result<Self, Self::Error> {\n        let amount = utils::get_amount_as_string(currency_unit, amount, currency)?;\n        Ok(Self {\n            amount,\n            router_data: item,\n        })\n    }\n}\n```\n\n**Note:** Since the amount is being converted in the aforementioned `try_from`, it is necessary to retrieve amounts from `ConnectorRouterData` in all other `try_from` instances.\n\n### **Connector utility functions**\n\nIn the `connector/utils.rs` file, you'll discover utility functions that aid in constructing connector requests and responses. We highly recommend using these helper functions for retrieving payment request fields, such as `get_billing_country`, `get_browser_info`, and `get_expiry_date_as_yyyymm`, as well as for validations, including `is_three_ds`, `is_auto_capture`, and more.\n\n```rust\n  let json_wallet_data: CheckoutGooglePayData =wallet_data.get_wallet_token_as_json()?;\n```\n\n### **Connector configs for control center**\n\nThis section is explicitly for developers who are using the [Hyperswitch Control Center](https://github.com/juspay/hyperswitch-control-center). Below is a more detailed documentation that guides you through updating the connector configuration in the `development.toml` file in Hyperswitch and running the wasm-pack build command. Please replace placeholders such as `/absolute/path/to/` with the actual absolute paths.\n\n1. Install wasm-pack: Run the following command to install wasm-pack:\n\n```bash \ncargo install wasm-pack\n```\n\n2. Add connector configuration:\n\n   Open the `development.toml` file located at `crates/connector_configs/toml/development.toml` in your Hyperswitch project.\n\n   Locate the [stripe] section as an example and add the configuration for the `example_connector`. Here's an example:\n\n   ```toml\n   # crates/connector_configs/toml/development.toml\n\n   # Other connector configurations...\n\n   [stripe]\n   [stripe.connector_auth.HeaderKey]\n   api_key=\"Secret Key\"\n\n   # Add any other Stripe-specific configuration here\n\n   [example_connector]\n   # Your specific connector configuration for reference\n   # ...\n\n   ```\n\n   provide the necessary configuration details for the `example_connector`. Don't forget to save the file.\n\n3. Update paths:\n\n   Replace `/absolute/path/to/hyperswitch-control-center` with the absolute path to your Hyperswitch Control Center repository and `/absolute/path/to/hyperswitch` with the absolute path to your Hyperswitch repository.\n\n4. Run `wasm-pack` build:\n\n   Execute the following command in your terminal:\n\n   ```bash\n   wasm-pack build --target web --out-dir /absolute/path/to/hyperswitch-control-center/public/hyperswitch/wasm --out-name euclid /absolute/path/to/hyperswitch/crates/euclid_wasm -- --features dummy_connector\n   ```\n\n   This command builds the WebAssembly files for the `dummy_connector` feature and places them in the specified directory.\n\nNotes:\n\n- Ensure that you replace placeholders like `/absolute/path/to/` with the actual absolute paths in your file system.\n- Verify that your connector configurations in `development.toml` are correct and saved before running the `wasm-pack` command.\n- Check for any error messages during the build process and resolve them accordingly.\n\nBy following these steps, you should be able to update the connector configuration and build the WebAssembly files successfully.\n\nCertainly! Below is a detailed documentation guide on updating the `ConnectorTypes.res` and `ConnectorUtils.res` files in your [Hyperswitch Control Center](https://github.com/juspay/hyperswitch-control-center) project.\n\nUpdate `ConnectorTypes.res`:\n\n1. Open `ConnectorTypes.res`:\n\n   Open the `ConnectorTypes.res` file located at `src/screens/HyperSwitch/Connectors/ConnectorTypes.res` in your Hyperswitch-Control-Center project.\n\n2. Add Connector enum:\n\n   Add the new connector name enum under the `type connectorName` section. Here's an example:\n\n   ```reason\n   /* src/screens/HyperSwitch/Connectors/ConnectorTypes.res */\n\n   type connectorName =\n     | Stripe\n     | DummyConnector\n     | YourNewConnector\n     /* Add any other connector enums as needed */\n   ```\n\n   Replace `YourNewConnector` with the name of your newly added connector.\n\n3. Save the file:\n\n   Save the changes made to `ConnectorTypes.res`.\n\nUpdate `ConnectorUtils.res`:\n\n1. Open `ConnectorUtils.res`:\n\n   Open the `ConnectorUtils.res` file located at `src/screens/HyperSwitch/Connectors/ConnectorUtils.res` in your [Hyperswitch Control Center](https://github.com/juspay/hyperswitch-control-center) project.\n\n2. Add Connector Description:\n\n   Update the following functions in `ConnectorUtils.res`:\n\n   ```reason\n   /* src/screens/HyperSwitch/Connectors/ConnectorUtils.res */\n\n\n   let connectorList : array<connectorName> = [Stripe,YourNewConnector]\n\n\n   let getConnectorNameString = (connectorName: connectorName) =>\n     switch connectorName {\n     | Stripe => \"Stripe\"\n     | DummyConnector => \"Dummy Connector\"\n     | YourNewConnector => \"Your New Connector\"\n     /* Add cases for other connectors */\n     };\n\n   let getConnectorNameTypeFromString = (str: string) =>\n     switch str {\n     | \"Stripe\" => Stripe\n     | \"Dummy Connector\" => DummyConnector\n     | \"Your New Connector\" => YourNewConnector\n     /* Add cases for other connectors */\n     };\n\n   let getConnectorInfo = (connectorName: connectorName) =>\n     switch connectorName {\n     | Stripe => \"Stripe connector description.\"\n     | DummyConnector => \"Dummy Connector description.\"\n     | YourNewConnector => \"Your New Connector description.\"\n     /* Add descriptions for other connectors */\n     };\n\n   let getDisplayNameForConnectors = (connectorName: connectorName) =>\n     switch connectorName {\n     | Stripe => \"Stripe\"\n     | DummyConnector => \"Dummy Connector\"\n     | YourNewConnector => \"Your New Connector\"\n     /* Add display names for other connectors */\n     };\n   ```\n\n   Adjust the strings and descriptions according to your actual connector names and descriptions.\n\n\n4. Save the File:\n\n   Save the changes made to `ConnectorUtils.res`.\n\nNotes:\n\n- Ensure that you replace placeholders like `YourNewConnector` with the actual names of your connectors.\n- Verify that your connector enums and descriptions are correctly updated.\n- Save the files after making the changes.\n\nBy following these steps, you should be able to update the `ConnectorTypes.res` and `ConnectorUtils.res` files with the new connector enum and its related information.\n\n\n\nCertainly! Below is a detailed documentation guide on how to add a new connector icon under the `public/hyperswitch/Gateway` folder in your Hyperswitch-Control-Center project.\n\nAdd Connector icon:\n\n1. Prepare the icon:\n\n   Prepare your connector icon in SVG format. Ensure that the icon is named in uppercase, following the convention. For example, name it `YOURCONNECTOR.SVG`.\n\n2. Open file explorer:\n\n   Open your file explorer and navigate to the `public/hyperswitch/Gateway` folder in your Hyperswitch-Control-Center project.\n\n3. Add Icon file:\n\n   Copy and paste your SVG icon file (e.g., `YOURCONNECTOR.SVG`) into the `Gateway` folder.\n\n4. Verify file structure:\n\n   Ensure that the file structure in the `Gateway` folder follows the uppercase convention. For example:\n\n   ```\n   public\n   └── hyperswitch\n       └── Gateway\n           └── YOURCONNECTOR.SVG\n   ```\n    Save the changes made to the `Gateway` folder.\n\n\n### **Test the connector**\n\nThe template code script generates a test file for the connector, containing 20 sanity tests. We anticipate that you will implement these tests when adding a new connector.\n\n```rust\n// Cards Positive Tests\n// Creates a payment using the manual capture flow (Non 3DS).\n#[serial_test::serial]\n#[actix_web::test]\nasync fn should_only_authorize_payment() {\n    let response = CONNECTOR\n        .authorize_payment(payment_method_details(), get_default_payment_info())\n        .await\n        .expect(\"Authorize payment response\");\n    assert_eq!(response.status, enums::AttemptStatus::Authorized);\n}\n```\n\nUtility functions for tests are also available at `tests/connector/utils`. These functions enable you to write tests with ease.\n\n```rust\n    /// For initiating payments when `CaptureMethod` is set to `Manual`\n    /// This doesn't complete the transaction, `PaymentsCapture` needs to be done manually\n    async fn authorize_payment(\n        &self,\n        payment_data: Option<types::PaymentsAuthorizeData>,\n        payment_info: Option<PaymentInfo>,\n    ) -> Result<types::PaymentsAuthorizeRouterData, Report<ConnectorError>> {\n        let integration = self.get_data().connector.get_connector_integration();\n        let mut request = self.generate_data(\n            types::PaymentsAuthorizeData {\n                confirm: true,\n                capture_method: Some(diesel_models::enums::CaptureMethod::Manual),\n                ..(payment_data.unwrap_or(PaymentAuthorizeType::default().0))\n            },\n            payment_info,\n        );\n        let tx: oneshot::Sender<()> = oneshot::channel().0;\n        let state = routes::AppState::with_storage(\n            Settings::new().unwrap(),\n            StorageImpl::PostgresqlTest,\n            tx,\n            Box::new(services::MockApiClient),\n        )\n        .await;\n        Box::pin(call_connector(request, integration)).await\n    }\n```\n\nPrior to executing tests in the shell, ensure that the API keys are configured in `crates/router/tests/connectors/sample_auth.toml` and set the environment variable `CONNECTOR_AUTH_FILE_PATH` using the export command. Avoid pushing code with exposed API keys.\n\n```rust\n  export CONNECTOR_AUTH_FILE_PATH=\"/hyperswitch/crates/router/tests/connectors/sample_auth.toml\"\n  cargo test --package router --test connectors -- checkout --test-threads=1\n```\n\nAll tests should pass and add appropriate tests for connector specific payment flows.\n\n### **Build payment request and response from json schema**\n\nSome connectors will provide [json schema](https://developer.worldpay.com/docs/access-worldpay/api/references/payments) for each request and response supported. We can directly convert that schema to rust code by using below script. On running the script a `temp.rs` file will be created in `src/connector/<connector-name>` folder\n\n_Note: The code generated may not be production ready and might fail for some case, we have to clean up the code as per our standards._\n\n```bash\nbrew install openapi-generator\nexport CONNECTOR_NAME=\"<CONNECTOR-NAME>\" #Change it to appropriate connector name\nexport SCHEMA_PATH=\"<PATH-TO-JSON-SCHEMA-FILE>\" #it can be json or yaml, Refer samples below\nopenapi-generator generate -g rust  -i ${SCHEMA_PATH} -o temp &&  cat temp/src/models/* > crates/router/src/connector/${CONNECTOR_NAME}/temp.rs && rm -rf temp && sed -i'' -r \"s/^pub use.*//;s/^pub mod.*//;s/^\\/.*//;s/^.\\*.*//;s/crate::models:://g;\" crates/router/src/connector/${CONNECTOR_NAME}/temp.rs && cargo +nightly fmt\n```\n\nJSON example\n\n```json\n{\n  \"openapi\": \"3.0.1\",\n  \"paths\": {},\n  \"info\": {\n    \"title\": \"\",\n    \"version\": \"\"\n  },\n  \"components\": {\n    \"schemas\": {\n      \"PaymentsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"outcome\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\"outcome\"]\n      }\n    }\n  }\n}\n```\n\nYAML example\n\n```yaml\n---\nopenapi: 3.0.1\npaths: {}\ninfo:\n  title: \"\"\n  version: \"\"\ncomponents:\n  schemas:\n    PaymentsResponse:\n      type: object\n      properties:\n        outcome:\n          type: string\n      required:\n        - outcome\n```\n"
  cog.toml: |
    tag_prefix = "v"
    ignore_merge_commits = true

    # the HTML comments (`<!-- N -->`) are a workaround to have sections in custom order, since they are alphabetically sorted
    [commit_types]
    feat = { changelog_title = "<!-- 0 -->Features" }
    fix = { changelog_title = "<!-- 1 -->Bug Fixes" }
    perf = { changelog_title = "<!-- 2 -->Performance" }
    refactor = { changelog_title = "<!-- 3 -->Refactors" }
    test = { changelog_title = "<!-- 4 -->Testing" }
    docs = { changelog_title = "<!-- 5 -->Documentation" }
    chore = { changelog_title = "<!-- 6 -->Miscellaneous Tasks" }
    build = { changelog_title = "<!-- 7 -->Build System / Dependencies" }
    ci = { changelog_title = "Continuous Integration", omit_from_changelog = true }

    [changelog]
    path = "CHANGELOG.md"
    template = ".github/cocogitto-changelog-template"
    remote = "github.com"
    owner = "juspay"
    repository = "hyperswitch"
  compose-dev.yaml: |+
    services:
      app:
        entrypoint:
        - sleep
        - infinity
        image: docker/dev-environments-default:stable-1
        init: true
        volumes:
        - type: bind
          source: /var/run/docker.sock
          target: /var/run/docker.sock

  diesel.toml: |
    # For documentation on how to configure this file,
    # see diesel.rs/guides/configuring-diesel-cli

    [print_schema]
    file = "crates/diesel_models/src/schema.rs"
    import_types = ["diesel::sql_types::*", "crate::enums::diesel_exports::*"]
    generate_missing_sql_type_definitions = false
    patch_file="crates/diesel_models/remove_id.patch"
  diesel_v2.toml: |
    # For documentation on how to configure this file,
    # see diesel.rs/guides/configuring-diesel-cli

    # use a separate file for schema of api v2
    [print_schema]
    file = "crates/diesel_models/src/schema_v2.rs"
    import_types = ["diesel::sql_types::*", "crate::enums::diesel_exports::*"]
    generate_missing_sql_type_definitions = false
  docker-compose-development.yml: |
    version: "3.8"

    volumes:
      cargo_cache:
      pg_data:
      router_build_cache:
      #scheduler_build_cache:
      #drainer_build_cache:
      redisinsight_store:

    networks:
      router_net:

    services:
      ### Dependencies
      pg:
        image: postgres:latest
        ports:
          - "5432:5432"
        networks:
          - router_net
        volumes:
          - pg_data:/VAR/LIB/POSTGRESQL/DATA
        environment:
          - POSTGRES_USER=db_user
          - POSTGRES_PASSWORD=db_pass
          - POSTGRES_DB=hyperswitch_db
        healthcheck:
          test: ["CMD-SHELL", "pg_isready"]
          interval: 5s
          retries: 3
          start_period: 5s
          timeout: 5s

      redis-standalone:
        image: redis:7
        networks:
          - router_net
        ports:
          - "6379:6379"
        healthcheck:
          test: ["CMD-SHELL", "redis-cli ping | grep '^PONG$'"]
          interval: 5s
          retries: 3
          start_period: 5s
          timeout: 5s

      migration_runner:
        image: rust:latest
        command: "bash -c 'cargo install diesel_cli --no-default-features --features postgres && cargo install just && just migrate'"
        working_dir: /app
        networks:
          - router_net
        volumes:
          - ./:/app
        environment:
          # format -> postgresql://DB_USER:DB_PASSWORD@HOST:PORT/DATABASE_NAME
          - DATABASE_URL=postgresql://db_user:db_pass@pg:5432/hyperswitch_db

      ### Application services
      hyperswitch-server:
        image: juspaydotin/hyperswitch-router:standalone
        pull_policy: always
        command: /local/bin/router -f /local/config/docker_compose.toml
        ports:
          - "8081:8080"
        networks:
          - router_net
        volumes:
          - ./config:/local/config
          - ./files:/local/bin/files
        depends_on:
          pg:
            condition: service_healthy
          redis-standalone:
            condition: service_healthy
        labels:
          logs: "promtail"
        healthcheck:
          test: curl --fail http://localhost:8080/health || exit 1
          interval: 5s
          retries: 3
          start_period: 5s
          timeout: 5s
        environment:
          RUN_ENV: development

      hyperswitch-producer:
        image: rust:bullseye
        command: cargo run --bin scheduler -- -f ./config/docker_compose.toml
        working_dir: /app
        networks:
          - router_net
        profiles:
          - scheduler
        volumes:
          - ./:/app
          - cargo_cache:/cargo_cache
          - scheduler_build_cache:/cargo_build_cache
        environment:
          - CARGO_HOME=/cargo_cache
          - CARGO_TARGET_DIR=/cargo_build_cache
          - SCHEDULER_FLOW=producer
        depends_on:
          hyperswitch-consumer:
            condition: service_healthy
        labels:
          logs: "promtail"

      hyperswitch-consumer:
        image: rust:bullseye
        command: cargo run --bin scheduler -- -f ./config/docker_compose.toml
        working_dir: /app
        networks:
          - router_net
        profiles:
          - scheduler
        volumes:
          - ./:/app
          - cargo_cache:/cargo_cache
          - scheduler_build_cache:/cargo_build_cache
        environment:
          - CARGO_HOME=/cargo_cache
          - CARGO_TARGET_DIR=/cargo_build_cache
          - SCHEDULER_FLOW=consumer
        depends_on:
          hyperswitch-server:
            condition: service_started
        labels:
          logs: "promtail"
        healthcheck:
          test: (ps -e | grep scheduler) || exit 1
          interval: 120s
          retries: 4
          start_period: 30s
          timeout: 10s

      hyperswitch-drainer:
        image: rust:bullseye
        command: cargo run --bin drainer -- -f ./config/docker_compose.toml
        working_dir: /app
        deploy:
          replicas: ${DRAINER_INSTANCE_COUNT:-1}
        networks:
          - router_net
        profiles:
          - full_kv
        volumes:
          - ./:/app
          - cargo_cache:/cargo_cache
          - drainer_build_cache:/cargo_build_cache
        environment:
          - CARGO_HOME=/cargo_cache
          - CARGO_TARGET_DIR=/cargo_build_cache
        restart: unless-stopped
        depends_on:
          hyperswitch-server:
            condition: service_started
        labels:
          logs: "promtail"

      ### Clustered Redis setup
      redis-cluster:
        image: redis:7
        deploy:
          replicas: ${REDIS_CLUSTER_COUNT:-1}
        command: redis-server /usr/local/etc/redis/redis.conf
        profiles:
          - clustered_redis
        volumes:
          - ./config/redis.conf:/usr/local/etc/redis/redis.conf
        networks:
          - router_net
        ports:
          - "6379"
          - "16379"

      redis-init:
        image: redis:7
        profiles:
          - clustered_redis
        depends_on:
          - redis-cluster
        networks:
          - router_net
        command: "bash -c 'export COUNT=${REDIS_CLUSTER_COUNT:-1}

          \ if [ $$COUNT -lt 1 ]

          \ then

          \ echo \"Minimum 1 nodes are needed for redis cluster\"

          \ exit 1

          \ fi

          \ HOSTS=\"\"

          \ for ((c=1; c<=$$COUNT;c++))

          \ do

          \ NODE=$COMPOSE_PROJECT_NAME-redis-cluster-$$c:6379

          \ echo $$NODE

          \ HOSTS=\"$$HOSTS $$NODE\"

          \ done

          \ echo Creating a cluster with $$HOSTS

          \ redis-cli --cluster create $$HOSTS --cluster-yes

          \ '"

      ### Monitoring
      grafana:
        image: grafana/grafana:latest
        ports:
          - "3000:3000"
        networks:
          - router_net
        profiles:
          - monitoring
        restart: unless-stopped
        environment:
          - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
          - GF_AUTH_ANONYMOUS_ENABLED=true
          - GF_AUTH_BASIC_ENABLED=false
        volumes:
          - ./config/grafana.ini:/etc/grafana/grafana.ini
          - ./config/grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yml

      promtail:
        image: grafana/promtail:latest
        volumes:
          - ./logs:/var/log/router
          - ./config:/etc/promtail
          - /var/run/docker.sock:/var/run/docker.sock
        command: -config.file=/etc/promtail/promtail.yaml
        profiles:
          - monitoring
        networks:
          - router_net

      loki:
        image: grafana/loki:latest
        ports:
          - "3100"
        command: -config.file=/etc/loki/loki.yaml
        networks:
          - router_net
        profiles:
          - monitoring
        volumes:
          - ./config:/etc/loki

      otel-collector:
        image: otel/opentelemetry-collector-contrib:latest
        command: --config=/etc/otel-collector.yaml
        networks:
          - router_net
        profiles:
          - monitoring
        volumes:
          - ./config/otel-collector.yaml:/etc/otel-collector.yaml
        ports:
          - "4317"
          - "8888"
          - "8889"

      prometheus:
        image: prom/prometheus:latest
        networks:
          - router_net
        profiles:
          - monitoring
        volumes:
          - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml
        ports:
          - "9090"
        restart: unless-stopped

      tempo:
        image: grafana/tempo:latest
        command: -config.file=/etc/tempo.yaml
        volumes:
          - ./config/tempo.yaml:/etc/tempo.yaml
        networks:
          - router_net
        profiles:
          - monitoring
        ports:
          - "3200" # tempo
          - "4317" # otlp grpc
        restart: unless-stopped

      redis-insight:
        image: redislabs/redisinsight:latest
        networks:
          - router_net
        profiles:
          - full_kv
        ports:
          - "8001:8001"
        volumes:
          - redisinsight_store:/db

      # hyperswitch-control-center:
      #   image: almbolonzi/hyperswitch-cc:latest
      #   pull_policy: always
      #   ports:
      #     - "9000:9000"
      #   environment:
      #     - configPath=/tmp/dashboard-config.toml
      #   volumes:
      #     - ./config/dashboard.toml:/tmp/dashboard-config.toml
      #   depends_on:
      #     hyperswitch-server:
      #       condition: service_healthy
      #     hyperswitch-web-sdk:
      #       condition: service_started
      #   labels:
      #     logs: "promtail"

      # hyperswitch-web-sdk:
      #   build:
      #     dockerfile_inline: |
      #       FROM node:lts
      #       RUN git clone -b kemetx https://github.com/Alkebulan-Tech/hyperswitch-web.git --depth 1
      #       WORKDIR hyperswitch-web
      #       RUN npm i --force
      #   command: bash -c 'npm run re:build && npm start'
      #   ports:
      #     - "9050:9050"
      #   environment:
      #     sdkEnv: local
      #     envSdkUrl: http://localhost:9050
      #     envBackendUrl: http://localhost:8081
      #     envLoggingUrl: http://localhost:8207
  docker-compose.yml: |
    volumes:
      pg_data:
      redisinsight_store:
      ckh_data:

    networks:
      router_net:

    services:
      ### Dependencies
      pg:
        image: postgres:latest
        ports:
          - "5432:5432"
        networks:
          - router_net
        volumes:
          - pg_data:/VAR/LIB/POSTGRESQL/DATA
        environment:
          - POSTGRES_USER=db_user
          - POSTGRES_PASSWORD=db_pass
          - POSTGRES_DB=hyperswitch_db
        healthcheck:
          test: ["CMD-SHELL", "pg_isready"]
          interval: 5s
          retries: 3
          start_period: 5s
          timeout: 5s

      redis-standalone:
        image: redis:7
        networks:
          - router_net
        ports:
          - "6379:6379"
        healthcheck:
          test: ["CMD-SHELL", "redis-cli ping | grep '^PONG$$'"]
          interval: 5s
          retries: 3
          start_period: 5s
          timeout: 5s

      migration_runner:
        image: rust:latest
        command: "bash -c 'cargo install diesel_cli --no-default-features --features postgres && cargo install just && just migrate'"
        working_dir: /app
        networks:
          - router_net
        volumes:
          - ./:/app
        environment:
          # format -> postgresql://DB_USER:DB_PASSWORD@HOST:PORT/DATABASE_NAME
          - DATABASE_URL=postgresql://db_user:db_pass@pg:5432/hyperswitch_db

      ### Application services
      hyperswitch-server:
        image: juspaydotin/hyperswitch-router:standalone
        pull_policy: always
        command: /local/bin/router -f /local/config/docker_compose.toml
        ports:
          - "8081:8080"
        networks:
          - router_net
        volumes:
          - ./config:/local/config
          - ./files:/local/bin/files
        depends_on:
          pg:
            condition: service_healthy
          redis-standalone:
            condition: service_healthy
        labels:
          logs: "promtail"
        healthcheck:
          test: curl --fail http://localhost:8081/health || exit 1
          interval: 5s
          retries: 3
          start_period: 5s
          timeout: 5s

      hyperswitch-producer:
        image: juspaydotin/hyperswitch-producer:standalone
        pull_policy: always
        command: /local/bin/scheduler -f /local/config/docker_compose.toml
        networks:
          - router_net
        profiles:
          - scheduler
        volumes:
          - ./config:/local/config
        environment:
          - SCHEDULER_FLOW=producer
        depends_on:
          hyperswitch-consumer:
            condition: service_healthy
        labels:
          logs: "promtail"

      hyperswitch-consumer:
        image: juspaydotin/hyperswitch-consumer:standalone
        pull_policy: always
        command: /local/bin/scheduler -f /local/config/docker_compose.toml
        networks:
          - router_net
        profiles:
          - scheduler
        volumes:
          - ./config:/local/config
        environment:
          - SCHEDULER_FLOW=consumer
        depends_on:
          hyperswitch-server:
            condition: service_healthy
        labels:
          logs: "promtail"
        healthcheck:
          test: (ps -e | grep scheduler) || exit 1
          interval: 10s
          retries: 3
          start_period: 5s
          timeout: 10s

      hyperswitch-drainer:
        image: juspaydotin/hyperswitch-drainer:standalone
        pull_policy: always
        command: /local/bin/drainer -f /local/config/docker_compose.toml
        deploy:
          replicas: 1 #$${DRAINER_INSTANCE_COUNT:1}
        networks:
          - router_net
        profiles:
          - full_kv
        volumes:
          - ./config:/local/config
        restart: unless-stopped
        depends_on:
          hyperswitch-server:
            condition: service_healthy
        labels:
          logs: "promtail"

      ### Web Client
      hyperswitch-web:
        ports:
          - "9050:9050"
          - "9060:9060"
          - "5252:5252"
        networks:
          - router_net
        build:
          context: ./docker
          dockerfile: web.Dockerfile
        depends_on:
          hyperswitch-server:
            condition: service_healthy
        environment:
          - HYPERSWITCH_PUBLISHABLE_KEY=placeholder_publishable_key
          - HYPERSWITCH_SECRET_KEY=placeholder_api_key
          - HYPERSWITCH_SERVER_URL=http://localhost:8081
          - HYPERSWITCH_SERVER_URL_FOR_DEMO_APP=http://hyperswitch-server:8081
          - HYPERSWITCH_CLIENT_URL=http://localhost:9050
          - SELF_SERVER_URL=http://localhost:5252
          - SDK_ENV=local
          - ENV_LOGGING_URL=http://localhost:3103
        labels:
          logs: "promtail"

      ### Control Center
      hyperswitch-control-center:
        image: almbolonzi/hyperswitch-cc:latest
        pull_policy: always
        ports:
          - "9000:9000"
        environment:
          - configPath=/tmp/dashboard-config.toml
        volumes:
          - ./config/dashboard.toml:/tmp/dashboard-config.toml
        depends_on:
          hyperswitch-server:
            condition: service_healthy
          hyperswitch-web:
            condition: service_started
        labels:
          logs: "promtail"

      ### Clustered Redis setup
      redis-cluster:
        image: redis:7
        deploy:
          replicas: 3 #$${REDIS_CLUSTER_COUNT:-3}
        command: redis-server /usr/local/etc/redis/redis.conf
        profiles:
          - clustered_redis
        volumes:
          - ./config/redis.conf:/usr/local/etc/redis/redis.conf
        networks:
          - router_net
        ports:
          - "6379"
          - "16379"

      redis-init:
        image: redis:7
        profiles:
          - clustered_redis
        depends_on:
          - redis-cluster
        networks:
          - router_net
        command: |-
          bash -c 'export COUNT=${REDIS_CLUSTER_COUNT:-1}
          if [ $$COUNT -lt 1 ]
          then
          echo \"Minimum 1 nodes are needed for redis cluster\"
          exit 1
          fi
          HOSTS=\"\"
          for ((c=1; c<=$$COUNT;c++))
          do
          NODE=$COMPOSE_PROJECT_NAME-redis-cluster-$$c:6379
          echo $$NODE
          HOSTS=\"$$HOSTS $$NODE\"
          done
          echo Creating a cluster with $$HOSTS
          redis-cli --cluster create $$HOSTS --cluster-yes
          '
      ### Monitoring
      grafana:
        image: grafana/grafana:latest
        ports:
          - "3000:3000"
        networks:
          - router_net
        profiles:
          - monitoring
        restart: unless-stopped
        environment:
          - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
          - GF_AUTH_ANONYMOUS_ENABLED=true
          - GF_AUTH_BASIC_ENABLED=false
        volumes:
          - ./config/grafana.ini:/etc/grafana/grafana.ini
          - ./config/grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yml

      loki:
        image: grafana/loki:latest
        ports:
          - "3100"
        command: -config.file=/etc/loki/loki.yaml
        networks:
          - router_net
        profiles:
          - monitoring
        volumes:
          - ./config:/etc/loki

      otel-collector:
        image: otel/opentelemetry-collector-contrib:latest
        command: --config=/etc/otel-collector.yaml
        networks:
          - router_net
        profiles:
          - monitoring
        volumes:
          - ./config/otel-collector.yaml:/etc/otel-collector.yaml
        ports:
          - "4317"
          - "8888"
          - "8889"

      prometheus:
        image: prom/prometheus:latest
        networks:
          - router_net
        profiles:
          - monitoring
        volumes:
          - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml
        ports:
          - "9090"
        restart: unless-stopped

      tempo:
        image: grafana/tempo:latest
        command: -config.file=/etc/tempo.yaml
        volumes:
          - ./config/tempo.yaml:/etc/tempo.yaml
        networks:
          - router_net
        profiles:
          - monitoring
        ports:
          - "3200" # tempo
          - "4317" # otlp grpc
        restart: unless-stopped

      redis-insight:
        image: redislabs/redisinsight:latest
        networks:
          - router_net
        profiles:
          - monitoring
        ports:
          - "8001:8001"
        volumes:
          - redisinsight_store:/db

      kafka0:
        image: confluentinc/cp-kafka:7.0.5
        hostname: kafka0
        networks:
          - router_net
        ports:
          - 9092:9092
          - 9093
          - 9997
          - 29092
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka0:29092,PLAINTEXT_HOST://localhost:9092
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
          KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
          KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
          KAFKA_PROCESS_ROLES: "broker,controller"
          KAFKA_NODE_ID: 1
          KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka0:29093"
          KAFKA_LISTENERS: "PLAINTEXT://kafka0:29092,CONTROLLER://kafka0:29093,PLAINTEXT_HOST://0.0.0.0:9092"
          KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
          KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
          JMX_PORT: 9997
          KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka0 -Dcom.sun.management.jmxremote.rmi.port=9997
        profiles:
          - olap
        volumes:
          - ./monitoring/kafka-script.sh:/tmp/update_run.sh
        command: 'bash -c ''if [ ! -f /tmp/update_run.sh ]; then echo "ERROR: Did you forget the update_run.sh file that came with this docker-compose.yml file?" && exit 1 ; else /tmp/update_run.sh && /etc/confluent/docker/run ; fi'''

      # Kafka UI for debugging kafka queues
      kafka-ui:
        image: provectuslabs/kafka-ui:latest
        ports:
          - 8090:8080
        networks:
          - router_net
        depends_on:
          - kafka0
        profiles:
          - olap
        environment:
          KAFKA_CLUSTERS_0_NAME: local
          KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka0:29092
          KAFKA_CLUSTERS_0_JMXPORT: 9997

      clickhouse-server:
        image: clickhouse/clickhouse-server:24.3
        networks:
          - router_net
        ports:
          - "9000"
          - "8123:8123"
        volumes:
          - ./crates/analytics/docs/clickhouse/scripts:/docker-entrypoint-initdb.d
        environment:
          - TZ=Asia/Kolkata
        profiles:
          - olap
        ulimits:
          nofile:
            soft: 262144
            hard: 262144

      opensearch:
        image: opensearchproject/opensearch:2
        container_name: opensearch
        hostname: opensearch
        environment:
          - "discovery.type=single-node"
          - OPENSEARCH_INITIAL_ADMIN_PASSWORD=0penS3arc#
          - LOG_LEVEL=DEBUG
        profiles:
          - olap
        ports:
          - "9200:9200"
        networks:
          - router_net

      opensearch-dashboards:
        image: opensearchproject/opensearch-dashboards:2
        ports:
          - 5601:5601
        profiles:
          - olap
        environment:
          OPENSEARCH_HOSTS: '["https://opensearch:9200"]'
        networks:
          - router_net

      vector:
        image: timberio/vector:latest-debian
        ports:
          - "8686"
          - "9598"
          - "3103:3103"
        profiles:
          - olap
        environment:
          KAFKA_HOST: "kafka0:29092"
        networks:
          - router_net
        volumes:
          - ./config/vector.yaml:/etc/vector/vector.yaml
          - /var/run/docker.sock:/var/run/docker.sock
  flake.lock: |
    {
      "nodes": {
        "cargo2nix": {
          "inputs": {
            "flake-compat": "flake-compat",
            "flake-utils": "flake-utils",
            "nixpkgs": "nixpkgs",
            "rust-overlay": "rust-overlay"
          },
          "locked": {
            "lastModified": 1655189312,
            "narHash": "sha256-gpJ57OgIebUpO+7F00VltxSEy6dz2x6HeJ5BcRM8rDA=",
            "owner": "cargo2nix",
            "repo": "cargo2nix",
            "rev": "c149357cc3d17f2849c73eb7a09d07a307cdcfe8",
            "type": "github"
          },
          "original": {
            "owner": "cargo2nix",
            "ref": "release-0.11.0",
            "repo": "cargo2nix",
            "type": "github"
          }
        },
        "flake-compat": {
          "flake": false,
          "locked": {
            "lastModified": 1650374568,
            "narHash": "sha256-Z+s0J8/r907g149rllvwhb4pKi8Wam5ij0st8PwAh+E=",
            "owner": "edolstra",
            "repo": "flake-compat",
            "rev": "b4a34015c698c7793d592d66adbab377907a2be8",
            "type": "github"
          },
          "original": {
            "owner": "edolstra",
            "repo": "flake-compat",
            "type": "github"
          }
        },
        "flake-parts": {
          "inputs": {
            "nixpkgs-lib": "nixpkgs-lib"
          },
          "locked": {
            "lastModified": 1675933616,
            "narHash": "sha256-/rczJkJHtx16IFxMmAWu5nNYcSXNg1YYXTHoGjLrLUA=",
            "owner": "hercules-ci",
            "repo": "flake-parts",
            "rev": "47478a4a003e745402acf63be7f9a092d51b83d7",
            "type": "github"
          },
          "original": {
            "owner": "hercules-ci",
            "repo": "flake-parts",
            "type": "github"
          }
        },
        "flake-utils": {
          "locked": {
            "lastModified": 1653893745,
            "narHash": "sha256-0jntwV3Z8//YwuOjzhV2sgJJPt+HY6KhU7VZUL0fKZQ=",
            "owner": "numtide",
            "repo": "flake-utils",
            "rev": "1ed9fb1935d260de5fe1c2f7ee0ebaae17ed2fa1",
            "type": "github"
          },
          "original": {
            "owner": "numtide",
            "repo": "flake-utils",
            "type": "github"
          }
        },
        "flake-utils_2": {
          "locked": {
            "lastModified": 1659877975,
            "narHash": "sha256-zllb8aq3YO3h8B/U0/J1WBgAL8EX5yWf5pMj3G0NAmc=",
            "owner": "numtide",
            "repo": "flake-utils",
            "rev": "c0e246b9b83f637f4681389ecabcb2681b4f3af0",
            "type": "github"
          },
          "original": {
            "owner": "numtide",
            "repo": "flake-utils",
            "type": "github"
          }
        },
        "nixpkgs": {
          "locked": {
            "lastModified": 1654275867,
            "narHash": "sha256-pt14ZE4jVPGvfB2NynGsl34pgXfOqum5YJNpDK4+b9E=",
            "owner": "nixos",
            "repo": "nixpkgs",
            "rev": "7a20c208aacf4964c19186dcad51f89165dc7ed0",
            "type": "github"
          },
          "original": {
            "owner": "nixos",
            "ref": "release-22.05",
            "repo": "nixpkgs",
            "type": "github"
          }
        },
        "nixpkgs-lib": {
          "locked": {
            "dir": "lib",
            "lastModified": 1675183161,
            "narHash": "sha256-Zq8sNgAxDckpn7tJo7V1afRSk2eoVbu3OjI1QklGLNg=",
            "owner": "NixOS",
            "repo": "nixpkgs",
            "rev": "e1e1b192c1a5aab2960bf0a0bd53a2e8124fa18e",
            "type": "github"
          },
          "original": {
            "dir": "lib",
            "owner": "NixOS",
            "ref": "nixos-unstable",
            "repo": "nixpkgs",
            "type": "github"
          }
        },
        "nixpkgs_2": {
          "locked": {
            "lastModified": 1676569297,
            "narHash": "sha256-2n4C4H3/U+3YbDrQB6xIw7AaLdFISCCFwOkcETAigqU=",
            "owner": "NixOS",
            "repo": "nixpkgs",
            "rev": "ac1f5b72a9e95873d1de0233fddcb56f99884b37",
            "type": "github"
          },
          "original": {
            "owner": "NixOS",
            "ref": "nixos-unstable",
            "repo": "nixpkgs",
            "type": "github"
          }
        },
        "nixpkgs_3": {
          "locked": {
            "lastModified": 1665296151,
            "narHash": "sha256-uOB0oxqxN9K7XGF1hcnY+PQnlQJ+3bP2vCn/+Ru/bbc=",
            "owner": "NixOS",
            "repo": "nixpkgs",
            "rev": "14ccaaedd95a488dd7ae142757884d8e125b3363",
            "type": "github"
          },
          "original": {
            "owner": "NixOS",
            "ref": "nixpkgs-unstable",
            "repo": "nixpkgs",
            "type": "github"
          }
        },
        "root": {
          "inputs": {
            "cargo2nix": "cargo2nix",
            "flake-parts": "flake-parts",
            "nixpkgs": "nixpkgs_2",
            "rust-overlay": "rust-overlay_2"
          }
        },
        "rust-overlay": {
          "inputs": {
            "flake-utils": [
              "cargo2nix",
              "flake-utils"
            ],
            "nixpkgs": [
              "cargo2nix",
              "nixpkgs"
            ]
          },
          "locked": {
            "lastModified": 1653878966,
            "narHash": "sha256-T51Gck/vrJZi1m+uTbhEFTRgZmE59sydVONadADv358=",
            "owner": "oxalica",
            "repo": "rust-overlay",
            "rev": "8526d618af012a923ca116be9603e818b502a8db",
            "type": "github"
          },
          "original": {
            "owner": "oxalica",
            "repo": "rust-overlay",
            "type": "github"
          }
        },
        "rust-overlay_2": {
          "inputs": {
            "flake-utils": "flake-utils_2",
            "nixpkgs": "nixpkgs_3"
          },
          "locked": {
            "lastModified": 1676601131,
            "narHash": "sha256-iwCg6NimjD4euquhicmSo0wuyP56xUVJUMe0yqUyQms=",
            "owner": "oxalica",
            "repo": "rust-overlay",
            "rev": "d0dc81ffe8ea09dbf3c07db62a1a057f5319e3ce",
            "type": "github"
          },
          "original": {
            "owner": "oxalica",
            "repo": "rust-overlay",
            "type": "github"
          }
        }
      },
      "root": "root",
      "version": 7
    }
  flake.nix: |
    {
      description = "hyperswitch";

      inputs = {
        cargo2nix.url = "github:cargo2nix/cargo2nix/release-0.11.0";
        rust-overlay.url = "github:oxalica/rust-overlay";
        flake-parts.url = "github:hercules-ci/flake-parts";
        nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";
      };

      outputs = inputs@{ self, nixpkgs, flake-parts, ... }:
        flake-parts.lib.mkFlake { inherit inputs; } {
          systems = nixpkgs.lib.systems.flakeExposed;
          perSystem = { self', pkgs, system, ... }:
            let
              rustVersion = "1.65.0";
              rustPkgs = pkgs.rustBuilder.makePackageSet {
                inherit rustVersion;
                packageFun = import ./Cargo.nix;
              };
              frameworks = pkgs.darwin.apple_sdk.frameworks;
            in
            {
              _module.args.pkgs = import nixpkgs {
                inherit system;
                overlays = [ inputs.cargo2nix.overlays.default (import inputs.rust-overlay) ];
              };
              packages = rec {
                router = (rustPkgs.workspace.router { }).bin;
                default = router;
              };
              apps = {
                router-scheduler = {
                  type = "app";
                  program = "${self'.packages.router}/bin/scheduler";
                };
              };
              devShells.default = pkgs.mkShell {
                buildInputs = with pkgs; [
                  openssl
                  pkg-config
                  exa
                  fd
                  rust-bin.stable.${rustVersion}.default
                ] ++ lib.optionals stdenv.isDarwin [ frameworks.CoreServices frameworks.Foundation ]; # arch might have issue finding these libs.

              };
            };
        };
    }
  generate_code_coverage.sh: |
    #! /bin/bash

    COV_PROGRAM="grcov"
    INSTALL_COV_PROGRAM="cargo install grcov"
    SERVER_PORT=8000
    SERVER="python3"

    command -v $COV_PROGRAM >/dev/null 2>&1 || { echo -e >&2 "Require \"$COV_PROGRAM\" but it's not installed.\nInstall using \"$INSTALL_COV_PROGRAM\" and restart.\nAborting."; exit 1; }
    command -v $SERVER >/dev/null 2>&1 || { echo -e >&2 "Require \"$SERVER\" but it's not installed.\nAborting."; exit 1; }

    export RUSTFLAGS="-Cinstrument-coverage"
    export LLVM_PROFILE_FILE="$$-%p-%m.profraw"

    echo "Running 'cargo test' and generating grcov reports.. This may take some time.."

    cargo test && grcov . -s . -t html --branch --binary-path ./target/debug &&  rm -f $$*profraw &&  echo "starting server on localhost:$SERVER_PORT" && cd html && python3 -m http.server $SERVER_PORT
  justfile: |
    # List available recipes
    list:
        @just --list --justfile {{ source_file() }}

    fmt_flags := '--all'

    # Run formatter
    fmt *FLAGS:
        cargo +nightly fmt {{ fmt_flags }} {{ FLAGS }}

    check_flags := '--all-targets'

    alias c := check

    # Check compilation of Rust code and catch common mistakes
    # We cannot run --all-features because v1 and v2 are mutually exclusive features
    # Create a list of features by excluding certain features
    clippy *FLAGS:
        #! /usr/bin/env bash
        set -euo pipefail

        FEATURES="$(cargo metadata --all-features --format-version 1 | \
            jq -r '
                [ ( .workspace_members | sort ) as $package_ids # Store workspace crate package IDs in `package_ids` array
                | .packages[] | select( IN(.id; $package_ids[]) ) | .features | keys[] ] | unique # Select all unique features from all workspace crates
                | del( .[] | select( any( . ; test("(([a-z_]+)_)?v2") ) ) ) # Exclude some features from features list
                | join(",") # Construct a comma-separated string of features for passing to `cargo`
        ')"

        set -x
        cargo clippy {{ check_flags }} --features "${FEATURES}"  {{ FLAGS }}
        set +x

    clippy_v2 *FLAGS:
        #! /usr/bin/env bash
        set -euo pipefail

        FEATURES="$(cargo metadata --all-features --format-version 1 | \
            jq -r '
                [ ( .workspace_members | sort ) as $package_ids # Store workspace crate package IDs in `package_ids` array
                | .packages[] | select( IN(.id; $package_ids[]) ) | .features | keys[] ] | unique # Select all unique features from all workspace crates
                | del( .[] | select( any( . ; . == ("v1") ) ) ) # Exclude some features from features list
                | join(",") # Construct a comma-separated string of features for passing to `cargo`
        ')"

        set -x
        cargo clippy {{ check_flags }} --features "${FEATURES}"  {{ FLAGS }}
        set +x

    check_v2 *FLAGS:
        #! /usr/bin/env bash
        set -euo pipefail

        FEATURES="$(cargo metadata --all-features --format-version 1 | \
            jq -r '
                [ ( .workspace_members | sort ) as $package_ids # Store workspace crate package IDs in `package_ids` array
                | .packages[] | select( IN(.id; $package_ids[]) ) | .features | keys[] ] | unique # Select all unique features from all workspace crates
                | del( .[] | select( any( . ; . == ("v1") ) ) ) # Exclude some features from features list
                | join(",") # Construct a comma-separated string of features for passing to `cargo`
        ')"

        set -x
        cargo check {{ check_flags }} --features "${FEATURES}"  {{ FLAGS }}
        set +x

    run_v2:
        #! /usr/bin/env bash
        set -euo pipefail

        FEATURES="$(cargo metadata --all-features --format-version 1 --no-deps | \
            jq -r '
                [ .packages[] | select(.name == "router") | .features | keys[] # Obtain features of `router` package
                | select( any( . ; test("(([a-z_]+)_)?v2") ) ) ] # Select v2 features
                | join(",") # Construct a comma-separated string of features for passing to `cargo`
        ')"

        set -x
        cargo run --package router --features "${FEATURES}"
        set +x

    check *FLAGS:
        #! /usr/bin/env bash
        set -euo pipefail

        FEATURES="$(cargo metadata --all-features --format-version 1 | \
            jq -r '
                [ ( .workspace_members | sort ) as $package_ids # Store workspace crate package IDs in `package_ids` array
                | .packages[] | select( IN(.id; $package_ids[]) ) | .features | keys[] ] | unique # Select all unique features from all workspace crates
                | del( .[] | select( any( . ; test("(([a-z_]+)_)?v2") ) ) ) # Exclude some features from features list
                | join(",") # Construct a comma-separated string of features for passing to `cargo`
        ')"

        set -x
        cargo check {{ check_flags }} --features "${FEATURES}"  {{ FLAGS }}
        set +x

    alias cl := clippy

    # Build binaries
    build *FLAGS:
        cargo build {{ FLAGS }}

    alias b := build

    # Build release (optimized) binaries
    build-release *FLAGS:
        cargo build --release --features release {{ FLAGS }}

    alias br := build-release

    # Run server
    run *FLAGS:
        cargo run {{ FLAGS }}

    alias r := run

    doc_flags := '--all-features --all-targets --exclude-features "v2 merchant_account_v2 payment_v2"'

    # Generate documentation
    doc *FLAGS:
        cargo doc {{ doc_flags }} {{ FLAGS }}

    alias d := doc

    # Build the `euclid_wasm` crate
    euclid-wasm features='dummy_connector':
        wasm-pack build \
            --target web \
            --out-dir {{ source_directory() }}/wasm \
            --out-name euclid \
            {{ source_directory() }}/crates/euclid_wasm \
            --features '{{ features }}'

    # Run pre-commit checks
    precommit: fmt clippy

    # Check compilation of v2 feature on base dependencies
    hack_v2:
        scripts/ci-checks-v2.sh

    # Use the env variables if present, or fallback to default values

    db_user := env_var_or_default('DB_USER', 'db_user')
    db_password := env_var_or_default('DB_PASSWORD', 'db_pass')
    db_host := env_var_or_default('DB_HOST', 'localhost')
    db_port := env_var_or_default('DB_PORT', '5432')
    db_name := env_var_or_default('DB_NAME', 'hyperswitch_db')
    default_db_url := 'postgresql://' + db_user + ':' + db_password + '@' + db_host + ':' + db_port / db_name
    database_url := env_var_or_default('DATABASE_URL', default_db_url)
    default_migration_params := ''
    v2_migration_dir := source_directory() / 'v2_migrations'
    v1_migration_dir := source_directory() / 'migrations'
    resultant_dir := source_directory() / 'final-migrations'

    # Copy v1 and v2 migrations to a single directory
    [private]
    copy_migrations:
        @mkdir -p {{ resultant_dir }}
        @cp -r {{ v1_migration_dir }}/. {{ v2_migration_dir }}/. {{ resultant_dir }}/
        echo "Created {{ resultant_dir }}"

    # Delete the newly created directory
    [private]
    delete_dir_if_exists dir=resultant_dir:
        @rm -rf {{ dir }}

    v1_config_file_dir := source_directory() / 'diesel.toml'
    default_operation := 'run'

    [private]
    run_migration operation=default_operation migration_dir=v1_migration_dir config_file_dir=v1_config_file_dir url=database_url *other_params=default_migration_params:
        diesel migration \
            --database-url '{{ url }}' \
            {{ operation }} \
            --migration-dir '{{ migration_dir }}' \
            --config-file '{{ config_file_dir }}' \
            {{ other_params }}

    # Run database migrations for v1
    migrate operation=default_operation *args='': (run_migration operation v1_migration_dir v1_config_file_dir database_url args)

    v2_config_file_dir := source_directory() / 'diesel_v2.toml'

    # Run database migrations for v2
    migrate_v2 operation=default_operation *args='':
        #! /usr/bin/env bash
        set -euo pipefail

        EXIT_CODE=0
        just copy_migrations
        just run_migration {{ operation }} {{ resultant_dir }} {{ v2_config_file_dir }} {{ database_url }} {{ args }} || EXIT_CODE=$?
        just delete_dir_if_exists
        exit $EXIT_CODE

    # Drop database if exists and then create a new 'hyperswitch_db' Database
    resurrect database_name='hyperswitch_db':
        psql -U postgres -c 'DROP DATABASE IF EXISTS  {{ database_name }}';
        psql -U postgres -c 'CREATE DATABASE {{ database_name }}';

    ci_hack:
        scripts/ci-checks.sh
  package-lock.json: |
    {
      "name": "hyperswitch",
      "version": "0.0.0",
      "lockfileVersion": 3,
      "requires": true,
      "packages": {
        "": {
          "name": "hyperswitch",
          "version": "0.0.0",
          "devDependencies": {
            "newman": "git+ssh://git@github.com:knutties/newman.git#7106e194c15d49d066fa09d9a2f18b2238f3dba8"
          }
        },
        "node_modules/@colors/colors": {
          "version": "1.5.0",
          "resolved": "https://registry.npmjs.org/@colors/colors/-/colors-1.5.0.tgz",
          "integrity": "sha512-ooWCrlZP11i8GImSjTHYHLkvFDP48nS4+204nGb1RiX/WXYHmJA2III9/e2DWVabCESdW7hBAEzHRqUn9OUVvQ==",
          "dev": true,
          "optional": true,
          "engines": {
            "node": ">=0.1.90"
          }
        },
        "node_modules/@faker-js/faker": {
          "version": "5.5.3",
          "resolved": "https://registry.npmjs.org/@faker-js/faker/-/faker-5.5.3.tgz",
          "integrity": "sha512-R11tGE6yIFwqpaIqcfkcg7AICXzFg14+5h5v0TfF/9+RMDL6jhzCy/pxHVOfbALGdtVYdt6JdR21tuxEgl34dw==",
          "dev": true
        },
        "node_modules/@postman/form-data": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/@postman/form-data/-/form-data-3.1.1.tgz",
          "integrity": "sha512-vjh8Q2a8S6UCm/KKs31XFJqEEgmbjBmpPNVV2eVav6905wyFAwaUOBGA1NPBI4ERH9MMZc6w0umFgM6WbEPMdg==",
          "dev": true,
          "dependencies": {
            "asynckit": "^0.4.0",
            "combined-stream": "^1.0.8",
            "mime-types": "^2.1.12"
          },
          "engines": {
            "node": ">= 6"
          }
        },
        "node_modules/@postman/tough-cookie": {
          "version": "4.1.3-postman.1",
          "resolved": "https://registry.npmjs.org/@postman/tough-cookie/-/tough-cookie-4.1.3-postman.1.tgz",
          "integrity": "sha512-txpgUqZOnWYnUHZpHjkfb0IwVH4qJmyq77pPnJLlfhMtdCLMFTEeQHlzQiK906aaNCe4NEB5fGJHo9uzGbFMeA==",
          "dev": true,
          "dependencies": {
            "psl": "^1.1.33",
            "punycode": "^2.1.1",
            "universalify": "^0.2.0",
            "url-parse": "^1.5.3"
          },
          "engines": {
            "node": ">=6"
          }
        },
        "node_modules/@postman/tunnel-agent": {
          "version": "0.6.3",
          "resolved": "https://registry.npmjs.org/@postman/tunnel-agent/-/tunnel-agent-0.6.3.tgz",
          "integrity": "sha512-k57fzmAZ2PJGxfOA4SGR05ejorHbVAa/84Hxh/2nAztjNXc4ZjOm9NUIk6/Z6LCrBvJZqjRZbN8e/nROVUPVdg==",
          "dev": true,
          "dependencies": {
            "safe-buffer": "^5.0.1"
          },
          "engines": {
            "node": "*"
          }
        },
        "node_modules/ajv": {
          "version": "6.12.6",
          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
          "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
          "dev": true,
          "dependencies": {
            "fast-deep-equal": "^3.1.1",
            "fast-json-stable-stringify": "^2.0.0",
            "json-schema-traverse": "^0.4.1",
            "uri-js": "^4.2.2"
          },
          "funding": {
            "type": "github",
            "url": "https://github.com/sponsors/epoberezkin"
          }
        },
        "node_modules/ansi-regex": {
          "version": "5.0.1",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
          "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
          "dev": true,
          "engines": {
            "node": ">=8"
          }
        },
        "node_modules/ansi-styles": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
          "dev": true,
          "dependencies": {
            "color-convert": "^1.9.0"
          },
          "engines": {
            "node": ">=4"
          }
        },
        "node_modules/array-back": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/array-back/-/array-back-3.1.0.tgz",
          "integrity": "sha512-TkuxA4UCOvxuDK6NZYXCalszEzj+TLszyASooky+i742l9TqsOdYCMJJupxRic61hwquNtppB3hgcuq9SVSH1Q==",
          "dev": true,
          "engines": {
            "node": ">=6"
          }
        },
        "node_modules/asn1": {
          "version": "0.2.6",
          "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.6.tgz",
          "integrity": "sha512-ix/FxPn0MDjeyJ7i/yoHGFt/EX6LyNbxSEhPPXODPL+KB0VPk86UYfL0lMdy+KCnv+fmvIzySwaK5COwqVbWTQ==",
          "dev": true,
          "dependencies": {
            "safer-buffer": "~2.1.0"
          }
        },
        "node_modules/assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha512-NfJ4UzBCcQGLDlQq7nHxH+tv3kyZ0hHQqF5BO6J7tNJeP5do1llPr8dZ8zHonfhAu0PHAdMkSo+8o0wxg9lZWw==",
          "dev": true,
          "engines": {
            "node": ">=0.8"
          }
        },
        "node_modules/async": {
          "version": "3.2.4",
          "resolved": "https://registry.npmjs.org/async/-/async-3.2.4.tgz",
          "integrity": "sha512-iAB+JbDEGXhyIUavoDl9WP/Jj106Kz9DEn1DPgYw5ruDn0e3Wgi3sKFm55sASdGBNOQB8F59d9qQ7deqrHA8wQ==",
          "dev": true
        },
        "node_modules/asynckit": {
          "version": "0.4.0",
          "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
          "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==",
          "dev": true
        },
        "node_modules/aws-sign2": {
          "version": "0.7.0",
          "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
          "integrity": "sha512-08kcGqnYf/YmjoRhfxyu+CLxBjUtHLXLXX/vUfx9l2LYzG3c1m61nrpyFUZI6zeS+Li/wWMMidD9KgrqtGq3mA==",
          "dev": true,
          "engines": {
            "node": "*"
          }
        },
        "node_modules/aws4": {
          "version": "1.12.0",
          "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.12.0.tgz",
          "integrity": "sha512-NmWvPnx0F1SfrQbYwOi7OeaNGokp9XhzNioJ/CSBs8Qa4vxug81mhJEAVZwxXuBmYB5KDRfMq/F3RR0BIU7sWg==",
          "dev": true
        },
        "node_modules/base64-js": {
          "version": "1.5.1",
          "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
          "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==",
          "dev": true,
          "funding": [
            {
              "type": "github",
              "url": "https://github.com/sponsors/feross"
            },
            {
              "type": "patreon",
              "url": "https://www.patreon.com/feross"
            },
            {
              "type": "consulting",
              "url": "https://feross.org/support"
            }
          ]
        },
        "node_modules/bcrypt-pbkdf": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
          "integrity": "sha512-qeFIXtP4MSoi6NLqO12WfqARWWuCKi2Rn/9hJLEmtB5yTNr9DqFWkJRCf2qShWzPeAMRnOgCrq0sg/KLv5ES9w==",
          "dev": true,
          "dependencies": {
            "tweetnacl": "^0.14.3"
          }
        },
        "node_modules/bluebird": {
          "version": "2.11.0",
          "resolved": "https://registry.npmjs.org/bluebird/-/bluebird-2.11.0.tgz",
          "integrity": "sha512-UfFSr22dmHPQqPP9XWHRhq+gWnHCYguQGkXQlbyPtW5qTnhFWA8/iXg765tH0cAjy7l/zPJ1aBTO0g5XgA7kvQ==",
          "dev": true
        },
        "node_modules/brotli": {
          "version": "1.3.3",
          "resolved": "https://registry.npmjs.org/brotli/-/brotli-1.3.3.tgz",
          "integrity": "sha512-oTKjJdShmDuGW94SyyaoQvAjf30dZaHnjJ8uAF+u2/vGJkJbJPJAT1gDiOJP5v1Zb6f9KEyW/1HpuaWIXtGHPg==",
          "dev": true,
          "dependencies": {
            "base64-js": "^1.1.2"
          }
        },
        "node_modules/caseless": {
          "version": "0.12.0",
          "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
          "integrity": "sha512-4tYFyifaFfGacoiObjJegolkwSU4xQNGbVgUiNYVUxbQ2x2lUsFvY4hVgVzGiIe6WLOPqycWXA40l+PWsxthUw==",
          "dev": true
        },
        "node_modules/chalk": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
          "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
          "dev": true,
          "dependencies": {
            "ansi-styles": "^3.2.1",
            "escape-string-regexp": "^1.0.5",
            "supports-color": "^5.3.0"
          },
          "engines": {
            "node": ">=4"
          }
        },
        "node_modules/chardet": {
          "version": "1.6.0",
          "resolved": "https://registry.npmjs.org/chardet/-/chardet-1.6.0.tgz",
          "integrity": "sha512-+QOTw3otC4+FxdjK9RopGpNOglADbr4WPFi0SonkO99JbpkTPbMxmdm4NenhF5Zs+4gPXLI1+y2uazws5TMe8w==",
          "dev": true
        },
        "node_modules/charset": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/charset/-/charset-1.0.1.tgz",
          "integrity": "sha512-6dVyOOYjpfFcL1Y4qChrAoQLRHvj2ziyhcm0QJlhOcAhykL/k1kTUPbeo+87MNRTRdk2OIIsIXbuF3x2wi5EXg==",
          "dev": true,
          "engines": {
            "node": ">=4.0.0"
          }
        },
        "node_modules/cli-progress": {
          "version": "3.12.0",
          "resolved": "https://registry.npmjs.org/cli-progress/-/cli-progress-3.12.0.tgz",
          "integrity": "sha512-tRkV3HJ1ASwm19THiiLIXLO7Im7wlTuKnvkYaTkyoAPefqjNg7W7DHKUlGRxy9vxDvbyCYQkQozvptuMkGCg8A==",
          "dev": true,
          "dependencies": {
            "string-width": "^4.2.3"
          },
          "engines": {
            "node": ">=4"
          }
        },
        "node_modules/cli-table3": {
          "version": "0.6.3",
          "resolved": "https://registry.npmjs.org/cli-table3/-/cli-table3-0.6.3.tgz",
          "integrity": "sha512-w5Jac5SykAeZJKntOxJCrm63Eg5/4dhMWIcuTbo9rpE+brgaSZo0RuNJZeOyMgsUdhDeojvgyQLmjI+K50ZGyg==",
          "dev": true,
          "dependencies": {
            "string-width": "^4.2.0"
          },
          "engines": {
            "node": "10.* || >= 12.*"
          },
          "optionalDependencies": {
            "@colors/colors": "1.5.0"
          }
        },
        "node_modules/color-convert": {
          "version": "1.9.3",
          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
          "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
          "dev": true,
          "dependencies": {
            "color-name": "1.1.3"
          }
        },
        "node_modules/color-name": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
          "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==",
          "dev": true
        },
        "node_modules/colors": {
          "version": "1.4.0",
          "resolved": "https://registry.npmjs.org/colors/-/colors-1.4.0.tgz",
          "integrity": "sha512-a+UqTh4kgZg/SlGvfbzDHpgRu7AAQOmmqRHJnxhRZICKFUT91brVhNNt58CMWU9PsBbv3PDCZUHbVxuDiH2mtA==",
          "dev": true,
          "engines": {
            "node": ">=0.1.90"
          }
        },
        "node_modules/combined-stream": {
          "version": "1.0.8",
          "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
          "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
          "dev": true,
          "dependencies": {
            "delayed-stream": "~1.0.0"
          },
          "engines": {
            "node": ">= 0.8"
          }
        },
        "node_modules/command-line-args": {
          "version": "5.2.1",
          "resolved": "https://registry.npmjs.org/command-line-args/-/command-line-args-5.2.1.tgz",
          "integrity": "sha512-H4UfQhZyakIjC74I9d34fGYDwk3XpSr17QhEd0Q3I9Xq1CETHo4Hcuo87WyWHpAF1aSLjLRf5lD9ZGX2qStUvg==",
          "dev": true,
          "dependencies": {
            "array-back": "^3.1.0",
            "find-replace": "^3.0.0",
            "lodash.camelcase": "^4.3.0",
            "typical": "^4.0.0"
          },
          "engines": {
            "node": ">=4.0.0"
          }
        },
        "node_modules/command-line-usage": {
          "version": "6.1.3",
          "resolved": "https://registry.npmjs.org/command-line-usage/-/command-line-usage-6.1.3.tgz",
          "integrity": "sha512-sH5ZSPr+7UStsloltmDh7Ce5fb8XPlHyoPzTpyyMuYCtervL65+ubVZ6Q61cFtFl62UyJlc8/JwERRbAFPUqgw==",
          "dev": true,
          "dependencies": {
            "array-back": "^4.0.2",
            "chalk": "^2.4.2",
            "table-layout": "^1.0.2",
            "typical": "^5.2.0"
          },
          "engines": {
            "node": ">=8.0.0"
          }
        },
        "node_modules/command-line-usage/node_modules/array-back": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/array-back/-/array-back-4.0.2.tgz",
          "integrity": "sha512-NbdMezxqf94cnNfWLL7V/im0Ub+Anbb0IoZhvzie8+4HJ4nMQuzHuy49FkGYCJK2yAloZ3meiB6AVMClbrI1vg==",
          "dev": true,
          "engines": {
            "node": ">=8"
          }
        },
        "node_modules/command-line-usage/node_modules/typical": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/typical/-/typical-5.2.0.tgz",
          "integrity": "sha512-dvdQgNDNJo+8B2uBQoqdb11eUCE1JQXhvjC/CZtgvZseVd5TYMXnq0+vuUemXbd/Se29cTaUuPX3YIc2xgbvIg==",
          "dev": true,
          "engines": {
            "node": ">=8"
          }
        },
        "node_modules/commander": {
          "version": "11.0.0",
          "resolved": "https://registry.npmjs.org/commander/-/commander-11.0.0.tgz",
          "integrity": "sha512-9HMlXtt/BNoYr8ooyjjNRdIilOTkVJXB+GhxMTtOKwk0R4j4lS4NpjuqmRxroBfnfTSHQIHQB7wryHhXarNjmQ==",
          "dev": true,
          "engines": {
            "node": ">=16"
          }
        },
        "node_modules/core-util-is": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
          "integrity": "sha512-3lqz5YjWTYnW6dlDa5TLaTCcShfar1e40rmcJVwCBJC6mWlFuj0eCHIElmG1g5kyuJ/GD+8Wn4FFCcz4gJPfaQ==",
          "dev": true
        },
        "node_modules/csv-parse": {
          "version": "4.16.3",
          "resolved": "https://registry.npmjs.org/csv-parse/-/csv-parse-4.16.3.tgz",
          "integrity": "sha512-cO1I/zmz4w2dcKHVvpCr7JVRu8/FymG5OEpmvsZYlccYolPBLoVGKUHgNoc4ZGkFeFlWGEDmMyBM+TTqRdW/wg==",
          "dev": true
        },
        "node_modules/dashdash": {
          "version": "1.14.1",
          "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
          "integrity": "sha512-jRFi8UDGo6j+odZiEpjazZaWqEal3w/basFjQHQEwVtZJGDpxbH1MeYluwCS8Xq5wmLJooDlMgvVarmWfGM44g==",
          "dev": true,
          "dependencies": {
            "assert-plus": "^1.0.0"
          },
          "engines": {
            "node": ">=0.10"
          }
        },
        "node_modules/deep-extend": {
          "version": "0.6.0",
          "resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.6.0.tgz",
          "integrity": "sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA==",
          "dev": true,
          "engines": {
            "node": ">=4.0.0"
          }
        },
        "node_modules/delayed-stream": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
          "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
          "dev": true,
          "engines": {
            "node": ">=0.4.0"
          }
        },
        "node_modules/des.js": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/des.js/-/des.js-1.1.0.tgz",
          "integrity": "sha512-r17GxjhUCjSRy8aiJpr8/UadFIzMzJGexI3Nmz4ADi9LYSFx4gTBp80+NaX/YsXWWLhpZ7v/v/ubEc/bCNfKwg==",
          "dev": true,
          "dependencies": {
            "inherits": "^2.0.1",
            "minimalistic-assert": "^1.0.0"
          }
        },
        "node_modules/directory-tree": {
          "version": "3.5.1",
          "resolved": "https://registry.npmjs.org/directory-tree/-/directory-tree-3.5.1.tgz",
          "integrity": "sha512-HqjZ49fDzUnKYUhHxVw9eKBqbQ+lL0v4kSBInlDlaktmLtGoV9tC54a6A0ZfYeIrkMHWTE6MwwmUXP477+UEKQ==",
          "dev": true,
          "dependencies": {
            "command-line-args": "^5.2.0",
            "command-line-usage": "^6.1.1"
          },
          "bin": {
            "directory-tree": "bin/index.js"
          },
          "engines": {
            "node": ">=10.0"
          }
        },
        "node_modules/ecc-jsbn": {
          "version": "0.1.2",
          "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
          "integrity": "sha512-eh9O+hwRHNbG4BLTjEl3nw044CkGm5X6LoaCf7LPp7UU8Qrt47JYNi6nPX8xjW97TKGKm1ouctg0QSpZe9qrnw==",
          "dev": true,
          "dependencies": {
            "jsbn": "~0.1.0",
            "safer-buffer": "^2.1.0"
          }
        },
        "node_modules/emoji-regex": {
          "version": "8.0.0",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
          "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
          "dev": true
        },
        "node_modules/escape-string-regexp": {
          "version": "1.0.5",
          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
          "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==",
          "dev": true,
          "engines": {
            "node": ">=0.8.0"
          }
        },
        "node_modules/eventemitter3": {
          "version": "4.0.7",
          "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.7.tgz",
          "integrity": "sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==",
          "dev": true
        },
        "node_modules/extend": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
          "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==",
          "dev": true
        },
        "node_modules/extsprintf": {
          "version": "1.3.0",
          "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
          "integrity": "sha512-11Ndz7Nv+mvAC1j0ktTa7fAb0vLyGGX+rMHNBYQviQDGU0Hw7lhctJANqbPhu9nV9/izT/IntTgZ7Im/9LJs9g==",
          "dev": true,
          "engines": [
            "node >=0.6.0"
          ]
        },
        "node_modules/fast-deep-equal": {
          "version": "3.1.3",
          "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
          "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
          "dev": true
        },
        "node_modules/fast-json-stable-stringify": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
          "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
          "dev": true
        },
        "node_modules/file-type": {
          "version": "3.9.0",
          "resolved": "https://registry.npmjs.org/file-type/-/file-type-3.9.0.tgz",
          "integrity": "sha512-RLoqTXE8/vPmMuTI88DAzhMYC99I8BWv7zYP4A1puo5HIjEJ5EX48ighy4ZyKMG9EDXxBgW6e++cn7d1xuFghA==",
          "dev": true,
          "engines": {
            "node": ">=0.10.0"
          }
        },
        "node_modules/filesize": {
          "version": "10.0.12",
          "resolved": "https://registry.npmjs.org/filesize/-/filesize-10.0.12.tgz",
          "integrity": "sha512-6RS9gDchbn+qWmtV2uSjo5vmKizgfCQeb5jKmqx8HyzA3MoLqqyQxN+QcjkGBJt7FjJ9qFce67Auyya5rRRbpw==",
          "dev": true,
          "engines": {
            "node": ">= 10.4.0"
          }
        },
        "node_modules/find-replace": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/find-replace/-/find-replace-3.0.0.tgz",
          "integrity": "sha512-6Tb2myMioCAgv5kfvP5/PkZZ/ntTpVK39fHY7WkWBgvbeE+VHd/tZuZ4mrC+bxh4cfOZeYKVPaJIZtZXV7GNCQ==",
          "dev": true,
          "dependencies": {
            "array-back": "^3.0.1"
          },
          "engines": {
            "node": ">=4.0.0"
          }
        },
        "node_modules/flatted": {
          "version": "3.2.6",
          "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.2.6.tgz",
          "integrity": "sha512-0sQoMh9s0BYsm+12Huy/rkKxVu4R1+r96YX5cG44rHV0pQ6iC3Q+mkoMFaGWObMFYQxCVT+ssG1ksneA2MI9KQ==",
          "dev": true
        },
        "node_modules/forever-agent": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
          "integrity": "sha512-j0KLYPhm6zeac4lz3oJ3o65qvgQCcPubiyotZrXqEaG4hNagNYO8qdlUrX5vwqv9ohqeT/Z3j6+yW067yWWdUw==",
          "dev": true,
          "engines": {
            "node": "*"
          }
        },
        "node_modules/getpass": {
          "version": "0.1.7",
          "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
          "integrity": "sha512-0fzj9JxOLfJ+XGLhR8ze3unN0KZCgZwiSSDz168VERjK8Wl8kVSdcu2kspd4s4wtAa1y/qrVRiAA0WclVsu0ng==",
          "dev": true,
          "dependencies": {
            "assert-plus": "^1.0.0"
          }
        },
        "node_modules/handlebars": {
          "version": "4.7.8",
          "resolved": "https://registry.npmjs.org/handlebars/-/handlebars-4.7.8.tgz",
          "integrity": "sha512-vafaFqs8MZkRrSX7sFVUdo3ap/eNiLnb4IakshzvP56X5Nr1iGKAIqdX6tMlm6HcNRIkr6AxO5jFEoJzzpT8aQ==",
          "dev": true,
          "dependencies": {
            "minimist": "^1.2.5",
            "neo-async": "^2.6.2",
            "source-map": "^0.6.1",
            "wordwrap": "^1.0.0"
          },
          "bin": {
            "handlebars": "bin/handlebars"
          },
          "engines": {
            "node": ">=0.4.7"
          },
          "optionalDependencies": {
            "uglify-js": "^3.1.4"
          }
        },
        "node_modules/har-schema": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
          "integrity": "sha512-Oqluz6zhGX8cyRaTQlFMPw80bSJVG2x/cFb8ZPhUILGgHka9SsokCCOQgpveePerqidZOrT14ipqfJb7ILcW5Q==",
          "dev": true,
          "engines": {
            "node": ">=4"
          }
        },
        "node_modules/har-validator": {
          "version": "5.1.5",
          "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.5.tgz",
          "integrity": "sha512-nmT2T0lljbxdQZfspsno9hgrG3Uir6Ks5afism62poxqBM6sDnMEuPmzTq8XN0OEwqKLLdh1jQI3qyE66Nzb3w==",
          "deprecated": "this library is no longer supported",
          "dev": true,
          "dependencies": {
            "ajv": "^6.12.3",
            "har-schema": "^2.0.0"
          },
          "engines": {
            "node": ">=6"
          }
        },
        "node_modules/has-flag": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
          "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
          "dev": true,
          "engines": {
            "node": ">=4"
          }
        },
        "node_modules/http-reasons": {
          "version": "0.1.0",
          "resolved": "https://registry.npmjs.org/http-reasons/-/http-reasons-0.1.0.tgz",
          "integrity": "sha512-P6kYh0lKZ+y29T2Gqz+RlC9WBLhKe8kDmcJ+A+611jFfxdPsbMRQ5aNmFRM3lENqFkK+HTTL+tlQviAiv0AbLQ==",
          "dev": true
        },
        "node_modules/http-signature": {
          "version": "1.3.6",
          "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.3.6.tgz",
          "integrity": "sha512-3adrsD6zqo4GsTqtO7FyrejHNv+NgiIfAfv68+jVlFmSr9OGy7zrxONceFRLKvnnZA5jbxQBX1u9PpB6Wi32Gw==",
          "dev": true,
          "dependencies": {
            "assert-plus": "^1.0.0",
            "jsprim": "^2.0.2",
            "sshpk": "^1.14.1"
          },
          "engines": {
            "node": ">=0.10"
          }
        },
        "node_modules/httpntlm": {
          "version": "1.8.13",
          "resolved": "https://registry.npmjs.org/httpntlm/-/httpntlm-1.8.13.tgz",
          "integrity": "sha512-2F2FDPiWT4rewPzNMg3uPhNkP3NExENlUGADRUDPQvuftuUTGW98nLZtGemCIW3G40VhWZYgkIDcQFAwZ3mf2Q==",
          "dev": true,
          "funding": [
            {
              "type": "paypal",
              "url": "https://www.paypal.com/donate/?hosted_button_id=2CKNJLZJBW8ZC"
            },
            {
              "type": "buymeacoffee",
              "url": "https://www.buymeacoffee.com/samdecrock"
            }
          ],
          "dependencies": {
            "des.js": "^1.0.1",
            "httpreq": ">=0.4.22",
            "js-md4": "^0.3.2",
            "underscore": "~1.12.1"
          },
          "engines": {
            "node": ">=10.4.0"
          }
        },
        "node_modules/httpreq": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/httpreq/-/httpreq-1.1.1.tgz",
          "integrity": "sha512-uhSZLPPD2VXXOSN8Cni3kIsoFHaU2pT/nySEU/fHr/ePbqHYr0jeiQRmUKLEirC09SFPsdMoA7LU7UXMd/w0Kw==",
          "dev": true,
          "engines": {
            "node": ">= 6.15.1"
          }
        },
        "node_modules/iconv-lite": {
          "version": "0.6.3",
          "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
          "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
          "dev": true,
          "dependencies": {
            "safer-buffer": ">= 2.1.2 < 3.0.0"
          },
          "engines": {
            "node": ">=0.10.0"
          }
        },
        "node_modules/inherits": {
          "version": "2.0.4",
          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
          "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
          "dev": true
        },
        "node_modules/is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true,
          "engines": {
            "node": ">=8"
          }
        },
        "node_modules/is-typedarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
          "integrity": "sha512-cyA56iCMHAh5CdzjJIa4aohJyeO1YbwLi3Jc35MmRU6poroFjIGZzUzupGiRPOjgHg9TLu43xbpwXk523fMxKA==",
          "dev": true
        },
        "node_modules/isstream": {
          "version": "0.1.2",
          "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
          "integrity": "sha512-Yljz7ffyPbrLpLngrMtZ7NduUgVvi6wG9RJ9IUcyCd59YQ911PBJphODUcbOVbqYfxe1wuYf/LJ8PauMRwsM/g==",
          "dev": true
        },
        "node_modules/jose": {
          "version": "4.14.4",
          "resolved": "https://registry.npmjs.org/jose/-/jose-4.14.4.tgz",
          "integrity": "sha512-j8GhLiKmUAh+dsFXlX1aJCbt5KMibuKb+d7j1JaOJG6s2UjX1PQlW+OKB/sD4a/5ZYF4RcmYmLSndOoU3Lt/3g==",
          "dev": true,
          "funding": {
            "url": "https://github.com/sponsors/panva"
          }
        },
        "node_modules/js-md4": {
          "version": "0.3.2",
          "resolved": "https://registry.npmjs.org/js-md4/-/js-md4-0.3.2.tgz",
          "integrity": "sha512-/GDnfQYsltsjRswQhN9fhv3EMw2sCpUdrdxyWDOUK7eyD++r3gRhzgiQgc/x4MAv2i1iuQ4lxO5mvqM3vj4bwA==",
          "dev": true
        },
        "node_modules/js-sha512": {
          "version": "0.8.0",
          "resolved": "https://registry.npmjs.org/js-sha512/-/js-sha512-0.8.0.tgz",
          "integrity": "sha512-PWsmefG6Jkodqt+ePTvBZCSMFgN7Clckjd0O7su3I0+BW2QWUTJNzjktHsztGLhncP2h8mcF9V9Y2Ha59pAViQ==",
          "dev": true
        },
        "node_modules/jsbn": {
          "version": "0.1.1",
          "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
          "integrity": "sha512-UVU9dibq2JcFWxQPA6KCqj5O42VOmAY3zQUfEKxU0KpTGXwNoCjkX1e13eHNvw/xPynt6pU0rZ1htjWTNTSXsg==",
          "dev": true
        },
        "node_modules/json-schema": {
          "version": "0.4.0",
          "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.4.0.tgz",
          "integrity": "sha512-es94M3nTIfsEPisRafak+HDLfHXnKBhV3vU5eqPcS3flIWqcxJWgXHXiey3YrpaNsanY5ei1VoYEbOzijuq9BA==",
          "dev": true
        },
        "node_modules/json-schema-traverse": {
          "version": "0.4.1",
          "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
          "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
          "dev": true
        },
        "node_modules/json-stringify-safe": {
          "version": "5.0.1",
          "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
          "integrity": "sha512-ZClg6AaYvamvYEE82d3Iyd3vSSIjQ+odgjaTzRuO3s7toCdFKczob2i0zCh7JE8kWn17yvAWhUVxvqGwUalsRA==",
          "dev": true
        },
        "node_modules/jsprim": {
          "version": "2.0.2",
          "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-2.0.2.tgz",
          "integrity": "sha512-gqXddjPqQ6G40VdnI6T6yObEC+pDNvyP95wdQhkWkg7crHH3km5qP1FsOXEkzEQwnz6gz5qGTn1c2Y52wP3OyQ==",
          "dev": true,
          "engines": [
            "node >=0.6.0"
          ],
          "dependencies": {
            "assert-plus": "1.0.0",
            "extsprintf": "1.3.0",
            "json-schema": "0.4.0",
            "verror": "1.10.0"
          }
        },
        "node_modules/liquid-json": {
          "version": "0.3.1",
          "resolved": "https://registry.npmjs.org/liquid-json/-/liquid-json-0.3.1.tgz",
          "integrity": "sha512-wUayTU8MS827Dam6MxgD72Ui+KOSF+u/eIqpatOtjnvgJ0+mnDq33uC2M7J0tPK+upe/DpUAuK4JUU89iBoNKQ==",
          "dev": true,
          "engines": {
            "node": ">=4"
          }
        },
        "node_modules/lodash": {
          "version": "4.17.21",
          "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
          "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
          "dev": true
        },
        "node_modules/lodash.camelcase": {
          "version": "4.3.0",
          "resolved": "https://registry.npmjs.org/lodash.camelcase/-/lodash.camelcase-4.3.0.tgz",
          "integrity": "sha512-TwuEnCnxbc3rAvhf/LbG7tJUDzhqXyFnv3dtzLOPgCG/hODL7WFnsbwktkD7yUV0RrreP/l1PALq/YSg6VvjlA==",
          "dev": true
        },
        "node_modules/lru-cache": {
          "version": "6.0.0",
          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
          "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
          "dev": true,
          "dependencies": {
            "yallist": "^4.0.0"
          },
          "engines": {
            "node": ">=10"
          }
        },
        "node_modules/mime-db": {
          "version": "1.52.0",
          "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
          "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
          "dev": true,
          "engines": {
            "node": ">= 0.6"
          }
        },
        "node_modules/mime-format": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/mime-format/-/mime-format-2.0.1.tgz",
          "integrity": "sha512-XxU3ngPbEnrYnNbIX+lYSaYg0M01v6p2ntd2YaFksTu0vayaw5OJvbdRyWs07EYRlLED5qadUZ+xo+XhOvFhwg==",
          "dev": true,
          "dependencies": {
            "charset": "^1.0.0"
          }
        },
        "node_modules/mime-types": {
          "version": "2.1.35",
          "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
          "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
          "dev": true,
          "dependencies": {
            "mime-db": "1.52.0"
          },
          "engines": {
            "node": ">= 0.6"
          }
        },
        "node_modules/minimalistic-assert": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz",
          "integrity": "sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A==",
          "dev": true
        },
        "node_modules/minimist": {
          "version": "1.2.8",
          "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
          "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
          "dev": true,
          "funding": {
            "url": "https://github.com/sponsors/ljharb"
          }
        },
        "node_modules/mkdirp": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-3.0.1.tgz",
          "integrity": "sha512-+NsyUUAZDmo6YVHzL/stxSu3t9YS1iljliy3BSDrXJ/dkn1KYdmtZODGGjLcc9XLgVVpH4KshHB8XmZgMhaBXg==",
          "dev": true,
          "bin": {
            "mkdirp": "dist/cjs/src/bin.js"
          },
          "engines": {
            "node": ">=10"
          },
          "funding": {
            "url": "https://github.com/sponsors/isaacs"
          }
        },
        "node_modules/neo-async": {
          "version": "2.6.2",
          "resolved": "https://registry.npmjs.org/neo-async/-/neo-async-2.6.2.tgz",
          "integrity": "sha512-Yd3UES5mWCSqR+qNT93S3UoYUkqAZ9lLg8a7g9rimsWmYGK8cVToA4/sF3RrshdyV3sAGMXVUmpMYOw+dLpOuw==",
          "dev": true
        },
        "node_modules/newman": {
          "version": "6.0.0",
          "resolved": "git+ssh://git@github.com/knutties/newman.git#7106e194c15d49d066fa09d9a2f18b2238f3dba8",
          "integrity": "sha512-peCwAcRcwBCerxnYiEXAGHkO2ZxsmJyW7BH2/PigzO1qbWtD9FXOnDuwXmp6/Hnc9uxgKqokd2YKPjkHXU6qCw==",
          "dev": true,
          "license": "Apache-2.0",
          "dependencies": {
            "@postman/tough-cookie": "4.1.3-postman.1",
            "async": "3.2.4",
            "chardet": "1.6.0",
            "cli-progress": "3.12.0",
            "cli-table3": "0.6.3",
            "colors": "1.4.0",
            "commander": "11.0.0",
            "csv-parse": "4.16.3",
            "directory-tree": "3.5.1",
            "eventemitter3": "4.0.7",
            "filesize": "10.0.12",
            "liquid-json": "0.3.1",
            "lodash": "4.17.21",
            "mkdirp": "3.0.1",
            "postman-collection": "4.2.1",
            "postman-collection-transformer": "4.1.7",
            "postman-request": "2.88.1-postman.33",
            "postman-runtime": "7.33.0",
            "pretty-ms": "7.0.1",
            "semver": "7.5.4",
            "serialised-error": "1.1.3",
            "word-wrap": "1.2.5",
            "xmlbuilder": "15.1.1"
          },
          "bin": {
            "newman": "bin/newman.js"
          },
          "engines": {
            "node": ">=16"
          }
        },
        "node_modules/node-oauth1": {
          "version": "1.3.0",
          "resolved": "https://registry.npmjs.org/node-oauth1/-/node-oauth1-1.3.0.tgz",
          "integrity": "sha512-0yggixNfrA1KcBwvh/Hy2xAS1Wfs9dcg6TdFf2zN7gilcAigMdrtZ4ybrBSXBgLvGDw9V1p2MRnGBMq7XjTWLg==",
          "dev": true
        },
        "node_modules/oauth-sign": {
          "version": "0.9.0",
          "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
          "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==",
          "dev": true,
          "engines": {
            "node": "*"
          }
        },
        "node_modules/object-hash": {
          "version": "1.3.1",
          "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-1.3.1.tgz",
          "integrity": "sha512-OSuu/pU4ENM9kmREg0BdNrUDIl1heYa4mBZacJc+vVWz4GtAwu7jO8s4AIt2aGRUTqxykpWzI3Oqnsm13tTMDA==",
          "dev": true,
          "engines": {
            "node": ">= 0.10.0"
          }
        },
        "node_modules/parse-ms": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/parse-ms/-/parse-ms-2.1.0.tgz",
          "integrity": "sha512-kHt7kzLoS9VBZfUsiKjv43mr91ea+U05EyKkEtqp7vNbHxmaVuEqN7XxeEVnGrMtYOAxGrDElSi96K7EgO1zCA==",
          "dev": true,
          "engines": {
            "node": ">=6"
          }
        },
        "node_modules/performance-now": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
          "integrity": "sha512-7EAHlyLHI56VEIdK57uwHdHKIaAGbnXPiw0yWbarQZOKaKpvUIgW0jWRVLiatnM+XXlSwsanIBH/hzGMJulMow==",
          "dev": true
        },
        "node_modules/postman-collection": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/postman-collection/-/postman-collection-4.2.1.tgz",
          "integrity": "sha512-DFLt3/yu8+ldtOTIzmBUctoupKJBOVK4NZO0t68K2lIir9smQg7OdQTBjOXYy+PDh7u0pSDvD66tm93eBHEPHA==",
          "dev": true,
          "dependencies": {
            "@faker-js/faker": "5.5.3",
            "file-type": "3.9.0",
            "http-reasons": "0.1.0",
            "iconv-lite": "0.6.3",
            "liquid-json": "0.3.1",
            "lodash": "4.17.21",
            "mime-format": "2.0.1",
            "mime-types": "2.1.35",
            "postman-url-encoder": "3.0.5",
            "semver": "7.5.4",
            "uuid": "8.3.2"
          },
          "engines": {
            "node": ">=10"
          }
        },
        "node_modules/postman-collection-transformer": {
          "version": "4.1.7",
          "resolved": "https://registry.npmjs.org/postman-collection-transformer/-/postman-collection-transformer-4.1.7.tgz",
          "integrity": "sha512-SxJkm/LnlFZs2splUBnS4jQFicgBptghpm4voHtNnaum3Ad64E2MHLV4fJhv58dVUmFwdSwdQUN3m2q0iLecnQ==",
          "dev": true,
          "dependencies": {
            "commander": "8.3.0",
            "inherits": "2.0.4",
            "lodash": "4.17.21",
            "semver": "7.5.4",
            "strip-json-comments": "3.1.1"
          },
          "bin": {
            "postman-collection-transformer": "bin/transform-collection.js"
          },
          "engines": {
            "node": ">=10"
          }
        },
        "node_modules/postman-collection-transformer/node_modules/commander": {
          "version": "8.3.0",
          "resolved": "https://registry.npmjs.org/commander/-/commander-8.3.0.tgz",
          "integrity": "sha512-OkTL9umf+He2DZkUq8f8J9of7yL6RJKI24dVITBmNfZBmri9zYZQrKkuXiKhyfPSu8tUhnVBB1iKXevvnlR4Ww==",
          "dev": true,
          "engines": {
            "node": ">= 12"
          }
        },
        "node_modules/postman-request": {
          "version": "2.88.1-postman.33",
          "resolved": "https://registry.npmjs.org/postman-request/-/postman-request-2.88.1-postman.33.tgz",
          "integrity": "sha512-uL9sCML4gPH6Z4hreDWbeinKU0p0Ke261nU7OvII95NU22HN6Dk7T/SaVPaj6T4TsQqGKIFw6/woLZnH7ugFNA==",
          "dev": true,
          "dependencies": {
            "@postman/form-data": "~3.1.1",
            "@postman/tough-cookie": "~4.1.3-postman.1",
            "@postman/tunnel-agent": "^0.6.3",
            "aws-sign2": "~0.7.0",
            "aws4": "^1.12.0",
            "brotli": "^1.3.3",
            "caseless": "~0.12.0",
            "combined-stream": "~1.0.6",
            "extend": "~3.0.2",
            "forever-agent": "~0.6.1",
            "har-validator": "~5.1.3",
            "http-signature": "~1.3.1",
            "is-typedarray": "~1.0.0",
            "isstream": "~0.1.2",
            "json-stringify-safe": "~5.0.1",
            "mime-types": "^2.1.35",
            "oauth-sign": "~0.9.0",
            "performance-now": "^2.1.0",
            "qs": "~6.5.3",
            "safe-buffer": "^5.1.2",
            "stream-length": "^1.0.2",
            "uuid": "^8.3.2"
          },
          "engines": {
            "node": ">= 6"
          }
        },
        "node_modules/postman-runtime": {
          "version": "7.33.0",
          "resolved": "https://registry.npmjs.org/postman-runtime/-/postman-runtime-7.33.0.tgz",
          "integrity": "sha512-cYCb+5Y12FwZU/T3gOj2SKiOz38pisVLc0tdppb+ZlG7iqn5aLgxghJwhjG62pZCV6uixKiQX1hNdLSk9a9Xtw==",
          "dev": true,
          "dependencies": {
            "@postman/tough-cookie": "4.1.3-postman.1",
            "async": "3.2.4",
            "aws4": "1.12.0",
            "handlebars": "4.7.8",
            "httpntlm": "1.8.13",
            "jose": "4.14.4",
            "js-sha512": "0.8.0",
            "lodash": "4.17.21",
            "mime-types": "2.1.35",
            "node-oauth1": "1.3.0",
            "performance-now": "2.1.0",
            "postman-collection": "4.2.0",
            "postman-request": "2.88.1-postman.33",
            "postman-sandbox": "4.2.7",
            "postman-url-encoder": "3.0.5",
            "serialised-error": "1.1.3",
            "strip-json-comments": "3.1.1",
            "uuid": "8.3.2"
          },
          "engines": {
            "node": ">=12"
          }
        },
        "node_modules/postman-runtime/node_modules/postman-collection": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/postman-collection/-/postman-collection-4.2.0.tgz",
          "integrity": "sha512-tvOLgN1h6Kab6dt43PmBoV5kYO/YUta3x0C2QqfmbzmHZe47VTpZ/+gIkGlbNhjKNPUUub5X6ehxYKoaTYdy1w==",
          "dev": true,
          "dependencies": {
            "@faker-js/faker": "5.5.3",
            "file-type": "3.9.0",
            "http-reasons": "0.1.0",
            "iconv-lite": "0.6.3",
            "liquid-json": "0.3.1",
            "lodash": "4.17.21",
            "mime-format": "2.0.1",
            "mime-types": "2.1.35",
            "postman-url-encoder": "3.0.5",
            "semver": "7.5.4",
            "uuid": "8.3.2"
          },
          "engines": {
            "node": ">=10"
          }
        },
        "node_modules/postman-sandbox": {
          "version": "4.2.7",
          "resolved": "https://registry.npmjs.org/postman-sandbox/-/postman-sandbox-4.2.7.tgz",
          "integrity": "sha512-/EcCrKnb/o+9iLS4u+H76E0kBomJFjPptVjoDiq1uZ7Es/4aTv0MAX+0aoDxdDO+0h9sl8vy65uKQwyjN7AOaw==",
          "dev": true,
          "dependencies": {
            "lodash": "4.17.21",
            "postman-collection": "4.2.0",
            "teleport-javascript": "1.0.0",
            "uvm": "2.1.1"
          },
          "engines": {
            "node": ">=10"
          }
        },
        "node_modules/postman-sandbox/node_modules/postman-collection": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/postman-collection/-/postman-collection-4.2.0.tgz",
          "integrity": "sha512-tvOLgN1h6Kab6dt43PmBoV5kYO/YUta3x0C2QqfmbzmHZe47VTpZ/+gIkGlbNhjKNPUUub5X6ehxYKoaTYdy1w==",
          "dev": true,
          "dependencies": {
            "@faker-js/faker": "5.5.3",
            "file-type": "3.9.0",
            "http-reasons": "0.1.0",
            "iconv-lite": "0.6.3",
            "liquid-json": "0.3.1",
            "lodash": "4.17.21",
            "mime-format": "2.0.1",
            "mime-types": "2.1.35",
            "postman-url-encoder": "3.0.5",
            "semver": "7.5.4",
            "uuid": "8.3.2"
          },
          "engines": {
            "node": ">=10"
          }
        },
        "node_modules/postman-url-encoder": {
          "version": "3.0.5",
          "resolved": "https://registry.npmjs.org/postman-url-encoder/-/postman-url-encoder-3.0.5.tgz",
          "integrity": "sha512-jOrdVvzUXBC7C+9gkIkpDJ3HIxOHTIqjpQ4C1EMt1ZGeMvSEpbFCKq23DEfgsj46vMnDgyQf+1ZLp2Wm+bKSsA==",
          "dev": true,
          "dependencies": {
            "punycode": "^2.1.1"
          },
          "engines": {
            "node": ">=10"
          }
        },
        "node_modules/pretty-ms": {
          "version": "7.0.1",
          "resolved": "https://registry.npmjs.org/pretty-ms/-/pretty-ms-7.0.1.tgz",
          "integrity": "sha512-973driJZvxiGOQ5ONsFhOF/DtzPMOMtgC11kCpUrPGMTgqp2q/1gwzCquocrN33is0VZ5GFHXZYMM9l6h67v2Q==",
          "dev": true,
          "dependencies": {
            "parse-ms": "^2.1.0"
          },
          "engines": {
            "node": ">=10"
          },
          "funding": {
            "url": "https://github.com/sponsors/sindresorhus"
          }
        },
        "node_modules/psl": {
          "version": "1.9.0",
          "resolved": "https://registry.npmjs.org/psl/-/psl-1.9.0.tgz",
          "integrity": "sha512-E/ZsdU4HLs/68gYzgGTkMicWTLPdAftJLfJFlLUAAKZGkStNU72sZjT66SnMDVOfOWY/YAoiD7Jxa9iHvngcag==",
          "dev": true
        },
        "node_modules/punycode": {
          "version": "2.3.0",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.0.tgz",
          "integrity": "sha512-rRV+zQD8tVFys26lAGR9WUuS4iUAngJScM+ZRSKtvl5tKeZ2t5bvdNFdNHBW9FWR4guGHlgmsZ1G7BSm2wTbuA==",
          "dev": true,
          "engines": {
            "node": ">=6"
          }
        },
        "node_modules/qs": {
          "version": "6.5.3",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.3.tgz",
          "integrity": "sha512-qxXIEh4pCGfHICj1mAJQ2/2XVZkjCDTcEgfoSQxc/fYivUZxTkk7L3bDBJSoNrEzXI17oUO5Dp07ktqE5KzczA==",
          "dev": true,
          "engines": {
            "node": ">=0.6"
          }
        },
        "node_modules/querystringify": {
          "version": "2.2.0",
          "resolved": "https://registry.npmjs.org/querystringify/-/querystringify-2.2.0.tgz",
          "integrity": "sha512-FIqgj2EUvTa7R50u0rGsyTftzjYmv/a3hO345bZNrqabNqjtgiDMgmo4mkUjd+nzU5oF3dClKqFIPUKybUyqoQ==",
          "dev": true
        },
        "node_modules/reduce-flatten": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/reduce-flatten/-/reduce-flatten-2.0.0.tgz",
          "integrity": "sha512-EJ4UNY/U1t2P/2k6oqotuX2Cc3T6nxJwsM0N0asT7dhrtH1ltUxDn4NalSYmPE2rCkVpcf/X6R0wDwcFpzhd4w==",
          "dev": true,
          "engines": {
            "node": ">=6"
          }
        },
        "node_modules/requires-port": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/requires-port/-/requires-port-1.0.0.tgz",
          "integrity": "sha512-KigOCHcocU3XODJxsu8i/j8T9tzT4adHiecwORRQ0ZZFcp7ahwXuRU1m+yuO90C5ZUyGeGfocHDI14M3L3yDAQ==",
          "dev": true
        },
        "node_modules/safe-buffer": {
          "version": "5.2.1",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
          "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
          "dev": true,
          "funding": [
            {
              "type": "github",
              "url": "https://github.com/sponsors/feross"
            },
            {
              "type": "patreon",
              "url": "https://www.patreon.com/feross"
            },
            {
              "type": "consulting",
              "url": "https://feross.org/support"
            }
          ]
        },
        "node_modules/safer-buffer": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
          "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
          "dev": true
        },
        "node_modules/semver": {
          "version": "7.5.4",
          "resolved": "https://registry.npmjs.org/semver/-/semver-7.5.4.tgz",
          "integrity": "sha512-1bCSESV6Pv+i21Hvpxp3Dx+pSD8lIPt8uVjRrxAUt/nbswYc+tK6Y2btiULjd4+fnq15PX+nqQDC7Oft7WkwcA==",
          "dev": true,
          "dependencies": {
            "lru-cache": "^6.0.0"
          },
          "bin": {
            "semver": "bin/semver.js"
          },
          "engines": {
            "node": ">=10"
          }
        },
        "node_modules/serialised-error": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/serialised-error/-/serialised-error-1.1.3.tgz",
          "integrity": "sha512-vybp3GItaR1ZtO2nxZZo8eOo7fnVaNtP3XE2vJKgzkKR2bagCkdJ1EpYYhEMd3qu/80DwQk9KjsNSxE3fXWq0g==",
          "dev": true,
          "dependencies": {
            "object-hash": "^1.1.2",
            "stack-trace": "0.0.9",
            "uuid": "^3.0.0"
          }
        },
        "node_modules/serialised-error/node_modules/uuid": {
          "version": "3.4.0",
          "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
          "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
          "deprecated": "Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.",
          "dev": true,
          "bin": {
            "uuid": "bin/uuid"
          }
        },
        "node_modules/source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true,
          "engines": {
            "node": ">=0.10.0"
          }
        },
        "node_modules/sshpk": {
          "version": "1.17.0",
          "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.17.0.tgz",
          "integrity": "sha512-/9HIEs1ZXGhSPE8X6Ccm7Nam1z8KcoCqPdI7ecm1N33EzAetWahvQWVqLZtaZQ+IDKX4IyA2o0gBzqIMkAagHQ==",
          "dev": true,
          "dependencies": {
            "asn1": "~0.2.3",
            "assert-plus": "^1.0.0",
            "bcrypt-pbkdf": "^1.0.0",
            "dashdash": "^1.12.0",
            "ecc-jsbn": "~0.1.1",
            "getpass": "^0.1.1",
            "jsbn": "~0.1.0",
            "safer-buffer": "^2.0.2",
            "tweetnacl": "~0.14.0"
          },
          "bin": {
            "sshpk-conv": "bin/sshpk-conv",
            "sshpk-sign": "bin/sshpk-sign",
            "sshpk-verify": "bin/sshpk-verify"
          },
          "engines": {
            "node": ">=0.10.0"
          }
        },
        "node_modules/stack-trace": {
          "version": "0.0.9",
          "resolved": "https://registry.npmjs.org/stack-trace/-/stack-trace-0.0.9.tgz",
          "integrity": "sha512-vjUc6sfgtgY0dxCdnc40mK6Oftjo9+2K8H/NG81TMhgL392FtiPA9tn9RLyTxXmTLPJPjF3VyzFp6bsWFLisMQ==",
          "dev": true,
          "engines": {
            "node": "*"
          }
        },
        "node_modules/stream-length": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/stream-length/-/stream-length-1.0.2.tgz",
          "integrity": "sha512-aI+qKFiwoDV4rsXiS7WRoCt+v2RX1nUj17+KJC5r2gfh5xoSJIfP6Y3Do/HtvesFcTSWthIuJ3l1cvKQY/+nZg==",
          "dev": true,
          "dependencies": {
            "bluebird": "^2.6.2"
          }
        },
        "node_modules/string-width": {
          "version": "4.2.3",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
          "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
          "dev": true,
          "dependencies": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.1"
          },
          "engines": {
            "node": ">=8"
          }
        },
        "node_modules/strip-ansi": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
          "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
          "dev": true,
          "dependencies": {
            "ansi-regex": "^5.0.1"
          },
          "engines": {
            "node": ">=8"
          }
        },
        "node_modules/strip-json-comments": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
          "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
          "dev": true,
          "engines": {
            "node": ">=8"
          },
          "funding": {
            "url": "https://github.com/sponsors/sindresorhus"
          }
        },
        "node_modules/supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "dependencies": {
            "has-flag": "^3.0.0"
          },
          "engines": {
            "node": ">=4"
          }
        },
        "node_modules/table-layout": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/table-layout/-/table-layout-1.0.2.tgz",
          "integrity": "sha512-qd/R7n5rQTRFi+Zf2sk5XVVd9UQl6ZkduPFC3S7WEGJAmetDTjY3qPN50eSKzwuzEyQKy5TN2TiZdkIjos2L6A==",
          "dev": true,
          "dependencies": {
            "array-back": "^4.0.1",
            "deep-extend": "~0.6.0",
            "typical": "^5.2.0",
            "wordwrapjs": "^4.0.0"
          },
          "engines": {
            "node": ">=8.0.0"
          }
        },
        "node_modules/table-layout/node_modules/array-back": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/array-back/-/array-back-4.0.2.tgz",
          "integrity": "sha512-NbdMezxqf94cnNfWLL7V/im0Ub+Anbb0IoZhvzie8+4HJ4nMQuzHuy49FkGYCJK2yAloZ3meiB6AVMClbrI1vg==",
          "dev": true,
          "engines": {
            "node": ">=8"
          }
        },
        "node_modules/table-layout/node_modules/typical": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/typical/-/typical-5.2.0.tgz",
          "integrity": "sha512-dvdQgNDNJo+8B2uBQoqdb11eUCE1JQXhvjC/CZtgvZseVd5TYMXnq0+vuUemXbd/Se29cTaUuPX3YIc2xgbvIg==",
          "dev": true,
          "engines": {
            "node": ">=8"
          }
        },
        "node_modules/teleport-javascript": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/teleport-javascript/-/teleport-javascript-1.0.0.tgz",
          "integrity": "sha512-j1llvWVFyEn/6XIFDfX5LAU43DXe0GCt3NfXDwJ8XpRRMkS+i50SAkonAONBy+vxwPFBd50MFU8a2uj8R/ccLg==",
          "dev": true
        },
        "node_modules/tweetnacl": {
          "version": "0.14.5",
          "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
          "integrity": "sha512-KXXFFdAbFXY4geFIwoyNK+f5Z1b7swfXABfL7HXCmoIWMKU3dmS26672A4EeQtDzLKy7SXmfBu51JolvEKwtGA==",
          "dev": true
        },
        "node_modules/typical": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/typical/-/typical-4.0.0.tgz",
          "integrity": "sha512-VAH4IvQ7BDFYglMd7BPRDfLgxZZX4O4TFcRDA6EN5X7erNJJq+McIEp8np9aVtxrCJ6qx4GTYVfOWNjcqwZgRw==",
          "dev": true,
          "engines": {
            "node": ">=8"
          }
        },
        "node_modules/uglify-js": {
          "version": "3.17.4",
          "resolved": "https://registry.npmjs.org/uglify-js/-/uglify-js-3.17.4.tgz",
          "integrity": "sha512-T9q82TJI9e/C1TAxYvfb16xO120tMVFZrGA3f9/P4424DNu6ypK103y0GPFVa17yotwSyZW5iYXgjYHkGrJW/g==",
          "dev": true,
          "optional": true,
          "bin": {
            "uglifyjs": "bin/uglifyjs"
          },
          "engines": {
            "node": ">=0.8.0"
          }
        },
        "node_modules/underscore": {
          "version": "1.12.1",
          "resolved": "https://registry.npmjs.org/underscore/-/underscore-1.12.1.tgz",
          "integrity": "sha512-hEQt0+ZLDVUMhebKxL4x1BTtDY7bavVofhZ9KZ4aI26X9SRaE+Y3m83XUL1UP2jn8ynjndwCCpEHdUG+9pP1Tw==",
          "dev": true
        },
        "node_modules/universalify": {
          "version": "0.2.0",
          "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.2.0.tgz",
          "integrity": "sha512-CJ1QgKmNg3CwvAv/kOFmtnEN05f0D/cn9QntgNOQlQF9dgvVTHj3t+8JPdjqawCHk7V/KA+fbUqzZ9XWhcqPUg==",
          "dev": true,
          "engines": {
            "node": ">= 4.0.0"
          }
        },
        "node_modules/uri-js": {
          "version": "4.4.1",
          "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
          "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
          "dev": true,
          "dependencies": {
            "punycode": "^2.1.0"
          }
        },
        "node_modules/url-parse": {
          "version": "1.5.10",
          "resolved": "https://registry.npmjs.org/url-parse/-/url-parse-1.5.10.tgz",
          "integrity": "sha512-WypcfiRhfeUP9vvF0j6rw0J3hrWrw6iZv3+22h6iRMJ/8z1Tj6XfLP4DsUix5MhMPnXpiHDoKyoZ/bdCkwBCiQ==",
          "dev": true,
          "dependencies": {
            "querystringify": "^2.1.1",
            "requires-port": "^1.0.0"
          }
        },
        "node_modules/uuid": {
          "version": "8.3.2",
          "resolved": "https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz",
          "integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==",
          "dev": true,
          "bin": {
            "uuid": "dist/bin/uuid"
          }
        },
        "node_modules/uvm": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/uvm/-/uvm-2.1.1.tgz",
          "integrity": "sha512-BZ5w8adTpNNr+zczOBRpaX/hH8UPKAf7fmCnidrcsqt3bn8KT9bDIfuS7hgRU9RXgiN01su2pwysBONY6w8W5w==",
          "dev": true,
          "dependencies": {
            "flatted": "3.2.6"
          },
          "engines": {
            "node": ">=10"
          }
        },
        "node_modules/verror": {
          "version": "1.10.0",
          "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
          "integrity": "sha512-ZZKSmDAEFOijERBLkmYfJ+vmk3w+7hOLYDNkRCuRuMJGEmqYNCNLyBBFwWKVMhfwaEF3WOd0Zlw86U/WC/+nYw==",
          "dev": true,
          "engines": [
            "node >=0.6.0"
          ],
          "dependencies": {
            "assert-plus": "^1.0.0",
            "core-util-is": "1.0.2",
            "extsprintf": "^1.2.0"
          }
        },
        "node_modules/word-wrap": {
          "version": "1.2.5",
          "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
          "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
          "dev": true,
          "engines": {
            "node": ">=0.10.0"
          }
        },
        "node_modules/wordwrap": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-1.0.0.tgz",
          "integrity": "sha512-gvVzJFlPycKc5dZN4yPkP8w7Dc37BtP1yczEneOb4uq34pXZcvrtRTmWV8W+Ume+XCxKgbjM+nevkyFPMybd4Q==",
          "dev": true
        },
        "node_modules/wordwrapjs": {
          "version": "4.0.1",
          "resolved": "https://registry.npmjs.org/wordwrapjs/-/wordwrapjs-4.0.1.tgz",
          "integrity": "sha512-kKlNACbvHrkpIw6oPeYDSmdCTu2hdMHoyXLTcUKala++lx5Y+wjJ/e474Jqv5abnVmwxw08DiTuHmw69lJGksA==",
          "dev": true,
          "dependencies": {
            "reduce-flatten": "^2.0.0",
            "typical": "^5.2.0"
          },
          "engines": {
            "node": ">=8.0.0"
          }
        },
        "node_modules/wordwrapjs/node_modules/typical": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/typical/-/typical-5.2.0.tgz",
          "integrity": "sha512-dvdQgNDNJo+8B2uBQoqdb11eUCE1JQXhvjC/CZtgvZseVd5TYMXnq0+vuUemXbd/Se29cTaUuPX3YIc2xgbvIg==",
          "dev": true,
          "engines": {
            "node": ">=8"
          }
        },
        "node_modules/xmlbuilder": {
          "version": "15.1.1",
          "resolved": "https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-15.1.1.tgz",
          "integrity": "sha512-yMqGBqtXyeN1e3TGYvgNgDVZ3j84W4cwkOXQswghol6APgZWaff9lnbvN7MHYJOiXsvGPXtjTYJEiC9J2wv9Eg==",
          "dev": true,
          "engines": {
            "node": ">=8.0"
          }
        },
        "node_modules/yallist": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
          "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
          "dev": true
        }
      }
    }
  package.json: |
    {
      "name": "hyperswitch",
      "version": "0.0.0",
      "private": true,
      "description": "This is just to run automated newman tests for this service",
      "devDependencies": {
        "newman": "git+ssh://git@github.com:knutties/newman.git#7106e194c15d49d066fa09d9a2f18b2238f3dba8"
      }
    }
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: migration-runner
  name: migration-runner-cm0
